[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_3', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.98246:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.98246:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 4.98522:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0065[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.002[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.98522:   7%|▋         | 2/28 [00:05<01:15,  2.91s/it]epoch 0 loss 4.97574:   7%|▋         | 2/28 [00:05<01:15,  2.91s/it]epoch 0 loss 4.97574:  11%|█         | 3/28 [00:05<00:44,  1.76s/it]epoch 0 loss 4.95867:  11%|█         | 3/28 [00:05<00:44,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0165[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = 0.0036[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95867:  14%|█▍        | 4/28 [00:11<01:19,  3.32s/it]epoch 0 loss 4.944:  14%|█▍        | 4/28 [00:11<01:19,  3.32s/it]  epoch 0 loss 4.944:  18%|█▊        | 5/28 [00:11<00:52,  2.27s/it]epoch 0 loss 4.91766:  18%|█▊        | 5/28 [00:12<00:52,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.038[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0136[0m
[32m  eval_precision = 0.0115[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.91766:  21%|██▏       | 6/28 [00:18<01:26,  3.92s/it]epoch 0 loss 4.88368:  21%|██▏       | 6/28 [00:19<01:26,  3.92s/it]epoch 0 loss 4.88368:  25%|██▌       | 7/28 [00:19<00:58,  2.78s/it]epoch 0 loss 4.84663:  25%|██▌       | 7/28 [00:19<00:58,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.066[0m
[32m  eval_f1 = 0.0106[0m
[32m  eval_mcc = 0.0269[0m
[32m  eval_precision = 0.016[0m
[32m  eval_recall = 0.0126[0m
[32m  ********************[0m
[32m  Best f1:0.0106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84663:  29%|██▊       | 8/28 [00:30<01:48,  5.42s/it]epoch 0 loss 4.79985:  29%|██▊       | 8/28 [00:30<01:48,  5.42s/it]epoch 0 loss 4.79985:  32%|███▏      | 9/28 [00:30<01:13,  3.86s/it]epoch 0 loss 4.74849:  32%|███▏      | 9/28 [00:31<01:13,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0929[0m
[32m  eval_f1 = 0.0157[0m
[32m  eval_mcc = 0.0458[0m
[32m  eval_precision = 0.0243[0m
[32m  eval_recall = 0.0192[0m
[32m  ********************[0m
[32m  Best f1:0.0157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74849:  36%|███▌      | 10/28 [00:37<01:27,  4.85s/it]epoch 0 loss 4.69749:  36%|███▌      | 10/28 [00:38<01:27,  4.85s/it]epoch 0 loss 4.69749:  39%|███▉      | 11/28 [00:38<00:59,  3.49s/it]epoch 0 loss 4.639:  39%|███▉      | 11/28 [00:38<00:59,  3.49s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1242[0m
[32m  eval_f1 = 0.0294[0m
[32m  eval_mcc = 0.0739[0m
[32m  eval_precision = 0.0417[0m
[32m  eval_recall = 0.0319[0m
[32m  ********************[0m
[32m  Best f1:0.0294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.639:  43%|████▎     | 12/28 [00:48<01:30,  5.65s/it]epoch 0 loss 4.57919:  43%|████▎     | 12/28 [00:49<01:30,  5.65s/it]epoch 0 loss 4.57919:  46%|████▋     | 13/28 [00:49<01:00,  4.06s/it]epoch 0 loss 4.51764:  46%|████▋     | 13/28 [00:49<01:00,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1707[0m
[32m  eval_f1 = 0.0413[0m
[32m  eval_mcc = 0.1188[0m
[32m  eval_precision = 0.0628[0m
[32m  eval_recall = 0.0428[0m
[32m  ********************[0m
[32m  Best f1:0.0413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.51764:  50%|█████     | 14/28 [00:56<01:09,  4.99s/it]epoch 0 loss 4.45812:  50%|█████     | 14/28 [00:56<01:09,  4.99s/it]epoch 0 loss 4.45812:  54%|█████▎    | 15/28 [00:56<00:47,  3.62s/it]epoch 0 loss 4.39828:  54%|█████▎    | 15/28 [00:57<00:47,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2393[0m
[32m  eval_f1 = 0.0614[0m
[32m  eval_mcc = 0.1889[0m
[32m  eval_precision = 0.0807[0m
[32m  eval_recall = 0.0627[0m
[32m  ********************[0m
[32m  Best f1:0.0614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.39828:  57%|█████▋    | 16/28 [01:06<01:05,  5.46s/it]epoch 0 loss 4.33856:  57%|█████▋    | 16/28 [01:06<01:05,  5.46s/it]epoch 0 loss 4.33856:  61%|██████    | 17/28 [01:06<00:43,  3.94s/it]epoch 0 loss 4.27568:  61%|██████    | 17/28 [01:07<00:43,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2872[0m
[32m  eval_f1 = 0.0686[0m
[32m  eval_mcc = 0.2381[0m
[32m  eval_precision = 0.0976[0m
[32m  eval_recall = 0.0697[0m
[32m  ********************[0m
[32m  Best f1:0.0686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27568:  64%|██████▍   | 18/28 [01:15<00:51,  5.18s/it]epoch 0 loss 4.21257:  64%|██████▍   | 18/28 [01:15<00:51,  5.18s/it]epoch 0 loss 4.21257:  68%|██████▊   | 19/28 [01:15<00:33,  3.75s/it]epoch 0 loss 4.15319:  68%|██████▊   | 19/28 [01:15<00:33,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.34[0m
[32m  eval_f1 = 0.0753[0m
[32m  eval_mcc = 0.2929[0m
[32m  eval_precision = 0.1349[0m
[32m  eval_recall = 0.0762[0m
[32m  ********************[0m
[32m  Best f1:0.0753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15319:  71%|███████▏  | 20/28 [01:24<00:42,  5.28s/it]epoch 0 loss 4.09355:  71%|███████▏  | 20/28 [01:24<00:42,  5.28s/it]epoch 0 loss 4.09355:  75%|███████▌  | 21/28 [01:24<00:26,  3.82s/it]epoch 0 loss 4.03284:  75%|███████▌  | 21/28 [01:25<00:26,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3996[0m
[32m  eval_f1 = 0.0995[0m
[32m  eval_mcc = 0.357[0m
[32m  eval_precision = 0.176[0m
[32m  eval_recall = 0.0968[0m
[32m  ********************[0m
[32m  Best f1:0.0995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.03284:  79%|███████▊  | 22/28 [01:35<00:35,  5.92s/it]epoch 0 loss 3.97431:  79%|███████▊  | 22/28 [01:35<00:35,  5.92s/it]epoch 0 loss 3.97431:  82%|████████▏ | 23/28 [01:35<00:21,  4.27s/it]epoch 0 loss 3.92059:  82%|████████▏ | 23/28 [01:36<00:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4452[0m
[32m  eval_f1 = 0.1265[0m
[32m  eval_mcc = 0.4083[0m
[32m  eval_precision = 0.2012[0m
[32m  eval_recall = 0.1195[0m
[32m  ********************[0m
[32m  Best f1:0.1265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.92059:  86%|████████▌ | 24/28 [01:46<00:25,  6.30s/it]epoch 0 loss 3.86284:  86%|████████▌ | 24/28 [01:47<00:25,  6.30s/it]epoch 0 loss 3.86284:  89%|████████▉ | 25/28 [01:47<00:13,  4.54s/it]epoch 0 loss 3.81161:  89%|████████▉ | 25/28 [01:47<00:13,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4732[0m
[32m  eval_f1 = 0.1433[0m
[32m  eval_mcc = 0.4425[0m
[32m  eval_precision = 0.1991[0m
[32m  eval_recall = 0.1344[0m
[32m  ********************[0m
[32m  Best f1:0.1433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.81161:  93%|█████████▎| 26/28 [01:59<00:13,  6.67s/it]epoch 0 loss 3.75696:  93%|█████████▎| 26/28 [01:59<00:13,  6.67s/it]epoch 0 loss 3.75696:  96%|█████████▋| 27/28 [01:59<00:04,  4.80s/it]epoch 0 loss 3.70363:  96%|█████████▋| 27/28 [01:59<00:04,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4927[0m
[32m  eval_f1 = 0.1558[0m
[32m  eval_mcc = 0.4657[0m
[32m  eval_precision = 0.2041[0m
[32m  eval_recall = 0.1486[0m
[32m  ********************[0m
[32m  Best f1:0.1558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.70363: 100%|██████████| 28/28 [02:10<00:00,  6.71s/it]epoch 0 loss 3.70363: 100%|██████████| 28/28 [02:10<00:00,  4.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.35586:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.35586:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.2701:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5187[0m
[32m  eval_f1 = 0.1693[0m
[32m  eval_mcc = 0.4915[0m
[32m  eval_precision = 0.2195[0m
[32m  eval_recall = 0.1669[0m
[32m  ********************[0m
[32m  Best f1:0.1693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2701:   7%|▋         | 2/28 [00:07<01:56,  4.48s/it]epoch 1 loss 2.21482:   7%|▋         | 2/28 [00:08<01:56,  4.48s/it]epoch 1 loss 2.21482:  11%|█         | 3/28 [00:08<01:05,  2.62s/it]epoch 1 loss 2.17526:  11%|█         | 3/28 [00:08<01:05,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5587[0m
[32m  eval_f1 = 0.1885[0m
[32m  eval_mcc = 0.5315[0m
[32m  eval_precision = 0.2314[0m
[32m  eval_recall = 0.1889[0m
[32m  ********************[0m
[32m  Best f1:0.1885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17526:  14%|█▍        | 4/28 [00:18<02:19,  5.80s/it]epoch 1 loss 2.13463:  14%|█▍        | 4/28 [00:19<02:19,  5.80s/it]epoch 1 loss 2.13463:  18%|█▊        | 5/28 [00:19<01:28,  3.86s/it]epoch 1 loss 2.07276:  18%|█▊        | 5/28 [00:19<01:28,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.577[0m
[32m  eval_f1 = 0.2035[0m
[32m  eval_mcc = 0.551[0m
[32m  eval_precision = 0.2679[0m
[32m  eval_recall = 0.2001[0m
[32m  ********************[0m
[32m  Best f1:0.2035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07276:  21%|██▏       | 6/28 [00:26<01:48,  4.95s/it]epoch 1 loss 2.04296:  21%|██▏       | 6/28 [00:26<01:48,  4.95s/it]epoch 1 loss 2.04296:  25%|██▌       | 7/28 [00:26<01:12,  3.46s/it]epoch 1 loss 2.0021:  25%|██▌       | 7/28 [00:27<01:12,  3.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.587[0m
[32m  eval_f1 = 0.2118[0m
[32m  eval_mcc = 0.5632[0m
[32m  eval_precision = 0.2849[0m
[32m  eval_recall = 0.2059[0m
[32m  ********************[0m
[32m  Best f1:0.2118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0021:  29%|██▊       | 8/28 [00:37<01:55,  5.77s/it]epoch 1 loss 1.98083:  29%|██▊       | 8/28 [00:37<01:55,  5.77s/it]epoch 1 loss 1.98083:  32%|███▏      | 9/28 [00:37<01:17,  4.10s/it]epoch 1 loss 1.939:  32%|███▏      | 9/28 [00:38<01:17,  4.10s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5915[0m
[32m  eval_f1 = 0.2183[0m
[32m  eval_mcc = 0.5686[0m
[32m  eval_precision = 0.2988[0m
[32m  eval_recall = 0.2096[0m
[32m  ********************[0m
[32m  Best f1:0.2183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.939:  36%|███▌      | 10/28 [00:44<01:30,  5.01s/it]epoch 1 loss 1.91429:  36%|███▌      | 10/28 [00:45<01:30,  5.01s/it]epoch 1 loss 1.91429:  39%|███▉      | 11/28 [00:45<01:01,  3.61s/it]epoch 1 loss 1.88911:  39%|███▉      | 11/28 [00:45<01:01,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5939[0m
[32m  eval_f1 = 0.2247[0m
[32m  eval_mcc = 0.5719[0m
[32m  eval_precision = 0.3122[0m
[32m  eval_recall = 0.2121[0m
[32m  ********************[0m
[32m  Best f1:0.2247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88911:  43%|████▎     | 12/28 [00:56<01:33,  5.84s/it]epoch 1 loss 1.86611:  43%|████▎     | 12/28 [00:56<01:33,  5.84s/it]epoch 1 loss 1.86611:  46%|████▋     | 13/28 [00:56<01:03,  4.20s/it]epoch 1 loss 1.85036:  46%|████▋     | 13/28 [00:57<01:03,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6005[0m
[32m  eval_f1 = 0.2458[0m
[32m  eval_mcc = 0.5788[0m
[32m  eval_precision = 0.3324[0m
[32m  eval_recall = 0.2281[0m
[32m  ********************[0m
[32m  Best f1:0.2458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85036:  50%|█████     | 14/28 [01:03<01:10,  5.07s/it]epoch 1 loss 1.835:  50%|█████     | 14/28 [01:04<01:10,  5.07s/it]  epoch 1 loss 1.835:  54%|█████▎    | 15/28 [01:04<00:47,  3.67s/it]epoch 1 loss 1.81604:  54%|█████▎    | 15/28 [01:04<00:47,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6034[0m
[32m  eval_f1 = 0.2577[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.3482[0m
[32m  eval_recall = 0.2401[0m
[32m  ********************[0m
[32m  Best f1:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81604:  57%|█████▋    | 16/28 [01:15<01:10,  5.87s/it]epoch 1 loss 1.79595:  57%|█████▋    | 16/28 [01:15<01:10,  5.87s/it]epoch 1 loss 1.79595:  61%|██████    | 17/28 [01:15<00:46,  4.23s/it]epoch 1 loss 1.78166:  61%|██████    | 17/28 [01:16<00:46,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6106[0m
[32m  eval_f1 = 0.2701[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.3615[0m
[32m  eval_recall = 0.2549[0m
[32m  ********************[0m
[32m  Best f1:0.2701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78166:  64%|██████▍   | 18/28 [01:23<00:51,  5.19s/it]epoch 1 loss 1.76215:  64%|██████▍   | 18/28 [01:23<00:51,  5.19s/it]epoch 1 loss 1.76215:  68%|██████▊   | 19/28 [01:23<00:33,  3.75s/it]epoch 1 loss 1.75594:  68%|██████▊   | 19/28 [01:23<00:33,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.615[0m
[32m  eval_f1 = 0.2755[0m
[32m  eval_mcc = 0.5941[0m
[32m  eval_precision = 0.3632[0m
[32m  eval_recall = 0.2611[0m
[32m  ********************[0m
[32m  Best f1:0.2755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75594:  71%|███████▏  | 20/28 [01:35<00:49,  6.13s/it]epoch 1 loss 1.74666:  71%|███████▏  | 20/28 [01:35<00:49,  6.13s/it]epoch 1 loss 1.74666:  75%|███████▌  | 21/28 [01:35<00:30,  4.42s/it]epoch 1 loss 1.74297:  75%|███████▌  | 21/28 [01:35<00:30,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6221[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6015[0m
[32m  eval_precision = 0.3881[0m
[32m  eval_recall = 0.2714[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74297:  79%|███████▊  | 22/28 [01:46<00:38,  6.49s/it]epoch 1 loss 1.73673:  79%|███████▊  | 22/28 [01:47<00:38,  6.49s/it]epoch 1 loss 1.73673:  82%|████████▏ | 23/28 [01:47<00:23,  4.67s/it]epoch 1 loss 1.72997:  82%|████████▏ | 23/28 [01:47<00:23,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.2993[0m
[32m  eval_mcc = 0.6058[0m
[32m  eval_precision = 0.3808[0m
[32m  eval_recall = 0.2805[0m
[32m  ********************[0m
[32m  Best f1:0.2993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72997:  86%|████████▌ | 24/28 [01:58<00:26,  6.68s/it]epoch 1 loss 1.71861:  86%|████████▌ | 24/28 [01:59<00:26,  6.68s/it]epoch 1 loss 1.71861:  89%|████████▉ | 25/28 [01:59<00:14,  4.80s/it]epoch 1 loss 1.7023:  89%|████████▉ | 25/28 [01:59<00:14,  4.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.6081[0m
[32m  eval_precision = 0.3998[0m
[32m  eval_recall = 0.2957[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7023:  93%|█████████▎| 26/28 [02:09<00:13,  6.64s/it]epoch 1 loss 1.69041:  93%|█████████▎| 26/28 [02:10<00:13,  6.64s/it]epoch 1 loss 1.69041:  96%|█████████▋| 27/28 [02:10<00:04,  4.77s/it]epoch 1 loss 1.67883:  96%|█████████▋| 27/28 [02:10<00:04,  4.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.3187[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.4005[0m
[32m  eval_recall = 0.2993[0m
[32m  ********************[0m
[32m  Best f1:0.3187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67883: 100%|██████████| 28/28 [02:19<00:00,  6.08s/it]epoch 1 loss 1.67883: 100%|██████████| 28/28 [02:19<00:00,  4.98s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3843:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3843:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.34818:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34818:   7%|▋         | 2/28 [00:13<03:18,  7.65s/it]epoch 2 loss 1.37585:   7%|▋         | 2/28 [00:13<03:18,  7.65s/it]epoch 2 loss 1.37585:  11%|█         | 3/28 [00:13<01:48,  4.35s/it]epoch 2 loss 1.36199:  11%|█         | 3/28 [00:13<01:48,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6194[0m
[32m  eval_precision = 0.4252[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36199:  14%|█▍        | 4/28 [00:20<02:09,  5.39s/it]epoch 2 loss 1.36675:  14%|█▍        | 4/28 [00:20<02:09,  5.39s/it]epoch 2 loss 1.36675:  18%|█▊        | 5/28 [00:20<01:22,  3.59s/it]epoch 2 loss 1.34734:  18%|█▊        | 5/28 [00:21<01:22,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.3341[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.429[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34734:  21%|██▏       | 6/28 [00:31<02:10,  5.92s/it]epoch 2 loss 1.34768:  21%|██▏       | 6/28 [00:31<02:10,  5.92s/it]epoch 2 loss 1.34768:  25%|██▌       | 7/28 [00:31<01:26,  4.12s/it]epoch 2 loss 1.3556:  25%|██▌       | 7/28 [00:32<01:26,  4.12s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3348[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4284[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3556:  29%|██▊       | 8/28 [00:39<01:43,  5.19s/it]epoch 2 loss 1.34308:  29%|██▊       | 8/28 [00:39<01:43,  5.19s/it]epoch 2 loss 1.34308:  32%|███▏      | 9/28 [00:39<01:10,  3.70s/it]epoch 2 loss 1.33039:  32%|███▏      | 9/28 [00:40<01:10,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4219[0m
[32m  eval_recall = 0.3104[0m

epoch 2 loss 1.33039:  36%|███▌      | 10/28 [00:43<01:07,  3.73s/it]epoch 2 loss 1.33033:  36%|███▌      | 10/28 [00:43<01:07,  3.73s/it]epoch 2 loss 1.33033:  39%|███▉      | 11/28 [00:43<00:46,  2.71s/it]epoch 2 loss 1.33205:  39%|███▉      | 11/28 [00:44<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3361[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4223[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33205:  43%|████▎     | 12/28 [00:52<01:13,  4.57s/it]epoch 2 loss 1.33694:  43%|████▎     | 12/28 [00:53<01:13,  4.57s/it]epoch 2 loss 1.33694:  46%|████▋     | 13/28 [00:53<00:49,  3.31s/it]epoch 2 loss 1.32649:  46%|████▋     | 13/28 [00:53<00:49,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.3383[0m
[32m  eval_mcc = 0.6283[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.3383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32649:  50%|█████     | 14/28 [01:04<01:18,  5.61s/it]epoch 2 loss 1.32285:  50%|█████     | 14/28 [01:04<01:18,  5.61s/it]epoch 2 loss 1.32285:  54%|█████▎    | 15/28 [01:04<00:52,  4.05s/it]epoch 2 loss 1.32269:  54%|█████▎    | 15/28 [01:04<00:52,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3465[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best f1:0.3465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32269:  57%|█████▋    | 16/28 [01:13<01:06,  5.58s/it]epoch 2 loss 1.32906:  57%|█████▋    | 16/28 [01:14<01:06,  5.58s/it]epoch 2 loss 1.32906:  61%|██████    | 17/28 [01:14<00:44,  4.03s/it]epoch 2 loss 1.33571:  61%|██████    | 17/28 [01:14<00:44,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3462[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4381[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33571:  64%|██████▍   | 18/28 [01:21<00:50,  5.02s/it]epoch 2 loss 1.33197:  64%|██████▍   | 18/28 [01:21<00:50,  5.02s/it]epoch 2 loss 1.33197:  68%|██████▊   | 19/28 [01:21<00:32,  3.64s/it]epoch 2 loss 1.33251:  68%|██████▊   | 19/28 [01:22<00:32,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.4257[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33251:  71%|███████▏  | 20/28 [01:28<00:37,  4.68s/it]epoch 2 loss 1.32874:  71%|███████▏  | 20/28 [01:29<00:37,  4.68s/it]epoch 2 loss 1.32874:  75%|███████▌  | 21/28 [01:29<00:23,  3.40s/it]epoch 2 loss 1.32553:  75%|███████▌  | 21/28 [01:29<00:23,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3458[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.325[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32553:  79%|███████▊  | 22/28 [01:36<00:27,  4.52s/it]epoch 2 loss 1.32303:  79%|███████▊  | 22/28 [01:36<00:27,  4.52s/it]epoch 2 loss 1.32303:  82%|████████▏ | 23/28 [01:36<00:16,  3.29s/it]epoch 2 loss 1.32198:  82%|████████▏ | 23/28 [01:37<00:16,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4484[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32198:  86%|████████▌ | 24/28 [01:45<00:19,  4.94s/it]epoch 2 loss 1.32156:  86%|████████▌ | 24/28 [01:46<00:19,  4.94s/it]epoch 2 loss 1.32156:  89%|████████▉ | 25/28 [01:46<00:10,  3.58s/it]epoch 2 loss 1.32585:  89%|████████▉ | 25/28 [01:46<00:10,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.3513[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.3513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.32585:  93%|█████████▎| 26/28 [01:51<00:08,  4.03s/it]epoch 2 loss 1.32407:  93%|█████████▎| 26/28 [01:51<00:08,  4.03s/it]epoch 2 loss 1.32407:  96%|█████████▋| 27/28 [01:51<00:02,  2.94s/it]epoch 2 loss 1.31767:  96%|█████████▋| 27/28 [01:51<00:02,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4677[0m
[32m  eval_recall = 0.3287[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31767: 100%|██████████| 28/28 [02:02<00:00,  5.29s/it]epoch 2 loss 1.31767: 100%|██████████| 28/28 [02:02<00:00,  4.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18756:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18756:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.20137:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4808[0m
[32m  eval_recall = 0.3355[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20137:   7%|▋         | 2/28 [00:06<01:38,  3.78s/it]epoch 3 loss 1.18399:   7%|▋         | 2/28 [00:06<01:38,  3.78s/it]epoch 3 loss 1.18399:  11%|█         | 3/28 [00:06<00:56,  2.25s/it]epoch 3 loss 1.17778:  11%|█         | 3/28 [00:07<00:56,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17778:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 3 loss 1.18814:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 3 loss 1.18814:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it]epoch 3 loss 1.21308:  18%|█▊        | 5/28 [00:14<00:59,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21308:  21%|██▏       | 6/28 [00:19<01:23,  3.79s/it]epoch 3 loss 1.24404:  21%|██▏       | 6/28 [00:20<01:23,  3.79s/it]epoch 3 loss 1.24404:  25%|██▌       | 7/28 [00:20<00:56,  2.69s/it]epoch 3 loss 1.24295:  25%|██▌       | 7/28 [00:20<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.485[0m
[32m  eval_recall = 0.3437[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24295:  29%|██▊       | 8/28 [00:26<01:16,  3.82s/it]epoch 3 loss 1.24056:  29%|██▊       | 8/28 [00:26<01:16,  3.82s/it]epoch 3 loss 1.24056:  32%|███▏      | 9/28 [00:26<00:52,  2.76s/it]epoch 3 loss 1.23027:  32%|███▏      | 9/28 [00:27<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3738[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3464[0m
[32m  ********************[0m
[32m  Best f1:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23027:  36%|███▌      | 10/28 [00:35<01:20,  4.47s/it]epoch 3 loss 1.2383:  36%|███▌      | 10/28 [00:35<01:20,  4.47s/it] epoch 3 loss 1.2383:  39%|███▉      | 11/28 [00:35<00:54,  3.23s/it]epoch 3 loss 1.25064:  39%|███▉      | 11/28 [00:35<00:54,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3787[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.4928[0m
[32m  eval_recall = 0.3496[0m
[32m  ********************[0m
[32m  Best f1:0.3787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25064:  43%|████▎     | 12/28 [00:40<01:00,  3.79s/it]epoch 3 loss 1.2444:  43%|████▎     | 12/28 [00:41<01:00,  3.79s/it] epoch 3 loss 1.2444:  46%|████▋     | 13/28 [00:41<00:41,  2.76s/it]epoch 3 loss 1.23543:  46%|████▋     | 13/28 [00:41<00:41,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.495[0m
[32m  eval_recall = 0.351[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23543:  50%|█████     | 14/28 [00:51<01:11,  5.11s/it]epoch 3 loss 1.2348:  50%|█████     | 14/28 [00:51<01:11,  5.11s/it] epoch 3 loss 1.2348:  54%|█████▎    | 15/28 [00:51<00:48,  3.70s/it]epoch 3 loss 1.22962:  54%|█████▎    | 15/28 [00:52<00:48,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.3776[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4945[0m
[32m  eval_recall = 0.3487[0m

epoch 3 loss 1.22962:  57%|█████▋    | 16/28 [00:55<00:44,  3.73s/it]epoch 3 loss 1.22805:  57%|█████▋    | 16/28 [00:56<00:44,  3.73s/it]epoch 3 loss 1.22805:  61%|██████    | 17/28 [00:56<00:30,  2.73s/it]epoch 3 loss 1.2295:  61%|██████    | 17/28 [00:56<00:30,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.3484[0m
[32m  ********************[0m
[32m  Best MCC:0.6488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2295:  64%|██████▍   | 18/28 [01:03<00:41,  4.14s/it]epoch 3 loss 1.22837:  64%|██████▍   | 18/28 [01:04<00:41,  4.14s/it]epoch 3 loss 1.22837:  68%|██████▊   | 19/28 [01:04<00:27,  3.02s/it]epoch 3 loss 1.2258:  68%|██████▊   | 19/28 [01:04<00:27,  3.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3775[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4838[0m
[32m  eval_recall = 0.3489[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2258:  71%|███████▏  | 20/28 [01:11<00:34,  4.30s/it]epoch 3 loss 1.22271:  71%|███████▏  | 20/28 [01:11<00:34,  4.30s/it]epoch 3 loss 1.22271:  75%|███████▌  | 21/28 [01:11<00:21,  3.14s/it]epoch 3 loss 1.22862:  75%|███████▌  | 21/28 [01:12<00:21,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.4833[0m
[32m  eval_recall = 0.349[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22862:  79%|███████▊  | 22/28 [01:18<00:25,  4.28s/it]epoch 3 loss 1.23012:  79%|███████▊  | 22/28 [01:19<00:25,  4.28s/it]epoch 3 loss 1.23012:  82%|████████▏ | 23/28 [01:19<00:15,  3.13s/it]epoch 3 loss 1.23194:  82%|████████▏ | 23/28 [01:19<00:15,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.67[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.484[0m
[32m  eval_recall = 0.3489[0m
[32m  ********************[0m
[32m  Best MCC:0.652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23194:  86%|████████▌ | 24/28 [01:25<00:16,  4.12s/it]epoch 3 loss 1.23176:  86%|████████▌ | 24/28 [01:25<00:16,  4.12s/it]epoch 3 loss 1.23176:  89%|████████▉ | 25/28 [01:25<00:09,  3.01s/it]epoch 3 loss 1.23356:  89%|████████▉ | 25/28 [01:26<00:09,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6717[0m
[32m  eval_f1 = 0.3778[0m
[32m  eval_mcc = 0.6537[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3504[0m
[32m  ********************[0m
[32m  Best MCC:0.6537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23356:  93%|█████████▎| 26/28 [01:32<00:08,  4.18s/it]epoch 3 loss 1.23031:  93%|█████████▎| 26/28 [01:33<00:08,  4.18s/it]epoch 3 loss 1.23031:  96%|█████████▋| 27/28 [01:33<00:03,  3.05s/it]epoch 3 loss 1.22364:  96%|█████████▋| 27/28 [01:33<00:03,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3789[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.4936[0m
[32m  eval_recall = 0.3515[0m
[32m  ********************[0m
[32m  Best MCC:0.6547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22364: 100%|██████████| 28/28 [01:40<00:00,  4.17s/it]epoch 3 loss 1.22364: 100%|██████████| 28/28 [01:40<00:00,  3.57s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30483:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30483:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 4 loss 1.23531:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.4936[0m
[32m  eval_recall = 0.3531[0m
[32m  ********************[0m
[32m  Best f1:0.3818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23531:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 4 loss 1.24299:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 4 loss 1.24299:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 4 loss 1.24369:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3538[0m
[32m  ********************[0m
[32m  Best f1:0.3827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24369:  14%|█▍        | 4/28 [00:10<01:13,  3.07s/it]epoch 4 loss 1.20997:  14%|█▍        | 4/28 [00:11<01:13,  3.07s/it]epoch 4 loss 1.20997:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it]epoch 4 loss 1.20026:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3826[0m
[32m  eval_mcc = 0.6537[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3535[0m

epoch 4 loss 1.20026:  21%|██▏       | 6/28 [00:14<00:58,  2.68s/it]epoch 4 loss 1.21438:  21%|██▏       | 6/28 [00:15<00:58,  2.68s/it]epoch 4 loss 1.21438:  25%|██▌       | 7/28 [00:15<00:40,  1.94s/it]epoch 4 loss 1.20766:  25%|██▌       | 7/28 [00:15<00:40,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.6537[0m
[32m  eval_precision = 0.4947[0m
[32m  eval_recall = 0.353[0m

epoch 4 loss 1.20766:  29%|██▊       | 8/28 [00:19<00:50,  2.53s/it]epoch 4 loss 1.20547:  29%|██▊       | 8/28 [00:19<00:50,  2.53s/it]epoch 4 loss 1.20547:  32%|███▏      | 9/28 [00:19<00:35,  1.86s/it]epoch 4 loss 1.20694:  32%|███▏      | 9/28 [00:19<00:35,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3832[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.4949[0m
[32m  eval_recall = 0.3539[0m
[32m  ********************[0m
[32m  Best f1:0.3832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20694:  36%|███▌      | 10/28 [00:24<00:50,  2.79s/it]epoch 4 loss 1.21605:  36%|███▌      | 10/28 [00:24<00:50,  2.79s/it]epoch 4 loss 1.21605:  39%|███▉      | 11/28 [00:24<00:34,  2.06s/it]epoch 4 loss 1.21207:  39%|███▉      | 11/28 [00:25<00:34,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6725[0m
[32m  eval_f1 = 0.3836[0m
[32m  eval_mcc = 0.654[0m
[32m  eval_precision = 0.4945[0m
[32m  eval_recall = 0.3542[0m
[32m  ********************[0m
[32m  Best f1:0.3836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21207:  43%|████▎     | 12/28 [00:29<00:47,  2.96s/it]epoch 4 loss 1.21082:  43%|████▎     | 12/28 [00:30<00:47,  2.96s/it]epoch 4 loss 1.21082:  46%|████▋     | 13/28 [00:30<00:32,  2.19s/it]epoch 4 loss 1.20329:  46%|████▋     | 13/28 [00:30<00:32,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6728[0m
[32m  eval_f1 = 0.3881[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.5046[0m
[32m  eval_recall = 0.3573[0m
[32m  ********************[0m
[32m  Best f1:0.3881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20329:  50%|█████     | 14/28 [00:35<00:42,  3.05s/it]epoch 4 loss 1.20274:  50%|█████     | 14/28 [00:35<00:42,  3.05s/it]epoch 4 loss 1.20274:  54%|█████▎    | 15/28 [00:35<00:29,  2.25s/it]epoch 4 loss 1.2046:  54%|█████▎    | 15/28 [00:36<00:29,  2.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3894[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.5113[0m
[32m  eval_recall = 0.3584[0m
[32m  ********************[0m
[32m  Best f1:0.3894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2046:  57%|█████▋    | 16/28 [00:40<00:37,  3.09s/it]epoch 4 loss 1.20285:  57%|█████▋    | 16/28 [00:41<00:37,  3.09s/it]epoch 4 loss 1.20285:  61%|██████    | 17/28 [00:41<00:25,  2.28s/it]epoch 4 loss 1.19585:  61%|██████    | 17/28 [00:41<00:25,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3895[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3586[0m
[32m  ********************[0m
[32m  Best f1:0.3895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19585:  64%|██████▍   | 18/28 [00:47<00:36,  3.60s/it]epoch 4 loss 1.19469:  64%|██████▍   | 18/28 [00:48<00:36,  3.60s/it]epoch 4 loss 1.19469:  68%|██████▊   | 19/28 [00:48<00:23,  2.65s/it]epoch 4 loss 1.19856:  68%|██████▊   | 19/28 [00:48<00:23,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6737[0m
[32m  eval_f1 = 0.3901[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best f1:0.3901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19856:  71%|███████▏  | 20/28 [00:56<00:34,  4.36s/it]epoch 4 loss 1.19592:  71%|███████▏  | 20/28 [00:56<00:34,  4.36s/it]epoch 4 loss 1.19592:  75%|███████▌  | 21/28 [00:56<00:22,  3.18s/it]epoch 4 loss 1.19773:  75%|███████▌  | 21/28 [00:57<00:22,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.513[0m
[32m  eval_recall = 0.3595[0m
[32m  ********************[0m
[32m  Best f1:0.3903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19773:  79%|███████▊  | 22/28 [01:05<00:28,  4.75s/it]epoch 4 loss 1.19654:  79%|███████▊  | 22/28 [01:05<00:28,  4.75s/it]epoch 4 loss 1.19654:  82%|████████▏ | 23/28 [01:05<00:17,  3.45s/it]epoch 4 loss 1.19835:  82%|████████▏ | 23/28 [01:06<00:17,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6741[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best MCC:0.6556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19835:  86%|████████▌ | 24/28 [01:12<00:17,  4.49s/it]epoch 4 loss 1.19657:  86%|████████▌ | 24/28 [01:13<00:17,  4.49s/it]epoch 4 loss 1.19657:  89%|████████▉ | 25/28 [01:13<00:09,  3.27s/it]epoch 4 loss 1.19671:  89%|████████▉ | 25/28 [01:13<00:09,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.5108[0m
[32m  eval_recall = 0.3594[0m

epoch 4 loss 1.19671:  93%|█████████▎| 26/28 [01:16<00:06,  3.43s/it]epoch 4 loss 1.19646:  93%|█████████▎| 26/28 [01:17<00:06,  3.43s/it]epoch 4 loss 1.19646:  96%|█████████▋| 27/28 [01:17<00:02,  2.52s/it]epoch 4 loss 1.19167:  96%|█████████▋| 27/28 [01:17<00:02,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3901[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.5105[0m
[32m  eval_recall = 0.3594[0m

epoch 4 loss 1.19167: 100%|██████████| 28/28 [01:20<00:00,  2.84s/it]epoch 4 loss 1.19167: 100%|██████████| 28/28 [01:20<00:00,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.513[0m
[32m  eval_recall = 0.3595[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3482[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4552[0m
[32m  eval_recall = 0.3231[0m

