[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_2', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0235:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0235:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.0258:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0058[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0026[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.0258:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.01509:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.01509:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 4.9983:  11%|█         | 3/28 [00:05<00:43,  1.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0106[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0086[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.9983:  14%|█▍        | 4/28 [00:10<01:13,  3.07s/it]epoch 0 loss 4.98276:  14%|█▍        | 4/28 [00:11<01:13,  3.07s/it]epoch 0 loss 4.98276:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it]epoch 0 loss 4.95496:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0252[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.0101[0m
[32m  eval_recall = 0.0059[0m
[32m  ********************[0m
[32m  Best f1:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95496:  21%|██▏       | 6/28 [00:16<01:10,  3.19s/it]epoch 0 loss 4.92267:  21%|██▏       | 6/28 [00:16<01:10,  3.19s/it]epoch 0 loss 4.92267:  25%|██▌       | 7/28 [00:16<00:47,  2.28s/it]epoch 0 loss 4.88623:  25%|██▌       | 7/28 [00:17<00:47,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0631[0m
[32m  eval_f1 = 0.0165[0m
[32m  eval_mcc = 0.027[0m
[32m  eval_precision = 0.0231[0m
[32m  eval_recall = 0.0174[0m
[32m  ********************[0m
[32m  Best f1:0.0165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88623:  29%|██▊       | 8/28 [00:22<01:05,  3.30s/it]epoch 0 loss 4.84017:  29%|██▊       | 8/28 [00:22<01:05,  3.30s/it]epoch 0 loss 4.84017:  32%|███▏      | 9/28 [00:22<00:45,  2.40s/it]epoch 0 loss 4.78943:  32%|███▏      | 9/28 [00:23<00:45,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0895[0m
[32m  eval_f1 = 0.021[0m
[32m  eval_mcc = 0.0466[0m
[32m  eval_precision = 0.0266[0m
[32m  eval_recall = 0.0239[0m
[32m  ********************[0m
[32m  Best f1:0.021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78943:  36%|███▌      | 10/28 [00:28<01:00,  3.35s/it]epoch 0 loss 4.73871:  36%|███▌      | 10/28 [00:28<01:00,  3.35s/it]epoch 0 loss 4.73871:  39%|███▉      | 11/28 [00:28<00:41,  2.45s/it]epoch 0 loss 4.68103:  39%|███▉      | 11/28 [00:28<00:41,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1223[0m
[32m  eval_f1 = 0.0313[0m
[32m  eval_mcc = 0.0768[0m
[32m  eval_precision = 0.0452[0m
[32m  eval_recall = 0.0343[0m
[32m  ********************[0m
[32m  Best f1:0.0313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68103:  43%|████▎     | 12/28 [00:33<00:53,  3.36s/it]epoch 0 loss 4.62112:  43%|████▎     | 12/28 [00:34<00:53,  3.36s/it]epoch 0 loss 4.62112:  46%|████▋     | 13/28 [00:34<00:36,  2.47s/it]epoch 0 loss 4.55921:  46%|████▋     | 13/28 [00:34<00:36,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1646[0m
[32m  eval_f1 = 0.0433[0m
[32m  eval_mcc = 0.1173[0m
[32m  eval_precision = 0.0632[0m
[32m  eval_recall = 0.0457[0m
[32m  ********************[0m
[32m  Best f1:0.0433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.55921:  50%|█████     | 14/28 [00:39<00:47,  3.40s/it]epoch 0 loss 4.49868:  50%|█████     | 14/28 [00:40<00:47,  3.40s/it]epoch 0 loss 4.49868:  54%|█████▎    | 15/28 [00:40<00:32,  2.50s/it]epoch 0 loss 4.43764:  54%|█████▎    | 15/28 [00:40<00:32,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2324[0m
[32m  eval_f1 = 0.0646[0m
[32m  eval_mcc = 0.1855[0m
[32m  eval_precision = 0.091[0m
[32m  eval_recall = 0.0647[0m
[32m  ********************[0m
[32m  Best f1:0.0646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43764:  57%|█████▋    | 16/28 [00:46<00:43,  3.62s/it]epoch 0 loss 4.37632:  57%|█████▋    | 16/28 [00:46<00:43,  3.62s/it]epoch 0 loss 4.37632:  61%|██████    | 17/28 [00:46<00:29,  2.66s/it]epoch 0 loss 4.31173:  61%|██████    | 17/28 [00:47<00:29,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2832[0m
[32m  eval_f1 = 0.0722[0m
[32m  eval_mcc = 0.236[0m
[32m  eval_precision = 0.1051[0m
[32m  eval_recall = 0.0718[0m
[32m  ********************[0m
[32m  Best f1:0.0722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31173:  64%|██████▍   | 18/28 [00:53<00:37,  3.74s/it]epoch 0 loss 4.24664:  64%|██████▍   | 18/28 [00:53<00:37,  3.74s/it]epoch 0 loss 4.24664:  68%|██████▊   | 19/28 [00:53<00:24,  2.74s/it]epoch 0 loss 4.18482:  68%|██████▊   | 19/28 [00:54<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3514[0m
[32m  eval_f1 = 0.0957[0m
[32m  eval_mcc = 0.3069[0m
[32m  eval_precision = 0.1474[0m
[32m  eval_recall = 0.0905[0m
[32m  ********************[0m
[32m  Best f1:0.0957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18482:  71%|███████▏  | 20/28 [00:59<00:30,  3.78s/it]epoch 0 loss 4.12294:  71%|███████▏  | 20/28 [01:00<00:30,  3.78s/it]epoch 0 loss 4.12294:  75%|███████▌  | 21/28 [01:00<00:19,  2.77s/it]epoch 0 loss 4.0597:  75%|███████▌  | 21/28 [01:00<00:19,  2.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.403[0m
[32m  eval_f1 = 0.1014[0m
[32m  eval_mcc = 0.3609[0m
[32m  eval_precision = 0.1712[0m
[32m  eval_recall = 0.0963[0m
[32m  ********************[0m
[32m  Best f1:0.1014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0597:  79%|███████▊  | 22/28 [01:06<00:22,  3.81s/it]epoch 0 loss 3.99874:  79%|███████▊  | 22/28 [01:06<00:22,  3.81s/it]epoch 0 loss 3.99874:  82%|████████▏ | 23/28 [01:06<00:13,  2.79s/it]epoch 0 loss 3.9426:  82%|████████▏ | 23/28 [01:07<00:13,  2.79s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4543[0m
[32m  eval_f1 = 0.1251[0m
[32m  eval_mcc = 0.418[0m
[32m  eval_precision = 0.1889[0m
[32m  eval_recall = 0.1186[0m
[32m  ********************[0m
[32m  Best f1:0.1251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9426:  86%|████████▌ | 24/28 [01:12<00:14,  3.70s/it]epoch 0 loss 3.88259:  86%|████████▌ | 24/28 [01:13<00:14,  3.70s/it]epoch 0 loss 3.88259:  89%|████████▉ | 25/28 [01:13<00:08,  2.72s/it]epoch 0 loss 3.82893:  89%|████████▉ | 25/28 [01:13<00:08,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4842[0m
[32m  eval_f1 = 0.146[0m
[32m  eval_mcc = 0.4527[0m
[32m  eval_precision = 0.1993[0m
[32m  eval_recall = 0.1365[0m
[32m  ********************[0m
[32m  Best f1:0.146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.82893:  93%|█████████▎| 26/28 [01:19<00:07,  3.78s/it]epoch 0 loss 3.77219:  93%|█████████▎| 26/28 [01:19<00:07,  3.78s/it]epoch 0 loss 3.77219:  96%|█████████▋| 27/28 [01:19<00:02,  2.77s/it]epoch 0 loss 3.71666:  96%|█████████▋| 27/28 [01:20<00:02,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5018[0m
[32m  eval_f1 = 0.1586[0m
[32m  eval_mcc = 0.4733[0m
[32m  eval_precision = 0.198[0m
[32m  eval_recall = 0.1504[0m
[32m  ********************[0m
[32m  Best f1:0.1586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.71666: 100%|██████████| 28/28 [01:25<00:00,  3.69s/it]epoch 0 loss 3.71666: 100%|██████████| 28/28 [01:25<00:00,  3.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31873:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31873:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.23063:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.53[0m
[32m  eval_f1 = 0.175[0m
[32m  eval_mcc = 0.5028[0m
[32m  eval_precision = 0.2321[0m
[32m  eval_recall = 0.1707[0m
[32m  ********************[0m
[32m  Best f1:0.175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23063:   7%|▋         | 2/28 [00:11<02:52,  6.63s/it]epoch 1 loss 2.17601:   7%|▋         | 2/28 [00:11<02:52,  6.63s/it]epoch 1 loss 2.17601:  11%|█         | 3/28 [00:11<01:34,  3.80s/it]epoch 1 loss 2.13729:  11%|█         | 3/28 [00:12<01:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5607[0m
[32m  eval_f1 = 0.19[0m
[32m  eval_mcc = 0.5339[0m
[32m  eval_precision = 0.2378[0m
[32m  eval_recall = 0.1897[0m
[32m  ********************[0m
[32m  Best f1:0.19[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13729:  14%|█▍        | 4/28 [00:20<02:13,  5.58s/it]epoch 1 loss 2.09665:  14%|█▍        | 4/28 [00:20<02:13,  5.58s/it]epoch 1 loss 2.09665:  18%|█▊        | 5/28 [00:20<01:25,  3.72s/it]epoch 1 loss 2.03525:  18%|█▊        | 5/28 [00:20<01:25,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5795[0m
[32m  eval_f1 = 0.2055[0m
[32m  eval_mcc = 0.5533[0m
[32m  eval_precision = 0.2666[0m
[32m  eval_recall = 0.2016[0m
[32m  ********************[0m
[32m  Best f1:0.2055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03525:  21%|██▏       | 6/28 [00:29<02:00,  5.50s/it]epoch 1 loss 2.00611:  21%|██▏       | 6/28 [00:29<02:00,  5.50s/it]epoch 1 loss 2.00611:  25%|██▌       | 7/28 [00:29<01:20,  3.84s/it]epoch 1 loss 1.96527:  25%|██▌       | 7/28 [00:30<01:20,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5885[0m
[32m  eval_f1 = 0.2155[0m
[32m  eval_mcc = 0.5637[0m
[32m  eval_precision = 0.2777[0m
[32m  eval_recall = 0.2088[0m
[32m  ********************[0m
[32m  Best f1:0.2155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96527:  29%|██▊       | 8/28 [00:42<02:09,  6.48s/it]epoch 1 loss 1.94482:  29%|██▊       | 8/28 [00:42<02:09,  6.48s/it]epoch 1 loss 1.94482:  32%|███▏      | 9/28 [00:42<01:27,  4.59s/it]epoch 1 loss 1.90386:  32%|███▏      | 9/28 [00:42<01:27,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5935[0m
[32m  eval_f1 = 0.2271[0m
[32m  eval_mcc = 0.57[0m
[32m  eval_precision = 0.3205[0m
[32m  eval_recall = 0.2154[0m
[32m  ********************[0m
[32m  Best f1:0.2271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.57[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90386:  36%|███▌      | 10/28 [00:49<01:35,  5.32s/it]epoch 1 loss 1.87933:  36%|███▌      | 10/28 [00:49<01:35,  5.32s/it]epoch 1 loss 1.87933:  39%|███▉      | 11/28 [00:49<01:04,  3.82s/it]epoch 1 loss 1.85481:  39%|███▉      | 11/28 [00:50<01:04,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5978[0m
[32m  eval_f1 = 0.244[0m
[32m  eval_mcc = 0.5761[0m
[32m  eval_precision = 0.34[0m
[32m  eval_recall = 0.226[0m
[32m  ********************[0m
[32m  Best f1:0.244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85481:  43%|████▎     | 12/28 [00:58<01:24,  5.27s/it]epoch 1 loss 1.83174:  43%|████▎     | 12/28 [00:58<01:24,  5.27s/it]epoch 1 loss 1.83174:  46%|████▋     | 13/28 [00:58<00:57,  3.80s/it]epoch 1 loss 1.81609:  46%|████▋     | 13/28 [00:59<00:57,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6021[0m
[32m  eval_f1 = 0.2532[0m
[32m  eval_mcc = 0.5814[0m
[32m  eval_precision = 0.3507[0m
[32m  eval_recall = 0.2348[0m
[32m  ********************[0m
[32m  Best f1:0.2532[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81609:  50%|█████     | 14/28 [01:08<01:19,  5.65s/it]epoch 1 loss 1.80106:  50%|█████     | 14/28 [01:09<01:19,  5.65s/it]epoch 1 loss 1.80106:  54%|█████▎    | 15/28 [01:09<00:52,  4.07s/it]epoch 1 loss 1.78216:  54%|█████▎    | 15/28 [01:09<00:52,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6091[0m
[32m  eval_f1 = 0.2718[0m
[32m  eval_mcc = 0.5886[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2523[0m
[32m  ********************[0m
[32m  Best f1:0.2718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78216:  57%|█████▋    | 16/28 [01:17<01:05,  5.46s/it]epoch 1 loss 1.76224:  57%|█████▋    | 16/28 [01:18<01:05,  5.46s/it]epoch 1 loss 1.76224:  61%|██████    | 17/28 [01:18<00:43,  3.94s/it]epoch 1 loss 1.74816:  61%|██████    | 17/28 [01:18<00:43,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6113[0m
[32m  eval_f1 = 0.2721[0m
[32m  eval_mcc = 0.5912[0m
[32m  eval_precision = 0.3679[0m
[32m  eval_recall = 0.2553[0m
[32m  ********************[0m
[32m  Best f1:0.2721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74816:  64%|██████▍   | 18/28 [01:24<00:47,  4.76s/it]epoch 1 loss 1.72897:  64%|██████▍   | 18/28 [01:25<00:47,  4.76s/it]epoch 1 loss 1.72897:  68%|██████▊   | 19/28 [01:25<00:31,  3.45s/it]epoch 1 loss 1.72318:  68%|██████▊   | 19/28 [01:25<00:31,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6158[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.5958[0m
[32m  eval_precision = 0.3804[0m
[32m  eval_recall = 0.2613[0m
[32m  ********************[0m
[32m  Best f1:0.2777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72318:  71%|███████▏  | 20/28 [01:33<00:39,  4.96s/it]epoch 1 loss 1.71405:  71%|███████▏  | 20/28 [01:34<00:39,  4.96s/it]epoch 1 loss 1.71405:  75%|███████▌  | 21/28 [01:34<00:25,  3.60s/it]epoch 1 loss 1.71068:  75%|███████▌  | 21/28 [01:34<00:25,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6267[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.6065[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.274[0m
[32m  ********************[0m
[32m  Best f1:0.2935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71068:  79%|███████▊  | 22/28 [01:43<00:30,  5.15s/it]epoch 1 loss 1.7047:  79%|███████▊  | 22/28 [01:43<00:30,  5.15s/it] epoch 1 loss 1.7047:  82%|████████▏ | 23/28 [01:43<00:18,  3.73s/it]epoch 1 loss 1.69807:  82%|████████▏ | 23/28 [01:43<00:18,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.3874[0m
[32m  eval_recall = 0.2845[0m
[32m  ********************[0m
[32m  Best f1:0.3029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69807:  86%|████████▌ | 24/28 [01:52<00:20,  5.24s/it]epoch 1 loss 1.68694:  86%|████████▌ | 24/28 [01:52<00:20,  5.24s/it]epoch 1 loss 1.68694:  89%|████████▉ | 25/28 [01:52<00:11,  3.79s/it]epoch 1 loss 1.67071:  89%|████████▉ | 25/28 [01:53<00:11,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6326[0m
[32m  eval_f1 = 0.315[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.395[0m
[32m  eval_recall = 0.2966[0m
[32m  ********************[0m
[32m  Best f1:0.315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67071:  93%|█████████▎| 26/28 [02:01<00:10,  5.25s/it]epoch 1 loss 1.65897:  93%|█████████▎| 26/28 [02:01<00:10,  5.25s/it]epoch 1 loss 1.65897:  96%|█████████▋| 27/28 [02:01<00:03,  3.80s/it]epoch 1 loss 1.6476:  96%|█████████▋| 27/28 [02:01<00:03,  3.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.3242[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.3046[0m
[32m  ********************[0m
[32m  Best f1:0.3242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6476: 100%|██████████| 28/28 [02:08<00:00,  4.62s/it]epoch 1 loss 1.6476: 100%|██████████| 28/28 [02:08<00:00,  4.58s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36413:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36413:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.3227:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.33[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4198[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.33[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3227:   7%|▋         | 2/28 [00:08<02:13,  5.14s/it]epoch 2 loss 1.35018:   7%|▋         | 2/28 [00:09<02:13,  5.14s/it]epoch 2 loss 1.35018:  11%|█         | 3/28 [00:09<01:14,  2.99s/it]epoch 2 loss 1.33555:  11%|█         | 3/28 [00:09<01:14,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3341[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4283[0m
[32m  eval_recall = 0.3106[0m
[32m  ********************[0m
[32m  Best f1:0.3341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33555:  14%|█▍        | 4/28 [00:18<02:06,  5.28s/it]epoch 2 loss 1.34022:  14%|█▍        | 4/28 [00:18<02:06,  5.28s/it]epoch 2 loss 1.34022:  18%|█▊        | 5/28 [00:18<01:21,  3.52s/it]epoch 2 loss 1.32204:  18%|█▊        | 5/28 [00:18<01:21,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4276[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32204:  21%|██▏       | 6/28 [00:26<01:52,  5.11s/it]epoch 2 loss 1.32242:  21%|██▏       | 6/28 [00:27<01:52,  5.11s/it]epoch 2 loss 1.32242:  25%|██▌       | 7/28 [00:27<01:15,  3.58s/it]epoch 2 loss 1.33075:  25%|██▌       | 7/28 [00:27<01:15,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4237[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.33075:  29%|██▊       | 8/28 [00:32<01:20,  4.01s/it]epoch 2 loss 1.31795:  29%|██▊       | 8/28 [00:32<01:20,  4.01s/it]epoch 2 loss 1.31795:  32%|███▏      | 9/28 [00:32<00:54,  2.89s/it]epoch 2 loss 1.3052:  32%|███▏      | 9/28 [00:32<00:54,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.4236[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.3052:  36%|███▌      | 10/28 [00:37<01:02,  3.45s/it]epoch 2 loss 1.30472:  36%|███▌      | 10/28 [00:37<01:02,  3.45s/it]epoch 2 loss 1.30472:  39%|███▉      | 11/28 [00:37<00:42,  2.52s/it]epoch 2 loss 1.30594:  39%|███▉      | 11/28 [00:37<00:42,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4237[0m
[32m  eval_recall = 0.3151[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.30594:  43%|████▎     | 12/28 [00:42<00:51,  3.24s/it]epoch 2 loss 1.31116:  43%|████▎     | 12/28 [00:42<00:51,  3.24s/it]epoch 2 loss 1.31116:  46%|████▋     | 13/28 [00:42<00:35,  2.38s/it]epoch 2 loss 1.30079:  46%|████▋     | 13/28 [00:43<00:35,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.435[0m
[32m  eval_recall = 0.3174[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30079:  50%|█████     | 14/28 [00:48<00:48,  3.45s/it]epoch 2 loss 1.29703:  50%|█████     | 14/28 [00:49<00:48,  3.45s/it]epoch 2 loss 1.29703:  54%|█████▎    | 15/28 [00:49<00:32,  2.54s/it]epoch 2 loss 1.29693:  54%|█████▎    | 15/28 [00:49<00:32,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6547[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4323[0m
[32m  eval_recall = 0.3209[0m
[32m  ********************[0m
[32m  Best f1:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29693:  57%|█████▋    | 16/28 [00:55<00:43,  3.63s/it]epoch 2 loss 1.30351:  57%|█████▋    | 16/28 [00:55<00:43,  3.63s/it]epoch 2 loss 1.30351:  61%|██████    | 17/28 [00:55<00:29,  2.67s/it]epoch 2 loss 1.30971:  61%|██████    | 17/28 [00:56<00:29,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6568[0m
[32m  eval_f1 = 0.3477[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4375[0m
[32m  eval_recall = 0.325[0m
[32m  ********************[0m
[32m  Best f1:0.3477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30971:  64%|██████▍   | 18/28 [01:02<00:37,  3.74s/it]epoch 2 loss 1.30604:  64%|██████▍   | 18/28 [01:02<00:37,  3.74s/it]epoch 2 loss 1.30604:  68%|██████▊   | 19/28 [01:02<00:24,  2.74s/it]epoch 2 loss 1.30656:  68%|██████▊   | 19/28 [01:02<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4345[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30656:  71%|███████▏  | 20/28 [01:08<00:30,  3.86s/it]epoch 2 loss 1.30252:  71%|███████▏  | 20/28 [01:09<00:30,  3.86s/it]epoch 2 loss 1.30252:  75%|███████▌  | 21/28 [01:09<00:19,  2.83s/it]epoch 2 loss 1.29946:  75%|███████▌  | 21/28 [01:09<00:19,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.3494[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29946:  79%|███████▊  | 22/28 [01:15<00:22,  3.82s/it]epoch 2 loss 1.29692:  79%|███████▊  | 22/28 [01:15<00:22,  3.82s/it]epoch 2 loss 1.29692:  82%|████████▏ | 23/28 [01:15<00:13,  2.80s/it]epoch 2 loss 1.29591:  82%|████████▏ | 23/28 [01:16<00:13,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6607[0m
[32m  eval_f1 = 0.3503[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29591:  86%|████████▌ | 24/28 [01:21<00:14,  3.59s/it]epoch 2 loss 1.29558:  86%|████████▌ | 24/28 [01:21<00:14,  3.59s/it]epoch 2 loss 1.29558:  89%|████████▉ | 25/28 [01:21<00:07,  2.63s/it]epoch 2 loss 1.29992:  89%|████████▉ | 25/28 [01:22<00:07,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3551[0m
[32m  eval_mcc = 0.6433[0m
[32m  eval_precision = 0.4618[0m
[32m  eval_recall = 0.3312[0m
[32m  ********************[0m
[32m  Best f1:0.3551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29992:  93%|█████████▎| 26/28 [01:28<00:07,  3.72s/it]epoch 2 loss 1.29796:  93%|█████████▎| 26/28 [01:28<00:07,  3.72s/it]epoch 2 loss 1.29796:  96%|█████████▋| 27/28 [01:28<00:02,  2.73s/it]epoch 2 loss 1.29209:  96%|█████████▋| 27/28 [01:28<00:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6631[0m
[32m  eval_f1 = 0.3573[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.3323[0m
[32m  ********************[0m
[32m  Best f1:0.3573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29209: 100%|██████████| 28/28 [01:34<00:00,  3.72s/it]epoch 2 loss 1.29209: 100%|██████████| 28/28 [01:34<00:00,  3.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16438:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16438:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.17788:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3669[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4891[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17788:   7%|▋         | 2/28 [00:06<01:39,  3.82s/it]epoch 3 loss 1.16129:   7%|▋         | 2/28 [00:07<01:39,  3.82s/it]epoch 3 loss 1.16129:  11%|█         | 3/28 [00:07<00:56,  2.27s/it]epoch 3 loss 1.15471:  11%|█         | 3/28 [00:07<00:56,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3408[0m
[32m  ********************[0m
[32m  Best f1:0.3698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.15471:  14%|█▍        | 4/28 [00:12<01:20,  3.34s/it]epoch 3 loss 1.16337:  14%|█▍        | 4/28 [00:12<01:20,  3.34s/it]epoch 3 loss 1.16337:  18%|█▊        | 5/28 [00:12<00:52,  2.28s/it]epoch 3 loss 1.18884:  18%|█▊        | 5/28 [00:12<00:52,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.374[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4963[0m
[32m  eval_recall = 0.3445[0m
[32m  ********************[0m
[32m  Best f1:0.374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18884:  21%|██▏       | 6/28 [00:18<01:18,  3.57s/it]epoch 3 loss 1.21907:  21%|██▏       | 6/28 [00:18<01:18,  3.57s/it]epoch 3 loss 1.21907:  25%|██▌       | 7/28 [00:18<00:53,  2.55s/it]epoch 3 loss 1.21814:  25%|██▌       | 7/28 [00:19<00:53,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3778[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4924[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best f1:0.3778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21814:  29%|██▊       | 8/28 [00:25<01:14,  3.72s/it]epoch 3 loss 1.21574:  29%|██▊       | 8/28 [00:25<01:14,  3.72s/it]epoch 3 loss 1.21574:  32%|███▏      | 9/28 [00:25<00:51,  2.69s/it]epoch 3 loss 1.20551:  32%|███▏      | 9/28 [00:26<00:51,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.5008[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best f1:0.3821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20551:  36%|███▌      | 10/28 [00:31<01:07,  3.74s/it]epoch 3 loss 1.2134:  36%|███▌      | 10/28 [00:32<01:07,  3.74s/it] epoch 3 loss 1.2134:  39%|███▉      | 11/28 [00:32<00:46,  2.72s/it]epoch 3 loss 1.22627:  39%|███▉      | 11/28 [00:32<00:46,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3856[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.5[0m
[32m  eval_recall = 0.3555[0m
[32m  ********************[0m
[32m  Best f1:0.3856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22627:  43%|████▎     | 12/28 [00:40<01:10,  4.38s/it]epoch 3 loss 1.21977:  43%|████▎     | 12/28 [00:40<01:10,  4.38s/it]epoch 3 loss 1.21977:  46%|████▋     | 13/28 [00:40<00:47,  3.18s/it]epoch 3 loss 1.21128:  46%|████▋     | 13/28 [00:41<00:47,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3866[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.4993[0m
[32m  eval_recall = 0.3565[0m
[32m  ********************[0m
[32m  Best f1:0.3866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21128:  50%|█████     | 14/28 [00:51<01:14,  5.34s/it]epoch 3 loss 1.21027:  50%|█████     | 14/28 [00:51<01:14,  5.34s/it]epoch 3 loss 1.21027:  54%|█████▎    | 15/28 [00:51<00:50,  3.86s/it]epoch 3 loss 1.20516:  54%|█████▎    | 15/28 [00:51<00:50,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3867[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4989[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best f1:0.3867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20516:  57%|█████▋    | 16/28 [01:02<01:11,  5.99s/it]epoch 3 loss 1.20369:  57%|█████▋    | 16/28 [01:02<01:11,  5.99s/it]epoch 3 loss 1.20369:  61%|██████    | 17/28 [01:02<00:47,  4.32s/it]epoch 3 loss 1.20512:  61%|██████    | 17/28 [01:03<00:47,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3865[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4999[0m
[32m  eval_recall = 0.3557[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20512:  64%|██████▍   | 18/28 [01:10<00:52,  5.25s/it]epoch 3 loss 1.20414:  64%|██████▍   | 18/28 [01:10<00:52,  5.25s/it]epoch 3 loss 1.20414:  68%|██████▊   | 19/28 [01:10<00:34,  3.80s/it]epoch 3 loss 1.20143:  68%|██████▊   | 19/28 [01:11<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.3857[0m
[32m  eval_mcc = 0.6536[0m
[32m  eval_precision = 0.5007[0m
[32m  eval_recall = 0.3553[0m
[32m  ********************[0m
[32m  Best MCC:0.6536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20143:  71%|███████▏  | 20/28 [01:18<00:39,  4.90s/it]epoch 3 loss 1.19867:  71%|███████▏  | 20/28 [01:18<00:39,  4.90s/it]epoch 3 loss 1.19867:  75%|███████▌  | 21/28 [01:18<00:24,  3.56s/it]epoch 3 loss 1.20436:  75%|███████▌  | 21/28 [01:18<00:24,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3874[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.5005[0m
[32m  eval_recall = 0.357[0m
[32m  ********************[0m
[32m  Best f1:0.3874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20436:  79%|███████▊  | 22/28 [01:27<00:30,  5.08s/it]epoch 3 loss 1.20591:  79%|███████▊  | 22/28 [01:27<00:30,  5.08s/it]epoch 3 loss 1.20591:  82%|████████▏ | 23/28 [01:27<00:18,  3.68s/it]epoch 3 loss 1.20756:  82%|████████▏ | 23/28 [01:28<00:18,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3874[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.4995[0m
[32m  eval_recall = 0.3574[0m
[32m  ********************[0m
[32m  Best f1:0.3874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20756:  86%|████████▌ | 24/28 [01:37<00:22,  5.57s/it]epoch 3 loss 1.20727:  86%|████████▌ | 24/28 [01:38<00:22,  5.57s/it]epoch 3 loss 1.20727:  89%|████████▉ | 25/28 [01:38<00:12,  4.03s/it]epoch 3 loss 1.20917:  89%|████████▉ | 25/28 [01:38<00:12,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3885[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.5004[0m
[32m  eval_recall = 0.3582[0m
[32m  ********************[0m
[32m  Best f1:0.3885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20917:  93%|█████████▎| 26/28 [01:47<00:11,  5.72s/it]epoch 3 loss 1.20608:  93%|█████████▎| 26/28 [01:48<00:11,  5.72s/it]epoch 3 loss 1.20608:  96%|█████████▋| 27/28 [01:48<00:04,  4.13s/it]epoch 3 loss 1.19964:  96%|█████████▋| 27/28 [01:48<00:04,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3905[0m
[32m  eval_mcc = 0.6583[0m
[32m  eval_precision = 0.501[0m
[32m  eval_recall = 0.3595[0m
[32m  ********************[0m
[32m  Best f1:0.3905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19964: 100%|██████████| 28/28 [01:54<00:00,  4.80s/it]epoch 3 loss 1.19964: 100%|██████████| 28/28 [01:54<00:00,  4.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28055:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28055:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 4 loss 1.21277:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3909[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.5025[0m
[32m  eval_recall = 0.3598[0m
[32m  ********************[0m
[32m  Best f1:0.3909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21277:   7%|▋         | 2/28 [00:05<01:22,  3.16s/it]epoch 4 loss 1.22035:   7%|▋         | 2/28 [00:05<01:22,  3.16s/it]epoch 4 loss 1.22035:  11%|█         | 3/28 [00:05<00:47,  1.90s/it]epoch 4 loss 1.2196:  11%|█         | 3/28 [00:06<00:47,  1.90s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.3909[0m
[32m  eval_mcc = 0.6584[0m
[32m  eval_precision = 0.5038[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2196:  14%|█▍        | 4/28 [00:14<01:49,  4.55s/it]epoch 4 loss 1.18614:  14%|█▍        | 4/28 [00:14<01:49,  4.55s/it]epoch 4 loss 1.18614:  18%|█▊        | 5/28 [00:14<01:10,  3.06s/it]epoch 4 loss 1.17567:  18%|█▊        | 5/28 [00:15<01:10,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3907[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5042[0m
[32m  eval_recall = 0.3592[0m

epoch 4 loss 1.17567:  21%|██▏       | 6/28 [00:18<01:12,  3.31s/it]epoch 4 loss 1.19035:  21%|██▏       | 6/28 [00:19<01:12,  3.31s/it]epoch 4 loss 1.19035:  25%|██▌       | 7/28 [00:19<00:49,  2.36s/it]epoch 4 loss 1.18388:  25%|██▌       | 7/28 [00:19<00:49,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.676[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5047[0m
[32m  eval_recall = 0.3595[0m
[32m  ********************[0m
[32m  Best f1:0.3912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18388:  29%|██▊       | 8/28 [00:24<01:04,  3.23s/it]epoch 4 loss 1.18164:  29%|██▊       | 8/28 [00:24<01:04,  3.23s/it]epoch 4 loss 1.18164:  32%|███▏      | 9/28 [00:24<00:44,  2.35s/it]epoch 4 loss 1.18313:  32%|███▏      | 9/28 [00:25<00:44,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3913[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.5053[0m
[32m  eval_recall = 0.3598[0m
[32m  ********************[0m
[32m  Best f1:0.3913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18313:  36%|███▌      | 10/28 [00:32<01:15,  4.21s/it]epoch 4 loss 1.19247:  36%|███▌      | 10/28 [00:33<01:15,  4.21s/it]epoch 4 loss 1.19247:  39%|███▉      | 11/28 [00:33<00:51,  3.05s/it]epoch 4 loss 1.18834:  39%|███▉      | 11/28 [00:33<00:51,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3966[0m
[32m  eval_mcc = 0.6573[0m
[32m  eval_precision = 0.5164[0m
[32m  eval_recall = 0.3631[0m
[32m  ********************[0m
[32m  Best f1:0.3966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18834:  43%|████▎     | 12/28 [00:38<00:58,  3.66s/it]epoch 4 loss 1.18704:  43%|████▎     | 12/28 [00:38<00:58,  3.66s/it]epoch 4 loss 1.18704:  46%|████▋     | 13/28 [00:38<00:40,  2.67s/it]epoch 4 loss 1.17921:  46%|████▋     | 13/28 [00:39<00:40,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6758[0m
[32m  eval_f1 = 0.3974[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.5164[0m
[32m  eval_recall = 0.3642[0m
[32m  ********************[0m
[32m  Best f1:0.3974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.17921:  50%|█████     | 14/28 [00:43<00:47,  3.40s/it]epoch 4 loss 1.17877:  50%|█████     | 14/28 [00:44<00:47,  3.40s/it]epoch 4 loss 1.17877:  54%|█████▎    | 15/28 [00:44<00:32,  2.50s/it]epoch 4 loss 1.18059:  54%|█████▎    | 15/28 [00:44<00:32,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3976[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.5161[0m
[32m  eval_recall = 0.3643[0m
[32m  ********************[0m
[32m  Best f1:0.3976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18059:  57%|█████▋    | 16/28 [00:49<00:39,  3.27s/it]epoch 4 loss 1.17892:  57%|█████▋    | 16/28 [00:49<00:39,  3.27s/it]epoch 4 loss 1.17892:  61%|██████    | 17/28 [00:49<00:26,  2.41s/it]epoch 4 loss 1.17186:  61%|██████    | 17/28 [00:50<00:26,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.3976[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.5155[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.17186:  64%|██████▍   | 18/28 [00:54<00:32,  3.21s/it]epoch 4 loss 1.17054:  64%|██████▍   | 18/28 [00:55<00:32,  3.21s/it]epoch 4 loss 1.17054:  68%|██████▊   | 19/28 [00:55<00:21,  2.37s/it]epoch 4 loss 1.17428:  68%|██████▊   | 19/28 [00:55<00:21,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6767[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.5158[0m
[32m  eval_recall = 0.3649[0m
[32m  ********************[0m
[32m  Best f1:0.398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17428:  71%|███████▏  | 20/28 [01:01<00:29,  3.66s/it]epoch 4 loss 1.17196:  71%|███████▏  | 20/28 [01:02<00:29,  3.66s/it]epoch 4 loss 1.17196:  75%|███████▌  | 21/28 [01:02<00:18,  2.69s/it]epoch 4 loss 1.17368:  75%|███████▌  | 21/28 [01:02<00:18,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6771[0m
[32m  eval_f1 = 0.3979[0m
[32m  eval_mcc = 0.6589[0m
[32m  eval_precision = 0.5149[0m
[32m  eval_recall = 0.3648[0m
[32m  ********************[0m
[32m  Best MCC:0.6589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17368:  79%|███████▊  | 22/28 [01:08<00:22,  3.73s/it]epoch 4 loss 1.17256:  79%|███████▊  | 22/28 [01:08<00:22,  3.73s/it]epoch 4 loss 1.17256:  82%|████████▏ | 23/28 [01:08<00:13,  2.74s/it]epoch 4 loss 1.17414:  82%|████████▏ | 23/28 [01:09<00:13,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3981[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.515[0m
[32m  eval_recall = 0.3652[0m
[32m  ********************[0m
[32m  Best f1:0.3981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17414:  86%|████████▌ | 24/28 [01:15<00:15,  3.80s/it]epoch 4 loss 1.17253:  86%|████████▌ | 24/28 [01:15<00:15,  3.80s/it]epoch 4 loss 1.17253:  89%|████████▉ | 25/28 [01:15<00:08,  2.78s/it]epoch 4 loss 1.17268:  89%|████████▉ | 25/28 [01:16<00:08,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.6594[0m
[32m  eval_precision = 0.515[0m
[32m  eval_recall = 0.3653[0m
[32m  ********************[0m
[32m  Best MCC:0.6594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17268:  93%|█████████▎| 26/28 [01:20<00:06,  3.40s/it]epoch 4 loss 1.17265:  93%|█████████▎| 26/28 [01:20<00:06,  3.40s/it]epoch 4 loss 1.17265:  96%|█████████▋| 27/28 [01:20<00:02,  2.50s/it]epoch 4 loss 1.16777:  96%|█████████▋| 27/28 [01:21<00:02,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.3981[0m
[32m  eval_mcc = 0.6594[0m
[32m  eval_precision = 0.5151[0m
[32m  eval_recall = 0.3653[0m
[32m  ********************[0m
[32m  Best MCC:0.6594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16777: 100%|██████████| 28/28 [01:25<00:00,  3.14s/it]epoch 4 loss 1.16777: 100%|██████████| 28/28 [01:25<00:00,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3981[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.515[0m
[32m  eval_recall = 0.3652[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6611[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6431[0m
[32m  eval_precision = 0.458[0m
[32m  eval_recall = 0.3252[0m

