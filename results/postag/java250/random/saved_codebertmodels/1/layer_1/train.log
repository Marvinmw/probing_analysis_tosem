[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_1', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.00969:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.00969:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.011:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0045[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.003[0m
[32m  eval_precision = 0.0077[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.011:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.00112:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.00112:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 4.98282:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0089[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = -0.0026[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.98282:  14%|█▍        | 4/28 [00:10<01:12,  3.02s/it]epoch 0 loss 4.96726:  14%|█▍        | 4/28 [00:10<01:12,  3.02s/it]epoch 0 loss 4.96726:  18%|█▊        | 5/28 [00:10<00:47,  2.08s/it]epoch 0 loss 4.93882:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0257[0m
[32m  eval_f1 = 0.0053[0m
[32m  eval_mcc = 0.0048[0m
[32m  eval_precision = 0.01[0m
[32m  eval_recall = 0.0055[0m
[32m  ********************[0m
[32m  Best f1:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93882:  21%|██▏       | 6/28 [00:16<01:11,  3.27s/it]epoch 0 loss 4.90744:  21%|██▏       | 6/28 [00:16<01:11,  3.27s/it]epoch 0 loss 4.90744:  25%|██▌       | 7/28 [00:16<00:49,  2.34s/it]epoch 0 loss 4.87121:  25%|██▌       | 7/28 [00:17<00:49,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0679[0m
[32m  eval_f1 = 0.0162[0m
[32m  eval_mcc = 0.0327[0m
[32m  eval_precision = 0.0194[0m
[32m  eval_recall = 0.0174[0m
[32m  ********************[0m
[32m  Best f1:0.0162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87121:  29%|██▊       | 8/28 [00:22<01:08,  3.44s/it]epoch 0 loss 4.82647:  29%|██▊       | 8/28 [00:23<01:08,  3.44s/it]epoch 0 loss 4.82647:  32%|███▏      | 9/28 [00:23<00:47,  2.50s/it]epoch 0 loss 4.77633:  32%|███▏      | 9/28 [00:23<00:47,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1037[0m
[32m  eval_f1 = 0.0258[0m
[32m  eval_mcc = 0.0596[0m
[32m  eval_precision = 0.0306[0m
[32m  eval_recall = 0.0288[0m
[32m  ********************[0m
[32m  Best f1:0.0258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77633:  36%|███▌      | 10/28 [00:29<01:05,  3.64s/it]epoch 0 loss 4.72663:  36%|███▌      | 10/28 [00:29<01:05,  3.64s/it]epoch 0 loss 4.72663:  39%|███▉      | 11/28 [00:29<00:45,  2.65s/it]epoch 0 loss 4.66975:  39%|███▉      | 11/28 [00:30<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.131[0m
[32m  eval_f1 = 0.0339[0m
[32m  eval_mcc = 0.083[0m
[32m  eval_precision = 0.0422[0m
[32m  eval_recall = 0.0365[0m
[32m  ********************[0m
[32m  Best f1:0.0339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.66975:  43%|████▎     | 12/28 [00:36<01:00,  3.78s/it]epoch 0 loss 4.61038:  43%|████▎     | 12/28 [00:36<01:00,  3.78s/it]epoch 0 loss 4.61038:  46%|████▋     | 13/28 [00:36<00:41,  2.77s/it]epoch 0 loss 4.54904:  46%|████▋     | 13/28 [00:36<00:41,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1739[0m
[32m  eval_f1 = 0.0418[0m
[32m  eval_mcc = 0.1241[0m
[32m  eval_precision = 0.0526[0m
[32m  eval_recall = 0.0445[0m
[32m  ********************[0m
[32m  Best f1:0.0418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54904:  50%|█████     | 14/28 [00:42<00:53,  3.82s/it]epoch 0 loss 4.48873:  50%|█████     | 14/28 [00:43<00:53,  3.82s/it]epoch 0 loss 4.48873:  54%|█████▎    | 15/28 [00:43<00:36,  2.80s/it]epoch 0 loss 4.42711:  54%|█████▎    | 15/28 [00:43<00:36,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2381[0m
[32m  eval_f1 = 0.0655[0m
[32m  eval_mcc = 0.1886[0m
[32m  eval_precision = 0.0808[0m
[32m  eval_recall = 0.0647[0m
[32m  ********************[0m
[32m  Best f1:0.0655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.42711:  57%|█████▋    | 16/28 [00:49<00:46,  3.86s/it]epoch 0 loss 4.36509:  57%|█████▋    | 16/28 [00:49<00:46,  3.86s/it]epoch 0 loss 4.36509:  61%|██████    | 17/28 [00:49<00:31,  2.83s/it]epoch 0 loss 4.30003:  61%|██████    | 17/28 [00:50<00:31,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3027[0m
[32m  eval_f1 = 0.0841[0m
[32m  eval_mcc = 0.2538[0m
[32m  eval_precision = 0.1229[0m
[32m  eval_recall = 0.0801[0m
[32m  ********************[0m
[32m  Best f1:0.0841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30003:  64%|██████▍   | 18/28 [00:55<00:37,  3.73s/it]epoch 0 loss 4.23431:  64%|██████▍   | 18/28 [00:56<00:37,  3.73s/it]epoch 0 loss 4.23431:  68%|██████▊   | 19/28 [00:56<00:24,  2.73s/it]epoch 0 loss 4.17142:  68%|██████▊   | 19/28 [00:56<00:24,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3631[0m
[32m  eval_f1 = 0.1003[0m
[32m  eval_mcc = 0.3162[0m
[32m  eval_precision = 0.1538[0m
[32m  eval_recall = 0.093[0m
[32m  ********************[0m
[32m  Best f1:0.1003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17142:  71%|███████▏  | 20/28 [01:02<00:30,  3.79s/it]epoch 0 loss 4.10837:  71%|███████▏  | 20/28 [01:02<00:30,  3.79s/it]epoch 0 loss 4.10837:  75%|███████▌  | 21/28 [01:02<00:19,  2.78s/it]epoch 0 loss 4.04404:  75%|███████▌  | 21/28 [01:03<00:19,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4096[0m
[32m  eval_f1 = 0.1063[0m
[32m  eval_mcc = 0.3666[0m
[32m  eval_precision = 0.1666[0m
[32m  eval_recall = 0.0991[0m
[32m  ********************[0m
[32m  Best f1:0.1063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.04404:  79%|███████▊  | 22/28 [01:09<00:22,  3.83s/it]epoch 0 loss 3.98197:  79%|███████▊  | 22/28 [01:09<00:22,  3.83s/it]epoch 0 loss 3.98197:  82%|████████▏ | 23/28 [01:09<00:14,  2.81s/it]epoch 0 loss 3.92465:  82%|████████▏ | 23/28 [01:10<00:14,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4522[0m
[32m  eval_f1 = 0.1316[0m
[32m  eval_mcc = 0.4152[0m
[32m  eval_precision = 0.1937[0m
[32m  eval_recall = 0.123[0m
[32m  ********************[0m
[32m  Best f1:0.1316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.92465:  86%|████████▌ | 24/28 [01:15<00:14,  3.63s/it]epoch 0 loss 3.86354:  86%|████████▌ | 24/28 [01:15<00:14,  3.63s/it]epoch 0 loss 3.86354:  89%|████████▉ | 25/28 [01:15<00:08,  2.67s/it]epoch 0 loss 3.80876:  89%|████████▉ | 25/28 [01:15<00:08,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4869[0m
[32m  eval_f1 = 0.1483[0m
[32m  eval_mcc = 0.4549[0m
[32m  eval_precision = 0.1967[0m
[32m  eval_recall = 0.1387[0m
[32m  ********************[0m
[32m  Best f1:0.1483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.80876:  93%|█████████▎| 26/28 [01:21<00:07,  3.76s/it]epoch 0 loss 3.75103:  93%|█████████▎| 26/28 [01:22<00:07,  3.76s/it]epoch 0 loss 3.75103:  96%|█████████▋| 27/28 [01:22<00:02,  2.76s/it]epoch 0 loss 3.69419:  96%|█████████▋| 27/28 [01:22<00:02,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5116[0m
[32m  eval_f1 = 0.1604[0m
[32m  eval_mcc = 0.4816[0m
[32m  eval_precision = 0.217[0m
[32m  eval_recall = 0.1526[0m
[32m  ********************[0m
[32m  Best f1:0.1604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.69419: 100%|██████████| 28/28 [01:28<00:00,  3.75s/it]epoch 0 loss 3.69419: 100%|██████████| 28/28 [01:28<00:00,  3.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.2688:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.2688:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.17807:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.545[0m
[32m  eval_f1 = 0.1774[0m
[32m  eval_mcc = 0.5167[0m
[32m  eval_precision = 0.2314[0m
[32m  eval_recall = 0.172[0m
[32m  ********************[0m
[32m  Best f1:0.1774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17807:   7%|▋         | 2/28 [00:06<01:40,  3.88s/it]epoch 1 loss 2.12298:   7%|▋         | 2/28 [00:07<01:40,  3.88s/it]epoch 1 loss 2.12298:  11%|█         | 3/28 [00:07<00:57,  2.30s/it]epoch 1 loss 2.08637:  11%|█         | 3/28 [00:07<00:57,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5654[0m
[32m  eval_f1 = 0.1978[0m
[32m  eval_mcc = 0.5382[0m
[32m  eval_precision = 0.244[0m
[32m  eval_recall = 0.1944[0m
[32m  ********************[0m
[32m  Best f1:0.1978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08637:  14%|█▍        | 4/28 [00:13<01:33,  3.90s/it]epoch 1 loss 2.04486:  14%|█▍        | 4/28 [00:13<01:33,  3.90s/it]epoch 1 loss 2.04486:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 1 loss 1.98323:  18%|█▊        | 5/28 [00:14<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5797[0m
[32m  eval_f1 = 0.2173[0m
[32m  eval_mcc = 0.5536[0m
[32m  eval_precision = 0.2771[0m
[32m  eval_recall = 0.2114[0m
[32m  ********************[0m
[32m  Best f1:0.2173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98323:  21%|██▏       | 6/28 [00:19<01:20,  3.67s/it]epoch 1 loss 1.95476:  21%|██▏       | 6/28 [00:19<01:20,  3.67s/it]epoch 1 loss 1.95476:  25%|██▌       | 7/28 [00:20<00:54,  2.61s/it]epoch 1 loss 1.91519:  25%|██▌       | 7/28 [00:20<00:54,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.2274[0m
[32m  eval_mcc = 0.5635[0m
[32m  eval_precision = 0.2963[0m
[32m  eval_recall = 0.2186[0m
[32m  ********************[0m
[32m  Best f1:0.2274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91519:  29%|██▊       | 8/28 [00:26<01:15,  3.80s/it]epoch 1 loss 1.89538:  29%|██▊       | 8/28 [00:26<01:15,  3.80s/it]epoch 1 loss 1.89538:  32%|███▏      | 9/28 [00:26<00:52,  2.74s/it]epoch 1 loss 1.85554:  32%|███▏      | 9/28 [00:27<00:52,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5946[0m
[32m  eval_f1 = 0.2331[0m
[32m  eval_mcc = 0.5712[0m
[32m  eval_precision = 0.309[0m
[32m  eval_recall = 0.2216[0m
[32m  ********************[0m
[32m  Best f1:0.2331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5712[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85554:  36%|███▌      | 10/28 [00:33<01:09,  3.86s/it]epoch 1 loss 1.83204:  36%|███▌      | 10/28 [00:33<01:09,  3.86s/it]epoch 1 loss 1.83204:  39%|███▉      | 11/28 [00:33<00:47,  2.80s/it]epoch 1 loss 1.80914:  39%|███▉      | 11/28 [00:33<00:47,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5997[0m
[32m  eval_f1 = 0.2428[0m
[32m  eval_mcc = 0.578[0m
[32m  eval_precision = 0.3421[0m
[32m  eval_recall = 0.2264[0m
[32m  ********************[0m
[32m  Best f1:0.2428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80914:  43%|████▎     | 12/28 [00:39<01:02,  3.89s/it]epoch 1 loss 1.78632:  43%|████▎     | 12/28 [00:40<01:02,  3.89s/it]epoch 1 loss 1.78632:  46%|████▋     | 13/28 [00:40<00:42,  2.84s/it]epoch 1 loss 1.77106:  46%|████▋     | 13/28 [00:40<00:42,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.2566[0m
[32m  eval_mcc = 0.5874[0m
[32m  eval_precision = 0.3493[0m
[32m  eval_recall = 0.238[0m
[32m  ********************[0m
[32m  Best f1:0.2566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77106:  50%|█████     | 14/28 [00:46<00:54,  3.91s/it]epoch 1 loss 1.75673:  50%|█████     | 14/28 [00:47<00:54,  3.91s/it]epoch 1 loss 1.75673:  54%|█████▎    | 15/28 [00:47<00:37,  2.86s/it]epoch 1 loss 1.73861:  54%|█████▎    | 15/28 [00:47<00:37,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2742[0m
[32m  eval_mcc = 0.5938[0m
[32m  eval_precision = 0.3854[0m
[32m  eval_recall = 0.2546[0m
[32m  ********************[0m
[32m  Best f1:0.2742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73861:  57%|█████▋    | 16/28 [00:53<00:46,  3.90s/it]epoch 1 loss 1.71912:  57%|█████▋    | 16/28 [00:53<00:46,  3.90s/it]epoch 1 loss 1.71912:  61%|██████    | 17/28 [00:53<00:31,  2.86s/it]epoch 1 loss 1.7059:  61%|██████    | 17/28 [00:54<00:31,  2.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2802[0m
[32m  eval_mcc = 0.5968[0m
[32m  eval_precision = 0.3962[0m
[32m  eval_recall = 0.2609[0m
[32m  ********************[0m
[32m  Best f1:0.2802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7059:  64%|██████▍   | 18/28 [01:03<00:47,  4.74s/it]epoch 1 loss 1.68724:  64%|██████▍   | 18/28 [01:03<00:47,  4.74s/it]epoch 1 loss 1.68724:  68%|██████▊   | 19/28 [01:03<00:30,  3.44s/it]epoch 1 loss 1.68204:  68%|██████▊   | 19/28 [01:03<00:30,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6211[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.4102[0m
[32m  eval_recall = 0.2745[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68204:  71%|███████▏  | 20/28 [01:09<00:33,  4.24s/it]epoch 1 loss 1.67303:  71%|███████▏  | 20/28 [01:09<00:33,  4.24s/it]epoch 1 loss 1.67303:  75%|███████▌  | 21/28 [01:09<00:21,  3.10s/it]epoch 1 loss 1.67038:  75%|███████▌  | 21/28 [01:10<00:21,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.6081[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67038:  79%|███████▊  | 22/28 [01:23<00:36,  6.16s/it]epoch 1 loss 1.66477:  79%|███████▊  | 22/28 [01:23<00:36,  6.16s/it]epoch 1 loss 1.66477:  82%|████████▏ | 23/28 [01:23<00:22,  4.44s/it]epoch 1 loss 1.65842:  82%|████████▏ | 23/28 [01:24<00:22,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6359[0m
[32m  eval_f1 = 0.3226[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.4104[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.3226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65842:  86%|████████▌ | 24/28 [01:34<00:25,  6.41s/it]epoch 1 loss 1.64759:  86%|████████▌ | 24/28 [01:35<00:25,  6.41s/it]epoch 1 loss 1.64759:  89%|████████▉ | 25/28 [01:35<00:13,  4.61s/it]epoch 1 loss 1.63173:  89%|████████▉ | 25/28 [01:35<00:13,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.3254[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63173:  93%|█████████▎| 26/28 [01:44<00:12,  6.01s/it]epoch 1 loss 1.62036:  93%|█████████▎| 26/28 [01:44<00:12,  6.01s/it]epoch 1 loss 1.62036:  96%|█████████▋| 27/28 [01:44<00:04,  4.33s/it]epoch 1 loss 1.60961:  96%|█████████▋| 27/28 [01:45<00:04,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.4052[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60961: 100%|██████████| 28/28 [01:58<00:00,  7.24s/it]epoch 1 loss 1.60961: 100%|██████████| 28/28 [01:58<00:00,  4.24s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.34016:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.34016:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.29946:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3343[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4242[0m
[32m  eval_recall = 0.3122[0m
[32m  ********************[0m
[32m  Best f1:0.3343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29946:   7%|▋         | 2/28 [00:09<02:21,  5.42s/it]epoch 2 loss 1.32374:   7%|▋         | 2/28 [00:09<02:21,  5.42s/it]epoch 2 loss 1.32374:  11%|█         | 3/28 [00:09<01:18,  3.13s/it]epoch 2 loss 1.30916:  11%|█         | 3/28 [00:10<01:18,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4427[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30916:  14%|█▍        | 4/28 [00:18<02:11,  5.47s/it]epoch 2 loss 1.31247:  14%|█▍        | 4/28 [00:19<02:11,  5.47s/it]epoch 2 loss 1.31247:  18%|█▊        | 5/28 [00:19<01:23,  3.65s/it]epoch 2 loss 1.29538:  18%|█▊        | 5/28 [00:19<01:23,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3422[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.3173[0m
[32m  ********************[0m
[32m  Best f1:0.3422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29538:  21%|██▏       | 6/28 [00:31<02:22,  6.49s/it]epoch 2 loss 1.29572:  21%|██▏       | 6/28 [00:31<02:22,  6.49s/it]epoch 2 loss 1.29572:  25%|██▌       | 7/28 [00:31<01:34,  4.51s/it]epoch 2 loss 1.30379:  25%|██▌       | 7/28 [00:32<01:34,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4425[0m
[32m  eval_recall = 0.3197[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30379:  29%|██▊       | 8/28 [00:41<02:04,  6.24s/it]epoch 2 loss 1.29141:  29%|██▊       | 8/28 [00:42<02:04,  6.24s/it]epoch 2 loss 1.29141:  32%|███▏      | 9/28 [00:42<01:23,  4.42s/it]epoch 2 loss 1.27868:  32%|███▏      | 9/28 [00:42<01:23,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.3448[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.3199[0m
[32m  ********************[0m
[32m  Best f1:0.3448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.27868:  36%|███▌      | 10/28 [00:47<01:23,  4.62s/it]epoch 2 loss 1.27793:  36%|███▌      | 10/28 [00:47<01:23,  4.62s/it]epoch 2 loss 1.27793:  39%|███▉      | 11/28 [00:47<00:56,  3.33s/it]epoch 2 loss 1.27912:  39%|███▉      | 11/28 [00:47<00:56,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3459[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.3213[0m
[32m  ********************[0m
[32m  Best f1:0.3459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.27912:  43%|████▎     | 12/28 [00:53<01:08,  4.27s/it]epoch 2 loss 1.28437:  43%|████▎     | 12/28 [00:54<01:08,  4.27s/it]epoch 2 loss 1.28437:  46%|████▋     | 13/28 [00:54<00:46,  3.10s/it]epoch 2 loss 1.2742:  46%|████▋     | 13/28 [00:54<00:46,  3.10s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3505[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2742:  50%|█████     | 14/28 [01:02<01:06,  4.74s/it]epoch 2 loss 1.2701:  50%|█████     | 14/28 [01:03<01:06,  4.74s/it]epoch 2 loss 1.2701:  54%|█████▎    | 15/28 [01:03<00:44,  3.43s/it]epoch 2 loss 1.26973:  54%|█████▎    | 15/28 [01:03<00:44,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3514[0m
[32m  eval_mcc = 0.6376[0m
[32m  eval_precision = 0.4521[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26973:  57%|█████▋    | 16/28 [01:11<00:57,  4.83s/it]epoch 2 loss 1.27641:  57%|█████▋    | 16/28 [01:11<00:57,  4.83s/it]epoch 2 loss 1.27641:  61%|██████    | 17/28 [01:11<00:38,  3.50s/it]epoch 2 loss 1.28258:  61%|██████    | 17/28 [01:12<00:38,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4509[0m
[32m  eval_recall = 0.3295[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28258:  64%|██████▍   | 18/28 [01:20<00:50,  5.08s/it]epoch 2 loss 1.27919:  64%|██████▍   | 18/28 [01:20<00:50,  5.08s/it]epoch 2 loss 1.27919:  68%|██████▊   | 19/28 [01:20<00:33,  3.68s/it]epoch 2 loss 1.27964:  68%|██████▊   | 19/28 [01:21<00:33,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best MCC:0.6423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27964:  71%|███████▏  | 20/28 [01:28<00:38,  4.79s/it]epoch 2 loss 1.27589:  71%|███████▏  | 20/28 [01:28<00:38,  4.79s/it]epoch 2 loss 1.27589:  75%|███████▌  | 21/28 [01:28<00:24,  3.48s/it]epoch 2 loss 1.27312:  75%|███████▌  | 21/28 [01:29<00:24,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.645[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3355[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27312:  79%|███████▊  | 22/28 [01:37<00:29,  4.92s/it]epoch 2 loss 1.27093:  79%|███████▊  | 22/28 [01:37<00:29,  4.92s/it]epoch 2 loss 1.27093:  82%|████████▏ | 23/28 [01:37<00:17,  3.57s/it]epoch 2 loss 1.26987:  82%|████████▏ | 23/28 [01:37<00:17,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3593[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4616[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best f1:0.3593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26987:  86%|████████▌ | 24/28 [01:45<00:20,  5.01s/it]epoch 2 loss 1.26962:  86%|████████▌ | 24/28 [01:46<00:20,  5.01s/it]epoch 2 loss 1.26962:  89%|████████▉ | 25/28 [01:46<00:10,  3.63s/it]epoch 2 loss 1.27391:  89%|████████▉ | 25/28 [01:46<00:10,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3396[0m
[32m  ********************[0m
[32m  Best f1:0.3648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27391:  93%|█████████▎| 26/28 [01:53<00:09,  4.60s/it]epoch 2 loss 1.27223:  93%|█████████▎| 26/28 [01:53<00:09,  4.60s/it]epoch 2 loss 1.27223:  96%|█████████▋| 27/28 [01:53<00:03,  3.34s/it]epoch 2 loss 1.26628:  96%|█████████▋| 27/28 [01:53<00:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.5[0m
[32m  eval_recall = 0.344[0m
[32m  ********************[0m
[32m  Best f1:0.372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26628: 100%|██████████| 28/28 [02:00<00:00,  4.34s/it]epoch 2 loss 1.26628: 100%|██████████| 28/28 [02:00<00:00,  4.29s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.14292:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.14292:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.15276:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6688[0m
[32m  eval_f1 = 0.3801[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.5139[0m
[32m  eval_recall = 0.3497[0m
[32m  ********************[0m
[32m  Best f1:0.3801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15276:   7%|▋         | 2/28 [00:08<02:14,  5.17s/it]epoch 3 loss 1.13724:   7%|▋         | 2/28 [00:09<02:14,  5.17s/it]epoch 3 loss 1.13724:  11%|█         | 3/28 [00:09<01:14,  3.00s/it]epoch 3 loss 1.13106:  11%|█         | 3/28 [00:09<01:14,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.3813[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.512[0m
[32m  eval_recall = 0.3504[0m
[32m  ********************[0m
[32m  Best f1:0.3813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13106:  14%|█▍        | 4/28 [00:17<02:02,  5.12s/it]epoch 3 loss 1.14061:  14%|█▍        | 4/28 [00:18<02:02,  5.12s/it]epoch 3 loss 1.14061:  18%|█▊        | 5/28 [00:18<01:18,  3.43s/it]epoch 3 loss 1.16579:  18%|█▊        | 5/28 [00:18<01:18,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.3858[0m
[32m  eval_mcc = 0.6536[0m
[32m  eval_precision = 0.5007[0m
[32m  eval_recall = 0.3541[0m
[32m  ********************[0m
[32m  Best f1:0.3858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16579:  21%|██▏       | 6/28 [00:26<01:53,  5.17s/it]epoch 3 loss 1.19593:  21%|██▏       | 6/28 [00:27<01:53,  5.17s/it]epoch 3 loss 1.19593:  25%|██▌       | 7/28 [00:27<01:15,  3.62s/it]epoch 3 loss 1.19526:  25%|██▌       | 7/28 [00:27<01:15,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3886[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4986[0m
[32m  eval_recall = 0.3571[0m
[32m  ********************[0m
[32m  Best f1:0.3886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19526:  29%|██▊       | 8/28 [00:33<01:29,  4.50s/it]epoch 3 loss 1.1929:  29%|██▊       | 8/28 [00:33<01:29,  4.50s/it] epoch 3 loss 1.1929:  32%|███▏      | 9/28 [00:33<01:01,  3.22s/it]epoch 3 loss 1.18277:  32%|███▏      | 9/28 [00:34<01:01,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3907[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4945[0m
[32m  eval_recall = 0.3599[0m
[32m  ********************[0m
[32m  Best f1:0.3907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18277:  36%|███▌      | 10/28 [00:38<01:06,  3.70s/it]epoch 3 loss 1.19047:  36%|███▌      | 10/28 [00:39<01:06,  3.70s/it]epoch 3 loss 1.19047:  39%|███▉      | 11/28 [00:39<00:45,  2.69s/it]epoch 3 loss 1.20313:  39%|███▉      | 11/28 [00:39<00:45,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6741[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3618[0m
[32m  ********************[0m
[32m  Best f1:0.392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20313:  43%|████▎     | 12/28 [00:45<01:00,  3.79s/it]epoch 3 loss 1.19674:  43%|████▎     | 12/28 [00:45<01:00,  3.79s/it]epoch 3 loss 1.19674:  46%|████▋     | 13/28 [00:45<00:41,  2.77s/it]epoch 3 loss 1.18839:  46%|████▋     | 13/28 [00:46<00:41,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6748[0m
[32m  eval_f1 = 0.3929[0m
[32m  eval_mcc = 0.6564[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3627[0m
[32m  ********************[0m
[32m  Best f1:0.3929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18839:  50%|█████     | 14/28 [00:56<01:14,  5.31s/it]epoch 3 loss 1.18728:  50%|█████     | 14/28 [00:57<01:14,  5.31s/it]epoch 3 loss 1.18728:  54%|█████▎    | 15/28 [00:57<00:49,  3.83s/it]epoch 3 loss 1.18223:  54%|█████▎    | 15/28 [00:57<00:49,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.675[0m
[32m  eval_f1 = 0.3949[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5056[0m
[32m  eval_recall = 0.3634[0m
[32m  ********************[0m
[32m  Best f1:0.3949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18223:  57%|█████▋    | 16/28 [01:04<00:59,  4.95s/it]epoch 3 loss 1.18071:  57%|█████▋    | 16/28 [01:05<00:59,  4.95s/it]epoch 3 loss 1.18071:  61%|██████    | 17/28 [01:05<00:39,  3.59s/it]epoch 3 loss 1.18233:  61%|██████    | 17/28 [01:05<00:39,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3947[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.5075[0m
[32m  eval_recall = 0.3629[0m
[32m  ********************[0m
[32m  Best MCC:0.6572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18233:  64%|██████▍   | 18/28 [01:13<00:48,  4.84s/it]epoch 3 loss 1.18127:  64%|██████▍   | 18/28 [01:13<00:48,  4.84s/it]epoch 3 loss 1.18127:  68%|██████▊   | 19/28 [01:13<00:31,  3.51s/it]epoch 3 loss 1.17831:  68%|██████▊   | 19/28 [01:13<00:31,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3945[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5063[0m
[32m  eval_recall = 0.3628[0m
[32m  ********************[0m
[32m  Best MCC:0.6578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17831:  71%|███████▏  | 20/28 [01:18<00:31,  3.98s/it]epoch 3 loss 1.17564:  71%|███████▏  | 20/28 [01:19<00:31,  3.98s/it]epoch 3 loss 1.17564:  75%|███████▌  | 21/28 [01:19<00:20,  2.91s/it]epoch 3 loss 1.18134:  75%|███████▌  | 21/28 [01:19<00:20,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3957[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.5094[0m
[32m  eval_recall = 0.3635[0m
[32m  ********************[0m
[32m  Best f1:0.3957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18134:  79%|███████▊  | 22/28 [01:27<00:27,  4.52s/it]epoch 3 loss 1.18293:  79%|███████▊  | 22/28 [01:27<00:27,  4.52s/it]epoch 3 loss 1.18293:  82%|████████▏ | 23/28 [01:27<00:16,  3.29s/it]epoch 3 loss 1.18462:  82%|████████▏ | 23/28 [01:28<00:16,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6598[0m
[32m  eval_precision = 0.5096[0m
[32m  eval_recall = 0.3623[0m
[32m  ********************[0m
[32m  Best MCC:0.6598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18462:  86%|████████▌ | 24/28 [01:35<00:18,  4.55s/it]epoch 3 loss 1.18419:  86%|████████▌ | 24/28 [01:35<00:18,  4.55s/it]epoch 3 loss 1.18419:  89%|████████▉ | 25/28 [01:35<00:09,  3.31s/it]epoch 3 loss 1.18598:  89%|████████▉ | 25/28 [01:36<00:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.3952[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.5107[0m
[32m  eval_recall = 0.3635[0m
[32m  ********************[0m
[32m  Best MCC:0.6612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18598:  93%|█████████▎| 26/28 [01:40<00:07,  3.84s/it]epoch 3 loss 1.18295:  93%|█████████▎| 26/28 [01:41<00:07,  3.84s/it]epoch 3 loss 1.18295:  96%|█████████▋| 27/28 [01:41<00:02,  2.81s/it]epoch 3 loss 1.17665:  96%|█████████▋| 27/28 [01:41<00:02,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6795[0m
[32m  eval_f1 = 0.396[0m
[32m  eval_mcc = 0.6618[0m
[32m  eval_precision = 0.4992[0m
[32m  eval_recall = 0.3651[0m
[32m  ********************[0m
[32m  Best f1:0.396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17665: 100%|██████████| 28/28 [01:47<00:00,  3.87s/it]epoch 3 loss 1.17665: 100%|██████████| 28/28 [01:47<00:00,  3.84s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25736:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25736:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.18893:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6796[0m
[32m  eval_f1 = 0.3956[0m
[32m  eval_mcc = 0.6618[0m
[32m  eval_precision = 0.4983[0m
[32m  eval_recall = 0.3652[0m
[32m  ********************[0m
[32m  Best MCC:0.6618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18893:   7%|▋         | 2/28 [00:05<01:29,  3.45s/it]epoch 4 loss 1.19718:   7%|▋         | 2/28 [00:06<01:29,  3.45s/it]epoch 4 loss 1.19718:  11%|█         | 3/28 [00:06<00:51,  2.06s/it]epoch 4 loss 1.19476:  11%|█         | 3/28 [00:06<00:51,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6797[0m
[32m  eval_f1 = 0.402[0m
[32m  eval_mcc = 0.6618[0m
[32m  eval_precision = 0.5215[0m
[32m  eval_recall = 0.3691[0m
[32m  ********************[0m
[32m  Best f1:0.402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19476:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.16106:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.16106:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 4 loss 1.15075:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6802[0m
[32m  eval_f1 = 0.4025[0m
[32m  eval_mcc = 0.6623[0m
[32m  eval_precision = 0.523[0m
[32m  eval_recall = 0.3693[0m
[32m  ********************[0m
[32m  Best f1:0.4025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15075:  21%|██▏       | 6/28 [00:24<01:58,  5.38s/it]epoch 4 loss 1.16613:  21%|██▏       | 6/28 [00:24<01:58,  5.38s/it]epoch 4 loss 1.16613:  25%|██▌       | 7/28 [00:24<01:18,  3.76s/it]epoch 4 loss 1.16011:  25%|██▌       | 7/28 [00:25<01:18,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.4013[0m
[32m  eval_mcc = 0.6625[0m
[32m  eval_precision = 0.5205[0m
[32m  eval_recall = 0.3687[0m
[32m  ********************[0m
[32m  Best MCC:0.6625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16011:  29%|██▊       | 8/28 [00:29<01:23,  4.17s/it]epoch 4 loss 1.15844:  29%|██▊       | 8/28 [00:30<01:23,  4.17s/it]epoch 4 loss 1.15844:  32%|███▏      | 9/28 [00:30<00:56,  3.00s/it]epoch 4 loss 1.16016:  32%|███▏      | 9/28 [00:30<00:56,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.68[0m
[32m  eval_f1 = 0.4016[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3689[0m

epoch 4 loss 1.16016:  36%|███▌      | 10/28 [00:33<00:58,  3.24s/it]epoch 4 loss 1.1693:  36%|███▌      | 10/28 [00:34<00:58,  3.24s/it] epoch 4 loss 1.1693:  39%|███▉      | 11/28 [00:34<00:40,  2.37s/it]epoch 4 loss 1.16555:  39%|███▉      | 11/28 [00:34<00:40,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6795[0m
[32m  eval_f1 = 0.4024[0m
[32m  eval_mcc = 0.6617[0m
[32m  eval_precision = 0.5128[0m
[32m  eval_recall = 0.3697[0m

epoch 4 loss 1.16555:  43%|████▎     | 12/28 [00:38<00:44,  2.80s/it]epoch 4 loss 1.16414:  43%|████▎     | 12/28 [00:38<00:44,  2.80s/it]epoch 4 loss 1.16414:  46%|████▋     | 13/28 [00:38<00:31,  2.08s/it]epoch 4 loss 1.15608:  46%|████▋     | 13/28 [00:38<00:31,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.4036[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.5156[0m
[32m  eval_recall = 0.3704[0m
[32m  ********************[0m
[32m  Best f1:0.4036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15608:  50%|█████     | 14/28 [00:43<00:41,  2.98s/it]epoch 4 loss 1.15567:  50%|█████     | 14/28 [00:43<00:41,  2.98s/it]epoch 4 loss 1.15567:  54%|█████▎    | 15/28 [00:43<00:28,  2.21s/it]epoch 4 loss 1.15738:  54%|█████▎    | 15/28 [00:44<00:28,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6798[0m
[32m  eval_f1 = 0.4067[0m
[32m  eval_mcc = 0.6619[0m
[32m  eval_precision = 0.5258[0m
[32m  eval_recall = 0.3738[0m
[32m  ********************[0m
[32m  Best f1:0.4067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15738:  57%|█████▋    | 16/28 [00:50<00:43,  3.63s/it]epoch 4 loss 1.15562:  57%|█████▋    | 16/28 [00:51<00:43,  3.63s/it]epoch 4 loss 1.15562:  61%|██████    | 17/28 [00:51<00:29,  2.67s/it]epoch 4 loss 1.14879:  61%|██████    | 17/28 [00:51<00:29,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.4068[0m
[32m  eval_mcc = 0.6622[0m
[32m  eval_precision = 0.5326[0m
[32m  eval_recall = 0.374[0m
[32m  ********************[0m
[32m  Best f1:0.4068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.14879:  64%|██████▍   | 18/28 [00:56<00:33,  3.39s/it]epoch 4 loss 1.14745:  64%|██████▍   | 18/28 [00:56<00:33,  3.39s/it]epoch 4 loss 1.14745:  68%|██████▊   | 19/28 [00:56<00:22,  2.50s/it]epoch 4 loss 1.15099:  68%|██████▊   | 19/28 [00:57<00:22,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.63it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.68it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6809[0m
[32m  eval_f1 = 0.4073[0m
[32m  eval_mcc = 0.663[0m
[32m  eval_precision = 0.533[0m
[32m  eval_recall = 0.3745[0m
[32m  ********************[0m
[32m  Best f1:0.4073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15099:  71%|███████▏  | 20/28 [01:04<00:32,  4.12s/it]epoch 4 loss 1.1492:  71%|███████▏  | 20/28 [01:05<00:32,  4.12s/it] epoch 4 loss 1.1492:  75%|███████▌  | 21/28 [01:05<00:21,  3.01s/it]epoch 4 loss 1.1509:  75%|███████▌  | 21/28 [01:05<00:21,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6811[0m
[32m  eval_f1 = 0.4074[0m
[32m  eval_mcc = 0.6632[0m
[32m  eval_precision = 0.5326[0m
[32m  eval_recall = 0.3745[0m
[32m  ********************[0m
[32m  Best f1:0.4074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1509:  79%|███████▊  | 22/28 [01:11<00:24,  4.01s/it]epoch 4 loss 1.14968:  79%|███████▊  | 22/28 [01:11<00:24,  4.01s/it]epoch 4 loss 1.14968:  82%|████████▏ | 23/28 [01:11<00:14,  2.94s/it]epoch 4 loss 1.15133:  82%|████████▏ | 23/28 [01:12<00:14,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6811[0m
[32m  eval_f1 = 0.407[0m
[32m  eval_mcc = 0.6632[0m
[32m  eval_precision = 0.5315[0m
[32m  eval_recall = 0.3743[0m
[32m  ********************[0m
[32m  Best MCC:0.6632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15133:  86%|████████▌ | 24/28 [01:16<00:14,  3.54s/it]epoch 4 loss 1.14956:  86%|████████▌ | 24/28 [01:17<00:14,  3.54s/it]epoch 4 loss 1.14956:  89%|████████▉ | 25/28 [01:17<00:07,  2.60s/it]epoch 4 loss 1.14981:  89%|████████▉ | 25/28 [01:17<00:07,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6813[0m
[32m  eval_f1 = 0.4072[0m
[32m  eval_mcc = 0.6634[0m
[32m  eval_precision = 0.532[0m
[32m  eval_recall = 0.3745[0m
[32m  ********************[0m
[32m  Best MCC:0.6634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14981:  93%|█████████▎| 26/28 [01:22<00:06,  3.31s/it]epoch 4 loss 1.14979:  93%|█████████▎| 26/28 [01:22<00:06,  3.31s/it]epoch 4 loss 1.14979:  96%|█████████▋| 27/28 [01:22<00:02,  2.44s/it]epoch 4 loss 1.14496:  96%|█████████▋| 27/28 [01:22<00:02,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6813[0m
[32m  eval_f1 = 0.4073[0m
[32m  eval_mcc = 0.6634[0m
[32m  eval_precision = 0.532[0m
[32m  eval_recall = 0.3745[0m

epoch 4 loss 1.14496: 100%|██████████| 28/28 [01:26<00:00,  2.79s/it]epoch 4 loss 1.14496: 100%|██████████| 28/28 [01:26<00:00,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6811[0m
[32m  eval_f1 = 0.4074[0m
[32m  eval_mcc = 0.6632[0m
[32m  eval_precision = 0.5326[0m
[32m  eval_recall = 0.3745[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3532[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4473[0m
[32m  eval_recall = 0.3272[0m

