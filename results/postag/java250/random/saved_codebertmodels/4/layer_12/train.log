[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_12', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.24215:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.24215:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.23799:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0047[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = 0.0034[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0119[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23799:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.22549:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.22549:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.21163:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0078[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0058[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0144[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21163:  14%|█▍        | 4/28 [00:17<02:14,  5.59s/it]epoch 0 loss 5.18938:  14%|█▍        | 4/28 [00:17<02:14,  5.59s/it]epoch 0 loss 5.18938:  18%|█▊        | 5/28 [00:17<01:25,  3.73s/it]epoch 0 loss 5.16457:  18%|█▊        | 5/28 [00:18<01:25,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0181[0m
[32m  eval_f1 = 0.0048[0m
[32m  eval_mcc = 0.0107[0m
[32m  eval_precision = 0.0098[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.16457:  21%|██▏       | 6/28 [00:27<02:07,  5.81s/it]epoch 0 loss 5.12634:  21%|██▏       | 6/28 [00:28<02:07,  5.81s/it]epoch 0 loss 5.12634:  25%|██▌       | 7/28 [00:28<01:25,  4.05s/it]epoch 0 loss 5.08468:  25%|██▌       | 7/28 [00:28<01:25,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0424[0m
[32m  eval_f1 = 0.0091[0m
[32m  eval_mcc = 0.0136[0m
[32m  eval_precision = 0.0132[0m
[32m  eval_recall = 0.0235[0m
[32m  ********************[0m
[32m  Best f1:0.0091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08468:  29%|██▊       | 8/28 [00:34<01:34,  4.72s/it]epoch 0 loss 5.03436:  29%|██▊       | 8/28 [00:34<01:34,  4.72s/it]epoch 0 loss 5.03436:  32%|███▏      | 9/28 [00:34<01:04,  3.37s/it]epoch 0 loss 4.98438:  32%|███▏      | 9/28 [00:35<01:04,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0747[0m
[32m  eval_f1 = 0.0147[0m
[32m  eval_mcc = 0.0273[0m
[32m  eval_precision = 0.0184[0m
[32m  eval_recall = 0.0211[0m
[32m  ********************[0m
[32m  Best f1:0.0147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98438:  36%|███▌      | 10/28 [00:40<01:16,  4.26s/it]epoch 0 loss 4.92787:  36%|███▌      | 10/28 [00:41<01:16,  4.26s/it]epoch 0 loss 4.92787:  39%|███▉      | 11/28 [00:41<00:52,  3.08s/it]epoch 0 loss 4.866:  39%|███▉      | 11/28 [00:41<00:52,  3.08s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0975[0m
[32m  eval_f1 = 0.0119[0m
[32m  eval_mcc = 0.0434[0m
[32m  eval_precision = 0.0157[0m
[32m  eval_recall = 0.0198[0m
[32m  ********************[0m
[32m  Best MCC:0.0434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.866:  43%|████▎     | 12/28 [00:46<00:59,  3.69s/it]epoch 0 loss 4.80169:  43%|████▎     | 12/28 [00:46<00:59,  3.69s/it]epoch 0 loss 4.80169:  46%|████▋     | 13/28 [00:46<00:40,  2.70s/it]epoch 0 loss 4.7339:  46%|████▋     | 13/28 [00:47<00:40,  2.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1296[0m
[32m  eval_f1 = 0.0157[0m
[32m  eval_mcc = 0.0702[0m
[32m  eval_precision = 0.0183[0m
[32m  eval_recall = 0.0237[0m
[32m  ********************[0m
[32m  Best f1:0.0157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7339:  50%|█████     | 14/28 [00:52<00:52,  3.75s/it]epoch 0 loss 4.66943:  50%|█████     | 14/28 [00:53<00:52,  3.75s/it]epoch 0 loss 4.66943:  54%|█████▎    | 15/28 [00:53<00:35,  2.75s/it]epoch 0 loss 4.60226:  54%|█████▎    | 15/28 [00:53<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.167[0m
[32m  eval_f1 = 0.02[0m
[32m  eval_mcc = 0.1052[0m
[32m  eval_precision = 0.0298[0m
[32m  eval_recall = 0.0273[0m
[32m  ********************[0m
[32m  Best f1:0.02[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60226:  57%|█████▋    | 16/28 [00:59<00:45,  3.80s/it]epoch 0 loss 4.53339:  57%|█████▋    | 16/28 [01:00<00:45,  3.80s/it]epoch 0 loss 4.53339:  61%|██████    | 17/28 [01:00<00:30,  2.78s/it]epoch 0 loss 4.4743:  61%|██████    | 17/28 [01:00<00:30,  2.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1926[0m
[32m  eval_f1 = 0.0203[0m
[32m  eval_mcc = 0.128[0m
[32m  eval_precision = 0.0404[0m
[32m  eval_recall = 0.0277[0m
[32m  ********************[0m
[32m  Best f1:0.0203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4743:  64%|██████▍   | 18/28 [01:05<00:37,  3.71s/it]epoch 0 loss 4.41185:  64%|██████▍   | 18/28 [01:06<00:37,  3.71s/it]epoch 0 loss 4.41185:  68%|██████▊   | 19/28 [01:06<00:24,  2.72s/it]epoch 0 loss 4.36113:  68%|██████▊   | 19/28 [01:06<00:24,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2216[0m
[32m  eval_f1 = 0.0229[0m
[32m  eval_mcc = 0.1564[0m
[32m  eval_precision = 0.036[0m
[32m  eval_recall = 0.0295[0m
[32m  ********************[0m
[32m  Best f1:0.0229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36113:  71%|███████▏  | 20/28 [01:11<00:28,  3.61s/it]epoch 0 loss 4.29908:  71%|███████▏  | 20/28 [01:12<00:28,  3.61s/it]epoch 0 loss 4.29908:  75%|███████▌  | 21/28 [01:12<00:18,  2.65s/it]epoch 0 loss 4.25215:  75%|███████▌  | 21/28 [01:12<00:18,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2372[0m
[32m  eval_f1 = 0.0236[0m
[32m  eval_mcc = 0.1782[0m
[32m  eval_precision = 0.0422[0m
[32m  eval_recall = 0.0303[0m
[32m  ********************[0m
[32m  Best f1:0.0236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25215:  79%|███████▊  | 22/28 [01:18<00:22,  3.76s/it]epoch 0 loss 4.19599:  79%|███████▊  | 22/28 [01:19<00:22,  3.76s/it]epoch 0 loss 4.19599:  82%|████████▏ | 23/28 [01:19<00:13,  2.76s/it]epoch 0 loss 4.14192:  82%|████████▏ | 23/28 [01:19<00:13,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.262[0m
[32m  eval_f1 = 0.0363[0m
[32m  eval_mcc = 0.2116[0m
[32m  eval_precision = 0.0708[0m
[32m  eval_recall = 0.0418[0m
[32m  ********************[0m
[32m  Best f1:0.0363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.14192:  86%|████████▌ | 24/28 [01:25<00:15,  3.80s/it]epoch 0 loss 4.09551:  86%|████████▌ | 24/28 [01:25<00:15,  3.80s/it]epoch 0 loss 4.09551:  89%|████████▉ | 25/28 [01:25<00:08,  2.79s/it]epoch 0 loss 4.04603:  89%|████████▉ | 25/28 [01:26<00:08,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3151[0m
[32m  eval_f1 = 0.0677[0m
[32m  eval_mcc = 0.2728[0m
[32m  eval_precision = 0.1703[0m
[32m  eval_recall = 0.0655[0m
[32m  ********************[0m
[32m  Best f1:0.0677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.04603:  93%|█████████▎| 26/28 [01:32<00:07,  3.82s/it]epoch 0 loss 3.99672:  93%|█████████▎| 26/28 [01:32<00:07,  3.82s/it]epoch 0 loss 3.99672:  96%|█████████▋| 27/28 [01:32<00:02,  2.80s/it]epoch 0 loss 3.94586:  96%|█████████▋| 27/28 [01:32<00:02,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4241[0m
[32m  eval_f1 = 0.1341[0m
[32m  eval_mcc = 0.3928[0m
[32m  eval_precision = 0.1918[0m
[32m  eval_recall = 0.1239[0m
[32m  ********************[0m
[32m  Best f1:0.1341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.94586: 100%|██████████| 28/28 [01:38<00:00,  3.79s/it]epoch 0 loss 3.94586: 100%|██████████| 28/28 [01:38<00:00,  3.52s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.55707:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.55707:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.4605:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4792[0m
[32m  eval_f1 = 0.1606[0m
[32m  eval_mcc = 0.4518[0m
[32m  eval_precision = 0.2485[0m
[32m  eval_recall = 0.1522[0m
[32m  ********************[0m
[32m  Best f1:0.1606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4605:   7%|▋         | 2/28 [00:06<01:38,  3.80s/it]epoch 1 loss 2.42422:   7%|▋         | 2/28 [00:07<01:38,  3.80s/it]epoch 1 loss 2.42422:  11%|█         | 3/28 [00:07<00:56,  2.26s/it]epoch 1 loss 2.42154:  11%|█         | 3/28 [00:07<00:56,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5168[0m
[32m  eval_f1 = 0.1818[0m
[32m  eval_mcc = 0.4878[0m
[32m  eval_precision = 0.2292[0m
[32m  eval_recall = 0.1736[0m
[32m  ********************[0m
[32m  Best f1:0.1818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42154:  14%|█▍        | 4/28 [00:15<01:51,  4.64s/it]epoch 1 loss 2.41686:  14%|█▍        | 4/28 [00:15<01:51,  4.64s/it]epoch 1 loss 2.41686:  18%|█▊        | 5/28 [00:15<01:11,  3.12s/it]epoch 1 loss 2.4089:  18%|█▊        | 5/28 [00:16<01:11,  3.12s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5301[0m
[32m  eval_f1 = 0.1882[0m
[32m  eval_mcc = 0.4997[0m
[32m  eval_precision = 0.2394[0m
[32m  eval_recall = 0.1813[0m
[32m  ********************[0m
[32m  Best f1:0.1882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4089:  21%|██▏       | 6/28 [00:26<02:05,  5.73s/it]epoch 1 loss 2.39141:  21%|██▏       | 6/28 [00:26<02:05,  5.73s/it]epoch 1 loss 2.39141:  25%|██▌       | 7/28 [00:26<01:23,  3.99s/it]epoch 1 loss 2.35605:  25%|██▌       | 7/28 [00:27<01:23,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5434[0m
[32m  eval_f1 = 0.1904[0m
[32m  eval_mcc = 0.514[0m
[32m  eval_precision = 0.2485[0m
[32m  eval_recall = 0.1826[0m
[32m  ********************[0m
[32m  Best f1:0.1904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35605:  29%|██▊       | 8/28 [00:37<02:01,  6.07s/it]epoch 1 loss 2.32669:  29%|██▊       | 8/28 [00:37<02:01,  6.07s/it]epoch 1 loss 2.32669:  32%|███▏      | 9/28 [00:37<01:21,  4.31s/it]epoch 1 loss 2.30979:  32%|███▏      | 9/28 [00:38<01:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.549[0m
[32m  eval_f1 = 0.1975[0m
[32m  eval_mcc = 0.5203[0m
[32m  eval_precision = 0.2525[0m
[32m  eval_recall = 0.1878[0m
[32m  ********************[0m
[32m  Best f1:0.1975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30979:  36%|███▌      | 10/28 [00:48<01:52,  6.27s/it]epoch 1 loss 2.28474:  36%|███▌      | 10/28 [00:48<01:52,  6.27s/it]epoch 1 loss 2.28474:  39%|███▉      | 11/28 [00:48<01:16,  4.48s/it]epoch 1 loss 2.26188:  39%|███▉      | 11/28 [00:49<01:16,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5575[0m
[32m  eval_f1 = 0.2035[0m
[32m  eval_mcc = 0.5305[0m
[32m  eval_precision = 0.2762[0m
[32m  eval_recall = 0.1911[0m
[32m  ********************[0m
[32m  Best f1:0.2035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26188:  43%|████▎     | 12/28 [00:57<01:28,  5.56s/it]epoch 1 loss 2.23331:  43%|████▎     | 12/28 [00:57<01:28,  5.56s/it]epoch 1 loss 2.23331:  46%|████▋     | 13/28 [00:57<01:00,  4.01s/it]epoch 1 loss 2.22088:  46%|████▋     | 13/28 [00:57<01:00,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5546[0m
[32m  eval_f1 = 0.2036[0m
[32m  eval_mcc = 0.5299[0m
[32m  eval_precision = 0.2775[0m
[32m  eval_recall = 0.1915[0m
[32m  ********************[0m
[32m  Best f1:0.2036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.22088:  50%|█████     | 14/28 [01:02<01:00,  4.33s/it]epoch 1 loss 2.19484:  50%|█████     | 14/28 [01:02<01:00,  4.33s/it]epoch 1 loss 2.19484:  54%|█████▎    | 15/28 [01:02<00:40,  3.15s/it]epoch 1 loss 2.17716:  54%|█████▎    | 15/28 [01:03<00:40,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5588[0m
[32m  eval_f1 = 0.2064[0m
[32m  eval_mcc = 0.5364[0m
[32m  eval_precision = 0.2794[0m
[32m  eval_recall = 0.1953[0m
[32m  ********************[0m
[32m  Best f1:0.2064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17716:  57%|█████▋    | 16/28 [01:12<01:02,  5.22s/it]epoch 1 loss 2.16:  57%|█████▋    | 16/28 [01:13<01:02,  5.22s/it]   epoch 1 loss 2.16:  61%|██████    | 17/28 [01:13<00:41,  3.78s/it]epoch 1 loss 2.14565:  61%|██████    | 17/28 [01:13<00:41,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5706[0m
[32m  eval_f1 = 0.2141[0m
[32m  eval_mcc = 0.5489[0m
[32m  eval_precision = 0.2854[0m
[32m  eval_recall = 0.2028[0m
[32m  ********************[0m
[32m  Best f1:0.2141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14565:  64%|██████▍   | 18/28 [01:24<00:58,  5.86s/it]epoch 1 loss 2.12642:  64%|██████▍   | 18/28 [01:24<00:58,  5.86s/it]epoch 1 loss 2.12642:  68%|██████▊   | 19/28 [01:24<00:38,  4.23s/it]epoch 1 loss 2.10883:  68%|██████▊   | 19/28 [01:24<00:38,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5847[0m
[32m  eval_f1 = 0.2209[0m
[32m  eval_mcc = 0.5621[0m
[32m  eval_precision = 0.2723[0m
[32m  eval_recall = 0.2093[0m
[32m  ********************[0m
[32m  Best f1:0.2209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10883:  71%|███████▏  | 20/28 [01:30<00:37,  4.64s/it]epoch 1 loss 2.09401:  71%|███████▏  | 20/28 [01:30<00:37,  4.64s/it]epoch 1 loss 2.09401:  75%|███████▌  | 21/28 [01:30<00:23,  3.36s/it]epoch 1 loss 2.08335:  75%|███████▌  | 21/28 [01:30<00:23,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5894[0m
[32m  eval_f1 = 0.2242[0m
[32m  eval_mcc = 0.5661[0m
[32m  eval_precision = 0.2814[0m
[32m  eval_recall = 0.213[0m
[32m  ********************[0m
[32m  Best f1:0.2242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08335:  79%|███████▊  | 22/28 [01:36<00:25,  4.24s/it]epoch 1 loss 2.06854:  79%|███████▊  | 22/28 [01:37<00:25,  4.24s/it]epoch 1 loss 2.06854:  82%|████████▏ | 23/28 [01:37<00:15,  3.09s/it]epoch 1 loss 2.0537:  82%|████████▏ | 23/28 [01:37<00:15,  3.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5919[0m
[32m  eval_f1 = 0.2284[0m
[32m  eval_mcc = 0.5688[0m
[32m  eval_precision = 0.293[0m
[32m  eval_recall = 0.2165[0m
[32m  ********************[0m
[32m  Best f1:0.2284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0537:  86%|████████▌ | 24/28 [01:45<00:19,  4.77s/it]epoch 1 loss 2.04627:  86%|████████▌ | 24/28 [01:46<00:19,  4.77s/it]epoch 1 loss 2.04627:  89%|████████▉ | 25/28 [01:46<00:10,  3.46s/it]epoch 1 loss 2.03699:  89%|████████▉ | 25/28 [01:46<00:10,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5936[0m
[32m  eval_f1 = 0.2297[0m
[32m  eval_mcc = 0.5702[0m
[32m  eval_precision = 0.2915[0m
[32m  eval_recall = 0.2183[0m
[32m  ********************[0m
[32m  Best f1:0.2297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03699:  93%|█████████▎| 26/28 [01:57<00:11,  5.73s/it]epoch 1 loss 2.02177:  93%|█████████▎| 26/28 [01:57<00:11,  5.73s/it]epoch 1 loss 2.02177:  96%|█████████▋| 27/28 [01:57<00:04,  4.14s/it]epoch 1 loss 2.01718:  96%|█████████▋| 27/28 [01:57<00:04,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5962[0m
[32m  eval_f1 = 0.233[0m
[32m  eval_mcc = 0.5728[0m
[32m  eval_precision = 0.3119[0m
[32m  eval_recall = 0.2209[0m
[32m  ********************[0m
[32m  Best f1:0.233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01718: 100%|██████████| 28/28 [02:08<00:00,  6.06s/it]epoch 1 loss 2.01718: 100%|██████████| 28/28 [02:08<00:00,  4.58s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.637:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.637:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.65727:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5974[0m
[32m  eval_f1 = 0.2352[0m
[32m  eval_mcc = 0.5738[0m
[32m  eval_precision = 0.3517[0m
[32m  eval_recall = 0.223[0m
[32m  ********************[0m
[32m  Best f1:0.2352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65727:   7%|▋         | 2/28 [00:11<02:54,  6.72s/it]epoch 2 loss 1.64345:   7%|▋         | 2/28 [00:11<02:54,  6.72s/it]epoch 2 loss 1.64345:  11%|█         | 3/28 [00:11<01:36,  3.84s/it]epoch 2 loss 1.6178:  11%|█         | 3/28 [00:12<01:36,  3.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5971[0m
[32m  eval_f1 = 0.2377[0m
[32m  eval_mcc = 0.5737[0m
[32m  eval_precision = 0.3614[0m
[32m  eval_recall = 0.2254[0m
[32m  ********************[0m
[32m  Best f1:0.2377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.6178:  14%|█▍        | 4/28 [00:17<01:43,  4.32s/it]epoch 2 loss 1.6374:  14%|█▍        | 4/28 [00:17<01:43,  4.32s/it]epoch 2 loss 1.6374:  18%|█▊        | 5/28 [00:17<01:06,  2.91s/it]epoch 2 loss 1.63656:  18%|█▊        | 5/28 [00:17<01:06,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6021[0m
[32m  eval_f1 = 0.2422[0m
[32m  eval_mcc = 0.5793[0m
[32m  eval_precision = 0.3489[0m
[32m  eval_recall = 0.2287[0m
[32m  ********************[0m
[32m  Best f1:0.2422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63656:  21%|██▏       | 6/28 [00:28<02:06,  5.77s/it]epoch 2 loss 1.6368:  21%|██▏       | 6/28 [00:29<02:06,  5.77s/it] epoch 2 loss 1.6368:  25%|██▌       | 7/28 [00:29<01:24,  4.02s/it]epoch 2 loss 1.61806:  25%|██▌       | 7/28 [00:29<01:24,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2502[0m
[32m  eval_mcc = 0.5847[0m
[32m  eval_precision = 0.3744[0m
[32m  eval_recall = 0.2331[0m
[32m  ********************[0m
[32m  Best f1:0.2502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61806:  29%|██▊       | 8/28 [00:39<02:00,  6.03s/it]epoch 2 loss 1.62746:  29%|██▊       | 8/28 [00:39<02:00,  6.03s/it]epoch 2 loss 1.62746:  32%|███▏      | 9/28 [00:39<01:21,  4.28s/it]epoch 2 loss 1.64154:  32%|███▏      | 9/28 [00:40<01:21,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6083[0m
[32m  eval_f1 = 0.2614[0m
[32m  eval_mcc = 0.5878[0m
[32m  eval_precision = 0.3662[0m
[32m  eval_recall = 0.2434[0m
[32m  ********************[0m
[32m  Best f1:0.2614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64154:  36%|███▌      | 10/28 [00:50<01:51,  6.21s/it]epoch 2 loss 1.63754:  36%|███▌      | 10/28 [00:50<01:51,  6.21s/it]epoch 2 loss 1.63754:  39%|███▉      | 11/28 [00:50<01:15,  4.44s/it]epoch 2 loss 1.64407:  39%|███▉      | 11/28 [00:51<01:15,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2654[0m
[32m  eval_mcc = 0.5888[0m
[32m  eval_precision = 0.3796[0m
[32m  eval_recall = 0.2463[0m
[32m  ********************[0m
[32m  Best f1:0.2654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64407:  43%|████▎     | 12/28 [01:01<01:40,  6.27s/it]epoch 2 loss 1.6301:  43%|████▎     | 12/28 [01:01<01:40,  6.27s/it] epoch 2 loss 1.6301:  46%|████▋     | 13/28 [01:01<01:07,  4.50s/it]epoch 2 loss 1.63405:  46%|████▋     | 13/28 [01:02<01:07,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6107[0m
[32m  eval_f1 = 0.2707[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3831[0m
[32m  eval_recall = 0.2501[0m
[32m  ********************[0m
[32m  Best f1:0.2707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63405:  50%|█████     | 14/28 [01:08<01:14,  5.30s/it]epoch 2 loss 1.62216:  50%|█████     | 14/28 [01:09<01:14,  5.30s/it]epoch 2 loss 1.62216:  54%|█████▎    | 15/28 [01:09<00:49,  3.83s/it]epoch 2 loss 1.62246:  54%|█████▎    | 15/28 [01:09<00:49,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6131[0m
[32m  eval_f1 = 0.2762[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.3826[0m
[32m  eval_recall = 0.2546[0m
[32m  ********************[0m
[32m  Best f1:0.2762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62246:  57%|█████▋    | 16/28 [01:18<01:06,  5.58s/it]epoch 2 loss 1.62165:  57%|█████▋    | 16/28 [01:19<01:06,  5.58s/it]epoch 2 loss 1.62165:  61%|██████    | 17/28 [01:19<00:44,  4.03s/it]epoch 2 loss 1.61883:  61%|██████    | 17/28 [01:19<00:44,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.5927[0m
[32m  eval_precision = 0.3947[0m
[32m  eval_recall = 0.2581[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61883:  64%|██████▍   | 18/28 [01:27<00:51,  5.12s/it]epoch 2 loss 1.61528:  64%|██████▍   | 18/28 [01:27<00:51,  5.12s/it]epoch 2 loss 1.61528:  68%|██████▊   | 19/28 [01:27<00:33,  3.70s/it]epoch 2 loss 1.61089:  68%|██████▊   | 19/28 [01:27<00:33,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2853[0m
[32m  eval_mcc = 0.5933[0m
[32m  eval_precision = 0.3947[0m
[32m  eval_recall = 0.2624[0m
[32m  ********************[0m
[32m  Best f1:0.2853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61089:  71%|███████▏  | 20/28 [01:37<00:45,  5.73s/it]epoch 2 loss 1.60071:  71%|███████▏  | 20/28 [01:38<00:45,  5.73s/it]epoch 2 loss 1.60071:  75%|███████▌  | 21/28 [01:38<00:28,  4.13s/it]epoch 2 loss 1.60123:  75%|███████▌  | 21/28 [01:38<00:28,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.619[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.5966[0m
[32m  eval_precision = 0.4287[0m
[32m  eval_recall = 0.2657[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60123:  79%|███████▊  | 22/28 [01:46<00:31,  5.21s/it]epoch 2 loss 1.58929:  79%|███████▊  | 22/28 [01:46<00:31,  5.21s/it]epoch 2 loss 1.58929:  82%|████████▏ | 23/28 [01:46<00:18,  3.78s/it]epoch 2 loss 1.58392:  82%|████████▏ | 23/28 [01:46<00:18,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6195[0m
[32m  eval_f1 = 0.2898[0m
[32m  eval_mcc = 0.5979[0m
[32m  eval_precision = 0.4167[0m
[32m  eval_recall = 0.2652[0m
[32m  ********************[0m
[32m  Best f1:0.2898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58392:  86%|████████▌ | 24/28 [01:56<00:22,  5.51s/it]epoch 2 loss 1.57913:  86%|████████▌ | 24/28 [01:56<00:22,  5.51s/it]epoch 2 loss 1.57913:  89%|████████▉ | 25/28 [01:56<00:11,  3.98s/it]epoch 2 loss 1.57554:  89%|████████▉ | 25/28 [01:56<00:11,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2916[0m
[32m  eval_mcc = 0.6008[0m
[32m  eval_precision = 0.4205[0m
[32m  eval_recall = 0.2662[0m
[32m  ********************[0m
[32m  Best f1:0.2916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57554:  93%|█████████▎| 26/28 [02:04<00:10,  5.25s/it]epoch 2 loss 1.56999:  93%|█████████▎| 26/28 [02:05<00:10,  5.25s/it]epoch 2 loss 1.56999:  96%|█████████▋| 27/28 [02:05<00:03,  3.80s/it]epoch 2 loss 1.56745:  96%|█████████▋| 27/28 [02:05<00:03,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.6024[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2675[0m
[32m  ********************[0m
[32m  Best f1:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56745: 100%|██████████| 28/28 [02:15<00:00,  5.70s/it]epoch 2 loss 1.56745: 100%|██████████| 28/28 [02:15<00:00,  4.83s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.55606:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.55606:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.47475:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6239[0m
[32m  eval_f1 = 0.3046[0m
[32m  eval_mcc = 0.6034[0m
[32m  eval_precision = 0.4188[0m
[32m  eval_recall = 0.2776[0m
[32m  ********************[0m
[32m  Best f1:0.3046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47475:   7%|▋         | 2/28 [00:08<02:05,  4.84s/it]epoch 3 loss 1.47762:   7%|▋         | 2/28 [00:08<02:05,  4.84s/it]epoch 3 loss 1.47762:  11%|█         | 3/28 [00:08<01:10,  2.82s/it]epoch 3 loss 1.46363:  11%|█         | 3/28 [00:09<01:10,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.3098[0m
[32m  eval_mcc = 0.6034[0m
[32m  eval_precision = 0.4173[0m
[32m  eval_recall = 0.2855[0m
[32m  ********************[0m
[32m  Best f1:0.3098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.46363:  14%|█▍        | 4/28 [00:13<01:28,  3.70s/it]epoch 3 loss 1.46292:  14%|█▍        | 4/28 [00:14<01:28,  3.70s/it]epoch 3 loss 1.46292:  18%|█▊        | 5/28 [00:14<00:57,  2.51s/it]epoch 3 loss 1.44925:  18%|█▊        | 5/28 [00:14<00:57,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.3104[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.4229[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.3104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44925:  21%|██▏       | 6/28 [00:18<01:11,  3.25s/it]epoch 3 loss 1.44797:  21%|██▏       | 6/28 [00:19<01:11,  3.25s/it]epoch 3 loss 1.44797:  25%|██▌       | 7/28 [00:19<00:48,  2.32s/it]epoch 3 loss 1.44107:  25%|██▌       | 7/28 [00:19<00:48,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6268[0m
[32m  eval_f1 = 0.3118[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.4215[0m
[32m  eval_recall = 0.2885[0m
[32m  ********************[0m
[32m  Best f1:0.3118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44107:  29%|██▊       | 8/28 [00:28<01:32,  4.63s/it]epoch 3 loss 1.46305:  29%|██▊       | 8/28 [00:29<01:32,  4.63s/it]epoch 3 loss 1.46305:  32%|███▏      | 9/28 [00:29<01:02,  3.31s/it]epoch 3 loss 1.46855:  32%|███▏      | 9/28 [00:29<01:02,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.3146[0m
[32m  eval_mcc = 0.6066[0m
[32m  eval_precision = 0.4331[0m
[32m  eval_recall = 0.2919[0m
[32m  ********************[0m
[32m  Best f1:0.3146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46855:  36%|███▌      | 10/28 [00:35<01:15,  4.21s/it]epoch 3 loss 1.4754:  36%|███▌      | 10/28 [00:35<01:15,  4.21s/it] epoch 3 loss 1.4754:  39%|███▉      | 11/28 [00:35<00:51,  3.05s/it]epoch 3 loss 1.46964:  39%|███▉      | 11/28 [00:36<00:51,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.318[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46964:  43%|████▎     | 12/28 [00:41<01:02,  3.91s/it]epoch 3 loss 1.47061:  43%|████▎     | 12/28 [00:42<01:02,  3.91s/it]epoch 3 loss 1.47061:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it]epoch 3 loss 1.47066:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.3205[0m
[32m  eval_mcc = 0.6102[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.3205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47066:  50%|█████     | 14/28 [00:48<00:53,  3.80s/it]epoch 3 loss 1.46954:  50%|█████     | 14/28 [00:48<00:53,  3.80s/it]epoch 3 loss 1.46954:  54%|█████▎    | 15/28 [00:48<00:36,  2.78s/it]epoch 3 loss 1.47144:  54%|█████▎    | 15/28 [00:49<00:36,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.4481[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47144:  57%|█████▋    | 16/28 [00:56<00:52,  4.42s/it]epoch 3 loss 1.46454:  57%|█████▋    | 16/28 [00:57<00:52,  4.42s/it]epoch 3 loss 1.46454:  61%|██████    | 17/28 [00:57<00:35,  3.22s/it]epoch 3 loss 1.46125:  61%|██████    | 17/28 [00:57<00:35,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46125:  64%|██████▍   | 18/28 [01:09<00:58,  5.85s/it]epoch 3 loss 1.45775:  64%|██████▍   | 18/28 [01:09<00:58,  5.85s/it]epoch 3 loss 1.45775:  68%|██████▊   | 19/28 [01:09<00:37,  4.22s/it]epoch 3 loss 1.45143:  68%|██████▊   | 19/28 [01:10<00:37,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.634[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45143:  71%|███████▏  | 20/28 [01:22<00:54,  6.82s/it]epoch 3 loss 1.45005:  71%|███████▏  | 20/28 [01:23<00:54,  6.82s/it]epoch 3 loss 1.45005:  75%|███████▌  | 21/28 [01:23<00:34,  4.90s/it]epoch 3 loss 1.44935:  75%|███████▌  | 21/28 [01:23<00:34,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6348[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.4501[0m
[32m  eval_recall = 0.2999[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44935:  79%|███████▊  | 22/28 [01:35<00:42,  7.13s/it]epoch 3 loss 1.45538:  79%|███████▊  | 22/28 [01:35<00:42,  7.13s/it]epoch 3 loss 1.45538:  82%|████████▏ | 23/28 [01:35<00:25,  5.11s/it]epoch 3 loss 1.45605:  82%|████████▏ | 23/28 [01:36<00:25,  5.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45605:  86%|████████▌ | 24/28 [01:45<00:25,  6.50s/it]epoch 3 loss 1.45516:  86%|████████▌ | 24/28 [01:45<00:25,  6.50s/it]epoch 3 loss 1.45516:  89%|████████▉ | 25/28 [01:45<00:14,  4.67s/it]epoch 3 loss 1.45359:  89%|████████▉ | 25/28 [01:46<00:14,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45359:  93%|█████████▎| 26/28 [01:57<00:13,  6.64s/it]epoch 3 loss 1.45381:  93%|█████████▎| 26/28 [01:57<00:13,  6.64s/it]epoch 3 loss 1.45381:  96%|█████████▋| 27/28 [01:57<00:04,  4.78s/it]epoch 3 loss 1.45568:  96%|█████████▋| 27/28 [01:57<00:04,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3023[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45568: 100%|██████████| 28/28 [02:05<00:00,  5.83s/it]epoch 3 loss 1.45568: 100%|██████████| 28/28 [02:05<00:00,  4.49s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31324:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31324:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.38698:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.3304[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.4553[0m
[32m  eval_recall = 0.3015[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38698:   7%|▋         | 2/28 [00:07<01:55,  4.45s/it]epoch 4 loss 1.3866:   7%|▋         | 2/28 [00:08<01:55,  4.45s/it] epoch 4 loss 1.3866:  11%|█         | 3/28 [00:08<01:05,  2.61s/it]epoch 4 loss 1.39893:  11%|█         | 3/28 [00:08<01:05,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39893:  14%|█▍        | 4/28 [00:15<01:48,  4.52s/it]epoch 4 loss 1.40447:  14%|█▍        | 4/28 [00:15<01:48,  4.52s/it]epoch 4 loss 1.40447:  18%|█▊        | 5/28 [00:15<01:09,  3.04s/it]epoch 4 loss 1.41597:  18%|█▊        | 5/28 [00:16<01:09,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.6175[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3014[0m

epoch 4 loss 1.41597:  21%|██▏       | 6/28 [00:19<01:12,  3.29s/it]epoch 4 loss 1.43374:  21%|██▏       | 6/28 [00:20<01:12,  3.29s/it]epoch 4 loss 1.43374:  25%|██▌       | 7/28 [00:20<00:49,  2.35s/it]epoch 4 loss 1.42543:  25%|██▌       | 7/28 [00:20<00:49,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.3314[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.4696[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.3314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42543:  29%|██▊       | 8/28 [00:30<01:36,  4.82s/it]epoch 4 loss 1.41504:  29%|██▊       | 8/28 [00:30<01:36,  4.82s/it]epoch 4 loss 1.41504:  32%|███▏      | 9/28 [00:30<01:05,  3.45s/it]epoch 4 loss 1.42605:  32%|███▏      | 9/28 [00:31<01:05,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.3329[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.4688[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.3329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42605:  36%|███▌      | 10/28 [00:41<01:42,  5.71s/it]epoch 4 loss 1.42621:  36%|███▌      | 10/28 [00:41<01:42,  5.71s/it]epoch 4 loss 1.42621:  39%|███▉      | 11/28 [00:41<01:09,  4.09s/it]epoch 4 loss 1.42443:  39%|███▉      | 11/28 [00:42<01:09,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42443:  43%|████▎     | 12/28 [00:49<01:23,  5.22s/it]epoch 4 loss 1.41857:  43%|████▎     | 12/28 [00:50<01:23,  5.22s/it]epoch 4 loss 1.41857:  46%|████▋     | 13/28 [00:50<00:56,  3.77s/it]epoch 4 loss 1.43047:  46%|████▋     | 13/28 [00:50<00:56,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.3342[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.43047:  50%|█████     | 14/28 [00:55<00:58,  4.16s/it]epoch 4 loss 1.43023:  50%|█████     | 14/28 [00:55<00:58,  4.16s/it]epoch 4 loss 1.43023:  54%|█████▎    | 15/28 [00:55<00:39,  3.02s/it]epoch 4 loss 1.4254:  54%|█████▎    | 15/28 [00:55<00:39,  3.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4254:  57%|█████▋    | 16/28 [01:06<01:03,  5.28s/it]epoch 4 loss 1.41805:  57%|█████▋    | 16/28 [01:06<01:03,  5.28s/it]epoch 4 loss 1.41805:  61%|██████    | 17/28 [01:06<00:41,  3.82s/it]epoch 4 loss 1.41376:  61%|██████    | 17/28 [01:06<00:41,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4687[0m
[32m  eval_recall = 0.3078[0m
[32m  ********************[0m
[32m  Best f1:0.3353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41376:  64%|██████▍   | 18/28 [01:11<00:41,  4.14s/it]epoch 4 loss 1.41304:  64%|██████▍   | 18/28 [01:11<00:41,  4.14s/it]epoch 4 loss 1.41304:  68%|██████▊   | 19/28 [01:11<00:27,  3.02s/it]epoch 4 loss 1.41206:  68%|██████▊   | 19/28 [01:12<00:27,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3354[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.3354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41206:  71%|███████▏  | 20/28 [01:19<00:35,  4.39s/it]epoch 4 loss 1.41674:  71%|███████▏  | 20/28 [01:19<00:35,  4.39s/it]epoch 4 loss 1.41674:  75%|███████▌  | 21/28 [01:19<00:22,  3.20s/it]epoch 4 loss 1.42045:  75%|███████▌  | 21/28 [01:20<00:22,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42045:  79%|███████▊  | 22/28 [01:24<00:22,  3.72s/it]epoch 4 loss 1.41509:  79%|███████▊  | 22/28 [01:25<00:22,  3.72s/it]epoch 4 loss 1.41509:  82%|████████▏ | 23/28 [01:25<00:13,  2.73s/it]epoch 4 loss 1.4131:  82%|████████▏ | 23/28 [01:25<00:13,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3082[0m

epoch 4 loss 1.4131:  86%|████████▌ | 24/28 [01:30<00:13,  3.44s/it]epoch 4 loss 1.41144:  86%|████████▌ | 24/28 [01:30<00:13,  3.44s/it]epoch 4 loss 1.41144:  89%|████████▉ | 25/28 [01:30<00:07,  2.53s/it]epoch 4 loss 1.41266:  89%|████████▉ | 25/28 [01:31<00:07,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.468[0m
[32m  eval_recall = 0.3083[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41266:  93%|█████████▎| 26/28 [01:35<00:06,  3.26s/it]epoch 4 loss 1.41159:  93%|█████████▎| 26/28 [01:36<00:06,  3.26s/it]epoch 4 loss 1.41159:  96%|█████████▋| 27/28 [01:36<00:02,  2.40s/it]epoch 4 loss 1.41546:  96%|█████████▋| 27/28 [01:36<00:02,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4682[0m
[32m  eval_recall = 0.3083[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41546: 100%|██████████| 28/28 [01:40<00:00,  3.02s/it]epoch 4 loss 1.41546: 100%|██████████| 28/28 [01:40<00:00,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4682[0m
[32m  eval_recall = 0.3083[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6263[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.6059[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.2757[0m

