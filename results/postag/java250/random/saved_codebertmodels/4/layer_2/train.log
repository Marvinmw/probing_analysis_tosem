[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_2', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20456:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20456:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.18791:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0026[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0028[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.18791:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.17913:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.17913:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.1726:  11%|█         | 3/28 [00:05<00:43,  1.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0053[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = -0.0036[0m
[32m  eval_precision = 0.0064[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.1726:  14%|█▍        | 4/28 [00:10<01:13,  3.04s/it]epoch 0 loss 5.1499:  14%|█▍        | 4/28 [00:10<01:13,  3.04s/it]epoch 0 loss 5.1499:  18%|█▊        | 5/28 [00:10<00:48,  2.09s/it]epoch 0 loss 5.12952:  18%|█▊        | 5/28 [00:11<00:48,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0215[0m
[32m  eval_f1 = 0.0089[0m
[32m  eval_mcc = 0.0036[0m
[32m  eval_precision = 0.0134[0m
[32m  eval_recall = 0.0113[0m
[32m  ********************[0m
[32m  Best f1:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12952:  21%|██▏       | 6/28 [00:18<01:26,  3.91s/it]epoch 0 loss 5.09527:  21%|██▏       | 6/28 [00:18<01:26,  3.91s/it]epoch 0 loss 5.09527:  25%|██▌       | 7/28 [00:18<00:58,  2.77s/it]epoch 0 loss 5.05557:  25%|██▌       | 7/28 [00:19<00:58,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0479[0m
[32m  eval_f1 = 0.0149[0m
[32m  eval_mcc = 0.014[0m
[32m  eval_precision = 0.0154[0m
[32m  eval_recall = 0.0197[0m
[32m  ********************[0m
[32m  Best f1:0.0149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05557:  29%|██▊       | 8/28 [00:27<01:31,  4.57s/it]epoch 0 loss 5.00966:  29%|██▊       | 8/28 [00:27<01:31,  4.57s/it]epoch 0 loss 5.00966:  32%|███▏      | 9/28 [00:27<01:02,  3.27s/it]epoch 0 loss 4.96522:  32%|███▏      | 9/28 [00:28<01:02,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0774[0m
[32m  eval_f1 = 0.0225[0m
[32m  eval_mcc = 0.0314[0m
[32m  eval_precision = 0.0249[0m
[32m  eval_recall = 0.0268[0m
[32m  ********************[0m
[32m  Best f1:0.0225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96522:  36%|███▌      | 10/28 [00:34<01:16,  4.28s/it]epoch 0 loss 4.91312:  36%|███▌      | 10/28 [00:34<01:16,  4.28s/it]epoch 0 loss 4.91312:  39%|███▉      | 11/28 [00:34<00:52,  3.09s/it]epoch 0 loss 4.85495:  39%|███▉      | 11/28 [00:35<00:52,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1014[0m
[32m  eval_f1 = 0.024[0m
[32m  eval_mcc = 0.05[0m
[32m  eval_precision = 0.0335[0m
[32m  eval_recall = 0.0278[0m
[32m  ********************[0m
[32m  Best f1:0.024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.05[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85495:  43%|████▎     | 12/28 [00:41<01:06,  4.13s/it]epoch 0 loss 4.79243:  43%|████▎     | 12/28 [00:41<01:06,  4.13s/it]epoch 0 loss 4.79243:  46%|████▋     | 13/28 [00:41<00:45,  3.00s/it]epoch 0 loss 4.72687:  46%|████▋     | 13/28 [00:41<00:45,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1377[0m
[32m  eval_f1 = 0.0317[0m
[32m  eval_mcc = 0.0847[0m
[32m  eval_precision = 0.0546[0m
[32m  eval_recall = 0.0354[0m
[32m  ********************[0m
[32m  Best f1:0.0317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72687:  50%|█████     | 14/28 [00:51<01:10,  5.04s/it]epoch 0 loss 4.66264:  50%|█████     | 14/28 [00:51<01:10,  5.04s/it]epoch 0 loss 4.66264:  54%|█████▎    | 15/28 [00:51<00:47,  3.65s/it]epoch 0 loss 4.59461:  54%|█████▎    | 15/28 [00:52<00:47,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1859[0m
[32m  eval_f1 = 0.042[0m
[32m  eval_mcc = 0.133[0m
[32m  eval_precision = 0.0734[0m
[32m  eval_recall = 0.0441[0m
[32m  ********************[0m
[32m  Best f1:0.042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59461:  57%|█████▋    | 16/28 [00:59<00:57,  4.81s/it]epoch 0 loss 4.52332:  57%|█████▋    | 16/28 [00:59<00:57,  4.81s/it]epoch 0 loss 4.52332:  61%|██████    | 17/28 [00:59<00:38,  3.49s/it]epoch 0 loss 4.45844:  61%|██████    | 17/28 [01:00<00:38,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2567[0m
[32m  eval_f1 = 0.0639[0m
[32m  eval_mcc = 0.207[0m
[32m  eval_precision = 0.1041[0m
[32m  eval_recall = 0.063[0m
[32m  ********************[0m
[32m  Best f1:0.0639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45844:  64%|██████▍   | 18/28 [01:05<00:42,  4.28s/it]epoch 0 loss 4.39062:  64%|██████▍   | 18/28 [01:06<00:42,  4.28s/it]epoch 0 loss 4.39062:  68%|██████▊   | 19/28 [01:06<00:28,  3.12s/it]epoch 0 loss 4.33148:  68%|██████▊   | 19/28 [01:06<00:28,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3173[0m
[32m  eval_f1 = 0.0763[0m
[32m  eval_mcc = 0.27[0m
[32m  eval_precision = 0.1198[0m
[32m  eval_recall = 0.075[0m
[32m  ********************[0m
[32m  Best f1:0.0763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.27[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33148:  71%|███████▏  | 20/28 [01:12<00:32,  4.03s/it]epoch 0 loss 4.26155:  71%|███████▏  | 20/28 [01:12<00:32,  4.03s/it]epoch 0 loss 4.26155:  75%|███████▌  | 21/28 [01:12<00:20,  2.94s/it]epoch 0 loss 4.20435:  75%|███████▌  | 21/28 [01:13<00:20,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3728[0m
[32m  eval_f1 = 0.1025[0m
[32m  eval_mcc = 0.3296[0m
[32m  eval_precision = 0.1556[0m
[32m  eval_recall = 0.0963[0m
[32m  ********************[0m
[32m  Best f1:0.1025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20435:  79%|███████▊  | 22/28 [01:18<00:22,  3.73s/it]epoch 0 loss 4.13816:  79%|███████▊  | 22/28 [01:18<00:22,  3.73s/it]epoch 0 loss 4.13816:  82%|████████▏ | 23/28 [01:18<00:13,  2.74s/it]epoch 0 loss 4.0721:  82%|████████▏ | 23/28 [01:19<00:13,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4084[0m
[32m  eval_f1 = 0.1244[0m
[32m  eval_mcc = 0.368[0m
[32m  eval_precision = 0.2012[0m
[32m  eval_recall = 0.1134[0m
[32m  ********************[0m
[32m  Best f1:0.1244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0721:  86%|████████▌ | 24/28 [01:24<00:14,  3.58s/it]epoch 0 loss 4.01367:  86%|████████▌ | 24/28 [01:24<00:14,  3.58s/it]epoch 0 loss 4.01367:  89%|████████▉ | 25/28 [01:24<00:07,  2.63s/it]epoch 0 loss 3.95315:  89%|████████▉ | 25/28 [01:25<00:07,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.455[0m
[32m  eval_f1 = 0.146[0m
[32m  eval_mcc = 0.4204[0m
[32m  eval_precision = 0.2105[0m
[32m  eval_recall = 0.1356[0m
[32m  ********************[0m
[32m  Best f1:0.146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.95315:  93%|█████████▎| 26/28 [01:30<00:07,  3.67s/it]epoch 0 loss 3.89246:  93%|█████████▎| 26/28 [01:31<00:07,  3.67s/it]epoch 0 loss 3.89246:  96%|█████████▋| 27/28 [01:31<00:02,  2.69s/it]epoch 0 loss 3.83039:  96%|█████████▋| 27/28 [01:31<00:02,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4867[0m
[32m  eval_f1 = 0.1621[0m
[32m  eval_mcc = 0.4582[0m
[32m  eval_precision = 0.2212[0m
[32m  eval_recall = 0.1523[0m
[32m  ********************[0m
[32m  Best f1:0.1621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.83039: 100%|██████████| 28/28 [01:37<00:00,  3.67s/it]epoch 0 loss 3.83039: 100%|██████████| 28/28 [01:37<00:00,  3.47s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.15707:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.15707:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.05241:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5131[0m
[32m  eval_f1 = 0.1758[0m
[32m  eval_mcc = 0.49[0m
[32m  eval_precision = 0.2496[0m
[32m  eval_recall = 0.1694[0m
[32m  ********************[0m
[32m  Best f1:0.1758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.49[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05241:   7%|▋         | 2/28 [00:06<01:42,  3.96s/it]epoch 1 loss 2.01821:   7%|▋         | 2/28 [00:07<01:42,  3.96s/it]epoch 1 loss 2.01821:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 1 loss 2.01358:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5641[0m
[32m  eval_f1 = 0.2021[0m
[32m  eval_mcc = 0.5427[0m
[32m  eval_precision = 0.2533[0m
[32m  eval_recall = 0.195[0m
[32m  ********************[0m
[32m  Best f1:0.2021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01358:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 1 loss 2.01387:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 1 loss 2.01387:  18%|█▊        | 5/28 [00:13<00:59,  2.61s/it]epoch 1 loss 2.00535:  18%|█▊        | 5/28 [00:14<00:59,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5816[0m
[32m  eval_f1 = 0.211[0m
[32m  eval_mcc = 0.5576[0m
[32m  eval_precision = 0.2465[0m
[32m  eval_recall = 0.2071[0m
[32m  ********************[0m
[32m  Best f1:0.211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00535:  21%|██▏       | 6/28 [00:23<01:52,  5.10s/it]epoch 1 loss 1.98964:  21%|██▏       | 6/28 [00:24<01:52,  5.10s/it]epoch 1 loss 1.98964:  25%|██▌       | 7/28 [00:24<01:14,  3.57s/it]epoch 1 loss 1.95589:  25%|██▌       | 7/28 [00:24<01:14,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5898[0m
[32m  eval_f1 = 0.2135[0m
[32m  eval_mcc = 0.5646[0m
[32m  eval_precision = 0.2661[0m
[32m  eval_recall = 0.2116[0m
[32m  ********************[0m
[32m  Best f1:0.2135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95589:  29%|██▊       | 8/28 [00:33<01:49,  5.47s/it]epoch 1 loss 1.9315:  29%|██▊       | 8/28 [00:34<01:49,  5.47s/it] epoch 1 loss 1.9315:  32%|███▏      | 9/28 [00:34<01:13,  3.89s/it]epoch 1 loss 1.91749:  32%|███▏      | 9/28 [00:34<01:13,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.594[0m
[32m  eval_f1 = 0.2271[0m
[32m  eval_mcc = 0.5688[0m
[32m  eval_precision = 0.2837[0m
[32m  eval_recall = 0.221[0m
[32m  ********************[0m
[32m  Best f1:0.2271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91749:  36%|███▌      | 10/28 [00:43<01:41,  5.64s/it]epoch 1 loss 1.89503:  36%|███▌      | 10/28 [00:44<01:41,  5.64s/it]epoch 1 loss 1.89503:  39%|███▉      | 11/28 [00:44<01:08,  4.04s/it]epoch 1 loss 1.8746:  39%|███▉      | 11/28 [00:44<01:08,  4.04s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5994[0m
[32m  eval_f1 = 0.237[0m
[32m  eval_mcc = 0.5748[0m
[32m  eval_precision = 0.312[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8746:  43%|████▎     | 12/28 [00:53<01:32,  5.78s/it]epoch 1 loss 1.85066:  43%|████▎     | 12/28 [00:54<01:32,  5.78s/it]epoch 1 loss 1.85066:  46%|████▋     | 13/28 [00:54<01:02,  4.15s/it]epoch 1 loss 1.84272:  46%|████▋     | 13/28 [00:54<01:02,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.2442[0m
[32m  eval_mcc = 0.5784[0m
[32m  eval_precision = 0.3206[0m
[32m  eval_recall = 0.2324[0m
[32m  ********************[0m
[32m  Best f1:0.2442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84272:  50%|█████     | 14/28 [01:03<01:20,  5.73s/it]epoch 1 loss 1.81891:  50%|█████     | 14/28 [01:04<01:20,  5.73s/it]epoch 1 loss 1.81891:  54%|█████▎    | 15/28 [01:04<00:53,  4.13s/it]epoch 1 loss 1.80323:  54%|█████▎    | 15/28 [01:04<00:53,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6047[0m
[32m  eval_f1 = 0.2485[0m
[32m  eval_mcc = 0.5835[0m
[32m  eval_precision = 0.3469[0m
[32m  eval_recall = 0.2341[0m
[32m  ********************[0m
[32m  Best f1:0.2485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80323:  57%|█████▋    | 16/28 [01:12<01:05,  5.47s/it]epoch 1 loss 1.78916:  57%|█████▋    | 16/28 [01:13<01:05,  5.47s/it]epoch 1 loss 1.78916:  61%|██████    | 17/28 [01:13<00:43,  3.95s/it]epoch 1 loss 1.77597:  61%|██████    | 17/28 [01:13<00:43,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6102[0m
[32m  eval_f1 = 0.2549[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.3837[0m
[32m  eval_recall = 0.2377[0m
[32m  ********************[0m
[32m  Best f1:0.2549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77597:  64%|██████▍   | 18/28 [01:21<00:52,  5.23s/it]epoch 1 loss 1.75997:  64%|██████▍   | 18/28 [01:21<00:52,  5.23s/it]epoch 1 loss 1.75997:  68%|██████▊   | 19/28 [01:21<00:34,  3.78s/it]epoch 1 loss 1.74514:  68%|██████▊   | 19/28 [01:22<00:34,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2682[0m
[32m  eval_mcc = 0.5967[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.2462[0m
[32m  ********************[0m
[32m  Best f1:0.2682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74514:  71%|███████▏  | 20/28 [01:28<00:36,  4.58s/it]epoch 1 loss 1.73219:  71%|███████▏  | 20/28 [01:28<00:36,  4.58s/it]epoch 1 loss 1.73219:  75%|███████▌  | 21/28 [01:28<00:23,  3.33s/it]epoch 1 loss 1.72329:  75%|███████▌  | 21/28 [01:28<00:23,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.4082[0m
[32m  eval_recall = 0.2567[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72329:  79%|███████▊  | 22/28 [01:34<00:25,  4.26s/it]epoch 1 loss 1.71168:  79%|███████▊  | 22/28 [01:35<00:25,  4.26s/it]epoch 1 loss 1.71168:  82%|████████▏ | 23/28 [01:35<00:15,  3.11s/it]epoch 1 loss 1.69979:  82%|████████▏ | 23/28 [01:35<00:15,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6275[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4152[0m
[32m  eval_recall = 0.2661[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69979:  86%|████████▌ | 24/28 [01:41<00:16,  4.12s/it]epoch 1 loss 1.69484:  86%|████████▌ | 24/28 [01:42<00:16,  4.12s/it]epoch 1 loss 1.69484:  89%|████████▉ | 25/28 [01:42<00:09,  3.01s/it]epoch 1 loss 1.68815:  89%|████████▉ | 25/28 [01:42<00:09,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.3194[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68815:  93%|█████████▎| 26/28 [01:51<00:09,  4.93s/it]epoch 1 loss 1.67507:  93%|█████████▎| 26/28 [01:52<00:09,  4.93s/it]epoch 1 loss 1.67507:  96%|█████████▋| 27/28 [01:52<00:03,  3.58s/it]epoch 1 loss 1.66967:  96%|█████████▋| 27/28 [01:52<00:03,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4276[0m
[32m  eval_recall = 0.3015[0m
[32m  ********************[0m
[32m  Best f1:0.3272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66967: 100%|██████████| 28/28 [02:01<00:00,  5.18s/it]epoch 1 loss 1.66967: 100%|██████████| 28/28 [02:01<00:00,  4.32s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36103:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36103:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 2 loss 1.37591:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4413[0m
[32m  eval_recall = 0.3111[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37591:   7%|▋         | 2/28 [00:09<02:21,  5.44s/it]epoch 2 loss 1.36347:   7%|▋         | 2/28 [00:09<02:21,  5.44s/it]epoch 2 loss 1.36347:  11%|█         | 3/28 [00:09<01:18,  3.15s/it]epoch 2 loss 1.33818:  11%|█         | 3/28 [00:10<01:18,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4368[0m
[32m  eval_recall = 0.3157[0m
[32m  ********************[0m
[32m  Best f1:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33818:  14%|█▍        | 4/28 [00:19<02:14,  5.62s/it]epoch 2 loss 1.35034:  14%|█▍        | 4/28 [00:19<02:14,  5.62s/it]epoch 2 loss 1.35034:  18%|█▊        | 5/28 [00:19<01:26,  3.74s/it]epoch 2 loss 1.35113:  18%|█▊        | 5/28 [00:20<01:26,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35113:  21%|██▏       | 6/28 [00:28<02:02,  5.58s/it]epoch 2 loss 1.34985:  21%|██▏       | 6/28 [00:29<02:02,  5.58s/it]epoch 2 loss 1.34985:  25%|██▌       | 7/28 [00:29<01:21,  3.89s/it]epoch 2 loss 1.33356:  25%|██▌       | 7/28 [00:29<01:21,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3444[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4389[0m
[32m  eval_recall = 0.3195[0m
[32m  ********************[0m
[32m  Best f1:0.3444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33356:  29%|██▊       | 8/28 [00:38<01:51,  5.56s/it]epoch 2 loss 1.3414:  29%|██▊       | 8/28 [00:38<01:51,  5.56s/it] epoch 2 loss 1.3414:  32%|███▏      | 9/28 [00:38<01:15,  3.95s/it]epoch 2 loss 1.35632:  32%|███▏      | 9/28 [00:39<01:15,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3449[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4378[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35632:  36%|███▌      | 10/28 [00:47<01:36,  5.37s/it]epoch 2 loss 1.35483:  36%|███▌      | 10/28 [00:47<01:36,  5.37s/it]epoch 2 loss 1.35483:  39%|███▉      | 11/28 [00:47<01:05,  3.85s/it]epoch 2 loss 1.36194:  39%|███▉      | 11/28 [00:48<01:05,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3507[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best f1:0.3507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36194:  43%|████▎     | 12/28 [00:57<01:29,  5.60s/it]epoch 2 loss 1.34968:  43%|████▎     | 12/28 [00:57<01:29,  5.60s/it]epoch 2 loss 1.34968:  46%|████▋     | 13/28 [00:57<01:00,  4.03s/it]epoch 2 loss 1.35508:  46%|████▋     | 13/28 [00:58<01:00,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35508:  50%|█████     | 14/28 [01:05<01:13,  5.28s/it]epoch 2 loss 1.34455:  50%|█████     | 14/28 [01:06<01:13,  5.28s/it]epoch 2 loss 1.34455:  54%|█████▎    | 15/28 [01:06<00:49,  3.81s/it]epoch 2 loss 1.34663:  54%|█████▎    | 15/28 [01:06<00:49,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3543[0m
[32m  eval_mcc = 0.6364[0m
[32m  eval_precision = 0.4651[0m
[32m  eval_recall = 0.3268[0m
[32m  ********************[0m
[32m  Best f1:0.3543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34663:  57%|█████▋    | 16/28 [01:12<00:53,  4.49s/it]epoch 2 loss 1.34748:  57%|█████▋    | 16/28 [01:12<00:53,  4.49s/it]epoch 2 loss 1.34748:  61%|██████    | 17/28 [01:12<00:35,  3.27s/it]epoch 2 loss 1.34445:  61%|██████    | 17/28 [01:13<00:35,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3559[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4684[0m
[32m  eval_recall = 0.328[0m
[32m  ********************[0m
[32m  Best f1:0.3559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34445:  64%|██████▍   | 18/28 [01:18<00:41,  4.13s/it]epoch 2 loss 1.34152:  64%|██████▍   | 18/28 [01:19<00:41,  4.13s/it]epoch 2 loss 1.34152:  68%|██████▊   | 19/28 [01:19<00:27,  3.01s/it]epoch 2 loss 1.33735:  68%|██████▊   | 19/28 [01:19<00:27,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4787[0m
[32m  eval_recall = 0.3306[0m
[32m  ********************[0m
[32m  Best f1:0.3596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33735:  71%|███████▏  | 20/28 [01:25<00:31,  3.93s/it]epoch 2 loss 1.32739:  71%|███████▏  | 20/28 [01:25<00:31,  3.93s/it]epoch 2 loss 1.32739:  75%|███████▌  | 21/28 [01:25<00:20,  2.88s/it]epoch 2 loss 1.32755:  75%|███████▌  | 21/28 [01:26<00:20,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4733[0m
[32m  eval_recall = 0.333[0m
[32m  ********************[0m
[32m  Best f1:0.362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32755:  79%|███████▊  | 22/28 [01:31<00:23,  3.84s/it]epoch 2 loss 1.31765:  79%|███████▊  | 22/28 [01:32<00:23,  3.84s/it]epoch 2 loss 1.31765:  82%|████████▏ | 23/28 [01:32<00:14,  2.82s/it]epoch 2 loss 1.31294:  82%|████████▏ | 23/28 [01:32<00:14,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3327[0m

epoch 2 loss 1.31294:  86%|████████▌ | 24/28 [01:36<00:12,  3.11s/it]epoch 2 loss 1.30906:  86%|████████▌ | 24/28 [01:36<00:12,  3.11s/it]epoch 2 loss 1.30906:  89%|████████▉ | 25/28 [01:36<00:06,  2.30s/it]epoch 2 loss 1.30637:  89%|████████▉ | 25/28 [01:36<00:06,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.473[0m
[32m  eval_recall = 0.3337[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30637:  93%|█████████▎| 26/28 [01:42<00:06,  3.41s/it]epoch 2 loss 1.3009:  93%|█████████▎| 26/28 [01:42<00:06,  3.41s/it] epoch 2 loss 1.3009:  96%|█████████▋| 27/28 [01:42<00:02,  2.51s/it]epoch 2 loss 1.29926:  96%|█████████▋| 27/28 [01:43<00:02,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3627[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.4734[0m
[32m  eval_recall = 0.333[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29926: 100%|██████████| 28/28 [01:47<00:00,  3.13s/it]epoch 2 loss 1.29926: 100%|██████████| 28/28 [01:47<00:00,  3.84s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.3197:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.3197:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 3 loss 1.22834:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.364[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3344[0m
[32m  ********************[0m
[32m  Best f1:0.364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22834:   7%|▋         | 2/28 [00:06<01:35,  3.67s/it]epoch 3 loss 1.22541:   7%|▋         | 2/28 [00:06<01:35,  3.67s/it]epoch 3 loss 1.22541:  11%|█         | 3/28 [00:06<00:54,  2.19s/it]epoch 3 loss 1.20933:  11%|█         | 3/28 [00:07<00:54,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3656[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.4771[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20933:  14%|█▍        | 4/28 [00:12<01:29,  3.73s/it]epoch 3 loss 1.2112:  14%|█▍        | 4/28 [00:13<01:29,  3.73s/it] epoch 3 loss 1.2112:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it]epoch 3 loss 1.19975:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6452[0m
[32m  eval_precision = 0.4742[0m
[32m  eval_recall = 0.3369[0m
[32m  ********************[0m
[32m  Best MCC:0.6452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19975:  21%|██▏       | 6/28 [00:17<01:11,  3.27s/it]epoch 3 loss 1.1951:  21%|██▏       | 6/28 [00:18<01:11,  3.27s/it] epoch 3 loss 1.1951:  25%|██▌       | 7/28 [00:18<00:48,  2.33s/it]epoch 3 loss 1.18701:  25%|██▌       | 7/28 [00:18<00:48,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18701:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it]epoch 3 loss 1.20616:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it]epoch 3 loss 1.20616:  32%|███▏      | 9/28 [00:24<00:48,  2.55s/it]epoch 3 loss 1.21181:  32%|███▏      | 9/28 [00:25<00:48,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3688[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4912[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21181:  36%|███▌      | 10/28 [00:31<01:05,  3.65s/it]epoch 3 loss 1.21796:  36%|███▌      | 10/28 [00:31<01:05,  3.65s/it]epoch 3 loss 1.21796:  39%|███▉      | 11/28 [00:31<00:45,  2.67s/it]epoch 3 loss 1.21306:  39%|███▉      | 11/28 [00:31<00:45,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.6482[0m
[32m  eval_precision = 0.502[0m
[32m  eval_recall = 0.3431[0m
[32m  ********************[0m
[32m  Best f1:0.3732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21306:  43%|████▎     | 12/28 [00:37<00:59,  3.72s/it]epoch 3 loss 1.21428:  43%|████▎     | 12/28 [00:37<00:59,  3.72s/it]epoch 3 loss 1.21428:  46%|████▋     | 13/28 [00:37<00:40,  2.72s/it]epoch 3 loss 1.21598:  46%|████▋     | 13/28 [00:38<00:40,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6676[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.5199[0m
[32m  eval_recall = 0.3485[0m
[32m  ********************[0m
[32m  Best f1:0.3821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21598:  50%|█████     | 14/28 [00:44<00:52,  3.75s/it]epoch 3 loss 1.21646:  50%|█████     | 14/28 [00:44<00:52,  3.75s/it]epoch 3 loss 1.21646:  54%|█████▎    | 15/28 [00:44<00:35,  2.75s/it]epoch 3 loss 1.21953:  54%|█████▎    | 15/28 [00:44<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3858[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.5213[0m
[32m  eval_recall = 0.3518[0m
[32m  ********************[0m
[32m  Best f1:0.3858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21953:  57%|█████▋    | 16/28 [00:50<00:42,  3.57s/it]epoch 3 loss 1.21275:  57%|█████▋    | 16/28 [00:50<00:42,  3.57s/it]epoch 3 loss 1.21275:  61%|██████    | 17/28 [00:50<00:28,  2.63s/it]epoch 3 loss 1.21073:  61%|██████    | 17/28 [00:50<00:28,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.5211[0m
[32m  eval_recall = 0.3542[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21073:  64%|██████▍   | 18/28 [00:55<00:33,  3.33s/it]epoch 3 loss 1.20726:  64%|██████▍   | 18/28 [00:55<00:33,  3.33s/it]epoch 3 loss 1.20726:  68%|██████▊   | 19/28 [00:55<00:22,  2.45s/it]epoch 3 loss 1.20189:  68%|██████▊   | 19/28 [00:56<00:22,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3897[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.5211[0m
[32m  eval_recall = 0.3547[0m
[32m  ********************[0m
[32m  Best f1:0.3897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20189:  71%|███████▏  | 20/28 [01:01<00:28,  3.55s/it]epoch 3 loss 1.20049:  71%|███████▏  | 20/28 [01:02<00:28,  3.55s/it]epoch 3 loss 1.20049:  75%|███████▌  | 21/28 [01:02<00:18,  2.61s/it]epoch 3 loss 1.1998:  75%|███████▌  | 21/28 [01:02<00:18,  2.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.3551[0m
[32m  ********************[0m
[32m  Best f1:0.3903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1998:  79%|███████▊  | 22/28 [01:08<00:21,  3.62s/it]epoch 3 loss 1.20605:  79%|███████▊  | 22/28 [01:08<00:21,  3.62s/it]epoch 3 loss 1.20605:  82%|████████▏ | 23/28 [01:08<00:13,  2.66s/it]epoch 3 loss 1.20733:  82%|████████▏ | 23/28 [01:09<00:13,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3908[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.5179[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best f1:0.3908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.20733:  86%|████████▌ | 24/28 [01:13<00:13,  3.36s/it]epoch 3 loss 1.20641:  86%|████████▌ | 24/28 [01:14<00:13,  3.36s/it]epoch 3 loss 1.20641:  89%|████████▉ | 25/28 [01:14<00:07,  2.48s/it]epoch 3 loss 1.20433:  89%|████████▉ | 25/28 [01:14<00:07,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3926[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.5164[0m
[32m  eval_recall = 0.3579[0m
[32m  ********************[0m
[32m  Best f1:0.3926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20433:  93%|█████████▎| 26/28 [01:20<00:07,  3.58s/it]epoch 3 loss 1.20405:  93%|█████████▎| 26/28 [01:20<00:07,  3.58s/it]epoch 3 loss 1.20405:  96%|█████████▋| 27/28 [01:20<00:02,  2.63s/it]epoch 3 loss 1.20656:  96%|█████████▋| 27/28 [01:20<00:02,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3942[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.52[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best f1:0.3942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20656: 100%|██████████| 28/28 [01:26<00:00,  3.61s/it]epoch 3 loss 1.20656: 100%|██████████| 28/28 [01:26<00:00,  3.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.07385:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.07385:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.14423:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6712[0m
[32m  eval_f1 = 0.3939[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.5197[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14423:   7%|▋         | 2/28 [00:05<01:19,  3.07s/it]epoch 4 loss 1.14232:   7%|▋         | 2/28 [00:05<01:19,  3.07s/it]epoch 4 loss 1.14232:  11%|█         | 3/28 [00:05<00:46,  1.85s/it]epoch 4 loss 1.15473:  11%|█         | 3/28 [00:06<00:46,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6713[0m
[32m  eval_f1 = 0.3945[0m
[32m  eval_mcc = 0.6536[0m
[32m  eval_precision = 0.519[0m
[32m  eval_recall = 0.3599[0m
[32m  ********************[0m
[32m  Best f1:0.3945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15473:  14%|█▍        | 4/28 [00:12<01:28,  3.70s/it]epoch 4 loss 1.15729:  14%|█▍        | 4/28 [00:12<01:28,  3.70s/it]epoch 4 loss 1.15729:  18%|█▊        | 5/28 [00:12<00:57,  2.52s/it]epoch 4 loss 1.17027:  18%|█▊        | 5/28 [00:13<00:57,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.394[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.5196[0m
[32m  eval_recall = 0.3593[0m

epoch 4 loss 1.17027:  21%|██▏       | 6/28 [00:16<01:04,  2.95s/it]epoch 4 loss 1.18636:  21%|██▏       | 6/28 [00:16<01:04,  2.95s/it]epoch 4 loss 1.18636:  25%|██▌       | 7/28 [00:16<00:44,  2.12s/it]epoch 4 loss 1.17809:  25%|██▌       | 7/28 [00:17<00:44,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3933[0m
[32m  eval_mcc = 0.6536[0m
[32m  eval_precision = 0.5189[0m
[32m  eval_recall = 0.359[0m
[32m  ********************[0m
[32m  Best MCC:0.6536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17809:  29%|██▊       | 8/28 [00:21<01:00,  3.03s/it]epoch 4 loss 1.16925:  29%|██▊       | 8/28 [00:22<01:00,  3.03s/it]epoch 4 loss 1.16925:  32%|███▏      | 9/28 [00:22<00:42,  2.21s/it]epoch 4 loss 1.17939:  32%|███▏      | 9/28 [00:22<00:42,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3939[0m
[32m  eval_mcc = 0.654[0m
[32m  eval_precision = 0.5161[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best MCC:0.654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17939:  36%|███▌      | 10/28 [00:29<01:05,  3.65s/it]epoch 4 loss 1.18027:  36%|███▌      | 10/28 [00:29<01:05,  3.65s/it]epoch 4 loss 1.18027:  39%|███▉      | 11/28 [00:29<00:45,  2.66s/it]epoch 4 loss 1.17734:  39%|███▉      | 11/28 [00:29<00:45,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.515[0m
[32m  eval_recall = 0.3602[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17734:  43%|████▎     | 12/28 [00:36<01:03,  3.96s/it]epoch 4 loss 1.17307:  43%|████▎     | 12/28 [00:36<01:03,  3.96s/it]epoch 4 loss 1.17307:  46%|████▋     | 13/28 [00:36<00:43,  2.89s/it]epoch 4 loss 1.1852:  46%|████▋     | 13/28 [00:37<00:43,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.5155[0m
[32m  eval_recall = 0.3604[0m
[32m  ********************[0m
[32m  Best MCC:0.6553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1852:  50%|█████     | 14/28 [00:43<00:56,  4.03s/it]epoch 4 loss 1.18646:  50%|█████     | 14/28 [00:44<00:56,  4.03s/it]epoch 4 loss 1.18646:  54%|█████▎    | 15/28 [00:44<00:38,  2.94s/it]epoch 4 loss 1.18033:  54%|█████▎    | 15/28 [00:44<00:38,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3966[0m
[32m  eval_mcc = 0.6558[0m
[32m  eval_precision = 0.5124[0m
[32m  eval_recall = 0.3625[0m
[32m  ********************[0m
[32m  Best f1:0.3966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18033:  57%|█████▋    | 16/28 [00:53<00:59,  4.98s/it]epoch 4 loss 1.17359:  57%|█████▋    | 16/28 [00:54<00:59,  4.98s/it]epoch 4 loss 1.17359:  61%|██████    | 17/28 [00:54<00:39,  3.61s/it]epoch 4 loss 1.16988:  61%|██████    | 17/28 [00:54<00:39,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6741[0m
[32m  eval_f1 = 0.3969[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.5123[0m
[32m  eval_recall = 0.3628[0m
[32m  ********************[0m
[32m  Best f1:0.3969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16988:  64%|██████▍   | 18/28 [01:03<00:53,  5.33s/it]epoch 4 loss 1.17034:  64%|██████▍   | 18/28 [01:03<00:53,  5.33s/it]epoch 4 loss 1.17034:  68%|██████▊   | 19/28 [01:03<00:34,  3.85s/it]epoch 4 loss 1.16947:  68%|██████▊   | 19/28 [01:04<00:34,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3984[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.5125[0m
[32m  eval_recall = 0.364[0m
[32m  ********************[0m
[32m  Best f1:0.3984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16947:  71%|███████▏  | 20/28 [01:12<00:41,  5.24s/it]epoch 4 loss 1.17332:  71%|███████▏  | 20/28 [01:12<00:41,  5.24s/it]epoch 4 loss 1.17332:  75%|███████▌  | 21/28 [01:12<00:26,  3.80s/it]epoch 4 loss 1.17644:  75%|███████▌  | 21/28 [01:13<00:26,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3979[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.5117[0m
[32m  eval_recall = 0.3636[0m

epoch 4 loss 1.17644:  79%|███████▊  | 22/28 [01:16<00:22,  3.80s/it]epoch 4 loss 1.17113:  79%|███████▊  | 22/28 [01:17<00:22,  3.80s/it]epoch 4 loss 1.17113:  82%|████████▏ | 23/28 [01:17<00:13,  2.78s/it]epoch 4 loss 1.16974:  82%|████████▏ | 23/28 [01:17<00:13,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.5123[0m
[32m  eval_recall = 0.3637[0m

epoch 4 loss 1.16974:  86%|████████▌ | 24/28 [01:20<00:12,  3.08s/it]epoch 4 loss 1.1678:  86%|████████▌ | 24/28 [01:21<00:12,  3.08s/it] epoch 4 loss 1.1678:  89%|████████▉ | 25/28 [01:21<00:06,  2.28s/it]epoch 4 loss 1.16968:  89%|████████▉ | 25/28 [01:21<00:06,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3986[0m
[32m  eval_mcc = 0.6563[0m
[32m  eval_precision = 0.5122[0m
[32m  eval_recall = 0.3643[0m
[32m  ********************[0m
[32m  Best f1:0.3986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16968:  93%|█████████▎| 26/28 [01:30<00:08,  4.33s/it]epoch 4 loss 1.16804:  93%|█████████▎| 26/28 [01:30<00:08,  4.33s/it]epoch 4 loss 1.16804:  96%|█████████▋| 27/28 [01:30<00:03,  3.16s/it]epoch 4 loss 1.17357:  96%|█████████▋| 27/28 [01:30<00:03,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3986[0m
[32m  eval_mcc = 0.6564[0m
[32m  eval_precision = 0.5122[0m
[32m  eval_recall = 0.3643[0m
[32m  ********************[0m
[32m  Best f1:0.3986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17357: 100%|██████████| 28/28 [01:39<00:00,  4.88s/it]epoch 4 loss 1.17357: 100%|██████████| 28/28 [01:39<00:00,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:02,  2.68it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3986[0m
[32m  eval_mcc = 0.6564[0m
[32m  eval_precision = 0.5122[0m
[32m  eval_recall = 0.3643[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6383[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3278[0m

