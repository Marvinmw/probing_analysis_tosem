[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_8', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.13914:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.13914:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.13758:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0149[0m
[32m  eval_f1 = 0.0062[0m
[32m  eval_mcc = 0.0051[0m
[32m  eval_precision = 0.0087[0m
[32m  eval_recall = 0.0068[0m
[32m  ********************[0m
[32m  Best f1:0.0062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13758:   7%|▋         | 2/28 [00:05<01:23,  3.22s/it]epoch 0 loss 5.12403:   7%|▋         | 2/28 [00:06<01:23,  3.22s/it]epoch 0 loss 5.12403:  11%|█         | 3/28 [00:06<00:48,  1.93s/it]epoch 0 loss 5.1136:  11%|█         | 3/28 [00:06<00:48,  1.93s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.025[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0086[0m
[32m  eval_precision = 0.0162[0m
[32m  eval_recall = 0.0081[0m
[32m  ********************[0m
[32m  Best f1:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1136:  14%|█▍        | 4/28 [00:17<02:13,  5.55s/it]epoch 0 loss 5.09172:  14%|█▍        | 4/28 [00:17<02:13,  5.55s/it]epoch 0 loss 5.09172:  18%|█▊        | 5/28 [00:17<01:25,  3.70s/it]epoch 0 loss 5.0678:  18%|█▊        | 5/28 [00:18<01:25,  3.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0458[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0124[0m
[32m  eval_precision = 0.0134[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0678:  21%|██▏       | 6/28 [00:26<01:58,  5.38s/it]epoch 0 loss 5.032:  21%|██▏       | 6/28 [00:26<01:58,  5.38s/it] epoch 0 loss 5.032:  25%|██▌       | 7/28 [00:26<01:18,  3.76s/it]epoch 0 loss 4.99182:  25%|██▌       | 7/28 [00:27<01:18,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0686[0m
[32m  eval_f1 = 0.009[0m
[32m  eval_mcc = 0.012[0m
[32m  eval_precision = 0.0147[0m
[32m  eval_recall = 0.0136[0m
[32m  ********************[0m
[32m  Best f1:0.009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99182:  29%|██▊       | 8/28 [00:31<01:22,  4.13s/it]epoch 0 loss 4.94129:  29%|██▊       | 8/28 [00:32<01:22,  4.13s/it]epoch 0 loss 4.94129:  32%|███▏      | 9/28 [00:32<00:56,  2.97s/it]epoch 0 loss 4.89504:  32%|███▏      | 9/28 [00:32<00:56,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.088[0m
[32m  eval_f1 = 0.0136[0m
[32m  eval_mcc = 0.0203[0m
[32m  eval_precision = 0.0294[0m
[32m  eval_recall = 0.0183[0m
[32m  ********************[0m
[32m  Best f1:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89504:  36%|███▌      | 10/28 [00:40<01:23,  4.64s/it]epoch 0 loss 4.83986:  36%|███▌      | 10/28 [00:40<01:23,  4.64s/it]epoch 0 loss 4.83986:  39%|███▉      | 11/28 [00:40<00:56,  3.35s/it]epoch 0 loss 4.77961:  39%|███▉      | 11/28 [00:41<00:56,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.103[0m
[32m  eval_f1 = 0.017[0m
[32m  eval_mcc = 0.0349[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0211[0m
[32m  ********************[0m
[32m  Best f1:0.017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77961:  43%|████▎     | 12/28 [00:49<01:17,  4.87s/it]epoch 0 loss 4.7157:  43%|████▎     | 12/28 [00:49<01:17,  4.87s/it] epoch 0 loss 4.7157:  46%|████▋     | 13/28 [00:49<00:52,  3.53s/it]epoch 0 loss 4.65055:  46%|████▋     | 13/28 [00:50<00:52,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1264[0m
[32m  eval_f1 = 0.0189[0m
[32m  eval_mcc = 0.0583[0m
[32m  eval_precision = 0.0375[0m
[32m  eval_recall = 0.0225[0m
[32m  ********************[0m
[32m  Best f1:0.0189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65055:  50%|█████     | 14/28 [00:55<01:00,  4.33s/it]epoch 0 loss 4.58797:  50%|█████     | 14/28 [00:56<01:00,  4.33s/it]epoch 0 loss 4.58797:  54%|█████▎    | 15/28 [00:56<00:40,  3.15s/it]epoch 0 loss 4.52221:  54%|█████▎    | 15/28 [00:56<00:40,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1559[0m
[32m  eval_f1 = 0.0165[0m
[32m  eval_mcc = 0.09[0m
[32m  eval_precision = 0.0368[0m
[32m  eval_recall = 0.0221[0m
[32m  ********************[0m
[32m  Best MCC:0.09[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52221:  57%|█████▋    | 16/28 [01:01<00:44,  3.69s/it]epoch 0 loss 4.45454:  57%|█████▋    | 16/28 [01:01<00:44,  3.69s/it]epoch 0 loss 4.45454:  61%|██████    | 17/28 [01:01<00:29,  2.70s/it]epoch 0 loss 4.39548:  61%|██████    | 17/28 [01:01<00:29,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1994[0m
[32m  eval_f1 = 0.0212[0m
[32m  eval_mcc = 0.1365[0m
[32m  eval_precision = 0.0516[0m
[32m  eval_recall = 0.0279[0m
[32m  ********************[0m
[32m  Best f1:0.0212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.39548:  64%|██████▍   | 18/28 [01:07<00:37,  3.73s/it]epoch 0 loss 4.33397:  64%|██████▍   | 18/28 [01:08<00:37,  3.73s/it]epoch 0 loss 4.33397:  68%|██████▊   | 19/28 [01:08<00:24,  2.74s/it]epoch 0 loss 4.2832:  68%|██████▊   | 19/28 [01:08<00:24,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2522[0m
[32m  eval_f1 = 0.0287[0m
[32m  eval_mcc = 0.1922[0m
[32m  eval_precision = 0.0515[0m
[32m  eval_recall = 0.0363[0m
[32m  ********************[0m
[32m  Best f1:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2832:  71%|███████▏  | 20/28 [01:14<00:30,  3.84s/it]epoch 0 loss 4.22041:  71%|███████▏  | 20/28 [01:14<00:30,  3.84s/it]epoch 0 loss 4.22041:  75%|███████▌  | 21/28 [01:14<00:19,  2.82s/it]epoch 0 loss 4.17283:  75%|███████▌  | 21/28 [01:15<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2909[0m
[32m  eval_f1 = 0.0442[0m
[32m  eval_mcc = 0.2403[0m
[32m  eval_precision = 0.0785[0m
[32m  eval_recall = 0.05[0m
[32m  ********************[0m
[32m  Best f1:0.0442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17283:  79%|███████▊  | 22/28 [01:20<00:21,  3.66s/it]epoch 0 loss 4.11485:  79%|███████▊  | 22/28 [01:21<00:21,  3.66s/it]epoch 0 loss 4.11485:  82%|████████▏ | 23/28 [01:21<00:13,  2.69s/it]epoch 0 loss 4.05884:  82%|████████▏ | 23/28 [01:21<00:13,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3291[0m
[32m  eval_f1 = 0.0762[0m
[32m  eval_mcc = 0.2887[0m
[32m  eval_precision = 0.1714[0m
[32m  eval_recall = 0.0721[0m
[32m  ********************[0m
[32m  Best f1:0.0762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.05884:  86%|████████▌ | 24/28 [01:27<00:15,  3.79s/it]epoch 0 loss 4.01018:  86%|████████▌ | 24/28 [01:27<00:15,  3.79s/it]epoch 0 loss 4.01018:  89%|████████▉ | 25/28 [01:27<00:08,  2.78s/it]epoch 0 loss 3.95839:  89%|████████▉ | 25/28 [01:28<00:08,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4052[0m
[32m  eval_f1 = 0.1282[0m
[32m  eval_mcc = 0.3728[0m
[32m  eval_precision = 0.1923[0m
[32m  eval_recall = 0.1146[0m
[32m  ********************[0m
[32m  Best f1:0.1282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.95839:  93%|█████████▎| 26/28 [01:34<00:07,  3.87s/it]epoch 0 loss 3.90648:  93%|█████████▎| 26/28 [01:34<00:07,  3.87s/it]epoch 0 loss 3.90648:  96%|█████████▋| 27/28 [01:34<00:02,  2.84s/it]epoch 0 loss 3.85267:  96%|█████████▋| 27/28 [01:34<00:02,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4541[0m
[32m  eval_f1 = 0.1498[0m
[32m  eval_mcc = 0.4246[0m
[32m  eval_precision = 0.2096[0m
[32m  eval_recall = 0.139[0m
[32m  ********************[0m
[32m  Best f1:0.1498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.85267: 100%|██████████| 28/28 [01:40<00:00,  3.83s/it]epoch 0 loss 3.85267: 100%|██████████| 28/28 [01:40<00:00,  3.60s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.39693:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.39693:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 1 loss 2.29684:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.498[0m
[32m  eval_f1 = 0.1733[0m
[32m  eval_mcc = 0.4703[0m
[32m  eval_precision = 0.2366[0m
[32m  eval_recall = 0.1648[0m
[32m  ********************[0m
[32m  Best f1:0.1733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29684:   7%|▋         | 2/28 [00:06<01:42,  3.95s/it]epoch 1 loss 2.25934:   7%|▋         | 2/28 [00:07<01:42,  3.95s/it]epoch 1 loss 2.25934:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 1 loss 2.25565:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5359[0m
[32m  eval_f1 = 0.1902[0m
[32m  eval_mcc = 0.5078[0m
[32m  eval_precision = 0.2382[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.1902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25565:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 1 loss 2.25352:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 1 loss 2.25352:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 1 loss 2.24405:  18%|█▊        | 5/28 [00:14<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.555[0m
[32m  eval_f1 = 0.1982[0m
[32m  eval_mcc = 0.5271[0m
[32m  eval_precision = 0.2475[0m
[32m  eval_recall = 0.1925[0m
[32m  ********************[0m
[32m  Best f1:0.1982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24405:  21%|██▏       | 6/28 [00:20<01:25,  3.87s/it]epoch 1 loss 2.22621:  21%|██▏       | 6/28 [00:20<01:25,  3.87s/it]epoch 1 loss 2.22621:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it]epoch 1 loss 2.19013:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5652[0m
[32m  eval_f1 = 0.2036[0m
[32m  eval_mcc = 0.5379[0m
[32m  eval_precision = 0.2619[0m
[32m  eval_recall = 0.1986[0m
[32m  ********************[0m
[32m  Best f1:0.2036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19013:  29%|██▊       | 8/28 [00:29<01:31,  4.59s/it]epoch 1 loss 2.16093:  29%|██▊       | 8/28 [00:29<01:31,  4.59s/it]epoch 1 loss 2.16093:  32%|███▏      | 9/28 [00:29<01:02,  3.29s/it]epoch 1 loss 2.14516:  32%|███▏      | 9/28 [00:29<01:02,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5733[0m
[32m  eval_f1 = 0.2113[0m
[32m  eval_mcc = 0.5465[0m
[32m  eval_precision = 0.2618[0m
[32m  eval_recall = 0.2044[0m
[32m  ********************[0m
[32m  Best f1:0.2113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14516:  36%|███▌      | 10/28 [00:35<01:15,  4.18s/it]epoch 1 loss 2.12107:  36%|███▌      | 10/28 [00:36<01:15,  4.18s/it]epoch 1 loss 2.12107:  39%|███▉      | 11/28 [00:36<00:51,  3.03s/it]epoch 1 loss 2.099:  39%|███▉      | 11/28 [00:36<00:51,  3.03s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5808[0m
[32m  eval_f1 = 0.2227[0m
[32m  eval_mcc = 0.5554[0m
[32m  eval_precision = 0.2896[0m
[32m  eval_recall = 0.2122[0m
[32m  ********************[0m
[32m  Best f1:0.2227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.099:  43%|████▎     | 12/28 [00:45<01:20,  5.04s/it]epoch 1 loss 2.07225:  43%|████▎     | 12/28 [00:46<01:20,  5.04s/it]epoch 1 loss 2.07225:  46%|████▋     | 13/28 [00:46<00:54,  3.64s/it]epoch 1 loss 2.06113:  46%|████▋     | 13/28 [00:46<00:54,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.582[0m
[32m  eval_f1 = 0.2232[0m
[32m  eval_mcc = 0.5591[0m
[32m  eval_precision = 0.2891[0m
[32m  eval_recall = 0.2115[0m
[32m  ********************[0m
[32m  Best f1:0.2232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06113:  50%|█████     | 14/28 [00:56<01:21,  5.80s/it]epoch 1 loss 2.03632:  50%|█████     | 14/28 [00:57<01:21,  5.80s/it]epoch 1 loss 2.03632:  54%|█████▎    | 15/28 [00:57<00:54,  4.18s/it]epoch 1 loss 2.01903:  54%|█████▎    | 15/28 [00:57<00:54,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5863[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5656[0m
[32m  eval_precision = 0.2856[0m
[32m  eval_recall = 0.2131[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01903:  57%|█████▋    | 16/28 [01:05<01:05,  5.48s/it]epoch 1 loss 2.00346:  57%|█████▋    | 16/28 [01:06<01:05,  5.48s/it]epoch 1 loss 2.00346:  61%|██████    | 17/28 [01:06<00:43,  3.96s/it]epoch 1 loss 1.98943:  61%|██████    | 17/28 [01:06<00:43,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5923[0m
[32m  eval_f1 = 0.2279[0m
[32m  eval_mcc = 0.572[0m
[32m  eval_precision = 0.2953[0m
[32m  eval_recall = 0.2164[0m
[32m  ********************[0m
[32m  Best f1:0.2279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98943:  64%|██████▍   | 18/28 [01:14<00:52,  5.26s/it]epoch 1 loss 1.97185:  64%|██████▍   | 18/28 [01:15<00:52,  5.26s/it]epoch 1 loss 1.97185:  68%|██████▊   | 19/28 [01:15<00:34,  3.81s/it]epoch 1 loss 1.95521:  68%|██████▊   | 19/28 [01:15<00:34,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5995[0m
[32m  eval_f1 = 0.2385[0m
[32m  eval_mcc = 0.5783[0m
[32m  eval_precision = 0.3203[0m
[32m  eval_recall = 0.2246[0m
[32m  ********************[0m
[32m  Best f1:0.2385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95521:  71%|███████▏  | 20/28 [01:24<00:43,  5.39s/it]epoch 1 loss 1.94115:  71%|███████▏  | 20/28 [01:24<00:43,  5.39s/it]epoch 1 loss 1.94115:  75%|███████▌  | 21/28 [01:24<00:27,  3.90s/it]epoch 1 loss 1.93138:  75%|███████▌  | 21/28 [01:24<00:27,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6032[0m
[32m  eval_f1 = 0.2483[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.3393[0m
[32m  eval_recall = 0.2317[0m
[32m  ********************[0m
[32m  Best f1:0.2483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93138:  79%|███████▊  | 22/28 [01:34<00:34,  5.80s/it]epoch 1 loss 1.91788:  79%|███████▊  | 22/28 [01:35<00:34,  5.80s/it]epoch 1 loss 1.91788:  82%|████████▏ | 23/28 [01:35<00:20,  4.18s/it]epoch 1 loss 1.90362:  82%|████████▏ | 23/28 [01:35<00:20,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6068[0m
[32m  eval_f1 = 0.254[0m
[32m  eval_mcc = 0.5848[0m
[32m  eval_precision = 0.3636[0m
[32m  eval_recall = 0.236[0m
[32m  ********************[0m
[32m  Best f1:0.254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90362:  86%|████████▌ | 24/28 [01:44<00:22,  5.74s/it]epoch 1 loss 1.89705:  86%|████████▌ | 24/28 [01:44<00:22,  5.74s/it]epoch 1 loss 1.89705:  89%|████████▉ | 25/28 [01:44<00:12,  4.14s/it]epoch 1 loss 1.88886:  89%|████████▉ | 25/28 [01:45<00:12,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2579[0m
[32m  eval_mcc = 0.5886[0m
[32m  eval_precision = 0.3635[0m
[32m  eval_recall = 0.2404[0m
[32m  ********************[0m
[32m  Best f1:0.2579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88886:  93%|█████████▎| 26/28 [01:53<00:10,  5.46s/it]epoch 1 loss 1.87427:  93%|█████████▎| 26/28 [01:53<00:10,  5.46s/it]epoch 1 loss 1.87427:  96%|█████████▋| 27/28 [01:53<00:03,  3.95s/it]epoch 1 loss 1.86916:  96%|█████████▋| 27/28 [01:54<00:03,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6144[0m
[32m  eval_f1 = 0.2638[0m
[32m  eval_mcc = 0.5919[0m
[32m  eval_precision = 0.3755[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86916: 100%|██████████| 28/28 [02:01<00:00,  5.10s/it]epoch 1 loss 1.86916: 100%|██████████| 28/28 [02:01<00:00,  4.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.52247:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.52247:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.54275:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.617[0m
[32m  eval_f1 = 0.271[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3793[0m
[32m  eval_recall = 0.253[0m
[32m  ********************[0m
[32m  Best f1:0.271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54275:   7%|▋         | 2/28 [00:09<02:16,  5.23s/it]epoch 2 loss 1.5286:   7%|▋         | 2/28 [00:09<02:16,  5.23s/it] epoch 2 loss 1.5286:  11%|█         | 3/28 [00:09<01:15,  3.03s/it]epoch 2 loss 1.50274:  11%|█         | 3/28 [00:09<01:15,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2772[0m
[32m  eval_mcc = 0.5971[0m
[32m  eval_precision = 0.3941[0m
[32m  eval_recall = 0.2579[0m
[32m  ********************[0m
[32m  Best f1:0.2772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50274:  14%|█▍        | 4/28 [00:17<01:55,  4.83s/it]epoch 2 loss 1.51789:  14%|█▍        | 4/28 [00:17<01:55,  4.83s/it]epoch 2 loss 1.51789:  18%|█▊        | 5/28 [00:17<01:14,  3.24s/it]epoch 2 loss 1.517:  18%|█▊        | 5/28 [00:17<01:14,  3.24s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6223[0m
[32m  eval_f1 = 0.2819[0m
[32m  eval_mcc = 0.6006[0m
[32m  eval_precision = 0.3948[0m
[32m  eval_recall = 0.262[0m
[32m  ********************[0m
[32m  Best f1:0.2819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.517:  21%|██▏       | 6/28 [00:25<01:48,  4.94s/it]epoch 2 loss 1.51584:  21%|██▏       | 6/28 [00:26<01:48,  4.94s/it]epoch 2 loss 1.51584:  25%|██▌       | 7/28 [00:26<01:12,  3.47s/it]epoch 2 loss 1.49842:  25%|██▌       | 7/28 [00:26<01:12,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.2931[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.4034[0m
[32m  eval_recall = 0.2698[0m
[32m  ********************[0m
[32m  Best f1:0.2931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49842:  29%|██▊       | 8/28 [00:33<01:35,  4.78s/it]epoch 2 loss 1.50722:  29%|██▊       | 8/28 [00:34<01:35,  4.78s/it]epoch 2 loss 1.50722:  32%|███▏      | 9/28 [00:34<01:04,  3.41s/it]epoch 2 loss 1.5211:  32%|███▏      | 9/28 [00:34<01:04,  3.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.4042[0m
[32m  eval_recall = 0.2771[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5211:  36%|███▌      | 10/28 [00:42<01:28,  4.93s/it]epoch 2 loss 1.51785:  36%|███▌      | 10/28 [00:42<01:28,  4.93s/it]epoch 2 loss 1.51785:  39%|███▉      | 11/28 [00:42<01:00,  3.55s/it]epoch 2 loss 1.52508:  39%|███▉      | 11/28 [00:43<01:00,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4137[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.3032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52508:  43%|████▎     | 12/28 [00:50<01:18,  4.91s/it]epoch 2 loss 1.51165:  43%|████▎     | 12/28 [00:51<01:18,  4.91s/it]epoch 2 loss 1.51165:  46%|████▋     | 13/28 [00:51<00:53,  3.55s/it]epoch 2 loss 1.51565:  46%|████▋     | 13/28 [00:51<00:53,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.3134[0m
[32m  eval_mcc = 0.6098[0m
[32m  eval_precision = 0.4215[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best f1:0.3134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51565:  50%|█████     | 14/28 [00:59<01:09,  5.00s/it]epoch 2 loss 1.50381:  50%|█████     | 14/28 [01:00<01:09,  5.00s/it]epoch 2 loss 1.50381:  54%|█████▎    | 15/28 [01:00<00:47,  3.62s/it]epoch 2 loss 1.50429:  54%|█████▎    | 15/28 [01:00<00:47,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.3172[0m
[32m  eval_mcc = 0.6108[0m
[32m  eval_precision = 0.4278[0m
[32m  eval_recall = 0.2933[0m
[32m  ********************[0m
[32m  Best f1:0.3172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50429:  57%|█████▋    | 16/28 [01:07<00:57,  4.77s/it]epoch 2 loss 1.50377:  57%|█████▋    | 16/28 [01:07<00:57,  4.77s/it]epoch 2 loss 1.50377:  61%|██████    | 17/28 [01:07<00:38,  3.46s/it]epoch 2 loss 1.50121:  61%|██████    | 17/28 [01:08<00:38,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6341[0m
[32m  eval_f1 = 0.3203[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.4356[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.3203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50121:  64%|██████▍   | 18/28 [01:16<00:48,  4.89s/it]epoch 2 loss 1.49757:  64%|██████▍   | 18/28 [01:16<00:48,  4.89s/it]epoch 2 loss 1.49757:  68%|██████▊   | 19/28 [01:16<00:31,  3.55s/it]epoch 2 loss 1.49357:  68%|██████▊   | 19/28 [01:16<00:31,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6361[0m
[32m  eval_f1 = 0.3222[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.2981[0m
[32m  ********************[0m
[32m  Best f1:0.3222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49357:  71%|███████▏  | 20/28 [01:24<00:39,  4.90s/it]epoch 2 loss 1.48352:  71%|███████▏  | 20/28 [01:25<00:39,  4.90s/it]epoch 2 loss 1.48352:  75%|███████▌  | 21/28 [01:25<00:24,  3.56s/it]epoch 2 loss 1.48388:  75%|███████▌  | 21/28 [01:25<00:24,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.3255[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.3003[0m
[32m  ********************[0m
[32m  Best f1:0.3255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48388:  79%|███████▊  | 22/28 [01:31<00:27,  4.56s/it]epoch 2 loss 1.4728:  79%|███████▊  | 22/28 [01:32<00:27,  4.56s/it] epoch 2 loss 1.4728:  82%|████████▏ | 23/28 [01:32<00:16,  3.32s/it]epoch 2 loss 1.46755:  82%|████████▏ | 23/28 [01:32<00:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46755:  86%|████████▌ | 24/28 [01:39<00:17,  4.40s/it]epoch 2 loss 1.46295:  86%|████████▌ | 24/28 [01:39<00:17,  4.40s/it]epoch 2 loss 1.46295:  89%|████████▉ | 25/28 [01:39<00:09,  3.20s/it]epoch 2 loss 1.45983:  89%|████████▉ | 25/28 [01:40<00:09,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6384[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.3017[0m
[32m  ********************[0m
[32m  Best f1:0.3295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45983:  93%|█████████▎| 26/28 [01:48<00:09,  4.82s/it]epoch 2 loss 1.45401:  93%|█████████▎| 26/28 [01:48<00:09,  4.82s/it]epoch 2 loss 1.45401:  96%|█████████▋| 27/28 [01:48<00:03,  3.50s/it]epoch 2 loss 1.45165:  96%|█████████▋| 27/28 [01:48<00:03,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4327[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45165: 100%|██████████| 28/28 [01:55<00:00,  4.35s/it]epoch 2 loss 1.45165: 100%|██████████| 28/28 [01:55<00:00,  4.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.45298:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.45298:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.36617:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36617:   7%|▋         | 2/28 [00:06<01:38,  3.79s/it]epoch 3 loss 1.36896:   7%|▋         | 2/28 [00:07<01:38,  3.79s/it]epoch 3 loss 1.36896:  11%|█         | 3/28 [00:07<00:56,  2.26s/it]epoch 3 loss 1.35557:  11%|█         | 3/28 [00:07<00:56,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4382[0m
[32m  eval_recall = 0.3086[0m
[32m  ********************[0m
[32m  Best f1:0.3339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35557:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 3 loss 1.35561:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 3 loss 1.35561:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 3 loss 1.34363:  18%|█▊        | 5/28 [00:14<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.333[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.4368[0m
[32m  eval_recall = 0.3082[0m

epoch 3 loss 1.34363:  21%|██▏       | 6/28 [00:17<01:06,  3.03s/it]epoch 3 loss 1.33989:  21%|██▏       | 6/28 [00:17<01:06,  3.03s/it]epoch 3 loss 1.33989:  25%|██▌       | 7/28 [00:17<00:45,  2.17s/it]epoch 3 loss 1.33185:  25%|██▌       | 7/28 [00:18<00:45,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3329[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4378[0m
[32m  eval_recall = 0.3081[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33185:  29%|██▊       | 8/28 [00:22<01:01,  3.06s/it]epoch 3 loss 1.35323:  29%|██▊       | 8/28 [00:23<01:01,  3.06s/it]epoch 3 loss 1.35323:  32%|███▏      | 9/28 [00:23<00:42,  2.23s/it]epoch 3 loss 1.35874:  32%|███▏      | 9/28 [00:23<00:42,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3344[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.3096[0m
[32m  ********************[0m
[32m  Best f1:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35874:  36%|███▌      | 10/28 [00:29<01:02,  3.45s/it]epoch 3 loss 1.36486:  36%|███▌      | 10/28 [00:29<01:02,  3.45s/it]epoch 3 loss 1.36486:  39%|███▉      | 11/28 [00:29<00:42,  2.53s/it]epoch 3 loss 1.35932:  39%|███▉      | 11/28 [00:30<00:42,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35932:  43%|████▎     | 12/28 [00:36<00:59,  3.70s/it]epoch 3 loss 1.36069:  43%|████▎     | 12/28 [00:36<00:59,  3.70s/it]epoch 3 loss 1.36069:  46%|████▋     | 13/28 [00:36<00:40,  2.71s/it]epoch 3 loss 1.36115:  46%|████▋     | 13/28 [00:37<00:40,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.6307[0m
[32m  eval_precision = 0.4511[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36115:  50%|█████     | 14/28 [00:46<01:06,  4.78s/it]epoch 3 loss 1.36101:  50%|█████     | 14/28 [00:46<01:06,  4.78s/it]epoch 3 loss 1.36101:  54%|█████▎    | 15/28 [00:46<00:45,  3.46s/it]epoch 3 loss 1.36354:  54%|█████▎    | 15/28 [00:47<00:45,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.346[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4492[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36354:  57%|█████▋    | 16/28 [00:58<01:11,  5.97s/it]epoch 3 loss 1.35655:  57%|█████▋    | 16/28 [00:58<01:11,  5.97s/it]epoch 3 loss 1.35655:  61%|██████    | 17/28 [00:58<00:47,  4.30s/it]epoch 3 loss 1.35351:  61%|██████    | 17/28 [00:59<00:47,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3191[0m
[32m  ********************[0m
[32m  Best f1:0.348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35351:  64%|██████▍   | 18/28 [01:07<00:56,  5.60s/it]epoch 3 loss 1.34976:  64%|██████▍   | 18/28 [01:08<00:56,  5.60s/it]epoch 3 loss 1.34976:  68%|██████▊   | 19/28 [01:08<00:36,  4.05s/it]epoch 3 loss 1.34386:  68%|██████▊   | 19/28 [01:08<00:36,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4499[0m
[32m  eval_recall = 0.3193[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.34386:  71%|███████▏  | 20/28 [01:12<00:34,  4.29s/it]epoch 3 loss 1.34283:  71%|███████▏  | 20/28 [01:13<00:34,  4.29s/it]epoch 3 loss 1.34283:  75%|███████▌  | 21/28 [01:13<00:21,  3.12s/it]epoch 3 loss 1.34237:  75%|███████▌  | 21/28 [01:13<00:21,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3194[0m
[32m  ********************[0m
[32m  Best f1:0.3486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.34237:  79%|███████▊  | 22/28 [01:21<00:27,  4.52s/it]epoch 3 loss 1.34845:  79%|███████▊  | 22/28 [01:21<00:27,  4.52s/it]epoch 3 loss 1.34845:  82%|████████▏ | 23/28 [01:21<00:16,  3.29s/it]epoch 3 loss 1.34923:  82%|████████▏ | 23/28 [01:21<00:16,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6517[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4487[0m
[32m  eval_recall = 0.3194[0m

epoch 3 loss 1.34923:  86%|████████▌ | 24/28 [01:25<00:13,  3.44s/it]epoch 3 loss 1.34839:  86%|████████▌ | 24/28 [01:25<00:13,  3.44s/it]epoch 3 loss 1.34839:  89%|████████▉ | 25/28 [01:25<00:07,  2.53s/it]epoch 3 loss 1.34664:  89%|████████▉ | 25/28 [01:26<00:07,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3502[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.3502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34664:  93%|█████████▎| 26/28 [01:36<00:10,  5.02s/it]epoch 3 loss 1.34667:  93%|█████████▎| 26/28 [01:36<00:10,  5.02s/it]epoch 3 loss 1.34667:  96%|█████████▋| 27/28 [01:36<00:03,  3.64s/it]epoch 3 loss 1.34889:  96%|█████████▋| 27/28 [01:37<00:03,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3511[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.3216[0m
[32m  ********************[0m
[32m  Best f1:0.3511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34889: 100%|██████████| 28/28 [01:45<00:00,  5.14s/it]epoch 3 loss 1.34889: 100%|██████████| 28/28 [01:45<00:00,  3.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20947:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20947:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.28025:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3493[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28025:   7%|▋         | 2/28 [00:05<01:18,  3.03s/it]epoch 4 loss 1.28135:   7%|▋         | 2/28 [00:05<01:18,  3.03s/it]epoch 4 loss 1.28135:  11%|█         | 3/28 [00:05<00:45,  1.83s/it]epoch 4 loss 1.29511:  11%|█         | 3/28 [00:06<00:45,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4559[0m
[32m  eval_recall = 0.3215[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29511:  14%|█▍        | 4/28 [00:13<01:39,  4.13s/it]epoch 4 loss 1.29865:  14%|█▍        | 4/28 [00:13<01:39,  4.13s/it]epoch 4 loss 1.29865:  18%|█▊        | 5/28 [00:13<01:04,  2.80s/it]epoch 4 loss 1.30932:  18%|█▊        | 5/28 [00:14<01:04,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6543[0m
[32m  eval_f1 = 0.3501[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3209[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30932:  21%|██▏       | 6/28 [00:18<01:18,  3.57s/it]epoch 4 loss 1.32739:  21%|██▏       | 6/28 [00:19<01:18,  3.57s/it]epoch 4 loss 1.32739:  25%|██▌       | 7/28 [00:19<00:53,  2.54s/it]epoch 4 loss 1.31806:  25%|██▌       | 7/28 [00:19<00:53,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.3218[0m

epoch 4 loss 1.31806:  29%|██▊       | 8/28 [00:23<00:58,  2.94s/it]epoch 4 loss 1.30832:  29%|██▊       | 8/28 [00:23<00:58,  2.94s/it]epoch 4 loss 1.30832:  32%|███▏      | 9/28 [00:23<00:40,  2.14s/it]epoch 4 loss 1.31848:  32%|███▏      | 9/28 [00:23<00:40,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.3225[0m
[32m  ********************[0m
[32m  Best f1:0.3516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31848:  36%|███▌      | 10/28 [00:28<00:54,  3.04s/it]epoch 4 loss 1.31928:  36%|███▌      | 10/28 [00:28<00:54,  3.04s/it]epoch 4 loss 1.31928:  39%|███▉      | 11/28 [00:28<00:38,  2.24s/it]epoch 4 loss 1.31771:  39%|███▉      | 11/28 [00:29<00:38,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3522[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best f1:0.3522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31771:  43%|████▎     | 12/28 [00:34<00:50,  3.15s/it]epoch 4 loss 1.31286:  43%|████▎     | 12/28 [00:34<00:50,  3.15s/it]epoch 4 loss 1.31286:  46%|████▋     | 13/28 [00:34<00:34,  2.32s/it]epoch 4 loss 1.32492:  46%|████▋     | 13/28 [00:34<00:34,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.655[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32492:  50%|█████     | 14/28 [00:45<01:07,  4.85s/it]epoch 4 loss 1.32594:  50%|█████     | 14/28 [00:45<01:07,  4.85s/it]epoch 4 loss 1.32594:  54%|█████▎    | 15/28 [00:45<00:45,  3.52s/it]epoch 4 loss 1.32018:  54%|█████▎    | 15/28 [00:46<00:45,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.353[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4685[0m
[32m  eval_recall = 0.324[0m
[32m  ********************[0m
[32m  Best f1:0.353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32018:  57%|█████▋    | 16/28 [00:53<00:59,  4.95s/it]epoch 4 loss 1.31305:  57%|█████▋    | 16/28 [00:54<00:59,  4.95s/it]epoch 4 loss 1.31305:  61%|██████    | 17/28 [00:54<00:39,  3.59s/it]epoch 4 loss 1.30912:  61%|██████    | 17/28 [00:54<00:39,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30912:  64%|██████▍   | 18/28 [01:02<00:49,  4.98s/it]epoch 4 loss 1.30888:  64%|██████▍   | 18/28 [01:03<00:49,  4.98s/it]epoch 4 loss 1.30888:  68%|██████▊   | 19/28 [01:03<00:32,  3.61s/it]epoch 4 loss 1.30776:  68%|██████▊   | 19/28 [01:03<00:32,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3546[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3254[0m
[32m  ********************[0m
[32m  Best f1:0.3546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30776:  71%|███████▏  | 20/28 [01:09<00:36,  4.56s/it]epoch 4 loss 1.31201:  71%|███████▏  | 20/28 [01:10<00:36,  4.56s/it]epoch 4 loss 1.31201:  75%|███████▌  | 21/28 [01:10<00:23,  3.32s/it]epoch 4 loss 1.31516:  75%|███████▌  | 21/28 [01:10<00:23,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6559[0m
[32m  eval_f1 = 0.3551[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3258[0m
[32m  ********************[0m
[32m  Best f1:0.3551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31516:  79%|███████▊  | 22/28 [01:18<00:28,  4.79s/it]epoch 4 loss 1.30959:  79%|███████▊  | 22/28 [01:18<00:28,  4.79s/it]epoch 4 loss 1.30959:  82%|████████▏ | 23/28 [01:18<00:17,  3.48s/it]epoch 4 loss 1.30749:  82%|████████▏ | 23/28 [01:19<00:17,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3552[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30749:  86%|████████▌ | 24/28 [01:26<00:18,  4.61s/it]epoch 4 loss 1.30548:  86%|████████▌ | 24/28 [01:26<00:18,  4.61s/it]epoch 4 loss 1.30548:  89%|████████▉ | 25/28 [01:26<00:10,  3.35s/it]epoch 4 loss 1.30707:  89%|████████▉ | 25/28 [01:26<00:10,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3262[0m
[32m  ********************[0m
[32m  Best f1:0.3555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30707:  93%|█████████▎| 26/28 [01:34<00:09,  4.87s/it]epoch 4 loss 1.30577:  93%|█████████▎| 26/28 [01:35<00:09,  4.87s/it]epoch 4 loss 1.30577:  96%|█████████▋| 27/28 [01:35<00:03,  3.54s/it]epoch 4 loss 1.31009:  96%|█████████▋| 27/28 [01:35<00:03,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3262[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31009: 100%|██████████| 28/28 [01:40<00:00,  3.97s/it]epoch 4 loss 1.31009: 100%|██████████| 28/28 [01:40<00:00,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:02,  2.68it/s] 30%|███       | 3/10 [00:01<00:02,  2.68it/s] 40%|████      | 4/10 [00:01<00:02,  2.71it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3262[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4243[0m
[32m  eval_recall = 0.2898[0m

