[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_11', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.22734:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.22734:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.22674:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0002[0m
[32m  eval_precision = 0.0027[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.22674:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.21526:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.21526:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.20096:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0064[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = 0.0044[0m
[32m  eval_precision = 0.0067[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20096:  14%|█▍        | 4/28 [00:11<01:19,  3.30s/it]epoch 0 loss 5.17899:  14%|█▍        | 4/28 [00:11<01:19,  3.30s/it]epoch 0 loss 5.17899:  18%|█▊        | 5/28 [00:11<00:52,  2.27s/it]epoch 0 loss 5.15167:  18%|█▊        | 5/28 [00:12<00:52,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0148[0m
[32m  eval_f1 = 0.0058[0m
[32m  eval_mcc = 0.0072[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0112[0m
[32m  ********************[0m
[32m  Best f1:0.0058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15167:  21%|██▏       | 6/28 [00:20<01:42,  4.66s/it]epoch 0 loss 5.11382:  21%|██▏       | 6/28 [00:21<01:42,  4.66s/it]epoch 0 loss 5.11382:  25%|██▌       | 7/28 [00:21<01:08,  3.27s/it]epoch 0 loss 5.07147:  25%|██▌       | 7/28 [00:21<01:08,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.043[0m
[32m  eval_f1 = 0.0092[0m
[32m  eval_mcc = 0.0164[0m
[32m  eval_precision = 0.0134[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07147:  29%|██▊       | 8/28 [00:33<02:02,  6.12s/it]epoch 0 loss 5.02164:  29%|██▊       | 8/28 [00:34<02:02,  6.12s/it]epoch 0 loss 5.02164:  32%|███▏      | 9/28 [00:34<01:22,  4.34s/it]epoch 0 loss 4.9714:  32%|███▏      | 9/28 [00:34<01:22,  4.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0713[0m
[32m  eval_f1 = 0.0154[0m
[32m  eval_mcc = 0.0305[0m
[32m  eval_precision = 0.0186[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best f1:0.0154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9714:  36%|███▌      | 10/28 [00:42<01:43,  5.74s/it]epoch 0 loss 4.91352:  36%|███▌      | 10/28 [00:43<01:43,  5.74s/it]epoch 0 loss 4.91352:  39%|███▉      | 11/28 [00:43<01:09,  4.11s/it]epoch 0 loss 4.85158:  39%|███▉      | 11/28 [00:43<01:09,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0941[0m
[32m  eval_f1 = 0.0195[0m
[32m  eval_mcc = 0.0478[0m
[32m  eval_precision = 0.0243[0m
[32m  eval_recall = 0.0256[0m
[32m  ********************[0m
[32m  Best f1:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85158:  43%|████▎     | 12/28 [00:55<01:45,  6.62s/it]epoch 0 loss 4.7871:  43%|████▎     | 12/28 [00:56<01:45,  6.62s/it] epoch 0 loss 4.7871:  46%|████▋     | 13/28 [00:56<01:11,  4.74s/it]epoch 0 loss 4.7195:  46%|████▋     | 13/28 [00:56<01:11,  4.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1257[0m
[32m  eval_f1 = 0.0164[0m
[32m  eval_mcc = 0.0694[0m
[32m  eval_precision = 0.0174[0m
[32m  eval_recall = 0.0247[0m
[32m  ********************[0m
[32m  Best MCC:0.0694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7195:  50%|█████     | 14/28 [01:04<01:20,  5.75s/it]epoch 0 loss 4.65544:  50%|█████     | 14/28 [01:04<01:20,  5.75s/it]epoch 0 loss 4.65544:  54%|█████▎    | 15/28 [01:04<00:53,  4.15s/it]epoch 0 loss 4.58828:  54%|█████▎    | 15/28 [01:04<00:53,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1593[0m
[32m  eval_f1 = 0.0204[0m
[32m  eval_mcc = 0.0957[0m
[32m  eval_precision = 0.026[0m
[32m  eval_recall = 0.0276[0m
[32m  ********************[0m
[32m  Best f1:0.0204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58828:  57%|█████▋    | 16/28 [01:16<01:16,  6.36s/it]epoch 0 loss 4.51958:  57%|█████▋    | 16/28 [01:16<01:16,  6.36s/it]epoch 0 loss 4.51958:  61%|██████    | 17/28 [01:16<00:50,  4.57s/it]epoch 0 loss 4.46052:  61%|██████    | 17/28 [01:16<00:50,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1824[0m
[32m  eval_f1 = 0.0213[0m
[32m  eval_mcc = 0.114[0m
[32m  eval_precision = 0.0383[0m
[32m  eval_recall = 0.0273[0m
[32m  ********************[0m
[32m  Best f1:0.0213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46052:  64%|██████▍   | 18/28 [01:28<01:07,  6.76s/it]epoch 0 loss 4.39797:  64%|██████▍   | 18/28 [01:28<01:07,  6.76s/it]epoch 0 loss 4.39797:  68%|██████▊   | 19/28 [01:28<00:43,  4.86s/it]epoch 0 loss 4.34768:  68%|██████▊   | 19/28 [01:29<00:43,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2182[0m
[32m  eval_f1 = 0.0226[0m
[32m  eval_mcc = 0.1494[0m
[32m  eval_precision = 0.035[0m
[32m  eval_recall = 0.0289[0m
[32m  ********************[0m
[32m  Best f1:0.0226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34768:  71%|███████▏  | 20/28 [01:40<00:55,  6.92s/it]epoch 0 loss 4.2863:  71%|███████▏  | 20/28 [01:40<00:55,  6.92s/it] epoch 0 loss 4.2863:  75%|███████▌  | 21/28 [01:40<00:34,  4.97s/it]epoch 0 loss 4.23977:  75%|███████▌  | 21/28 [01:41<00:34,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2426[0m
[32m  eval_f1 = 0.0253[0m
[32m  eval_mcc = 0.1801[0m
[32m  eval_precision = 0.0421[0m
[32m  eval_recall = 0.0313[0m
[32m  ********************[0m
[32m  Best f1:0.0253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23977:  79%|███████▊  | 22/28 [01:50<00:38,  6.36s/it]epoch 0 loss 4.18367:  79%|███████▊  | 22/28 [01:50<00:38,  6.36s/it]epoch 0 loss 4.18367:  82%|████████▏ | 23/28 [01:50<00:22,  4.58s/it]epoch 0 loss 4.12965:  82%|████████▏ | 23/28 [01:51<00:22,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.269[0m
[32m  eval_f1 = 0.0393[0m
[32m  eval_mcc = 0.2202[0m
[32m  eval_precision = 0.0803[0m
[32m  eval_recall = 0.044[0m
[32m  ********************[0m
[32m  Best f1:0.0393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.12965:  86%|████████▌ | 24/28 [02:02<00:27,  6.80s/it]epoch 0 loss 4.08311:  86%|████████▌ | 24/28 [02:03<00:27,  6.80s/it]epoch 0 loss 4.08311:  89%|████████▉ | 25/28 [02:03<00:14,  4.89s/it]epoch 0 loss 4.03369:  89%|████████▉ | 25/28 [02:03<00:14,  4.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3282[0m
[32m  eval_f1 = 0.085[0m
[32m  eval_mcc = 0.2929[0m
[32m  eval_precision = 0.1604[0m
[32m  eval_recall = 0.0783[0m
[32m  ********************[0m
[32m  Best f1:0.085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.03369:  93%|█████████▎| 26/28 [02:15<00:14,  7.00s/it]epoch 0 loss 3.98428:  93%|█████████▎| 26/28 [02:15<00:14,  7.00s/it]epoch 0 loss 3.98428:  96%|█████████▋| 27/28 [02:15<00:05,  5.03s/it]epoch 0 loss 3.93338:  96%|█████████▋| 27/28 [02:15<00:05,  5.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4163[0m
[32m  eval_f1 = 0.1342[0m
[32m  eval_mcc = 0.3864[0m
[32m  eval_precision = 0.1863[0m
[32m  eval_recall = 0.1233[0m
[32m  ********************[0m
[32m  Best f1:0.1342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.93338: 100%|██████████| 28/28 [02:21<00:00,  5.37s/it]epoch 0 loss 3.93338: 100%|██████████| 28/28 [02:21<00:00,  5.07s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53482:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53482:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.43712:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4757[0m
[32m  eval_f1 = 0.1611[0m
[32m  eval_mcc = 0.4471[0m
[32m  eval_precision = 0.234[0m
[32m  eval_recall = 0.1535[0m
[32m  ********************[0m
[32m  Best f1:0.1611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.43712:   7%|▋         | 2/28 [00:06<01:40,  3.86s/it]epoch 1 loss 2.40069:   7%|▋         | 2/28 [00:07<01:40,  3.86s/it]epoch 1 loss 2.40069:  11%|█         | 3/28 [00:07<00:57,  2.29s/it]epoch 1 loss 2.39758:  11%|█         | 3/28 [00:07<00:57,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5229[0m
[32m  eval_f1 = 0.1829[0m
[32m  eval_mcc = 0.4946[0m
[32m  eval_precision = 0.2311[0m
[32m  eval_recall = 0.1757[0m
[32m  ********************[0m
[32m  Best f1:0.1829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39758:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.39559:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.39559:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 1 loss 2.38695:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5382[0m
[32m  eval_f1 = 0.1883[0m
[32m  eval_mcc = 0.509[0m
[32m  eval_precision = 0.2386[0m
[32m  eval_recall = 0.1822[0m
[32m  ********************[0m
[32m  Best f1:0.1883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38695:  21%|██▏       | 6/28 [00:20<01:25,  3.89s/it]epoch 1 loss 2.36873:  21%|██▏       | 6/28 [00:20<01:25,  3.89s/it]epoch 1 loss 2.36873:  25%|██▌       | 7/28 [00:20<00:57,  2.76s/it]epoch 1 loss 2.33292:  25%|██▌       | 7/28 [00:20<00:57,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5492[0m
[32m  eval_f1 = 0.1976[0m
[32m  eval_mcc = 0.5203[0m
[32m  eval_precision = 0.2493[0m
[32m  eval_recall = 0.189[0m
[32m  ********************[0m
[32m  Best f1:0.1976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33292:  29%|██▊       | 8/28 [00:26<01:18,  3.90s/it]epoch 1 loss 2.30315:  29%|██▊       | 8/28 [00:27<01:18,  3.90s/it]epoch 1 loss 2.30315:  32%|███▏      | 9/28 [00:27<00:53,  2.82s/it]epoch 1 loss 2.2859:  32%|███▏      | 9/28 [00:27<00:53,  2.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5511[0m
[32m  eval_f1 = 0.1966[0m
[32m  eval_mcc = 0.5226[0m
[32m  eval_precision = 0.2537[0m
[32m  eval_recall = 0.1878[0m
[32m  ********************[0m
[32m  Best MCC:0.5226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2859:  36%|███▌      | 10/28 [00:32<01:01,  3.39s/it]epoch 1 loss 2.2605:  36%|███▌      | 10/28 [00:32<01:01,  3.39s/it]epoch 1 loss 2.2605:  39%|███▉      | 11/28 [00:32<00:42,  2.48s/it]epoch 1 loss 2.23717:  39%|███▉      | 11/28 [00:32<00:42,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5566[0m
[32m  eval_f1 = 0.2013[0m
[32m  eval_mcc = 0.5302[0m
[32m  eval_precision = 0.2714[0m
[32m  eval_recall = 0.1897[0m
[32m  ********************[0m
[32m  Best f1:0.2013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23717:  43%|████▎     | 12/28 [00:38<00:58,  3.64s/it]epoch 1 loss 2.20823:  43%|████▎     | 12/28 [00:39<00:58,  3.64s/it]epoch 1 loss 2.20823:  46%|████▋     | 13/28 [00:39<00:39,  2.66s/it]epoch 1 loss 2.19592:  46%|████▋     | 13/28 [00:39<00:39,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.554[0m
[32m  eval_f1 = 0.2049[0m
[32m  eval_mcc = 0.5301[0m
[32m  eval_precision = 0.2769[0m
[32m  eval_recall = 0.1922[0m
[32m  ********************[0m
[32m  Best f1:0.2049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.19592:  50%|█████     | 14/28 [00:44<00:46,  3.36s/it]epoch 1 loss 2.17017:  50%|█████     | 14/28 [00:44<00:46,  3.36s/it]epoch 1 loss 2.17017:  54%|█████▎    | 15/28 [00:44<00:32,  2.47s/it]epoch 1 loss 2.15238:  54%|█████▎    | 15/28 [00:44<00:32,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.567[0m
[32m  eval_f1 = 0.2105[0m
[32m  eval_mcc = 0.5449[0m
[32m  eval_precision = 0.28[0m
[32m  eval_recall = 0.1991[0m
[32m  ********************[0m
[32m  Best f1:0.2105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15238:  57%|█████▋    | 16/28 [00:50<00:43,  3.62s/it]epoch 1 loss 2.13533:  57%|█████▋    | 16/28 [00:51<00:43,  3.62s/it]epoch 1 loss 2.13533:  61%|██████    | 17/28 [00:51<00:29,  2.66s/it]epoch 1 loss 2.12108:  61%|██████    | 17/28 [00:51<00:29,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5757[0m
[32m  eval_f1 = 0.2166[0m
[32m  eval_mcc = 0.5537[0m
[32m  eval_precision = 0.2853[0m
[32m  eval_recall = 0.2065[0m
[32m  ********************[0m
[32m  Best f1:0.2166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12108:  64%|██████▍   | 18/28 [00:57<00:37,  3.76s/it]epoch 1 loss 2.10191:  64%|██████▍   | 18/28 [00:58<00:37,  3.76s/it]epoch 1 loss 2.10191:  68%|██████▊   | 19/28 [00:58<00:24,  2.76s/it]epoch 1 loss 2.08429:  68%|██████▊   | 19/28 [00:58<00:24,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5878[0m
[32m  eval_f1 = 0.2205[0m
[32m  eval_mcc = 0.565[0m
[32m  eval_precision = 0.2813[0m
[32m  eval_recall = 0.2105[0m
[32m  ********************[0m
[32m  Best f1:0.2205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08429:  71%|███████▏  | 20/28 [01:04<00:31,  3.90s/it]epoch 1 loss 2.06919:  71%|███████▏  | 20/28 [01:04<00:31,  3.90s/it]epoch 1 loss 2.06919:  75%|███████▌  | 21/28 [01:04<00:19,  2.85s/it]epoch 1 loss 2.05858:  75%|███████▌  | 21/28 [01:05<00:19,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5923[0m
[32m  eval_f1 = 0.2232[0m
[32m  eval_mcc = 0.5692[0m
[32m  eval_precision = 0.2819[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05858:  79%|███████▊  | 22/28 [01:11<00:23,  3.92s/it]epoch 1 loss 2.04413:  79%|███████▊  | 22/28 [01:11<00:23,  3.92s/it]epoch 1 loss 2.04413:  82%|████████▏ | 23/28 [01:11<00:14,  2.87s/it]epoch 1 loss 2.02912:  82%|████████▏ | 23/28 [01:12<00:14,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5952[0m
[32m  eval_f1 = 0.2261[0m
[32m  eval_mcc = 0.573[0m
[32m  eval_precision = 0.2778[0m
[32m  eval_recall = 0.2161[0m
[32m  ********************[0m
[32m  Best f1:0.2261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02912:  86%|████████▌ | 24/28 [01:18<00:15,  3.92s/it]epoch 1 loss 2.02191:  86%|████████▌ | 24/28 [01:18<00:15,  3.92s/it]epoch 1 loss 2.02191:  89%|████████▉ | 25/28 [01:18<00:08,  2.87s/it]epoch 1 loss 2.01272:  89%|████████▉ | 25/28 [01:19<00:08,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5976[0m
[32m  eval_f1 = 0.2308[0m
[32m  eval_mcc = 0.5753[0m
[32m  eval_precision = 0.301[0m
[32m  eval_recall = 0.2196[0m
[32m  ********************[0m
[32m  Best f1:0.2308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01272:  93%|█████████▎| 26/28 [01:33<00:13,  6.63s/it]epoch 1 loss 1.99754:  93%|█████████▎| 26/28 [01:34<00:13,  6.63s/it]epoch 1 loss 1.99754:  96%|█████████▋| 27/28 [01:34<00:04,  4.77s/it]epoch 1 loss 1.99269:  96%|█████████▋| 27/28 [01:34<00:04,  4.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5996[0m
[32m  eval_f1 = 0.2326[0m
[32m  eval_mcc = 0.577[0m
[32m  eval_precision = 0.3148[0m
[32m  eval_recall = 0.2218[0m
[32m  ********************[0m
[32m  Best f1:0.2326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99269: 100%|██████████| 28/28 [01:47<00:00,  7.11s/it]epoch 1 loss 1.99269: 100%|██████████| 28/28 [01:47<00:00,  3.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.6192:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.6192:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.64154:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6005[0m
[32m  eval_f1 = 0.235[0m
[32m  eval_mcc = 0.5772[0m
[32m  eval_precision = 0.354[0m
[32m  eval_recall = 0.2242[0m
[32m  ********************[0m
[32m  Best f1:0.235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64154:   7%|▋         | 2/28 [00:12<03:08,  7.27s/it]epoch 2 loss 1.62556:   7%|▋         | 2/28 [00:12<03:08,  7.27s/it]epoch 2 loss 1.62556:  11%|█         | 3/28 [00:12<01:43,  4.14s/it]epoch 2 loss 1.59926:  11%|█         | 3/28 [00:13<01:43,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6021[0m
[32m  eval_f1 = 0.2412[0m
[32m  eval_mcc = 0.5789[0m
[32m  eval_precision = 0.3636[0m
[32m  eval_recall = 0.229[0m
[32m  ********************[0m
[32m  Best f1:0.2412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59926:  14%|█▍        | 4/28 [00:24<02:51,  7.13s/it]epoch 2 loss 1.61637:  14%|█▍        | 4/28 [00:25<02:51,  7.13s/it]epoch 2 loss 1.61637:  18%|█▊        | 5/28 [00:25<01:48,  4.72s/it]epoch 2 loss 1.61549:  18%|█▊        | 5/28 [00:25<01:48,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6077[0m
[32m  eval_f1 = 0.2464[0m
[32m  eval_mcc = 0.5851[0m
[32m  eval_precision = 0.3714[0m
[32m  eval_recall = 0.2328[0m
[32m  ********************[0m
[32m  Best f1:0.2464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61549:  21%|██▏       | 6/28 [00:36<02:35,  7.09s/it]epoch 2 loss 1.61465:  21%|██▏       | 6/28 [00:37<02:35,  7.09s/it]epoch 2 loss 1.61465:  25%|██▌       | 7/28 [00:37<01:43,  4.91s/it]epoch 2 loss 1.59614:  25%|██▌       | 7/28 [00:37<01:43,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6102[0m
[32m  eval_f1 = 0.2514[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2353[0m
[32m  ********************[0m
[32m  Best f1:0.2514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59614:  29%|██▊       | 8/28 [00:46<02:06,  6.33s/it]epoch 2 loss 1.60525:  29%|██▊       | 8/28 [00:46<02:06,  6.33s/it]epoch 2 loss 1.60525:  32%|███▏      | 9/28 [00:46<01:25,  4.48s/it]epoch 2 loss 1.61913:  32%|███▏      | 9/28 [00:47<01:25,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6117[0m
[32m  eval_f1 = 0.2542[0m
[32m  eval_mcc = 0.5914[0m
[32m  eval_precision = 0.3782[0m
[32m  eval_recall = 0.2371[0m
[32m  ********************[0m
[32m  Best f1:0.2542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61913:  36%|███▌      | 10/28 [00:58<01:58,  6.60s/it]epoch 2 loss 1.61471:  36%|███▌      | 10/28 [00:58<01:58,  6.60s/it]epoch 2 loss 1.61471:  39%|███▉      | 11/28 [00:58<01:20,  4.71s/it]epoch 2 loss 1.62086:  39%|███▉      | 11/28 [00:59<01:20,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6138[0m
[32m  eval_f1 = 0.2738[0m
[32m  eval_mcc = 0.5933[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.253[0m
[32m  ********************[0m
[32m  Best f1:0.2738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62086:  43%|████▎     | 12/28 [01:09<01:46,  6.68s/it]epoch 2 loss 1.60679:  43%|████▎     | 12/28 [01:10<01:46,  6.68s/it]epoch 2 loss 1.60679:  46%|████▋     | 13/28 [01:10<01:11,  4.78s/it]epoch 2 loss 1.61048:  46%|████▋     | 13/28 [01:10<01:11,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6157[0m
[32m  eval_f1 = 0.2808[0m
[32m  eval_mcc = 0.5946[0m
[32m  eval_precision = 0.3959[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61048:  50%|█████     | 14/28 [01:18<01:22,  5.91s/it]epoch 2 loss 1.59826:  50%|█████     | 14/28 [01:19<01:22,  5.91s/it]epoch 2 loss 1.59826:  54%|█████▎    | 15/28 [01:19<00:55,  4.26s/it]epoch 2 loss 1.59849:  54%|█████▎    | 15/28 [01:19<00:55,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2825[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3988[0m
[32m  eval_recall = 0.2614[0m
[32m  ********************[0m
[32m  Best f1:0.2825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59849:  57%|█████▋    | 16/28 [01:28<01:09,  5.83s/it]epoch 2 loss 1.59776:  57%|█████▋    | 16/28 [01:29<01:09,  5.83s/it]epoch 2 loss 1.59776:  61%|██████    | 17/28 [01:29<00:46,  4.21s/it]epoch 2 loss 1.59528:  61%|██████    | 17/28 [01:29<00:46,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6197[0m
[32m  eval_f1 = 0.2938[0m
[32m  eval_mcc = 0.5973[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.2702[0m
[32m  ********************[0m
[32m  Best f1:0.2938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59528:  64%|██████▍   | 18/28 [01:36<00:51,  5.14s/it]epoch 2 loss 1.59182:  64%|██████▍   | 18/28 [01:36<00:51,  5.14s/it]epoch 2 loss 1.59182:  68%|██████▊   | 19/28 [01:36<00:33,  3.72s/it]epoch 2 loss 1.58722:  68%|██████▊   | 19/28 [01:37<00:33,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6225[0m
[32m  eval_f1 = 0.3026[0m
[32m  eval_mcc = 0.6[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.279[0m
[32m  ********************[0m
[32m  Best f1:0.3026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58722:  71%|███████▏  | 20/28 [01:47<00:47,  5.88s/it]epoch 2 loss 1.57725:  71%|███████▏  | 20/28 [01:48<00:47,  5.88s/it]epoch 2 loss 1.57725:  75%|███████▌  | 21/28 [01:48<00:29,  4.24s/it]epoch 2 loss 1.57753:  75%|███████▌  | 21/28 [01:48<00:29,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6239[0m
[32m  eval_f1 = 0.3045[0m
[32m  eval_mcc = 0.6018[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.28[0m
[32m  ********************[0m
[32m  Best f1:0.3045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57753:  79%|███████▊  | 22/28 [01:55<00:31,  5.17s/it]epoch 2 loss 1.56577:  79%|███████▊  | 22/28 [01:56<00:31,  5.17s/it]epoch 2 loss 1.56577:  82%|████████▏ | 23/28 [01:56<00:18,  3.75s/it]epoch 2 loss 1.56046:  82%|████████▏ | 23/28 [01:56<00:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.3062[0m
[32m  eval_mcc = 0.6041[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.2804[0m
[32m  ********************[0m
[32m  Best f1:0.3062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56046:  86%|████████▌ | 24/28 [02:06<00:22,  5.69s/it]epoch 2 loss 1.5558:  86%|████████▌ | 24/28 [02:06<00:22,  5.69s/it] epoch 2 loss 1.5558:  89%|████████▉ | 25/28 [02:06<00:12,  4.11s/it]epoch 2 loss 1.55231:  89%|████████▉ | 25/28 [02:07<00:12,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.3051[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55231:  93%|█████████▎| 26/28 [02:12<00:09,  4.54s/it]epoch 2 loss 1.54672:  93%|█████████▎| 26/28 [02:12<00:09,  4.54s/it]epoch 2 loss 1.54672:  96%|█████████▋| 27/28 [02:12<00:03,  3.31s/it]epoch 2 loss 1.54438:  96%|█████████▋| 27/28 [02:12<00:03,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.3064[0m
[32m  eval_mcc = 0.6071[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.281[0m
[32m  ********************[0m
[32m  Best f1:0.3064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54438: 100%|██████████| 28/28 [02:22<00:00,  5.14s/it]epoch 2 loss 1.54438: 100%|██████████| 28/28 [02:22<00:00,  5.07s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.52816:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.52816:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.45202:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6284[0m
[32m  eval_f1 = 0.3094[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.4202[0m
[32m  eval_recall = 0.2844[0m
[32m  ********************[0m
[32m  Best f1:0.3094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45202:   7%|▋         | 2/28 [00:08<02:01,  4.69s/it]epoch 3 loss 1.45496:   7%|▋         | 2/28 [00:08<02:01,  4.69s/it]epoch 3 loss 1.45496:  11%|█         | 3/28 [00:08<01:08,  2.74s/it]epoch 3 loss 1.44039:  11%|█         | 3/28 [00:08<01:08,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6316[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.4348[0m
[32m  eval_recall = 0.2917[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44039:  14%|█▍        | 4/28 [00:19<02:19,  5.80s/it]epoch 3 loss 1.44102:  14%|█▍        | 4/28 [00:19<02:19,  5.80s/it]epoch 3 loss 1.44102:  18%|█▊        | 5/28 [00:19<01:28,  3.86s/it]epoch 3 loss 1.42779:  18%|█▊        | 5/28 [00:19<01:28,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.319[0m
[32m  eval_mcc = 0.6107[0m
[32m  eval_precision = 0.4358[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42779:  21%|██▏       | 6/28 [00:25<01:38,  4.49s/it]epoch 3 loss 1.42606:  21%|██▏       | 6/28 [00:25<01:38,  4.49s/it]epoch 3 loss 1.42606:  25%|██▌       | 7/28 [00:25<01:06,  3.16s/it]epoch 3 loss 1.41851:  25%|██▌       | 7/28 [00:25<01:06,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.3185[0m
[32m  eval_mcc = 0.6105[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.2953[0m

epoch 3 loss 1.41851:  29%|██▊       | 8/28 [00:29<01:07,  3.36s/it]epoch 3 loss 1.44081:  29%|██▊       | 8/28 [00:29<01:07,  3.36s/it]epoch 3 loss 1.44081:  32%|███▏      | 9/28 [00:29<00:46,  2.43s/it]epoch 3 loss 1.44632:  32%|███▏      | 9/28 [00:30<00:46,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.3198[0m
[32m  eval_mcc = 0.6122[0m
[32m  eval_precision = 0.4365[0m
[32m  eval_recall = 0.2967[0m
[32m  ********************[0m
[32m  Best f1:0.3198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44632:  36%|███▌      | 10/28 [00:36<01:05,  3.65s/it]epoch 3 loss 1.45264:  36%|███▌      | 10/28 [00:36<01:05,  3.65s/it]epoch 3 loss 1.45264:  39%|███▉      | 11/28 [00:36<00:45,  2.66s/it]epoch 3 loss 1.4475:  39%|███▉      | 11/28 [00:36<00:45,  2.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4475:  43%|████▎     | 12/28 [00:42<01:00,  3.80s/it]epoch 3 loss 1.44878:  43%|████▎     | 12/28 [00:43<01:00,  3.80s/it]epoch 3 loss 1.44878:  46%|████▋     | 13/28 [00:43<00:41,  2.77s/it]epoch 3 loss 1.44901:  46%|████▋     | 13/28 [00:43<00:41,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.3229[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44901:  50%|█████     | 14/28 [00:49<00:53,  3.82s/it]epoch 3 loss 1.4481:  50%|█████     | 14/28 [00:50<00:53,  3.82s/it] epoch 3 loss 1.4481:  54%|█████▎    | 15/28 [00:50<00:36,  2.80s/it]epoch 3 loss 1.44999:  54%|█████▎    | 15/28 [00:50<00:36,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44999:  57%|█████▋    | 16/28 [00:56<00:45,  3.83s/it]epoch 3 loss 1.44285:  57%|█████▋    | 16/28 [00:56<00:45,  3.83s/it]epoch 3 loss 1.44285:  61%|██████    | 17/28 [00:56<00:30,  2.81s/it]epoch 3 loss 1.43978:  61%|██████    | 17/28 [00:57<00:30,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.327[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43978:  64%|██████▍   | 18/28 [01:03<00:38,  3.87s/it]epoch 3 loss 1.43637:  64%|██████▍   | 18/28 [01:03<00:38,  3.87s/it]epoch 3 loss 1.43637:  68%|██████▊   | 19/28 [01:03<00:25,  2.84s/it]epoch 3 loss 1.43024:  68%|██████▊   | 19/28 [01:03<00:25,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4453[0m
[32m  eval_recall = 0.3011[0m
[32m  ********************[0m
[32m  Best f1:0.3274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43024:  71%|███████▏  | 20/28 [01:09<00:30,  3.86s/it]epoch 3 loss 1.42874:  71%|███████▏  | 20/28 [01:10<00:30,  3.86s/it]epoch 3 loss 1.42874:  75%|███████▌  | 21/28 [01:10<00:19,  2.82s/it]epoch 3 loss 1.42835:  75%|███████▌  | 21/28 [01:10<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.4453[0m
[32m  eval_recall = 0.3013[0m
[32m  ********************[0m
[32m  Best f1:0.3281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42835:  79%|███████▊  | 22/28 [01:17<00:25,  4.28s/it]epoch 3 loss 1.43415:  79%|███████▊  | 22/28 [01:18<00:25,  4.28s/it]epoch 3 loss 1.43415:  82%|████████▏ | 23/28 [01:18<00:15,  3.12s/it]epoch 3 loss 1.43486:  82%|████████▏ | 23/28 [01:18<00:15,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6384[0m
[32m  eval_f1 = 0.3291[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4487[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best f1:0.3291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43486:  86%|████████▌ | 24/28 [01:29<00:22,  5.65s/it]epoch 3 loss 1.43398:  86%|████████▌ | 24/28 [01:30<00:22,  5.65s/it]epoch 3 loss 1.43398:  89%|████████▉ | 25/28 [01:30<00:12,  4.08s/it]epoch 3 loss 1.43236:  89%|████████▉ | 25/28 [01:30<00:12,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.331[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43236:  93%|█████████▎| 26/28 [01:41<00:12,  6.25s/it]epoch 3 loss 1.43259:  93%|█████████▎| 26/28 [01:41<00:12,  6.25s/it]epoch 3 loss 1.43259:  96%|█████████▋| 27/28 [01:41<00:04,  4.50s/it]epoch 3 loss 1.43464:  96%|█████████▋| 27/28 [01:42<00:04,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3035[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43464: 100%|██████████| 28/28 [01:52<00:00,  6.42s/it]epoch 3 loss 1.43464: 100%|██████████| 28/28 [01:52<00:00,  4.03s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28957:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28957:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.3616:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3335[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4715[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3616:   7%|▋         | 2/28 [00:07<01:56,  4.47s/it]epoch 4 loss 1.3633:   7%|▋         | 2/28 [00:08<01:56,  4.47s/it]epoch 4 loss 1.3633:  11%|█         | 3/28 [00:08<01:05,  2.63s/it]epoch 4 loss 1.3774:  11%|█         | 3/28 [00:08<01:05,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6219[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3062[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3774:  14%|█▍        | 4/28 [00:18<02:15,  5.64s/it]epoch 4 loss 1.38278:  14%|█▍        | 4/28 [00:18<02:15,  5.64s/it]epoch 4 loss 1.38278:  18%|█▊        | 5/28 [00:18<01:26,  3.76s/it]epoch 4 loss 1.39419:  18%|█▊        | 5/28 [00:19<01:26,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4732[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39419:  21%|██▏       | 6/28 [00:24<01:39,  4.53s/it]epoch 4 loss 1.41158:  21%|██▏       | 6/28 [00:25<01:39,  4.53s/it]epoch 4 loss 1.41158:  25%|██▌       | 7/28 [00:25<01:06,  3.19s/it]epoch 4 loss 1.40422:  25%|██▌       | 7/28 [00:25<01:06,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.3342[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.473[0m
[32m  eval_recall = 0.306[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40422:  29%|██▊       | 8/28 [00:32<01:29,  4.48s/it]epoch 4 loss 1.39406:  29%|██▊       | 8/28 [00:32<01:29,  4.48s/it]epoch 4 loss 1.39406:  32%|███▏      | 9/28 [00:32<01:01,  3.22s/it]epoch 4 loss 1.40515:  32%|███▏      | 9/28 [00:33<01:01,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3327[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40515:  36%|███▌      | 10/28 [00:40<01:20,  4.48s/it]epoch 4 loss 1.40483:  36%|███▌      | 10/28 [00:40<01:20,  4.48s/it]epoch 4 loss 1.40483:  39%|███▉      | 11/28 [00:40<00:55,  3.24s/it]epoch 4 loss 1.40323:  39%|███▉      | 11/28 [00:41<00:55,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40323:  43%|████▎     | 12/28 [00:48<01:11,  4.48s/it]epoch 4 loss 1.3975:  43%|████▎     | 12/28 [00:48<01:11,  4.48s/it] epoch 4 loss 1.3975:  46%|████▋     | 13/28 [00:48<00:48,  3.25s/it]epoch 4 loss 1.40962:  46%|████▋     | 13/28 [00:48<00:48,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3338[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4527[0m
[32m  eval_recall = 0.3071[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40962:  50%|█████     | 14/28 [00:55<01:03,  4.52s/it]epoch 4 loss 1.40958:  50%|█████     | 14/28 [00:56<01:03,  4.52s/it]epoch 4 loss 1.40958:  54%|█████▎    | 15/28 [00:56<00:42,  3.28s/it]epoch 4 loss 1.4045:  54%|█████▎    | 15/28 [00:56<00:42,  3.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3342[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4523[0m
[32m  eval_recall = 0.3076[0m

epoch 4 loss 1.4045:  57%|█████▋    | 16/28 [01:00<00:41,  3.43s/it]epoch 4 loss 1.39713:  57%|█████▋    | 16/28 [01:00<00:41,  3.43s/it]epoch 4 loss 1.39713:  61%|██████    | 17/28 [01:00<00:27,  2.52s/it]epoch 4 loss 1.39276:  61%|██████    | 17/28 [01:00<00:27,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3074[0m

epoch 4 loss 1.39276:  64%|██████▍   | 18/28 [01:04<00:29,  2.90s/it]epoch 4 loss 1.39232:  64%|██████▍   | 18/28 [01:04<00:29,  2.90s/it]epoch 4 loss 1.39232:  68%|██████▊   | 19/28 [01:04<00:19,  2.15s/it]epoch 4 loss 1.39114:  68%|██████▊   | 19/28 [01:05<00:19,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4595[0m
[32m  eval_recall = 0.3085[0m
[32m  ********************[0m
[32m  Best f1:0.3358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39114:  71%|███████▏  | 20/28 [01:09<00:24,  3.02s/it]epoch 4 loss 1.3956:  71%|███████▏  | 20/28 [01:10<00:24,  3.02s/it] epoch 4 loss 1.3956:  75%|███████▌  | 21/28 [01:10<00:15,  2.24s/it]epoch 4 loss 1.39903:  75%|███████▌  | 21/28 [01:10<00:15,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.624[0m
[32m  eval_precision = 0.4586[0m
[32m  eval_recall = 0.3089[0m
[32m  ********************[0m
[32m  Best f1:0.3362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39903:  79%|███████▊  | 22/28 [01:20<00:27,  4.58s/it]epoch 4 loss 1.39359:  79%|███████▊  | 22/28 [01:20<00:27,  4.58s/it]epoch 4 loss 1.39359:  82%|████████▏ | 23/28 [01:20<00:16,  3.34s/it]epoch 4 loss 1.39159:  82%|████████▏ | 23/28 [01:21<00:16,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3365[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4588[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39159:  86%|████████▌ | 24/28 [01:27<00:18,  4.54s/it]epoch 4 loss 1.38973:  86%|████████▌ | 24/28 [01:28<00:18,  4.54s/it]epoch 4 loss 1.38973:  89%|████████▉ | 25/28 [01:28<00:09,  3.31s/it]epoch 4 loss 1.39103:  89%|████████▉ | 25/28 [01:28<00:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.458[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39103:  93%|█████████▎| 26/28 [01:37<00:09,  4.92s/it]epoch 4 loss 1.39011:  93%|█████████▎| 26/28 [01:37<00:09,  4.92s/it]epoch 4 loss 1.39011:  96%|█████████▋| 27/28 [01:37<00:03,  3.57s/it]epoch 4 loss 1.39401:  96%|█████████▋| 27/28 [01:37<00:03,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3093[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39401: 100%|██████████| 28/28 [01:45<00:00,  4.75s/it]epoch 4 loss 1.39401: 100%|██████████| 28/28 [01:45<00:00,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.69it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3093[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3024[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.4198[0m
[32m  eval_recall = 0.2782[0m

