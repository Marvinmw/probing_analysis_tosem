[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_9', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.12899:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.12899:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.12816:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0114[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = 0.0073[0m
[32m  eval_precision = 0.0156[0m
[32m  eval_recall = 0.0117[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12816:   7%|▋         | 2/28 [00:05<01:24,  3.27s/it]epoch 0 loss 5.11313:   7%|▋         | 2/28 [00:06<01:24,  3.27s/it]epoch 0 loss 5.11313:  11%|█         | 3/28 [00:06<00:48,  1.96s/it]epoch 0 loss 5.10458:  11%|█         | 3/28 [00:06<00:48,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0177[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = 0.0084[0m
[32m  eval_precision = 0.0139[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best MCC:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10458:  14%|█▍        | 4/28 [00:14<01:42,  4.29s/it]epoch 0 loss 5.08202:  14%|█▍        | 4/28 [00:14<01:42,  4.29s/it]epoch 0 loss 5.08202:  18%|█▊        | 5/28 [00:14<01:06,  2.90s/it]epoch 0 loss 5.05783:  18%|█▊        | 5/28 [00:14<01:06,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0423[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0195[0m
[32m  eval_precision = 0.0138[0m
[32m  eval_recall = 0.012[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05783:  21%|██▏       | 6/28 [00:24<01:58,  5.37s/it]epoch 0 loss 5.02248:  21%|██▏       | 6/28 [00:25<01:58,  5.37s/it]epoch 0 loss 5.02248:  25%|██▌       | 7/28 [00:25<01:18,  3.75s/it]epoch 0 loss 4.98171:  25%|██▌       | 7/28 [00:25<01:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0787[0m
[32m  eval_f1 = 0.0096[0m
[32m  eval_mcc = 0.0285[0m
[32m  eval_precision = 0.0136[0m
[32m  eval_recall = 0.0155[0m
[32m  ********************[0m
[32m  Best f1:0.0096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98171:  29%|██▊       | 8/28 [00:32<01:40,  5.00s/it]epoch 0 loss 4.93223:  29%|██▊       | 8/28 [00:33<01:40,  5.00s/it]epoch 0 loss 4.93223:  32%|███▏      | 9/28 [00:33<01:07,  3.57s/it]epoch 0 loss 4.88554:  32%|███▏      | 9/28 [00:33<01:07,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1088[0m
[32m  eval_f1 = 0.0151[0m
[32m  eval_mcc = 0.0424[0m
[32m  eval_precision = 0.0191[0m
[32m  eval_recall = 0.0204[0m
[32m  ********************[0m
[32m  Best f1:0.0151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88554:  36%|███▌      | 10/28 [00:39<01:20,  4.45s/it]epoch 0 loss 4.83069:  36%|███▌      | 10/28 [00:40<01:20,  4.45s/it]epoch 0 loss 4.83069:  39%|███▉      | 11/28 [00:40<00:54,  3.22s/it]epoch 0 loss 4.77063:  39%|███▉      | 11/28 [00:40<00:54,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1274[0m
[32m  eval_f1 = 0.0201[0m
[32m  eval_mcc = 0.0593[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0237[0m
[32m  ********************[0m
[32m  Best f1:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77063:  43%|████▎     | 12/28 [00:46<01:09,  4.33s/it]epoch 0 loss 4.70694:  43%|████▎     | 12/28 [00:47<01:09,  4.33s/it]epoch 0 loss 4.70694:  46%|████▋     | 13/28 [00:47<00:47,  3.15s/it]epoch 0 loss 4.64144:  46%|████▋     | 13/28 [00:47<00:47,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1419[0m
[32m  eval_f1 = 0.0165[0m
[32m  eval_mcc = 0.0727[0m
[32m  eval_precision = 0.0321[0m
[32m  eval_recall = 0.0208[0m
[32m  ********************[0m
[32m  Best MCC:0.0727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64144:  50%|█████     | 14/28 [00:52<00:54,  3.88s/it]epoch 0 loss 4.57899:  50%|█████     | 14/28 [00:53<00:54,  3.88s/it]epoch 0 loss 4.57899:  54%|█████▎    | 15/28 [00:53<00:36,  2.84s/it]epoch 0 loss 4.5135:  54%|█████▎    | 15/28 [00:53<00:36,  2.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1665[0m
[32m  eval_f1 = 0.0179[0m
[32m  eval_mcc = 0.0978[0m
[32m  eval_precision = 0.0314[0m
[32m  eval_recall = 0.0232[0m
[32m  ********************[0m
[32m  Best MCC:0.0978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.5135:  57%|█████▋    | 16/28 [00:58<00:43,  3.65s/it]epoch 0 loss 4.44627:  57%|█████▋    | 16/28 [00:59<00:43,  3.65s/it]epoch 0 loss 4.44627:  61%|██████    | 17/28 [00:59<00:29,  2.68s/it]epoch 0 loss 4.38791:  61%|██████    | 17/28 [00:59<00:29,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.201[0m
[32m  eval_f1 = 0.0208[0m
[32m  eval_mcc = 0.1355[0m
[32m  eval_precision = 0.0479[0m
[32m  eval_recall = 0.0273[0m
[32m  ********************[0m
[32m  Best f1:0.0208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38791:  64%|██████▍   | 18/28 [01:05<00:37,  3.76s/it]epoch 0 loss 4.32676:  64%|██████▍   | 18/28 [01:05<00:37,  3.76s/it]epoch 0 loss 4.32676:  68%|██████▊   | 19/28 [01:05<00:24,  2.76s/it]epoch 0 loss 4.27711:  68%|██████▊   | 19/28 [01:06<00:24,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2464[0m
[32m  eval_f1 = 0.0262[0m
[32m  eval_mcc = 0.1849[0m
[32m  eval_precision = 0.0396[0m
[32m  eval_recall = 0.0337[0m
[32m  ********************[0m
[32m  Best f1:0.0262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27711:  71%|███████▏  | 20/28 [01:12<00:30,  3.87s/it]epoch 0 loss 4.21536:  71%|███████▏  | 20/28 [01:12<00:30,  3.87s/it]epoch 0 loss 4.21536:  75%|███████▌  | 21/28 [01:12<00:19,  2.84s/it]epoch 0 loss 4.16859:  75%|███████▌  | 21/28 [01:13<00:19,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2793[0m
[32m  eval_f1 = 0.0323[0m
[32m  eval_mcc = 0.2265[0m
[32m  eval_precision = 0.0592[0m
[32m  eval_recall = 0.0391[0m
[32m  ********************[0m
[32m  Best f1:0.0323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16859:  79%|███████▊  | 22/28 [01:19<00:23,  3.87s/it]epoch 0 loss 4.11188:  79%|███████▊  | 22/28 [01:19<00:23,  3.87s/it]epoch 0 loss 4.11188:  82%|████████▏ | 23/28 [01:19<00:14,  2.84s/it]epoch 0 loss 4.0568:  82%|████████▏ | 23/28 [01:19<00:14,  2.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3256[0m
[32m  eval_f1 = 0.0634[0m
[32m  eval_mcc = 0.2841[0m
[32m  eval_precision = 0.1352[0m
[32m  eval_recall = 0.0635[0m
[32m  ********************[0m
[32m  Best f1:0.0634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0568:  86%|████████▌ | 24/28 [01:26<00:15,  3.93s/it]epoch 0 loss 4.00935:  86%|████████▌ | 24/28 [01:26<00:15,  3.93s/it]epoch 0 loss 4.00935:  89%|████████▉ | 25/28 [01:26<00:08,  2.88s/it]epoch 0 loss 3.95854:  89%|████████▉ | 25/28 [01:26<00:08,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.408[0m
[32m  eval_f1 = 0.1265[0m
[32m  eval_mcc = 0.3752[0m
[32m  eval_precision = 0.1905[0m
[32m  eval_recall = 0.1143[0m
[32m  ********************[0m
[32m  Best f1:0.1265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.95854:  93%|█████████▎| 26/28 [01:31<00:07,  3.67s/it]epoch 0 loss 3.90778:  93%|█████████▎| 26/28 [01:32<00:07,  3.67s/it]epoch 0 loss 3.90778:  96%|█████████▋| 27/28 [01:32<00:02,  2.69s/it]epoch 0 loss 3.85512:  96%|█████████▋| 27/28 [01:32<00:02,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4568[0m
[32m  eval_f1 = 0.1513[0m
[32m  eval_mcc = 0.427[0m
[32m  eval_precision = 0.2095[0m
[32m  eval_recall = 0.1397[0m
[32m  ********************[0m
[32m  Best f1:0.1513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.85512: 100%|██████████| 28/28 [01:38<00:00,  3.64s/it]epoch 0 loss 3.85512: 100%|██████████| 28/28 [01:38<00:00,  3.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.4234:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.4234:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.32304:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4972[0m
[32m  eval_f1 = 0.1727[0m
[32m  eval_mcc = 0.4697[0m
[32m  eval_precision = 0.2316[0m
[32m  eval_recall = 0.164[0m
[32m  ********************[0m
[32m  Best f1:0.1727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32304:   7%|▋         | 2/28 [00:08<02:11,  5.05s/it]epoch 1 loss 2.28605:   7%|▋         | 2/28 [00:09<02:11,  5.05s/it]epoch 1 loss 2.28605:  11%|█         | 3/28 [00:09<01:13,  2.94s/it]epoch 1 loss 2.28225:  11%|█         | 3/28 [00:09<01:13,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5334[0m
[32m  eval_f1 = 0.1876[0m
[32m  eval_mcc = 0.5051[0m
[32m  eval_precision = 0.2298[0m
[32m  eval_recall = 0.1807[0m
[32m  ********************[0m
[32m  Best f1:0.1876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28225:  14%|█▍        | 4/28 [00:15<01:43,  4.32s/it]epoch 1 loss 2.27947:  14%|█▍        | 4/28 [00:16<01:43,  4.32s/it]epoch 1 loss 2.27947:  18%|█▊        | 5/28 [00:16<01:07,  2.92s/it]epoch 1 loss 2.27043:  18%|█▊        | 5/28 [00:16<01:07,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5479[0m
[32m  eval_f1 = 0.1933[0m
[32m  eval_mcc = 0.5195[0m
[32m  eval_precision = 0.2463[0m
[32m  eval_recall = 0.1876[0m
[32m  ********************[0m
[32m  Best f1:0.1933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27043:  21%|██▏       | 6/28 [00:26<01:59,  5.43s/it]epoch 1 loss 2.25311:  21%|██▏       | 6/28 [00:26<01:59,  5.43s/it]epoch 1 loss 2.25311:  25%|██▌       | 7/28 [00:26<01:19,  3.79s/it]epoch 1 loss 2.21701:  25%|██▌       | 7/28 [00:27<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5614[0m
[32m  eval_f1 = 0.2007[0m
[32m  eval_mcc = 0.5337[0m
[32m  eval_precision = 0.247[0m
[32m  eval_recall = 0.1942[0m
[32m  ********************[0m
[32m  Best f1:0.2007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21701:  29%|██▊       | 8/28 [00:34<01:41,  5.05s/it]epoch 1 loss 2.18831:  29%|██▊       | 8/28 [00:34<01:41,  5.05s/it]epoch 1 loss 2.18831:  32%|███▏      | 9/28 [00:34<01:08,  3.60s/it]epoch 1 loss 2.17271:  32%|███▏      | 9/28 [00:35<01:08,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5688[0m
[32m  eval_f1 = 0.2124[0m
[32m  eval_mcc = 0.5417[0m
[32m  eval_precision = 0.2848[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.2124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17271:  36%|███▌      | 10/28 [00:45<01:45,  5.86s/it]epoch 1 loss 2.14824:  36%|███▌      | 10/28 [00:46<01:45,  5.86s/it]epoch 1 loss 2.14824:  39%|███▉      | 11/28 [00:46<01:11,  4.20s/it]epoch 1 loss 2.12612:  39%|███▉      | 11/28 [00:46<01:11,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5772[0m
[32m  eval_f1 = 0.2186[0m
[32m  eval_mcc = 0.5516[0m
[32m  eval_precision = 0.2911[0m
[32m  eval_recall = 0.2068[0m
[32m  ********************[0m
[32m  Best f1:0.2186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12612:  43%|████▎     | 12/28 [00:57<01:41,  6.37s/it]epoch 1 loss 2.09926:  43%|████▎     | 12/28 [00:58<01:41,  6.37s/it]epoch 1 loss 2.09926:  46%|████▋     | 13/28 [00:58<01:08,  4.57s/it]epoch 1 loss 2.08811:  46%|████▋     | 13/28 [00:58<01:08,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.582[0m
[32m  eval_f1 = 0.2236[0m
[32m  eval_mcc = 0.5592[0m
[32m  eval_precision = 0.2944[0m
[32m  eval_recall = 0.2098[0m
[32m  ********************[0m
[32m  Best f1:0.2236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08811:  50%|█████     | 14/28 [01:08<01:30,  6.50s/it]epoch 1 loss 2.06313:  50%|█████     | 14/28 [01:09<01:30,  6.50s/it]epoch 1 loss 2.06313:  54%|█████▎    | 15/28 [01:09<01:00,  4.67s/it]epoch 1 loss 2.0464:  54%|█████▎    | 15/28 [01:09<01:00,  4.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5849[0m
[32m  eval_f1 = 0.2242[0m
[32m  eval_mcc = 0.5642[0m
[32m  eval_precision = 0.2959[0m
[32m  eval_recall = 0.2111[0m
[32m  ********************[0m
[32m  Best f1:0.2242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0464:  57%|█████▋    | 16/28 [01:20<01:18,  6.57s/it]epoch 1 loss 2.03058:  57%|█████▋    | 16/28 [01:20<01:18,  6.57s/it]epoch 1 loss 2.03058:  61%|██████    | 17/28 [01:20<00:51,  4.72s/it]epoch 1 loss 2.01668:  61%|██████    | 17/28 [01:21<00:51,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5908[0m
[32m  eval_f1 = 0.2277[0m
[32m  eval_mcc = 0.5705[0m
[32m  eval_precision = 0.3097[0m
[32m  eval_recall = 0.2151[0m
[32m  ********************[0m
[32m  Best f1:0.2277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01668:  64%|██████▍   | 18/28 [01:31<01:06,  6.63s/it]epoch 1 loss 1.99895:  64%|██████▍   | 18/28 [01:32<01:06,  6.63s/it]epoch 1 loss 1.99895:  68%|██████▊   | 19/28 [01:32<00:42,  4.76s/it]epoch 1 loss 1.98221:  68%|██████▊   | 19/28 [01:32<00:42,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.598[0m
[32m  eval_f1 = 0.2347[0m
[32m  eval_mcc = 0.5765[0m
[32m  eval_precision = 0.3119[0m
[32m  eval_recall = 0.2207[0m
[32m  ********************[0m
[32m  Best f1:0.2347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98221:  71%|███████▏  | 20/28 [01:41<00:48,  6.11s/it]epoch 1 loss 1.96817:  71%|███████▏  | 20/28 [01:41<00:48,  6.11s/it]epoch 1 loss 1.96817:  75%|███████▌  | 21/28 [01:41<00:30,  4.40s/it]epoch 1 loss 1.95862:  75%|███████▌  | 21/28 [01:42<00:30,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6007[0m
[32m  eval_f1 = 0.238[0m
[32m  eval_mcc = 0.5784[0m
[32m  eval_precision = 0.3125[0m
[32m  eval_recall = 0.2241[0m
[32m  ********************[0m
[32m  Best f1:0.238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95862:  79%|███████▊  | 22/28 [01:52<00:37,  6.22s/it]epoch 1 loss 1.94538:  79%|███████▊  | 22/28 [01:52<00:37,  6.22s/it]epoch 1 loss 1.94538:  82%|████████▏ | 23/28 [01:52<00:22,  4.48s/it]epoch 1 loss 1.93114:  82%|████████▏ | 23/28 [01:53<00:22,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6039[0m
[32m  eval_f1 = 0.2408[0m
[32m  eval_mcc = 0.5818[0m
[32m  eval_precision = 0.3344[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.2408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93114:  86%|████████▌ | 24/28 [02:02<00:23,  5.99s/it]epoch 1 loss 1.92476:  86%|████████▌ | 24/28 [02:02<00:23,  5.99s/it]epoch 1 loss 1.92476:  89%|████████▉ | 25/28 [02:02<00:12,  4.32s/it]epoch 1 loss 1.91652:  89%|████████▉ | 25/28 [02:03<00:12,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.2452[0m
[32m  eval_mcc = 0.5852[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.231[0m
[32m  ********************[0m
[32m  Best f1:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91652:  93%|█████████▎| 26/28 [02:12<00:12,  6.07s/it]epoch 1 loss 1.90207:  93%|█████████▎| 26/28 [02:13<00:12,  6.07s/it]epoch 1 loss 1.90207:  96%|█████████▋| 27/28 [02:13<00:04,  4.38s/it]epoch 1 loss 1.89717:  96%|█████████▋| 27/28 [02:13<00:04,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6103[0m
[32m  eval_f1 = 0.2527[0m
[32m  eval_mcc = 0.5878[0m
[32m  eval_precision = 0.3725[0m
[32m  eval_recall = 0.2365[0m
[32m  ********************[0m
[32m  Best f1:0.2527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89717: 100%|██████████| 28/28 [02:23<00:00,  6.12s/it]epoch 1 loss 1.89717: 100%|██████████| 28/28 [02:23<00:00,  5.13s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.55441:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.55441:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.57572:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6145[0m
[32m  eval_f1 = 0.2654[0m
[32m  eval_mcc = 0.5918[0m
[32m  eval_precision = 0.3844[0m
[32m  eval_recall = 0.2464[0m
[32m  ********************[0m
[32m  Best f1:0.2654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57572:   7%|▋         | 2/28 [00:08<02:13,  5.15s/it]epoch 2 loss 1.5586:   7%|▋         | 2/28 [00:09<02:13,  5.15s/it] epoch 2 loss 1.5586:  11%|█         | 3/28 [00:09<01:14,  3.00s/it]epoch 2 loss 1.53271:  11%|█         | 3/28 [00:09<01:14,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.2715[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.3829[0m
[32m  eval_recall = 0.2527[0m
[32m  ********************[0m
[32m  Best f1:0.2715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53271:  14%|█▍        | 4/28 [00:19<02:19,  5.81s/it]epoch 2 loss 1.54785:  14%|█▍        | 4/28 [00:19<02:19,  5.81s/it]epoch 2 loss 1.54785:  18%|█▊        | 5/28 [00:19<01:28,  3.87s/it]epoch 2 loss 1.54607:  18%|█▊        | 5/28 [00:20<01:28,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.2799[0m
[32m  eval_mcc = 0.5985[0m
[32m  eval_precision = 0.4133[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54607:  21%|██▏       | 6/28 [00:26<01:49,  4.98s/it]epoch 2 loss 1.54503:  21%|██▏       | 6/28 [00:27<01:49,  4.98s/it]epoch 2 loss 1.54503:  25%|██▌       | 7/28 [00:27<01:13,  3.49s/it]epoch 2 loss 1.52752:  25%|██▌       | 7/28 [00:27<01:13,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2817[0m
[32m  eval_mcc = 0.6014[0m
[32m  eval_precision = 0.412[0m
[32m  eval_recall = 0.2599[0m
[32m  ********************[0m
[32m  Best f1:0.2817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52752:  29%|██▊       | 8/28 [00:37<01:53,  5.68s/it]epoch 2 loss 1.53694:  29%|██▊       | 8/28 [00:38<01:53,  5.68s/it]epoch 2 loss 1.53694:  32%|███▏      | 9/28 [00:38<01:16,  4.04s/it]epoch 2 loss 1.55073:  32%|███▏      | 9/28 [00:38<01:16,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6243[0m
[32m  eval_f1 = 0.2974[0m
[32m  eval_mcc = 0.6046[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.2732[0m
[32m  ********************[0m
[32m  Best f1:0.2974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55073:  36%|███▌      | 10/28 [00:45<01:30,  5.02s/it]epoch 2 loss 1.5469:  36%|███▌      | 10/28 [00:45<01:30,  5.02s/it] epoch 2 loss 1.5469:  39%|███▉      | 11/28 [00:45<01:01,  3.61s/it]epoch 2 loss 1.55369:  39%|███▉      | 11/28 [00:46<01:01,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.2982[0m
[32m  eval_mcc = 0.6054[0m
[32m  eval_precision = 0.4326[0m
[32m  eval_recall = 0.2743[0m
[32m  ********************[0m
[32m  Best f1:0.2982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55369:  43%|████▎     | 12/28 [00:55<01:29,  5.57s/it]epoch 2 loss 1.5399:  43%|████▎     | 12/28 [00:56<01:29,  5.57s/it] epoch 2 loss 1.5399:  46%|████▋     | 13/28 [00:56<01:00,  4.01s/it]epoch 2 loss 1.54373:  46%|████▋     | 13/28 [00:56<01:00,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6275[0m
[32m  eval_f1 = 0.3001[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.4237[0m
[32m  eval_recall = 0.2763[0m
[32m  ********************[0m
[32m  Best f1:0.3001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54373:  50%|█████     | 14/28 [01:02<01:03,  4.55s/it]epoch 2 loss 1.53185:  50%|█████     | 14/28 [01:02<01:03,  4.55s/it]epoch 2 loss 1.53185:  54%|█████▎    | 15/28 [01:02<00:43,  3.31s/it]epoch 2 loss 1.53219:  54%|█████▎    | 15/28 [01:02<00:43,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.279[0m
[32m  ********************[0m
[32m  Best f1:0.3022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53219:  57%|█████▋    | 16/28 [01:08<00:50,  4.18s/it]epoch 2 loss 1.53175:  57%|█████▋    | 16/28 [01:09<00:50,  4.18s/it]epoch 2 loss 1.53175:  61%|██████    | 17/28 [01:09<00:33,  3.05s/it]epoch 2 loss 1.52918:  61%|██████    | 17/28 [01:09<00:33,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3048[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.4452[0m
[32m  eval_recall = 0.2815[0m
[32m  ********************[0m
[32m  Best f1:0.3048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52918:  64%|██████▍   | 18/28 [01:15<00:39,  3.95s/it]epoch 2 loss 1.52565:  64%|██████▍   | 18/28 [01:15<00:39,  3.95s/it]epoch 2 loss 1.52565:  68%|██████▊   | 19/28 [01:15<00:26,  2.89s/it]epoch 2 loss 1.52151:  68%|██████▊   | 19/28 [01:16<00:26,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.3187[0m
[32m  eval_mcc = 0.6118[0m
[32m  eval_precision = 0.4478[0m
[32m  eval_recall = 0.2947[0m
[32m  ********************[0m
[32m  Best f1:0.3187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52151:  71%|███████▏  | 20/28 [01:21<00:29,  3.69s/it]epoch 2 loss 1.51149:  71%|███████▏  | 20/28 [01:21<00:29,  3.69s/it]epoch 2 loss 1.51149:  75%|███████▌  | 21/28 [01:21<00:18,  2.71s/it]epoch 2 loss 1.51182:  75%|███████▌  | 21/28 [01:22<00:18,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.4515[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51182:  79%|███████▊  | 22/28 [01:27<00:22,  3.71s/it]epoch 2 loss 1.50072:  79%|███████▊  | 22/28 [01:28<00:22,  3.71s/it]epoch 2 loss 1.50072:  82%|████████▏ | 23/28 [01:28<00:13,  2.72s/it]epoch 2 loss 1.49557:  82%|████████▏ | 23/28 [01:28<00:13,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.3255[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.2988[0m
[32m  ********************[0m
[32m  Best f1:0.3255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49557:  86%|████████▌ | 24/28 [01:34<00:15,  3.82s/it]epoch 2 loss 1.49097:  86%|████████▌ | 24/28 [01:34<00:15,  3.82s/it]epoch 2 loss 1.49097:  89%|████████▉ | 25/28 [01:34<00:08,  2.80s/it]epoch 2 loss 1.48756:  89%|████████▉ | 25/28 [01:35<00:08,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6359[0m
[32m  eval_f1 = 0.327[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.4548[0m
[32m  eval_recall = 0.2994[0m
[32m  ********************[0m
[32m  Best f1:0.327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48756:  93%|█████████▎| 26/28 [01:41<00:07,  3.89s/it]epoch 2 loss 1.48187:  93%|█████████▎| 26/28 [01:41<00:07,  3.89s/it]epoch 2 loss 1.48187:  96%|█████████▋| 27/28 [01:41<00:02,  2.85s/it]epoch 2 loss 1.47941:  96%|█████████▋| 27/28 [01:41<00:02,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47941: 100%|██████████| 28/28 [01:48<00:00,  3.88s/it]epoch 2 loss 1.47941: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.47821:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.47821:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 3 loss 1.39251:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3041[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39251:   7%|▋         | 2/28 [00:11<02:49,  6.52s/it]epoch 3 loss 1.39603:   7%|▋         | 2/28 [00:11<02:49,  6.52s/it]epoch 3 loss 1.39603:  11%|█         | 3/28 [00:11<01:33,  3.74s/it]epoch 3 loss 1.38229:  11%|█         | 3/28 [00:12<01:33,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.331[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3062[0m
[32m  ********************[0m
[32m  Best f1:0.331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38229:  14%|█▍        | 4/28 [00:21<02:31,  6.31s/it]epoch 3 loss 1.38324:  14%|█▍        | 4/28 [00:22<02:31,  6.31s/it]epoch 3 loss 1.38324:  18%|█▊        | 5/28 [00:22<01:36,  4.19s/it]epoch 3 loss 1.37087:  18%|█▊        | 5/28 [00:22<01:36,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37087:  21%|██▏       | 6/28 [00:29<01:57,  5.35s/it]epoch 3 loss 1.36745:  21%|██▏       | 6/28 [00:30<01:57,  5.35s/it]epoch 3 loss 1.36745:  25%|██▌       | 7/28 [00:30<01:18,  3.74s/it]epoch 3 loss 1.3592:  25%|██▌       | 7/28 [00:30<01:18,  3.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3592:  29%|██▊       | 8/28 [00:36<01:30,  4.54s/it]epoch 3 loss 1.38074:  29%|██▊       | 8/28 [00:37<01:30,  4.54s/it]epoch 3 loss 1.38074:  32%|███▏      | 9/28 [00:37<01:01,  3.25s/it]epoch 3 loss 1.38646:  32%|███▏      | 9/28 [00:37<01:01,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38646:  36%|███▌      | 10/28 [00:43<01:14,  4.11s/it]epoch 3 loss 1.39287:  36%|███▌      | 10/28 [00:43<01:14,  4.11s/it]epoch 3 loss 1.39287:  39%|███▉      | 11/28 [00:43<00:50,  2.99s/it]epoch 3 loss 1.38712:  39%|███▉      | 11/28 [00:43<00:50,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3331[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4475[0m
[32m  eval_recall = 0.3088[0m
[32m  ********************[0m
[32m  Best f1:0.3331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38712:  43%|████▎     | 12/28 [00:51<01:10,  4.43s/it]epoch 3 loss 1.3885:  43%|████▎     | 12/28 [00:51<01:10,  4.43s/it] epoch 3 loss 1.3885:  46%|████▋     | 13/28 [00:51<00:48,  3.22s/it]epoch 3 loss 1.38878:  46%|████▋     | 13/28 [00:52<00:48,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6255[0m
[32m  eval_precision = 0.4437[0m
[32m  eval_recall = 0.3102[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38878:  50%|█████     | 14/28 [00:58<01:00,  4.34s/it]epoch 3 loss 1.38829:  50%|█████     | 14/28 [00:59<01:00,  4.34s/it]epoch 3 loss 1.38829:  54%|█████▎    | 15/28 [00:59<00:41,  3.16s/it]epoch 3 loss 1.39018:  54%|█████▎    | 15/28 [00:59<00:41,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3374[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39018:  57%|█████▋    | 16/28 [01:06<00:53,  4.43s/it]epoch 3 loss 1.38305:  57%|█████▋    | 16/28 [01:06<00:53,  4.43s/it]epoch 3 loss 1.38305:  61%|██████    | 17/28 [01:06<00:35,  3.23s/it]epoch 3 loss 1.38009:  61%|██████    | 17/28 [01:07<00:35,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3388[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.4387[0m
[32m  eval_recall = 0.3131[0m
[32m  ********************[0m
[32m  Best f1:0.3388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38009:  64%|██████▍   | 18/28 [01:16<00:52,  5.25s/it]epoch 3 loss 1.37647:  64%|██████▍   | 18/28 [01:17<00:52,  5.25s/it]epoch 3 loss 1.37647:  68%|██████▊   | 19/28 [01:17<00:34,  3.80s/it]epoch 3 loss 1.37069:  68%|██████▊   | 19/28 [01:17<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.4391[0m
[32m  eval_recall = 0.3142[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37069:  71%|███████▏  | 20/28 [01:24<00:38,  4.78s/it]epoch 3 loss 1.36945:  71%|███████▏  | 20/28 [01:24<00:38,  4.78s/it]epoch 3 loss 1.36945:  75%|███████▌  | 21/28 [01:24<00:24,  3.47s/it]epoch 3 loss 1.36924:  75%|███████▌  | 21/28 [01:25<00:24,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.3139[0m
[32m  ********************[0m
[32m  Best f1:0.341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.36924:  79%|███████▊  | 22/28 [01:31<00:26,  4.48s/it]epoch 3 loss 1.37523:  79%|███████▊  | 22/28 [01:31<00:26,  4.48s/it]epoch 3 loss 1.37523:  82%|████████▏ | 23/28 [01:31<00:16,  3.27s/it]epoch 3 loss 1.3759:  82%|████████▏ | 23/28 [01:32<00:16,  3.27s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3142[0m
[32m  ********************[0m
[32m  Best f1:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3759:  86%|████████▌ | 24/28 [01:41<00:20,  5.18s/it]epoch 3 loss 1.37511:  86%|████████▌ | 24/28 [01:42<00:20,  5.18s/it]epoch 3 loss 1.37511:  89%|████████▉ | 25/28 [01:42<00:11,  3.75s/it]epoch 3 loss 1.37349:  89%|████████▉ | 25/28 [01:42<00:11,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37349:  93%|█████████▎| 26/28 [01:52<00:11,  5.76s/it]epoch 3 loss 1.37361:  93%|█████████▎| 26/28 [01:52<00:11,  5.76s/it]epoch 3 loss 1.37361:  96%|█████████▋| 27/28 [01:52<00:04,  4.16s/it]epoch 3 loss 1.37574:  96%|█████████▋| 27/28 [01:53<00:04,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.316[0m
[32m  ********************[0m
[32m  Best f1:0.3427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37574: 100%|██████████| 28/28 [01:58<00:00,  4.55s/it]epoch 3 loss 1.37574: 100%|██████████| 28/28 [01:58<00:00,  4.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23506:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23506:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.306:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3435[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.4457[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best f1:0.3435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.306:   7%|▋         | 2/28 [00:06<01:40,  3.88s/it]epoch 4 loss 1.30619:   7%|▋         | 2/28 [00:07<01:40,  3.88s/it]epoch 4 loss 1.30619:  11%|█         | 3/28 [00:07<00:57,  2.30s/it]epoch 4 loss 1.32093:  11%|█         | 3/28 [00:07<00:57,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3434[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.449[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32093:  14%|█▍        | 4/28 [00:12<01:20,  3.36s/it]epoch 4 loss 1.3251:  14%|█▍        | 4/28 [00:12<01:20,  3.36s/it] epoch 4 loss 1.3251:  18%|█▊        | 5/28 [00:12<00:52,  2.29s/it]epoch 4 loss 1.33577:  18%|█▊        | 5/28 [00:12<00:52,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3432[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4508[0m
[32m  eval_recall = 0.3162[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33577:  21%|██▏       | 6/28 [00:17<01:08,  3.10s/it]epoch 4 loss 1.35333:  21%|██▏       | 6/28 [00:17<01:08,  3.10s/it]epoch 4 loss 1.35333:  25%|██▌       | 7/28 [00:17<00:46,  2.22s/it]epoch 4 loss 1.34458:  25%|██▌       | 7/28 [00:18<00:46,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.316[0m

epoch 4 loss 1.34458:  29%|██▊       | 8/28 [00:21<00:54,  2.72s/it]epoch 4 loss 1.33483:  29%|██▊       | 8/28 [00:21<00:54,  2.72s/it]epoch 4 loss 1.33483:  32%|███▏      | 9/28 [00:21<00:37,  1.99s/it]epoch 4 loss 1.3453:  32%|███▏      | 9/28 [00:22<00:37,  1.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3161[0m

epoch 4 loss 1.3453:  36%|███▌      | 10/28 [00:25<00:45,  2.55s/it]epoch 4 loss 1.34595:  36%|███▌      | 10/28 [00:26<00:45,  2.55s/it]epoch 4 loss 1.34595:  39%|███▉      | 11/28 [00:26<00:32,  1.89s/it]epoch 4 loss 1.34442:  39%|███▉      | 11/28 [00:26<00:32,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3447[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.3447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34442:  43%|████▎     | 12/28 [00:30<00:45,  2.83s/it]epoch 4 loss 1.33932:  43%|████▎     | 12/28 [00:31<00:45,  2.83s/it]epoch 4 loss 1.33932:  46%|████▋     | 13/28 [00:31<00:31,  2.09s/it]epoch 4 loss 1.35164:  46%|████▋     | 13/28 [00:31<00:31,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3456[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4592[0m
[32m  eval_recall = 0.3187[0m
[32m  ********************[0m
[32m  Best f1:0.3456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35164:  50%|█████     | 14/28 [00:37<00:47,  3.40s/it]epoch 4 loss 1.35231:  50%|█████     | 14/28 [00:38<00:47,  3.40s/it]epoch 4 loss 1.35231:  54%|█████▎    | 15/28 [00:38<00:32,  2.51s/it]epoch 4 loss 1.3469:  54%|█████▎    | 15/28 [00:38<00:32,  2.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.347[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4591[0m
[32m  eval_recall = 0.3202[0m
[32m  ********************[0m
[32m  Best f1:0.347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3469:  57%|█████▋    | 16/28 [00:44<00:43,  3.59s/it]epoch 4 loss 1.33948:  57%|█████▋    | 16/28 [00:44<00:43,  3.59s/it]epoch 4 loss 1.33948:  61%|██████    | 17/28 [00:44<00:29,  2.64s/it]epoch 4 loss 1.33555:  61%|██████    | 17/28 [00:45<00:29,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3473[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4585[0m
[32m  eval_recall = 0.3204[0m
[32m  ********************[0m
[32m  Best f1:0.3473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33555:  64%|██████▍   | 18/28 [00:51<00:37,  3.75s/it]epoch 4 loss 1.33521:  64%|██████▍   | 18/28 [00:51<00:37,  3.75s/it]epoch 4 loss 1.33521:  68%|██████▊   | 19/28 [00:51<00:24,  2.75s/it]epoch 4 loss 1.33412:  68%|██████▊   | 19/28 [00:51<00:24,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3474[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3206[0m
[32m  ********************[0m
[32m  Best f1:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33412:  71%|███████▏  | 20/28 [00:57<00:30,  3.85s/it]epoch 4 loss 1.33828:  71%|███████▏  | 20/28 [00:58<00:30,  3.85s/it]epoch 4 loss 1.33828:  75%|███████▌  | 21/28 [00:58<00:19,  2.82s/it]epoch 4 loss 1.34164:  75%|███████▌  | 21/28 [00:58<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3477[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.321[0m
[32m  ********************[0m
[32m  Best f1:0.3477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34164:  79%|███████▊  | 22/28 [01:04<00:22,  3.69s/it]epoch 4 loss 1.3362:  79%|███████▊  | 22/28 [01:04<00:22,  3.69s/it] epoch 4 loss 1.3362:  82%|████████▏ | 23/28 [01:04<00:13,  2.70s/it]epoch 4 loss 1.33408:  82%|████████▏ | 23/28 [01:04<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3478[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4562[0m
[32m  eval_recall = 0.3211[0m
[32m  ********************[0m
[32m  Best f1:0.3478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33408:  86%|████████▌ | 24/28 [01:10<00:15,  3.82s/it]epoch 4 loss 1.33227:  86%|████████▌ | 24/28 [01:11<00:15,  3.82s/it]epoch 4 loss 1.33227:  89%|████████▉ | 25/28 [01:11<00:08,  2.80s/it]epoch 4 loss 1.33381:  89%|████████▉ | 25/28 [01:11<00:08,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3479[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.3479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33381:  93%|█████████▎| 26/28 [01:17<00:07,  3.89s/it]epoch 4 loss 1.33255:  93%|█████████▎| 26/28 [01:18<00:07,  3.89s/it]epoch 4 loss 1.33255:  96%|█████████▋| 27/28 [01:18<00:02,  2.85s/it]epoch 4 loss 1.33656:  96%|█████████▋| 27/28 [01:18<00:02,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33656: 100%|██████████| 28/28 [01:22<00:00,  3.43s/it]epoch 4 loss 1.33656: 100%|██████████| 28/28 [01:22<00:00,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3212[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.3097[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4259[0m
[32m  eval_recall = 0.2855[0m

