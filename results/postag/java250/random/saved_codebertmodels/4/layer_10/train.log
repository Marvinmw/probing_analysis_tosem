[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_10', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19053:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19053:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.18836:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0061[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0049[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.0118[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18836:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.1755:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it] epoch 0 loss 5.1755:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.16457:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0072[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0048[0m
[32m  eval_precision = 0.0192[0m
[32m  eval_recall = 0.0119[0m

epoch 0 loss 5.16457:  14%|█▍        | 4/28 [00:09<01:04,  2.67s/it]epoch 0 loss 5.14202:  14%|█▍        | 4/28 [00:10<01:04,  2.67s/it]epoch 0 loss 5.14202:  18%|█▊        | 5/28 [00:10<00:42,  1.85s/it]epoch 0 loss 5.11615:  18%|█▊        | 5/28 [00:10<00:42,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.013[0m
[32m  eval_f1 = 0.0049[0m
[32m  eval_mcc = 0.0033[0m
[32m  eval_precision = 0.0163[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.11615:  21%|██▏       | 6/28 [00:15<01:04,  2.95s/it]epoch 0 loss 5.07975:  21%|██▏       | 6/28 [00:15<01:04,  2.95s/it]epoch 0 loss 5.07975:  25%|██▌       | 7/28 [00:15<00:44,  2.11s/it]epoch 0 loss 5.03766:  25%|██▌       | 7/28 [00:16<00:44,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0416[0m
[32m  eval_f1 = 0.0093[0m
[32m  eval_mcc = 0.0097[0m
[32m  eval_precision = 0.0143[0m
[32m  eval_recall = 0.0138[0m
[32m  ********************[0m
[32m  Best f1:0.0093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03766:  29%|██▊       | 8/28 [00:24<01:27,  4.37s/it]epoch 0 loss 4.98794:  29%|██▊       | 8/28 [00:25<01:27,  4.37s/it]epoch 0 loss 4.98794:  32%|███▏      | 9/28 [00:25<00:59,  3.13s/it]epoch 0 loss 4.93932:  32%|███▏      | 9/28 [00:25<00:59,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0753[0m
[32m  eval_f1 = 0.0163[0m
[32m  eval_mcc = 0.0249[0m
[32m  eval_precision = 0.0265[0m
[32m  eval_recall = 0.02[0m
[32m  ********************[0m
[32m  Best f1:0.0163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93932:  36%|███▌      | 10/28 [00:35<01:32,  5.16s/it]epoch 0 loss 4.88254:  36%|███▌      | 10/28 [00:35<01:32,  5.16s/it]epoch 0 loss 4.88254:  39%|███▉      | 11/28 [00:35<01:03,  3.71s/it]epoch 0 loss 4.82173:  39%|███▉      | 11/28 [00:35<01:03,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.092[0m
[32m  eval_f1 = 0.0134[0m
[32m  eval_mcc = 0.0372[0m
[32m  eval_precision = 0.0198[0m
[32m  eval_recall = 0.0182[0m
[32m  ********************[0m
[32m  Best MCC:0.0372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82173:  43%|████▎     | 12/28 [00:41<01:11,  4.49s/it]epoch 0 loss 4.75798:  43%|████▎     | 12/28 [00:42<01:11,  4.49s/it]epoch 0 loss 4.75798:  46%|████▋     | 13/28 [00:42<00:48,  3.25s/it]epoch 0 loss 4.69161:  46%|████▋     | 13/28 [00:42<00:48,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1229[0m
[32m  eval_f1 = 0.0171[0m
[32m  eval_mcc = 0.0653[0m
[32m  eval_precision = 0.0191[0m
[32m  eval_recall = 0.0228[0m
[32m  ********************[0m
[32m  Best f1:0.0171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69161:  50%|█████     | 14/28 [00:51<01:10,  5.05s/it]epoch 0 loss 4.62812:  50%|█████     | 14/28 [00:51<01:10,  5.05s/it]epoch 0 loss 4.62812:  54%|█████▎    | 15/28 [00:51<00:47,  3.66s/it]epoch 0 loss 4.56177:  54%|█████▎    | 15/28 [00:52<00:47,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1608[0m
[32m  eval_f1 = 0.0219[0m
[32m  eval_mcc = 0.1004[0m
[32m  eval_precision = 0.0264[0m
[32m  eval_recall = 0.0276[0m
[32m  ********************[0m
[32m  Best f1:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56177:  57%|█████▋    | 16/28 [00:57<00:51,  4.33s/it]epoch 0 loss 4.49393:  57%|█████▋    | 16/28 [00:58<00:51,  4.33s/it]epoch 0 loss 4.49393:  61%|██████    | 17/28 [00:58<00:34,  3.15s/it]epoch 0 loss 4.43527:  61%|██████    | 17/28 [00:58<00:34,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1955[0m
[32m  eval_f1 = 0.0242[0m
[32m  eval_mcc = 0.1317[0m
[32m  eval_precision = 0.0394[0m
[32m  eval_recall = 0.0301[0m
[32m  ********************[0m
[32m  Best f1:0.0242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43527:  64%|██████▍   | 18/28 [01:04<00:39,  3.99s/it]epoch 0 loss 4.37312:  64%|██████▍   | 18/28 [01:04<00:39,  3.99s/it]epoch 0 loss 4.37312:  68%|██████▊   | 19/28 [01:04<00:26,  2.92s/it]epoch 0 loss 4.32281:  68%|██████▊   | 19/28 [01:04<00:26,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2377[0m
[32m  eval_f1 = 0.0265[0m
[32m  eval_mcc = 0.1735[0m
[32m  eval_precision = 0.0421[0m
[32m  eval_recall = 0.0336[0m
[32m  ********************[0m
[32m  Best f1:0.0265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32281:  71%|███████▏  | 20/28 [01:10<00:30,  3.76s/it]epoch 0 loss 4.26109:  71%|███████▏  | 20/28 [01:10<00:30,  3.76s/it]epoch 0 loss 4.26109:  75%|███████▌  | 21/28 [01:10<00:19,  2.76s/it]epoch 0 loss 4.21403:  75%|███████▌  | 21/28 [01:11<00:19,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2635[0m
[32m  eval_f1 = 0.0287[0m
[32m  eval_mcc = 0.2055[0m
[32m  eval_precision = 0.046[0m
[32m  eval_recall = 0.036[0m
[32m  ********************[0m
[32m  Best f1:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21403:  79%|███████▊  | 22/28 [01:16<00:22,  3.75s/it]epoch 0 loss 4.1574:  79%|███████▊  | 22/28 [01:17<00:22,  3.75s/it] epoch 0 loss 4.1574:  82%|████████▏ | 23/28 [01:17<00:13,  2.75s/it]epoch 0 loss 4.1025:  82%|████████▏ | 23/28 [01:17<00:13,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2858[0m
[32m  eval_f1 = 0.0475[0m
[32m  eval_mcc = 0.2393[0m
[32m  eval_precision = 0.0705[0m
[32m  eval_recall = 0.0514[0m
[32m  ********************[0m
[32m  Best f1:0.0475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1025:  86%|████████▌ | 24/28 [01:23<00:14,  3.74s/it]epoch 0 loss 4.05526:  86%|████████▌ | 24/28 [01:23<00:14,  3.74s/it]epoch 0 loss 4.05526:  89%|████████▉ | 25/28 [01:23<00:08,  2.74s/it]epoch 0 loss 4.00494:  89%|████████▉ | 25/28 [01:24<00:08,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3569[0m
[32m  eval_f1 = 0.1081[0m
[32m  eval_mcc = 0.3226[0m
[32m  eval_precision = 0.1892[0m
[32m  eval_recall = 0.0975[0m
[32m  ********************[0m
[32m  Best f1:0.1081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.00494:  93%|█████████▎| 26/28 [01:29<00:07,  3.73s/it]epoch 0 loss 3.9546:  93%|█████████▎| 26/28 [01:30<00:07,  3.73s/it] epoch 0 loss 3.9546:  96%|█████████▋| 27/28 [01:30<00:02,  2.74s/it]epoch 0 loss 3.90255:  96%|█████████▋| 27/28 [01:30<00:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4298[0m
[32m  eval_f1 = 0.1418[0m
[32m  eval_mcc = 0.3986[0m
[32m  eval_precision = 0.1982[0m
[32m  eval_recall = 0.1308[0m
[32m  ********************[0m
[32m  Best f1:0.1418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90255: 100%|██████████| 28/28 [01:35<00:00,  3.64s/it]epoch 0 loss 3.90255: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.48283:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.48283:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.38105:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4844[0m
[32m  eval_f1 = 0.1662[0m
[32m  eval_mcc = 0.4551[0m
[32m  eval_precision = 0.2347[0m
[32m  eval_recall = 0.1591[0m
[32m  ********************[0m
[32m  Best f1:0.1662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38105:   7%|▋         | 2/28 [00:10<02:38,  6.08s/it]epoch 1 loss 2.34334:   7%|▋         | 2/28 [00:10<02:38,  6.08s/it]epoch 1 loss 2.34334:  11%|█         | 3/28 [00:10<01:27,  3.49s/it]epoch 1 loss 2.33888:  11%|█         | 3/28 [00:11<01:27,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5252[0m
[32m  eval_f1 = 0.186[0m
[32m  eval_mcc = 0.4969[0m
[32m  eval_precision = 0.2262[0m
[32m  eval_recall = 0.179[0m
[32m  ********************[0m
[32m  Best f1:0.186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33888:  14%|█▍        | 4/28 [00:20<02:18,  5.75s/it]epoch 1 loss 2.33578:  14%|█▍        | 4/28 [00:20<02:18,  5.75s/it]epoch 1 loss 2.33578:  18%|█▊        | 5/28 [00:20<01:28,  3.83s/it]epoch 1 loss 2.32672:  18%|█▊        | 5/28 [00:20<01:28,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5492[0m
[32m  eval_f1 = 0.191[0m
[32m  eval_mcc = 0.5208[0m
[32m  eval_precision = 0.2333[0m
[32m  eval_recall = 0.186[0m
[32m  ********************[0m
[32m  Best f1:0.191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32672:  21%|██▏       | 6/28 [00:30<02:10,  5.95s/it]epoch 1 loss 2.30856:  21%|██▏       | 6/28 [00:30<02:10,  5.95s/it]epoch 1 loss 2.30856:  25%|██▌       | 7/28 [00:30<01:26,  4.14s/it]epoch 1 loss 2.27267:  25%|██▌       | 7/28 [00:31<01:26,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5586[0m
[32m  eval_f1 = 0.1995[0m
[32m  eval_mcc = 0.5305[0m
[32m  eval_precision = 0.2672[0m
[32m  eval_recall = 0.191[0m
[32m  ********************[0m
[32m  Best f1:0.1995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27267:  29%|██▊       | 8/28 [00:40<01:59,  5.96s/it]epoch 1 loss 2.24334:  29%|██▊       | 8/28 [00:41<01:59,  5.96s/it]epoch 1 loss 2.24334:  32%|███▏      | 9/28 [00:41<01:20,  4.23s/it]epoch 1 loss 2.22678:  32%|███▏      | 9/28 [00:41<01:20,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5599[0m
[32m  eval_f1 = 0.2072[0m
[32m  eval_mcc = 0.5321[0m
[32m  eval_precision = 0.2605[0m
[32m  eval_recall = 0.1964[0m
[32m  ********************[0m
[32m  Best f1:0.2072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22678:  36%|███▌      | 10/28 [00:50<01:42,  5.67s/it]epoch 1 loss 2.20192:  36%|███▌      | 10/28 [00:50<01:42,  5.67s/it]epoch 1 loss 2.20192:  39%|███▉      | 11/28 [00:50<01:09,  4.06s/it]epoch 1 loss 2.17892:  39%|███▉      | 11/28 [00:50<01:09,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5642[0m
[32m  eval_f1 = 0.2128[0m
[32m  eval_mcc = 0.5377[0m
[32m  eval_precision = 0.2769[0m
[32m  eval_recall = 0.2001[0m
[32m  ********************[0m
[32m  Best f1:0.2128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17892:  43%|████▎     | 12/28 [01:00<01:35,  5.98s/it]epoch 1 loss 2.15096:  43%|████▎     | 12/28 [01:01<01:35,  5.98s/it]epoch 1 loss 2.15096:  46%|████▋     | 13/28 [01:01<01:04,  4.30s/it]epoch 1 loss 2.13896:  46%|████▋     | 13/28 [01:01<01:04,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5667[0m
[32m  eval_f1 = 0.2145[0m
[32m  eval_mcc = 0.5428[0m
[32m  eval_precision = 0.2852[0m
[32m  eval_recall = 0.2018[0m
[32m  ********************[0m
[32m  Best f1:0.2145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13896:  50%|█████     | 14/28 [01:08<01:11,  5.13s/it]epoch 1 loss 2.11337:  50%|█████     | 14/28 [01:08<01:11,  5.13s/it]epoch 1 loss 2.11337:  54%|█████▎    | 15/28 [01:08<00:48,  3.71s/it]epoch 1 loss 2.0962:  54%|█████▎    | 15/28 [01:09<00:48,  3.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5738[0m
[32m  eval_f1 = 0.218[0m
[32m  eval_mcc = 0.5519[0m
[32m  eval_precision = 0.2988[0m
[32m  eval_recall = 0.2059[0m
[32m  ********************[0m
[32m  Best f1:0.218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0962:  57%|█████▋    | 16/28 [01:14<00:53,  4.42s/it]epoch 1 loss 2.0799:  57%|█████▋    | 16/28 [01:15<00:53,  4.42s/it]epoch 1 loss 2.0799:  61%|██████    | 17/28 [01:15<00:35,  3.22s/it]epoch 1 loss 2.06592:  61%|██████    | 17/28 [01:15<00:35,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5811[0m
[32m  eval_f1 = 0.2211[0m
[32m  eval_mcc = 0.5595[0m
[32m  eval_precision = 0.2933[0m
[32m  eval_recall = 0.2101[0m
[32m  ********************[0m
[32m  Best f1:0.2211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06592:  64%|██████▍   | 18/28 [01:21<00:40,  4.04s/it]epoch 1 loss 2.04742:  64%|██████▍   | 18/28 [01:21<00:40,  4.04s/it]epoch 1 loss 2.04742:  68%|██████▊   | 19/28 [01:21<00:26,  2.95s/it]epoch 1 loss 2.03027:  68%|██████▊   | 19/28 [01:22<00:26,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5886[0m
[32m  eval_f1 = 0.2261[0m
[32m  eval_mcc = 0.5659[0m
[32m  eval_precision = 0.2918[0m
[32m  eval_recall = 0.215[0m
[32m  ********************[0m
[32m  Best f1:0.2261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03027:  71%|███████▏  | 20/28 [01:27<00:29,  3.71s/it]epoch 1 loss 2.0158:  71%|███████▏  | 20/28 [01:27<00:29,  3.71s/it] epoch 1 loss 2.0158:  75%|███████▌  | 21/28 [01:27<00:19,  2.72s/it]epoch 1 loss 2.00555:  75%|███████▌  | 21/28 [01:27<00:19,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.2295[0m
[32m  eval_mcc = 0.5706[0m
[32m  eval_precision = 0.2864[0m
[32m  eval_recall = 0.2187[0m
[32m  ********************[0m
[32m  Best f1:0.2295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00555:  79%|███████▊  | 22/28 [01:33<00:21,  3.66s/it]epoch 1 loss 1.99173:  79%|███████▊  | 22/28 [01:33<00:21,  3.66s/it]epoch 1 loss 1.99173:  82%|████████▏ | 23/28 [01:33<00:13,  2.68s/it]epoch 1 loss 1.97699:  82%|████████▏ | 23/28 [01:34<00:13,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5956[0m
[32m  eval_f1 = 0.2316[0m
[32m  eval_mcc = 0.573[0m
[32m  eval_precision = 0.3037[0m
[32m  eval_recall = 0.2202[0m
[32m  ********************[0m
[32m  Best f1:0.2316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97699:  86%|████████▌ | 24/28 [01:39<00:14,  3.67s/it]epoch 1 loss 1.97002:  86%|████████▌ | 24/28 [01:40<00:14,  3.67s/it]epoch 1 loss 1.97002:  89%|████████▉ | 25/28 [01:40<00:08,  2.70s/it]epoch 1 loss 1.96127:  89%|████████▉ | 25/28 [01:40<00:08,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5977[0m
[32m  eval_f1 = 0.2383[0m
[32m  eval_mcc = 0.5748[0m
[32m  eval_precision = 0.3266[0m
[32m  eval_recall = 0.2245[0m
[32m  ********************[0m
[32m  Best f1:0.2383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96127:  93%|█████████▎| 26/28 [01:46<00:07,  3.70s/it]epoch 1 loss 1.94656:  93%|█████████▎| 26/28 [01:46<00:07,  3.70s/it]epoch 1 loss 1.94656:  96%|█████████▋| 27/28 [01:46<00:02,  2.71s/it]epoch 1 loss 1.94165:  96%|█████████▋| 27/28 [01:46<00:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6001[0m
[32m  eval_f1 = 0.2449[0m
[32m  eval_mcc = 0.5769[0m
[32m  eval_precision = 0.369[0m
[32m  eval_recall = 0.2292[0m
[32m  ********************[0m
[32m  Best f1:0.2449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94165: 100%|██████████| 28/28 [01:52<00:00,  3.64s/it]epoch 1 loss 1.94165: 100%|██████████| 28/28 [01:52<00:00,  4.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.5869:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.5869:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.6079:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6037[0m
[32m  eval_f1 = 0.2509[0m
[32m  eval_mcc = 0.5803[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2347[0m
[32m  ********************[0m
[32m  Best f1:0.2509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6079:   7%|▋         | 2/28 [00:06<01:36,  3.73s/it]epoch 2 loss 1.59004:   7%|▋         | 2/28 [00:06<01:36,  3.73s/it]epoch 2 loss 1.59004:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 2 loss 1.56292:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6083[0m
[32m  eval_f1 = 0.2533[0m
[32m  eval_mcc = 0.5853[0m
[32m  eval_precision = 0.3616[0m
[32m  eval_recall = 0.2382[0m
[32m  ********************[0m
[32m  Best f1:0.2533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56292:  14%|█▍        | 4/28 [00:12<01:29,  3.75s/it]epoch 2 loss 1.57902:  14%|█▍        | 4/28 [00:13<01:29,  3.75s/it]epoch 2 loss 1.57902:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it]epoch 2 loss 1.57742:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6116[0m
[32m  eval_f1 = 0.2594[0m
[32m  eval_mcc = 0.5891[0m
[32m  eval_precision = 0.3734[0m
[32m  eval_recall = 0.2435[0m
[32m  ********************[0m
[32m  Best f1:0.2594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57742:  21%|██▏       | 6/28 [00:21<01:38,  4.46s/it]epoch 2 loss 1.57599:  21%|██▏       | 6/28 [00:21<01:38,  4.46s/it]epoch 2 loss 1.57599:  25%|██▌       | 7/28 [00:21<01:05,  3.14s/it]epoch 2 loss 1.5584:  25%|██▌       | 7/28 [00:22<01:05,  3.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6141[0m
[32m  eval_f1 = 0.2672[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3866[0m
[32m  eval_recall = 0.2487[0m
[32m  ********************[0m
[32m  Best f1:0.2672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5584:  29%|██▊       | 8/28 [00:28<01:21,  4.06s/it]epoch 2 loss 1.56776:  29%|██▊       | 8/28 [00:28<01:21,  4.06s/it]epoch 2 loss 1.56776:  32%|███▏      | 9/28 [00:28<00:55,  2.92s/it]epoch 2 loss 1.58169:  32%|███▏      | 9/28 [00:28<00:55,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6162[0m
[32m  eval_f1 = 0.2817[0m
[32m  eval_mcc = 0.596[0m
[32m  eval_precision = 0.3993[0m
[32m  eval_recall = 0.2612[0m
[32m  ********************[0m
[32m  Best f1:0.2817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58169:  36%|███▌      | 10/28 [00:38<01:35,  5.28s/it]epoch 2 loss 1.57777:  36%|███▌      | 10/28 [00:39<01:35,  5.28s/it]epoch 2 loss 1.57777:  39%|███▉      | 11/28 [00:39<01:04,  3.79s/it]epoch 2 loss 1.58447:  39%|███▉      | 11/28 [00:39<01:04,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6185[0m
[32m  eval_f1 = 0.2875[0m
[32m  eval_mcc = 0.5982[0m
[32m  eval_precision = 0.4107[0m
[32m  eval_recall = 0.2655[0m
[32m  ********************[0m
[32m  Best f1:0.2875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58447:  43%|████▎     | 12/28 [00:51<01:40,  6.27s/it]epoch 2 loss 1.5707:  43%|████▎     | 12/28 [00:51<01:40,  6.27s/it] epoch 2 loss 1.5707:  46%|████▋     | 13/28 [00:51<01:07,  4.50s/it]epoch 2 loss 1.5742:  46%|████▋     | 13/28 [00:52<01:07,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6207[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.5998[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best f1:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5742:  50%|█████     | 14/28 [01:01<01:26,  6.16s/it]epoch 2 loss 1.56223:  50%|█████     | 14/28 [01:02<01:26,  6.16s/it]epoch 2 loss 1.56223:  54%|█████▎    | 15/28 [01:02<00:57,  4.43s/it]epoch 2 loss 1.56245:  54%|█████▎    | 15/28 [01:02<00:57,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6221[0m
[32m  eval_f1 = 0.2926[0m
[32m  eval_mcc = 0.6003[0m
[32m  eval_precision = 0.4127[0m
[32m  eval_recall = 0.2709[0m
[32m  ********************[0m
[32m  Best f1:0.2926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56245:  57%|█████▋    | 16/28 [01:12<01:14,  6.19s/it]epoch 2 loss 1.56188:  57%|█████▋    | 16/28 [01:12<01:14,  6.19s/it]epoch 2 loss 1.56188:  61%|██████    | 17/28 [01:12<00:49,  4.46s/it]epoch 2 loss 1.5596:  61%|██████    | 17/28 [01:13<00:49,  4.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2945[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.4244[0m
[32m  eval_recall = 0.2734[0m
[32m  ********************[0m
[32m  Best f1:0.2945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5596:  64%|██████▍   | 18/28 [01:22<01:01,  6.11s/it]epoch 2 loss 1.55623:  64%|██████▍   | 18/28 [01:23<01:01,  6.11s/it]epoch 2 loss 1.55623:  68%|██████▊   | 19/28 [01:23<00:39,  4.40s/it]epoch 2 loss 1.55187:  68%|██████▊   | 19/28 [01:23<00:39,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6255[0m
[32m  eval_f1 = 0.3034[0m
[32m  eval_mcc = 0.6031[0m
[32m  eval_precision = 0.4365[0m
[32m  eval_recall = 0.2802[0m
[32m  ********************[0m
[32m  Best f1:0.3034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55187:  71%|███████▏  | 20/28 [01:33<00:48,  6.11s/it]epoch 2 loss 1.54179:  71%|███████▏  | 20/28 [01:33<00:48,  6.11s/it]epoch 2 loss 1.54179:  75%|███████▌  | 21/28 [01:33<00:30,  4.40s/it]epoch 2 loss 1.54201:  75%|███████▌  | 21/28 [01:34<00:30,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6275[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6055[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.3109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54201:  79%|███████▊  | 22/28 [01:43<00:36,  6.07s/it]epoch 2 loss 1.53065:  79%|███████▊  | 22/28 [01:44<00:36,  6.07s/it]epoch 2 loss 1.53065:  82%|████████▏ | 23/28 [01:44<00:21,  4.37s/it]epoch 2 loss 1.52527:  82%|████████▏ | 23/28 [01:44<00:21,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.3136[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.4453[0m
[32m  eval_recall = 0.2881[0m
[32m  ********************[0m
[32m  Best f1:0.3136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52527:  86%|████████▌ | 24/28 [01:53<00:23,  5.82s/it]epoch 2 loss 1.52065:  86%|████████▌ | 24/28 [01:53<00:23,  5.82s/it]epoch 2 loss 1.52065:  89%|████████▉ | 25/28 [01:53<00:12,  4.20s/it]epoch 2 loss 1.51723:  89%|████████▉ | 25/28 [01:54<00:12,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6287[0m
[32m  eval_f1 = 0.3147[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4415[0m
[32m  eval_recall = 0.2885[0m
[32m  ********************[0m
[32m  Best f1:0.3147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51723:  93%|█████████▎| 26/28 [02:03<00:11,  5.86s/it]epoch 2 loss 1.51163:  93%|█████████▎| 26/28 [02:03<00:11,  5.86s/it]epoch 2 loss 1.51163:  96%|█████████▋| 27/28 [02:03<00:04,  4.23s/it]epoch 2 loss 1.50948:  96%|█████████▋| 27/28 [02:04<00:04,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6301[0m
[32m  eval_f1 = 0.3163[0m
[32m  eval_mcc = 0.6108[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.2898[0m
[32m  ********************[0m
[32m  Best f1:0.3163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50948: 100%|██████████| 28/28 [02:13<00:00,  5.76s/it]epoch 2 loss 1.50948: 100%|██████████| 28/28 [02:13<00:00,  4.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.50395:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.50395:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.42234:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.3173[0m
[32m  eval_mcc = 0.6123[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.2924[0m
[32m  ********************[0m
[32m  Best f1:0.3173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42234:   7%|▋         | 2/28 [00:11<02:53,  6.68s/it]epoch 3 loss 1.42527:   7%|▋         | 2/28 [00:11<02:53,  6.68s/it]epoch 3 loss 1.42527:  11%|█         | 3/28 [00:11<01:35,  3.82s/it]epoch 3 loss 1.4104:  11%|█         | 3/28 [00:12<01:35,  3.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6136[0m
[32m  eval_precision = 0.44[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4104:  14%|█▍        | 4/28 [00:22<02:36,  6.54s/it]epoch 3 loss 1.41069:  14%|█▍        | 4/28 [00:23<02:36,  6.54s/it]epoch 3 loss 1.41069:  18%|█▊        | 5/28 [00:23<01:39,  4.34s/it]epoch 3 loss 1.39818:  18%|█▊        | 5/28 [00:23<01:39,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.3221[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.4321[0m
[32m  eval_recall = 0.2997[0m
[32m  ********************[0m
[32m  Best f1:0.3221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39818:  21%|██▏       | 6/28 [00:31<02:10,  5.91s/it]epoch 3 loss 1.39549:  21%|██▏       | 6/28 [00:32<02:10,  5.91s/it]epoch 3 loss 1.39549:  25%|██▌       | 7/28 [00:32<01:26,  4.11s/it]epoch 3 loss 1.38802:  25%|██▌       | 7/28 [00:32<01:26,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.4413[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best f1:0.3257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38802:  29%|██▊       | 8/28 [00:44<02:15,  6.79s/it]epoch 3 loss 1.40945:  29%|██▊       | 8/28 [00:45<02:15,  6.79s/it]epoch 3 loss 1.40945:  32%|███▏      | 9/28 [00:45<01:31,  4.80s/it]epoch 3 loss 1.41497:  32%|███▏      | 9/28 [00:45<01:31,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.3263[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4462[0m
[32m  eval_recall = 0.3026[0m
[32m  ********************[0m
[32m  Best f1:0.3263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41497:  36%|███▌      | 10/28 [00:56<01:59,  6.63s/it]epoch 3 loss 1.42102:  36%|███▌      | 10/28 [00:56<01:59,  6.63s/it]epoch 3 loss 1.42102:  39%|███▉      | 11/28 [00:56<01:20,  4.73s/it]epoch 3 loss 1.4155:  39%|███▉      | 11/28 [00:56<01:20,  4.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4481[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4155:  43%|████▎     | 12/28 [01:06<01:41,  6.32s/it]epoch 3 loss 1.41665:  43%|████▎     | 12/28 [01:06<01:41,  6.32s/it]epoch 3 loss 1.41665:  46%|████▋     | 13/28 [01:06<01:07,  4.53s/it]epoch 3 loss 1.41665:  46%|████▋     | 13/28 [01:07<01:07,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4517[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41665:  50%|█████     | 14/28 [01:19<01:39,  7.07s/it]epoch 3 loss 1.416:  50%|█████     | 14/28 [01:20<01:39,  7.07s/it]  epoch 3 loss 1.416:  54%|█████▎    | 15/28 [01:20<01:05,  5.07s/it]epoch 3 loss 1.41778:  54%|█████▎    | 15/28 [01:20<01:05,  5.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3316[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4385[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41778:  57%|█████▋    | 16/28 [01:32<01:27,  7.27s/it]epoch 3 loss 1.41069:  57%|█████▋    | 16/28 [01:33<01:27,  7.27s/it]epoch 3 loss 1.41069:  61%|██████    | 17/28 [01:33<00:57,  5.21s/it]epoch 3 loss 1.40771:  61%|██████    | 17/28 [01:33<00:57,  5.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.3338[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.3338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40771:  64%|██████▍   | 18/28 [01:42<01:03,  6.35s/it]epoch 3 loss 1.40429:  64%|██████▍   | 18/28 [01:42<01:03,  6.35s/it]epoch 3 loss 1.40429:  68%|██████▊   | 19/28 [01:42<00:41,  4.57s/it]epoch 3 loss 1.39833:  68%|██████▊   | 19/28 [01:42<00:41,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.3344[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39833:  71%|███████▏  | 20/28 [01:53<00:50,  6.35s/it]epoch 3 loss 1.39694:  71%|███████▏  | 20/28 [01:53<00:50,  6.35s/it]epoch 3 loss 1.39694:  75%|███████▌  | 21/28 [01:53<00:32,  4.57s/it]epoch 3 loss 1.3966:  75%|███████▌  | 21/28 [01:53<00:32,  4.57s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3966:  79%|███████▊  | 22/28 [01:59<00:30,  5.05s/it]epoch 3 loss 1.40257:  79%|███████▊  | 22/28 [02:00<00:30,  5.05s/it]epoch 3 loss 1.40257:  82%|████████▏ | 23/28 [02:00<00:18,  3.66s/it]epoch 3 loss 1.40344:  82%|████████▏ | 23/28 [02:00<00:18,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40344:  86%|████████▌ | 24/28 [02:10<00:23,  5.79s/it]epoch 3 loss 1.4027:  86%|████████▌ | 24/28 [02:11<00:23,  5.79s/it] epoch 3 loss 1.4027:  89%|████████▉ | 25/28 [02:11<00:12,  4.18s/it]epoch 3 loss 1.40107:  89%|████████▉ | 25/28 [02:11<00:12,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3078[0m
[32m  ********************[0m
[32m  Best f1:0.3349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40107:  93%|█████████▎| 26/28 [02:16<00:09,  4.62s/it]epoch 3 loss 1.40124:  93%|█████████▎| 26/28 [02:17<00:09,  4.62s/it]epoch 3 loss 1.40124:  96%|█████████▋| 27/28 [02:17<00:03,  3.36s/it]epoch 3 loss 1.40322:  96%|█████████▋| 27/28 [02:17<00:03,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40322: 100%|██████████| 28/28 [02:22<00:00,  4.07s/it]epoch 3 loss 1.40322: 100%|██████████| 28/28 [02:22<00:00,  5.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25759:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25759:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.32951:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3364[0m
[32m  eval_mcc = 0.6267[0m
[32m  eval_precision = 0.4536[0m
[32m  eval_recall = 0.3096[0m
[32m  ********************[0m
[32m  Best f1:0.3364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32951:   7%|▋         | 2/28 [00:06<01:35,  3.68s/it]epoch 4 loss 1.33018:   7%|▋         | 2/28 [00:06<01:35,  3.68s/it]epoch 4 loss 1.33018:  11%|█         | 3/28 [00:06<00:54,  2.19s/it]epoch 4 loss 1.34714:  11%|█         | 3/28 [00:07<00:54,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3361[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3096[0m
[32m  ********************[0m
[32m  Best MCC:0.6269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34714:  14%|█▍        | 4/28 [00:11<01:18,  3.28s/it]epoch 4 loss 1.35262:  14%|█▍        | 4/28 [00:12<01:18,  3.28s/it]epoch 4 loss 1.35262:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it]epoch 4 loss 1.36303:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3098[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36303:  21%|██▏       | 6/28 [00:18<01:17,  3.53s/it]epoch 4 loss 1.38031:  21%|██▏       | 6/28 [00:18<01:17,  3.53s/it]epoch 4 loss 1.38031:  25%|██▌       | 7/28 [00:18<00:52,  2.51s/it]epoch 4 loss 1.37204:  25%|██▌       | 7/28 [00:19<00:52,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.337[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3104[0m
[32m  ********************[0m
[32m  Best f1:0.337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37204:  29%|██▊       | 8/28 [00:29<01:41,  5.07s/it]epoch 4 loss 1.36219:  29%|██▊       | 8/28 [00:29<01:41,  5.07s/it]epoch 4 loss 1.36219:  32%|███▏      | 9/28 [00:29<01:08,  3.62s/it]epoch 4 loss 1.37305:  32%|███▏      | 9/28 [00:29<01:08,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3107[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37305:  36%|███▌      | 10/28 [00:39<01:42,  5.69s/it]epoch 4 loss 1.37317:  36%|███▌      | 10/28 [00:40<01:42,  5.69s/it]epoch 4 loss 1.37317:  39%|███▉      | 11/28 [00:40<01:09,  4.08s/it]epoch 4 loss 1.37174:  39%|███▉      | 11/28 [00:40<01:09,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3382[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3126[0m
[32m  ********************[0m
[32m  Best f1:0.3382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37174:  43%|████▎     | 12/28 [00:51<01:40,  6.28s/it]epoch 4 loss 1.36618:  43%|████▎     | 12/28 [00:52<01:40,  6.28s/it]epoch 4 loss 1.36618:  46%|████▋     | 13/28 [00:52<01:07,  4.51s/it]epoch 4 loss 1.37862:  46%|████▋     | 13/28 [00:52<01:07,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3395[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.4504[0m
[32m  eval_recall = 0.3139[0m
[32m  ********************[0m
[32m  Best f1:0.3395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37862:  50%|█████     | 14/28 [01:02<01:29,  6.37s/it]epoch 4 loss 1.37884:  50%|█████     | 14/28 [01:03<01:29,  6.37s/it]epoch 4 loss 1.37884:  54%|█████▎    | 15/28 [01:03<00:59,  4.58s/it]epoch 4 loss 1.37364:  54%|█████▎    | 15/28 [01:03<00:59,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.4474[0m
[32m  eval_recall = 0.3144[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37364:  57%|█████▋    | 16/28 [01:13<01:16,  6.37s/it]epoch 4 loss 1.36633:  57%|█████▋    | 16/28 [01:14<01:16,  6.37s/it]epoch 4 loss 1.36633:  61%|██████    | 17/28 [01:14<00:50,  4.58s/it]epoch 4 loss 1.36212:  61%|██████    | 17/28 [01:14<00:50,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.447[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36212:  64%|██████▍   | 18/28 [01:23<01:00,  6.04s/it]epoch 4 loss 1.3618:  64%|██████▍   | 18/28 [01:23<01:00,  6.04s/it] epoch 4 loss 1.3618:  68%|██████▊   | 19/28 [01:23<00:39,  4.35s/it]epoch 4 loss 1.36056:  68%|██████▊   | 19/28 [01:24<00:39,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4465[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.34[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36056:  71%|███████▏  | 20/28 [01:29<00:38,  4.77s/it]epoch 4 loss 1.36495:  71%|███████▏  | 20/28 [01:30<00:38,  4.77s/it]epoch 4 loss 1.36495:  75%|███████▌  | 21/28 [01:30<00:24,  3.46s/it]epoch 4 loss 1.36829:  75%|███████▌  | 21/28 [01:30<00:24,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6499[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3151[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36829:  79%|███████▊  | 22/28 [01:41<00:35,  5.89s/it]epoch 4 loss 1.36283:  79%|███████▊  | 22/28 [01:42<00:35,  5.89s/it]epoch 4 loss 1.36283:  82%|████████▏ | 23/28 [01:42<00:21,  4.25s/it]epoch 4 loss 1.3606:  82%|████████▏ | 23/28 [01:42<00:21,  4.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4448[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3606:  86%|████████▌ | 24/28 [01:51<00:23,  5.89s/it]epoch 4 loss 1.35867:  86%|████████▌ | 24/28 [01:52<00:23,  5.89s/it]epoch 4 loss 1.35867:  89%|████████▉ | 25/28 [01:52<00:12,  4.25s/it]epoch 4 loss 1.36014:  89%|████████▉ | 25/28 [01:52<00:12,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3151[0m
[32m  ********************[0m
[32m  Best f1:0.3402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36014:  93%|█████████▎| 26/28 [01:57<00:08,  4.42s/it]epoch 4 loss 1.35895:  93%|█████████▎| 26/28 [01:57<00:08,  4.42s/it]epoch 4 loss 1.35895:  96%|█████████▋| 27/28 [01:57<00:03,  3.22s/it]epoch 4 loss 1.3629:  96%|█████████▋| 27/28 [01:57<00:03,  3.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3151[0m

epoch 4 loss 1.3629: 100%|██████████| 28/28 [02:01<00:00,  3.33s/it]epoch 4 loss 1.3629: 100%|██████████| 28/28 [02:01<00:00,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3151[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.3038[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.2809[0m

