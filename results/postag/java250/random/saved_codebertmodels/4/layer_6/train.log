[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_6', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.24136:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.24136:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.22541:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0059[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0031[0m
[32m  eval_precision = 0.0049[0m
[32m  eval_recall = 0.0067[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.22541:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.20999:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.20999:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.19857:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0116[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0034[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0075[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.19857:  14%|█▍        | 4/28 [00:13<01:36,  4.03s/it]epoch 0 loss 5.1744:  14%|█▍        | 4/28 [00:13<01:36,  4.03s/it] epoch 0 loss 5.1744:  18%|█▊        | 5/28 [00:13<01:02,  2.73s/it]epoch 0 loss 5.15181:  18%|█▊        | 5/28 [00:13<01:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.028[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = -0.0028[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0091[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.15181:  21%|██▏       | 6/28 [00:20<01:35,  4.34s/it]epoch 0 loss 5.1123:  21%|██▏       | 6/28 [00:21<01:35,  4.34s/it] epoch 0 loss 5.1123:  25%|██▌       | 7/28 [00:21<01:04,  3.06s/it]epoch 0 loss 5.07243:  25%|██▌       | 7/28 [00:21<01:04,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.061[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0036[0m
[32m  eval_precision = 0.0095[0m
[32m  eval_recall = 0.0132[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07243:  29%|██▊       | 8/28 [00:29<01:33,  4.67s/it]epoch 0 loss 5.02124:  29%|██▊       | 8/28 [00:29<01:33,  4.67s/it]epoch 0 loss 5.02124:  32%|███▏      | 9/28 [00:29<01:03,  3.34s/it]epoch 0 loss 4.97716:  32%|███▏      | 9/28 [00:30<01:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0855[0m
[32m  eval_f1 = 0.009[0m
[32m  eval_mcc = 0.0167[0m
[32m  eval_precision = 0.0176[0m
[32m  eval_recall = 0.0123[0m
[32m  ********************[0m
[32m  Best f1:0.009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97716:  36%|███▌      | 10/28 [00:39<01:32,  5.14s/it]epoch 0 loss 4.92191:  36%|███▌      | 10/28 [00:39<01:32,  5.14s/it]epoch 0 loss 4.92191:  39%|███▉      | 11/28 [00:39<01:02,  3.70s/it]epoch 0 loss 4.86086:  39%|███▉      | 11/28 [00:39<01:02,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1025[0m
[32m  eval_f1 = 0.0116[0m
[32m  eval_mcc = 0.0339[0m
[32m  eval_precision = 0.0292[0m
[32m  eval_recall = 0.0159[0m
[32m  ********************[0m
[32m  Best f1:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86086:  43%|████▎     | 12/28 [00:46<01:15,  4.74s/it]epoch 0 loss 4.79625:  43%|████▎     | 12/28 [00:47<01:15,  4.74s/it]epoch 0 loss 4.79625:  46%|████▋     | 13/28 [00:47<00:51,  3.43s/it]epoch 0 loss 4.72927:  46%|████▋     | 13/28 [00:47<00:51,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1322[0m
[32m  eval_f1 = 0.0151[0m
[32m  eval_mcc = 0.0666[0m
[32m  eval_precision = 0.0443[0m
[32m  eval_recall = 0.0203[0m
[32m  ********************[0m
[32m  Best f1:0.0151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72927:  50%|█████     | 14/28 [00:56<01:12,  5.15s/it]epoch 0 loss 4.66428:  50%|█████     | 14/28 [00:56<01:12,  5.15s/it]epoch 0 loss 4.66428:  54%|█████▎    | 15/28 [00:56<00:48,  3.73s/it]epoch 0 loss 4.59588:  54%|█████▎    | 15/28 [00:57<00:48,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.169[0m
[32m  eval_f1 = 0.0197[0m
[32m  eval_mcc = 0.1075[0m
[32m  eval_precision = 0.0488[0m
[32m  eval_recall = 0.0253[0m
[32m  ********************[0m
[32m  Best f1:0.0197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59588:  57%|█████▋    | 16/28 [01:04<01:00,  5.02s/it]epoch 0 loss 4.5258:  57%|█████▋    | 16/28 [01:05<01:00,  5.02s/it] epoch 0 loss 4.5258:  61%|██████    | 17/28 [01:05<00:39,  3.63s/it]epoch 0 loss 4.46294:  61%|██████    | 17/28 [01:05<00:39,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2198[0m
[32m  eval_f1 = 0.0269[0m
[32m  eval_mcc = 0.1618[0m
[32m  eval_precision = 0.0747[0m
[32m  eval_recall = 0.0331[0m
[32m  ********************[0m
[32m  Best f1:0.0269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46294:  64%|██████▍   | 18/28 [01:14<00:52,  5.25s/it]epoch 0 loss 4.39695:  64%|██████▍   | 18/28 [01:14<00:52,  5.25s/it]epoch 0 loss 4.39695:  68%|██████▊   | 19/28 [01:14<00:34,  3.80s/it]epoch 0 loss 4.34166:  68%|██████▊   | 19/28 [01:14<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2732[0m
[32m  eval_f1 = 0.0404[0m
[32m  eval_mcc = 0.219[0m
[32m  eval_precision = 0.0933[0m
[32m  eval_recall = 0.0478[0m
[32m  ********************[0m
[32m  Best f1:0.0404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34166:  71%|███████▏  | 20/28 [01:22<00:40,  5.06s/it]epoch 0 loss 4.27425:  71%|███████▏  | 20/28 [01:22<00:40,  5.06s/it]epoch 0 loss 4.27425:  75%|███████▌  | 21/28 [01:22<00:25,  3.67s/it]epoch 0 loss 4.22213:  75%|███████▌  | 21/28 [01:23<00:25,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3069[0m
[32m  eval_f1 = 0.0539[0m
[32m  eval_mcc = 0.2598[0m
[32m  eval_precision = 0.1036[0m
[32m  eval_recall = 0.0574[0m
[32m  ********************[0m
[32m  Best f1:0.0539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22213:  79%|███████▊  | 22/28 [01:32<00:31,  5.30s/it]epoch 0 loss 4.16036:  79%|███████▊  | 22/28 [01:32<00:31,  5.30s/it]epoch 0 loss 4.16036:  82%|████████▏ | 23/28 [01:32<00:19,  3.84s/it]epoch 0 loss 4.09946:  82%|████████▏ | 23/28 [01:32<00:19,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3577[0m
[32m  eval_f1 = 0.0943[0m
[32m  eval_mcc = 0.3175[0m
[32m  eval_precision = 0.1634[0m
[32m  eval_recall = 0.0868[0m
[32m  ********************[0m
[32m  Best f1:0.0943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.09946:  86%|████████▌ | 24/28 [01:40<00:20,  5.07s/it]epoch 0 loss 4.0465:  86%|████████▌ | 24/28 [01:40<00:20,  5.07s/it] epoch 0 loss 4.0465:  89%|████████▉ | 25/28 [01:40<00:11,  3.67s/it]epoch 0 loss 3.99065:  89%|████████▉ | 25/28 [01:41<00:11,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4163[0m
[32m  eval_f1 = 0.1289[0m
[32m  eval_mcc = 0.3811[0m
[32m  eval_precision = 0.1896[0m
[32m  eval_recall = 0.1154[0m
[32m  ********************[0m
[32m  Best f1:0.1289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99065:  93%|█████████▎| 26/28 [01:47<00:09,  4.61s/it]epoch 0 loss 3.93482:  93%|█████████▎| 26/28 [01:47<00:09,  4.61s/it]epoch 0 loss 3.93482:  96%|█████████▋| 27/28 [01:47<00:03,  3.35s/it]epoch 0 loss 3.87722:  96%|█████████▋| 27/28 [01:48<00:03,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4722[0m
[32m  eval_f1 = 0.1537[0m
[32m  eval_mcc = 0.4452[0m
[32m  eval_precision = 0.2199[0m
[32m  eval_recall = 0.1428[0m
[32m  ********************[0m
[32m  Best f1:0.1537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.87722: 100%|██████████| 28/28 [01:54<00:00,  4.36s/it]epoch 0 loss 3.87722: 100%|██████████| 28/28 [01:54<00:00,  4.10s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31747:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31747:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.22005:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5084[0m
[32m  eval_f1 = 0.1761[0m
[32m  eval_mcc = 0.4851[0m
[32m  eval_precision = 0.237[0m
[32m  eval_recall = 0.1675[0m
[32m  ********************[0m
[32m  Best f1:0.1761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22005:   7%|▋         | 2/28 [00:09<02:23,  5.51s/it]epoch 1 loss 2.18238:   7%|▋         | 2/28 [00:09<02:23,  5.51s/it]epoch 1 loss 2.18238:  11%|█         | 3/28 [00:09<01:19,  3.18s/it]epoch 1 loss 2.17759:  11%|█         | 3/28 [00:10<01:19,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5459[0m
[32m  eval_f1 = 0.1917[0m
[32m  eval_mcc = 0.5205[0m
[32m  eval_precision = 0.2386[0m
[32m  eval_recall = 0.1864[0m
[32m  ********************[0m
[32m  Best f1:0.1917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17759:  14%|█▍        | 4/28 [00:18<02:04,  5.20s/it]epoch 1 loss 2.1762:  14%|█▍        | 4/28 [00:18<02:04,  5.20s/it] epoch 1 loss 2.1762:  18%|█▊        | 5/28 [00:18<01:19,  3.47s/it]epoch 1 loss 2.16603:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5606[0m
[32m  eval_f1 = 0.1999[0m
[32m  eval_mcc = 0.5335[0m
[32m  eval_precision = 0.2455[0m
[32m  eval_recall = 0.1963[0m
[32m  ********************[0m
[32m  Best f1:0.1999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16603:  21%|██▏       | 6/28 [00:27<01:58,  5.40s/it]epoch 1 loss 2.14916:  21%|██▏       | 6/28 [00:28<01:58,  5.40s/it]epoch 1 loss 2.14916:  25%|██▌       | 7/28 [00:28<01:19,  3.77s/it]epoch 1 loss 2.11268:  25%|██▌       | 7/28 [00:28<01:19,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5746[0m
[32m  eval_f1 = 0.2159[0m
[32m  eval_mcc = 0.5481[0m
[32m  eval_precision = 0.256[0m
[32m  eval_recall = 0.2111[0m
[32m  ********************[0m
[32m  Best f1:0.2159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11268:  29%|██▊       | 8/28 [00:37<01:49,  5.46s/it]epoch 1 loss 2.08353:  29%|██▊       | 8/28 [00:37<01:49,  5.46s/it]epoch 1 loss 2.08353:  32%|███▏      | 9/28 [00:37<01:13,  3.89s/it]epoch 1 loss 2.06754:  32%|███▏      | 9/28 [00:38<01:13,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5777[0m
[32m  eval_f1 = 0.218[0m
[32m  eval_mcc = 0.5515[0m
[32m  eval_precision = 0.2622[0m
[32m  eval_recall = 0.2125[0m
[32m  ********************[0m
[32m  Best f1:0.218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06754:  36%|███▌      | 10/28 [00:47<01:41,  5.64s/it]epoch 1 loss 2.0437:  36%|███▌      | 10/28 [00:47<01:41,  5.64s/it] epoch 1 loss 2.0437:  39%|███▉      | 11/28 [00:47<01:08,  4.04s/it]epoch 1 loss 2.02182:  39%|███▉      | 11/28 [00:48<01:08,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5853[0m
[32m  eval_f1 = 0.2257[0m
[32m  eval_mcc = 0.5596[0m
[32m  eval_precision = 0.292[0m
[32m  eval_recall = 0.2164[0m
[32m  ********************[0m
[32m  Best f1:0.2257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02182:  43%|████▎     | 12/28 [00:55<01:22,  5.13s/it]epoch 1 loss 1.9958:  43%|████▎     | 12/28 [00:55<01:22,  5.13s/it] epoch 1 loss 1.9958:  46%|████▋     | 13/28 [00:55<00:55,  3.70s/it]epoch 1 loss 1.98573:  46%|████▋     | 13/28 [00:56<00:55,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5907[0m
[32m  eval_f1 = 0.2306[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.3008[0m
[32m  eval_recall = 0.2184[0m
[32m  ********************[0m
[32m  Best f1:0.2306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98573:  50%|█████     | 14/28 [01:01<01:01,  4.40s/it]epoch 1 loss 1.96094:  50%|█████     | 14/28 [01:02<01:01,  4.40s/it]epoch 1 loss 1.96094:  54%|█████▎    | 15/28 [01:02<00:41,  3.20s/it]epoch 1 loss 1.94453:  54%|█████▎    | 15/28 [01:02<00:41,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.2348[0m
[32m  eval_mcc = 0.5724[0m
[32m  eval_precision = 0.3361[0m
[32m  eval_recall = 0.2201[0m
[32m  ********************[0m
[32m  Best f1:0.2348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94453:  57%|█████▋    | 16/28 [01:10<00:56,  4.67s/it]epoch 1 loss 1.92917:  57%|█████▋    | 16/28 [01:10<00:56,  4.67s/it]epoch 1 loss 1.92917:  61%|██████    | 17/28 [01:10<00:37,  3.39s/it]epoch 1 loss 1.91551:  61%|██████    | 17/28 [01:11<00:37,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5974[0m
[32m  eval_f1 = 0.2428[0m
[32m  eval_mcc = 0.5775[0m
[32m  eval_precision = 0.362[0m
[32m  eval_recall = 0.2255[0m
[32m  ********************[0m
[32m  Best f1:0.2428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91551:  64%|██████▍   | 18/28 [01:16<00:41,  4.18s/it]epoch 1 loss 1.89824:  64%|██████▍   | 18/28 [01:17<00:41,  4.18s/it]epoch 1 loss 1.89824:  68%|██████▊   | 19/28 [01:17<00:27,  3.06s/it]epoch 1 loss 1.88239:  68%|██████▊   | 19/28 [01:17<00:27,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6059[0m
[32m  eval_f1 = 0.2535[0m
[32m  eval_mcc = 0.586[0m
[32m  eval_precision = 0.3707[0m
[32m  eval_recall = 0.2341[0m
[32m  ********************[0m
[32m  Best f1:0.2535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88239:  71%|███████▏  | 20/28 [01:26<00:39,  4.91s/it]epoch 1 loss 1.86855:  71%|███████▏  | 20/28 [01:26<00:39,  4.91s/it]epoch 1 loss 1.86855:  75%|███████▌  | 21/28 [01:26<00:24,  3.56s/it]epoch 1 loss 1.85916:  75%|███████▌  | 21/28 [01:27<00:24,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2621[0m
[32m  eval_mcc = 0.5881[0m
[32m  eval_precision = 0.3895[0m
[32m  eval_recall = 0.242[0m
[32m  ********************[0m
[32m  Best f1:0.2621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85916:  79%|███████▊  | 22/28 [01:32<00:25,  4.33s/it]epoch 1 loss 1.84641:  79%|███████▊  | 22/28 [01:33<00:25,  4.33s/it]epoch 1 loss 1.84641:  82%|████████▏ | 23/28 [01:33<00:15,  3.16s/it]epoch 1 loss 1.83258:  82%|████████▏ | 23/28 [01:33<00:15,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6119[0m
[32m  eval_f1 = 0.2647[0m
[32m  eval_mcc = 0.5906[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.2453[0m
[32m  ********************[0m
[32m  Best f1:0.2647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83258:  86%|████████▌ | 24/28 [01:42<00:20,  5.04s/it]epoch 1 loss 1.82642:  86%|████████▌ | 24/28 [01:43<00:20,  5.04s/it]epoch 1 loss 1.82642:  89%|████████▉ | 25/28 [01:43<00:10,  3.65s/it]epoch 1 loss 1.81863:  89%|████████▉ | 25/28 [01:43<00:10,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6146[0m
[32m  eval_f1 = 0.2821[0m
[32m  eval_mcc = 0.5923[0m
[32m  eval_precision = 0.4043[0m
[32m  eval_recall = 0.2613[0m
[32m  ********************[0m
[32m  Best f1:0.2821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81863:  93%|█████████▎| 26/28 [01:53<00:11,  5.61s/it]epoch 1 loss 1.80462:  93%|█████████▎| 26/28 [01:53<00:11,  5.61s/it]epoch 1 loss 1.80462:  96%|█████████▋| 27/28 [01:53<00:04,  4.05s/it]epoch 1 loss 1.79936:  96%|█████████▋| 27/28 [01:53<00:04,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.618[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.4077[0m
[32m  eval_recall = 0.2677[0m
[32m  ********************[0m
[32m  Best f1:0.29[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79936: 100%|██████████| 28/28 [02:05<00:00,  6.22s/it]epoch 1 loss 1.79936: 100%|██████████| 28/28 [02:05<00:00,  4.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46643:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46643:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 2 loss 1.48369:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6228[0m
[32m  eval_f1 = 0.3093[0m
[32m  eval_mcc = 0.6001[0m
[32m  eval_precision = 0.4182[0m
[32m  eval_recall = 0.2861[0m
[32m  ********************[0m
[32m  Best f1:0.3093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48369:   7%|▋         | 2/28 [00:08<02:06,  4.86s/it]epoch 2 loss 1.46956:   7%|▋         | 2/28 [00:08<02:06,  4.86s/it]epoch 2 loss 1.46956:  11%|█         | 3/28 [00:08<01:10,  2.83s/it]epoch 2 loss 1.44354:  11%|█         | 3/28 [00:09<01:10,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6035[0m
[32m  eval_precision = 0.4145[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44354:  14%|█▍        | 4/28 [00:18<02:10,  5.42s/it]epoch 2 loss 1.45757:  14%|█▍        | 4/28 [00:18<02:10,  5.42s/it]epoch 2 loss 1.45757:  18%|█▊        | 5/28 [00:18<01:23,  3.62s/it]epoch 2 loss 1.45764:  18%|█▊        | 5/28 [00:19<01:23,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4306[0m
[32m  eval_recall = 0.2958[0m
[32m  ********************[0m
[32m  Best f1:0.3202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45764:  21%|██▏       | 6/28 [00:26<01:51,  5.08s/it]epoch 2 loss 1.45622:  21%|██▏       | 6/28 [00:26<01:51,  5.08s/it]epoch 2 loss 1.45622:  25%|██▌       | 7/28 [00:26<01:14,  3.56s/it]epoch 2 loss 1.43998:  25%|██▌       | 7/28 [00:27<01:14,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.319[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.4214[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43998:  29%|██▊       | 8/28 [00:33<01:29,  4.49s/it]epoch 2 loss 1.44859:  29%|██▊       | 8/28 [00:33<01:29,  4.49s/it]epoch 2 loss 1.44859:  32%|███▏      | 9/28 [00:33<01:01,  3.22s/it]epoch 2 loss 1.46269:  32%|███▏      | 9/28 [00:34<01:01,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6327[0m
[32m  eval_f1 = 0.3191[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.4239[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46269:  36%|███▌      | 10/28 [00:40<01:15,  4.18s/it]epoch 2 loss 1.45993:  36%|███▌      | 10/28 [00:40<01:15,  4.18s/it]epoch 2 loss 1.45993:  39%|███▉      | 11/28 [00:40<00:51,  3.03s/it]epoch 2 loss 1.46758:  39%|███▉      | 11/28 [00:41<00:51,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.3249[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.4323[0m
[32m  eval_recall = 0.2987[0m
[32m  ********************[0m
[32m  Best f1:0.3249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46758:  43%|████▎     | 12/28 [00:49<01:17,  4.85s/it]epoch 2 loss 1.45481:  43%|████▎     | 12/28 [00:50<01:17,  4.85s/it]epoch 2 loss 1.45481:  46%|████▋     | 13/28 [00:50<00:52,  3.51s/it]epoch 2 loss 1.45949:  46%|████▋     | 13/28 [00:50<00:52,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45949:  50%|█████     | 14/28 [00:59<01:12,  5.16s/it]epoch 2 loss 1.44758:  50%|█████     | 14/28 [00:59<01:12,  5.16s/it]epoch 2 loss 1.44758:  54%|█████▎    | 15/28 [00:59<00:48,  3.73s/it]epoch 2 loss 1.44814:  54%|█████▎    | 15/28 [00:59<00:48,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44814:  57%|█████▋    | 16/28 [01:05<00:53,  4.43s/it]epoch 2 loss 1.44805:  57%|█████▋    | 16/28 [01:05<00:53,  4.43s/it]epoch 2 loss 1.44805:  61%|██████    | 17/28 [01:05<00:35,  3.22s/it]epoch 2 loss 1.44527:  61%|██████    | 17/28 [01:06<00:35,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3068[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44527:  64%|██████▍   | 18/28 [01:11<00:40,  4.08s/it]epoch 2 loss 1.44174:  64%|██████▍   | 18/28 [01:12<00:40,  4.08s/it]epoch 2 loss 1.44174:  68%|██████▊   | 19/28 [01:12<00:26,  2.98s/it]epoch 2 loss 1.43781:  68%|██████▊   | 19/28 [01:12<00:26,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3346[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4493[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43781:  71%|███████▏  | 20/28 [01:18<00:31,  3.91s/it]epoch 2 loss 1.42805:  71%|███████▏  | 20/28 [01:18<00:31,  3.91s/it]epoch 2 loss 1.42805:  75%|███████▌  | 21/28 [01:18<00:20,  2.86s/it]epoch 2 loss 1.42825:  75%|███████▌  | 21/28 [01:19<00:20,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6258[0m
[32m  eval_precision = 0.4525[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42825:  79%|███████▊  | 22/28 [01:24<00:22,  3.83s/it]epoch 2 loss 1.41767:  79%|███████▊  | 22/28 [01:25<00:22,  3.83s/it]epoch 2 loss 1.41767:  82%|████████▏ | 23/28 [01:25<00:14,  2.81s/it]epoch 2 loss 1.4123:  82%|████████▏ | 23/28 [01:25<00:14,  2.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3396[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3118[0m
[32m  ********************[0m
[32m  Best f1:0.3396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4123:  86%|████████▌ | 24/28 [01:31<00:15,  3.80s/it]epoch 2 loss 1.40798:  86%|████████▌ | 24/28 [01:31<00:15,  3.80s/it]epoch 2 loss 1.40798:  89%|████████▉ | 25/28 [01:31<00:08,  2.79s/it]epoch 2 loss 1.40474:  89%|████████▉ | 25/28 [01:32<00:08,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40474:  93%|█████████▎| 26/28 [01:39<00:08,  4.31s/it]epoch 2 loss 1.39937:  93%|█████████▎| 26/28 [01:40<00:08,  4.31s/it]epoch 2 loss 1.39937:  96%|█████████▋| 27/28 [01:40<00:03,  3.15s/it]epoch 2 loss 1.39739:  96%|█████████▋| 27/28 [01:40<00:03,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39739: 100%|██████████| 28/28 [01:50<00:00,  5.29s/it]epoch 2 loss 1.39739: 100%|██████████| 28/28 [01:50<00:00,  3.95s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.4062:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.4062:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.31693:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3431[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.3431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31693:   7%|▋         | 2/28 [00:10<02:39,  6.12s/it]epoch 3 loss 1.31744:   7%|▋         | 2/28 [00:10<02:39,  6.12s/it]epoch 3 loss 1.31744:  11%|█         | 3/28 [00:10<01:27,  3.52s/it]epoch 3 loss 1.30376:  11%|█         | 3/28 [00:11<01:27,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3439[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4519[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best f1:0.3439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30376:  14%|█▍        | 4/28 [00:21<02:28,  6.20s/it]epoch 3 loss 1.3046:  14%|█▍        | 4/28 [00:21<02:28,  6.20s/it] epoch 3 loss 1.3046:  18%|█▊        | 5/28 [00:21<01:34,  4.12s/it]epoch 3 loss 1.29223:  18%|█▊        | 5/28 [00:22<01:34,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3466[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29223:  21%|██▏       | 6/28 [00:29<01:54,  5.21s/it]epoch 3 loss 1.28777:  21%|██▏       | 6/28 [00:29<01:54,  5.21s/it]epoch 3 loss 1.28777:  25%|██▌       | 7/28 [00:29<01:16,  3.65s/it]epoch 3 loss 1.28043:  25%|██▌       | 7/28 [00:29<01:16,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3473[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3189[0m
[32m  ********************[0m
[32m  Best f1:0.3473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28043:  29%|██▊       | 8/28 [00:39<01:50,  5.54s/it]epoch 3 loss 1.30025:  29%|██▊       | 8/28 [00:39<01:50,  5.54s/it]epoch 3 loss 1.30025:  32%|███▏      | 9/28 [00:39<01:14,  3.94s/it]epoch 3 loss 1.30571:  32%|███▏      | 9/28 [00:39<01:14,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6547[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30571:  36%|███▌      | 10/28 [00:49<01:43,  5.73s/it]epoch 3 loss 1.31211:  36%|███▌      | 10/28 [00:49<01:43,  5.73s/it]epoch 3 loss 1.31211:  39%|███▉      | 11/28 [00:49<01:09,  4.11s/it]epoch 3 loss 1.30689:  39%|███▉      | 11/28 [00:50<01:09,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3524[0m
[32m  eval_mcc = 0.6367[0m
[32m  eval_precision = 0.4734[0m
[32m  eval_recall = 0.3226[0m
[32m  ********************[0m
[32m  Best f1:0.3524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30689:  43%|████▎     | 12/28 [00:58<01:30,  5.65s/it]epoch 3 loss 1.30806:  43%|████▎     | 12/28 [00:59<01:30,  5.65s/it]epoch 3 loss 1.30806:  46%|████▋     | 13/28 [00:59<01:00,  4.06s/it]epoch 3 loss 1.30879:  46%|████▋     | 13/28 [00:59<01:00,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3549[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4722[0m
[32m  eval_recall = 0.3247[0m
[32m  ********************[0m
[32m  Best f1:0.3549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30879:  50%|█████     | 14/28 [01:08<01:20,  5.72s/it]epoch 3 loss 1.30892:  50%|█████     | 14/28 [01:09<01:20,  5.72s/it]epoch 3 loss 1.30892:  54%|█████▎    | 15/28 [01:09<00:53,  4.12s/it]epoch 3 loss 1.31131:  54%|█████▎    | 15/28 [01:09<00:53,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3563[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.3563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31131:  57%|█████▋    | 16/28 [01:18<01:08,  5.74s/it]epoch 3 loss 1.30446:  57%|█████▋    | 16/28 [01:19<01:08,  5.74s/it]epoch 3 loss 1.30446:  61%|██████    | 17/28 [01:19<00:45,  4.14s/it]epoch 3 loss 1.30224:  61%|██████    | 17/28 [01:19<00:45,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3608[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30224:  64%|██████▍   | 18/28 [01:28<00:55,  5.59s/it]epoch 3 loss 1.29901:  64%|██████▍   | 18/28 [01:28<00:55,  5.59s/it]epoch 3 loss 1.29901:  68%|██████▊   | 19/28 [01:28<00:36,  4.04s/it]epoch 3 loss 1.29349:  68%|██████▊   | 19/28 [01:28<00:36,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.3295[0m
[32m  ********************[0m
[32m  Best f1:0.3615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29349:  71%|███████▏  | 20/28 [01:37<00:44,  5.57s/it]epoch 3 loss 1.29256:  71%|███████▏  | 20/28 [01:38<00:44,  5.57s/it]epoch 3 loss 1.29256:  75%|███████▌  | 21/28 [01:38<00:28,  4.02s/it]epoch 3 loss 1.29214:  75%|███████▌  | 21/28 [01:38<00:28,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.3641[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4776[0m
[32m  eval_recall = 0.3309[0m
[32m  ********************[0m
[32m  Best f1:0.3641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29214:  79%|███████▊  | 22/28 [01:44<00:28,  4.81s/it]epoch 3 loss 1.29853:  79%|███████▊  | 22/28 [01:45<00:28,  4.81s/it]epoch 3 loss 1.29853:  82%|████████▏ | 23/28 [01:45<00:17,  3.49s/it]epoch 3 loss 1.29984:  82%|████████▏ | 23/28 [01:45<00:17,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3643[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4716[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29984:  86%|████████▌ | 24/28 [01:52<00:18,  4.52s/it]epoch 3 loss 1.29909:  86%|████████▌ | 24/28 [01:52<00:18,  4.52s/it]epoch 3 loss 1.29909:  89%|████████▉ | 25/28 [01:52<00:09,  3.29s/it]epoch 3 loss 1.2972:  89%|████████▉ | 25/28 [01:52<00:09,  3.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3668[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3333[0m
[32m  ********************[0m
[32m  Best f1:0.3668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2972:  93%|█████████▎| 26/28 [02:00<00:09,  4.80s/it]epoch 3 loss 1.29706:  93%|█████████▎| 26/28 [02:01<00:09,  4.80s/it]epoch 3 loss 1.29706:  96%|█████████▋| 27/28 [02:01<00:03,  3.49s/it]epoch 3 loss 1.29942:  96%|█████████▋| 27/28 [02:01<00:03,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6605[0m
[32m  eval_f1 = 0.3683[0m
[32m  eval_mcc = 0.6417[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3348[0m
[32m  ********************[0m
[32m  Best f1:0.3683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29942: 100%|██████████| 28/28 [02:10<00:00,  5.15s/it]epoch 3 loss 1.29942: 100%|██████████| 28/28 [02:10<00:00,  4.65s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.16454:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.16454:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 4 loss 1.23277:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3677[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best MCC:0.6422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23277:   7%|▋         | 2/28 [00:06<01:39,  3.83s/it]epoch 4 loss 1.23348:   7%|▋         | 2/28 [00:07<01:39,  3.83s/it]epoch 4 loss 1.23348:  11%|█         | 3/28 [00:07<00:56,  2.27s/it]epoch 4 loss 1.2489:  11%|█         | 3/28 [00:07<00:56,  2.27s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6611[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3337[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2489:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.25145:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.25145:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 4 loss 1.26243:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4824[0m
[32m  eval_recall = 0.3344[0m
[32m  ********************[0m
[32m  Best MCC:0.6429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26243:  21%|██▏       | 6/28 [00:19<01:24,  3.82s/it]epoch 4 loss 1.27968:  21%|██▏       | 6/28 [00:20<01:24,  3.82s/it]epoch 4 loss 1.27968:  25%|██▌       | 7/28 [00:20<00:56,  2.71s/it]epoch 4 loss 1.27174:  25%|██▌       | 7/28 [00:20<00:56,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3676[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4839[0m
[32m  eval_recall = 0.335[0m

epoch 4 loss 1.27174:  29%|██▊       | 8/28 [00:24<01:01,  3.06s/it]epoch 4 loss 1.26204:  29%|██▊       | 8/28 [00:24<01:01,  3.06s/it]epoch 4 loss 1.26204:  32%|███▏      | 9/28 [00:24<00:42,  2.23s/it]epoch 4 loss 1.27257:  32%|███▏      | 9/28 [00:24<00:42,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4865[0m
[32m  eval_recall = 0.3364[0m
[32m  ********************[0m
[32m  Best f1:0.369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27257:  36%|███▌      | 10/28 [00:31<01:04,  3.58s/it]epoch 4 loss 1.2732:  36%|███▌      | 10/28 [00:31<01:04,  3.58s/it] epoch 4 loss 1.2732:  39%|███▉      | 11/28 [00:31<00:44,  2.61s/it]epoch 4 loss 1.27138:  39%|███▉      | 11/28 [00:32<00:44,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.4862[0m
[32m  eval_recall = 0.3367[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27138:  43%|████▎     | 12/28 [00:38<01:01,  3.87s/it]epoch 4 loss 1.26689:  43%|████▎     | 12/28 [00:38<01:01,  3.87s/it]epoch 4 loss 1.26689:  46%|████▋     | 13/28 [00:38<00:42,  2.83s/it]epoch 4 loss 1.27857:  46%|████▋     | 13/28 [00:39<00:42,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.485[0m
[32m  eval_recall = 0.3367[0m

epoch 4 loss 1.27857:  50%|█████     | 14/28 [00:42<00:43,  3.13s/it]epoch 4 loss 1.27942:  50%|█████     | 14/28 [00:43<00:43,  3.13s/it]epoch 4 loss 1.27942:  54%|█████▎    | 15/28 [00:43<00:29,  2.31s/it]epoch 4 loss 1.27342:  54%|█████▎    | 15/28 [00:43<00:29,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4849[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27342:  57%|█████▋    | 16/28 [00:48<00:37,  3.14s/it]epoch 4 loss 1.26625:  57%|█████▋    | 16/28 [00:48<00:37,  3.14s/it]epoch 4 loss 1.26625:  61%|██████    | 17/28 [00:48<00:25,  2.32s/it]epoch 4 loss 1.26233:  61%|██████    | 17/28 [00:48<00:25,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3711[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best f1:0.3711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26233:  64%|██████▍   | 18/28 [00:55<00:36,  3.62s/it]epoch 4 loss 1.26218:  64%|██████▍   | 18/28 [00:55<00:36,  3.62s/it]epoch 4 loss 1.26218:  68%|██████▊   | 19/28 [00:55<00:23,  2.66s/it]epoch 4 loss 1.26119:  68%|██████▊   | 19/28 [00:55<00:23,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6623[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4936[0m
[32m  eval_recall = 0.3384[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26119:  71%|███████▏  | 20/28 [01:02<00:32,  4.04s/it]epoch 4 loss 1.26539:  71%|███████▏  | 20/28 [01:03<00:32,  4.04s/it]epoch 4 loss 1.26539:  75%|███████▌  | 21/28 [01:03<00:20,  2.95s/it]epoch 4 loss 1.2684:  75%|███████▌  | 21/28 [01:03<00:20,  2.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.6437[0m
[32m  eval_precision = 0.4937[0m
[32m  eval_recall = 0.3391[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2684:  79%|███████▊  | 22/28 [01:08<00:22,  3.74s/it]epoch 4 loss 1.26285:  79%|███████▊  | 22/28 [01:09<00:22,  3.74s/it]epoch 4 loss 1.26285:  82%|████████▏ | 23/28 [01:09<00:13,  2.74s/it]epoch 4 loss 1.26089:  82%|████████▏ | 23/28 [01:09<00:13,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3397[0m
[32m  ********************[0m
[32m  Best f1:0.3731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26089:  86%|████████▌ | 24/28 [01:14<00:14,  3.59s/it]epoch 4 loss 1.25892:  86%|████████▌ | 24/28 [01:15<00:14,  3.59s/it]epoch 4 loss 1.25892:  89%|████████▉ | 25/28 [01:15<00:07,  2.64s/it]epoch 4 loss 1.26078:  89%|████████▉ | 25/28 [01:15<00:07,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4943[0m
[32m  eval_recall = 0.3396[0m

epoch 4 loss 1.26078:  93%|█████████▎| 26/28 [01:19<00:05,  2.99s/it]epoch 4 loss 1.25929:  93%|█████████▎| 26/28 [01:19<00:05,  2.99s/it]epoch 4 loss 1.25929:  96%|█████████▋| 27/28 [01:19<00:02,  2.21s/it]epoch 4 loss 1.2639:  96%|█████████▋| 27/28 [01:19<00:02,  2.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4943[0m
[32m  eval_recall = 0.3396[0m

epoch 4 loss 1.2639: 100%|██████████| 28/28 [01:23<00:00,  2.63s/it]epoch 4 loss 1.2639: 100%|██████████| 28/28 [01:23<00:00,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3397[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4545[0m
[32m  eval_recall = 0.3013[0m

