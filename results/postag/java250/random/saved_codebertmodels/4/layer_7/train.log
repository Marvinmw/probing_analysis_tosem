[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_7', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21508:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21508:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.20832:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0129[0m
[32m  eval_f1 = 0.0053[0m
[32m  eval_mcc = 0.0029[0m
[32m  eval_precision = 0.0081[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20832:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.19477:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.19477:  11%|█         | 3/28 [00:06<00:48,  1.96s/it]epoch 0 loss 5.18399:  11%|█         | 3/28 [00:06<00:48,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0181[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = 0.0013[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0074[0m

epoch 0 loss 5.18399:  14%|█▍        | 4/28 [00:09<01:04,  2.68s/it]epoch 0 loss 5.1595:  14%|█▍        | 4/28 [00:10<01:04,  2.68s/it] epoch 0 loss 5.1595:  18%|█▊        | 5/28 [00:10<00:42,  1.86s/it]epoch 0 loss 5.13679:  18%|█▊        | 5/28 [00:10<00:42,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0364[0m
[32m  eval_f1 = 0.006[0m
[32m  eval_mcc = 0.0018[0m
[32m  eval_precision = 0.0065[0m
[32m  eval_recall = 0.0095[0m
[32m  ********************[0m
[32m  Best f1:0.006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.13679:  21%|██▏       | 6/28 [00:15<01:04,  2.95s/it]epoch 0 loss 5.09863:  21%|██▏       | 6/28 [00:15<01:04,  2.95s/it]epoch 0 loss 5.09863:  25%|██▌       | 7/28 [00:15<00:44,  2.11s/it]epoch 0 loss 5.05844:  25%|██▌       | 7/28 [00:16<00:44,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0689[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0084[0m
[32m  eval_precision = 0.0135[0m
[32m  eval_recall = 0.0135[0m
[32m  ********************[0m
[32m  Best f1:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05844:  29%|██▊       | 8/28 [00:25<01:32,  4.64s/it]epoch 0 loss 5.007:  29%|██▊       | 8/28 [00:26<01:32,  4.64s/it]  epoch 0 loss 5.007:  32%|███▏      | 9/28 [00:26<01:03,  3.32s/it]epoch 0 loss 4.96167:  32%|███▏      | 9/28 [00:26<01:03,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.088[0m
[32m  eval_f1 = 0.0133[0m
[32m  eval_mcc = 0.0187[0m
[32m  eval_precision = 0.0254[0m
[32m  eval_recall = 0.0179[0m
[32m  ********************[0m
[32m  Best f1:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96167:  36%|███▌      | 10/28 [00:32<01:15,  4.20s/it]epoch 0 loss 4.90593:  36%|███▌      | 10/28 [00:32<01:15,  4.20s/it]epoch 0 loss 4.90593:  39%|███▉      | 11/28 [00:32<00:51,  3.05s/it]epoch 0 loss 4.84463:  39%|███▉      | 11/28 [00:33<00:51,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1004[0m
[32m  eval_f1 = 0.0167[0m
[32m  eval_mcc = 0.0304[0m
[32m  eval_precision = 0.0419[0m
[32m  eval_recall = 0.0208[0m
[32m  ********************[0m
[32m  Best f1:0.0167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84463:  43%|████▎     | 12/28 [00:39<01:04,  4.00s/it]epoch 0 loss 4.77972:  43%|████▎     | 12/28 [00:39<01:04,  4.00s/it]epoch 0 loss 4.77972:  46%|████▋     | 13/28 [00:39<00:43,  2.92s/it]epoch 0 loss 4.71317:  46%|████▋     | 13/28 [00:39<00:43,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.12[0m
[32m  eval_f1 = 0.0147[0m
[32m  eval_mcc = 0.0503[0m
[32m  eval_precision = 0.0389[0m
[32m  eval_recall = 0.0191[0m
[32m  ********************[0m
[32m  Best MCC:0.0503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.71317:  50%|█████     | 14/28 [00:44<00:49,  3.53s/it]epoch 0 loss 4.64866:  50%|█████     | 14/28 [00:44<00:49,  3.53s/it]epoch 0 loss 4.64866:  54%|█████▎    | 15/28 [00:44<00:33,  2.59s/it]epoch 0 loss 4.58094:  54%|█████▎    | 15/28 [00:45<00:33,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1508[0m
[32m  eval_f1 = 0.0156[0m
[32m  eval_mcc = 0.0846[0m
[32m  eval_precision = 0.0352[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best MCC:0.0846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58094:  57%|█████▋    | 16/28 [00:49<00:39,  3.29s/it]epoch 0 loss 4.51154:  57%|█████▋    | 16/28 [00:50<00:39,  3.29s/it]epoch 0 loss 4.51154:  61%|██████    | 17/28 [00:50<00:26,  2.42s/it]epoch 0 loss 4.45024:  61%|██████    | 17/28 [00:50<00:26,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1921[0m
[32m  eval_f1 = 0.0203[0m
[32m  eval_mcc = 0.1297[0m
[32m  eval_precision = 0.0512[0m
[32m  eval_recall = 0.0271[0m
[32m  ********************[0m
[32m  Best f1:0.0203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45024:  64%|██████▍   | 18/28 [00:56<00:35,  3.58s/it]epoch 0 loss 4.38605:  64%|██████▍   | 18/28 [00:56<00:35,  3.58s/it]epoch 0 loss 4.38605:  68%|██████▊   | 19/28 [00:56<00:23,  2.63s/it]epoch 0 loss 4.33217:  68%|██████▊   | 19/28 [00:57<00:23,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2541[0m
[32m  eval_f1 = 0.0286[0m
[32m  eval_mcc = 0.1961[0m
[32m  eval_precision = 0.071[0m
[32m  eval_recall = 0.0363[0m
[32m  ********************[0m
[32m  Best f1:0.0286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33217:  71%|███████▏  | 20/28 [01:02<00:27,  3.45s/it]epoch 0 loss 4.26634:  71%|███████▏  | 20/28 [01:02<00:27,  3.45s/it]epoch 0 loss 4.26634:  75%|███████▌  | 21/28 [01:02<00:17,  2.54s/it]epoch 0 loss 4.21581:  75%|███████▌  | 21/28 [01:03<00:17,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2939[0m
[32m  eval_f1 = 0.0487[0m
[32m  eval_mcc = 0.2434[0m
[32m  eval_precision = 0.0938[0m
[32m  eval_recall = 0.053[0m
[32m  ********************[0m
[32m  Best f1:0.0487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21581:  79%|███████▊  | 22/28 [01:08<00:21,  3.54s/it]epoch 0 loss 4.15536:  79%|███████▊  | 22/28 [01:08<00:21,  3.54s/it]epoch 0 loss 4.15536:  82%|████████▏ | 23/28 [01:08<00:13,  2.61s/it]epoch 0 loss 4.09636:  82%|████████▏ | 23/28 [01:09<00:13,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3326[0m
[32m  eval_f1 = 0.0728[0m
[32m  eval_mcc = 0.2908[0m
[32m  eval_precision = 0.1439[0m
[32m  eval_recall = 0.0697[0m
[32m  ********************[0m
[32m  Best f1:0.0728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.09636:  86%|████████▌ | 24/28 [01:15<00:14,  3.69s/it]epoch 0 loss 4.04526:  86%|████████▌ | 24/28 [01:15<00:14,  3.69s/it]epoch 0 loss 4.04526:  89%|████████▉ | 25/28 [01:15<00:08,  2.71s/it]epoch 0 loss 3.99135:  89%|████████▉ | 25/28 [01:16<00:08,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4084[0m
[32m  eval_f1 = 0.1287[0m
[32m  eval_mcc = 0.3751[0m
[32m  eval_precision = 0.1908[0m
[32m  eval_recall = 0.1143[0m
[32m  ********************[0m
[32m  Best f1:0.1287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99135:  93%|█████████▎| 26/28 [01:21<00:07,  3.77s/it]epoch 0 loss 3.9375:  93%|█████████▎| 26/28 [01:22<00:07,  3.77s/it] epoch 0 loss 3.9375:  96%|█████████▋| 27/28 [01:22<00:02,  2.77s/it]epoch 0 loss 3.88183:  96%|█████████▋| 27/28 [01:22<00:02,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4613[0m
[32m  eval_f1 = 0.151[0m
[32m  eval_mcc = 0.4341[0m
[32m  eval_precision = 0.2093[0m
[32m  eval_recall = 0.1403[0m
[32m  ********************[0m
[32m  Best f1:0.151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88183: 100%|██████████| 28/28 [01:28<00:00,  3.76s/it]epoch 0 loss 3.88183: 100%|██████████| 28/28 [01:28<00:00,  3.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36887:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36887:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.2717:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4949[0m
[32m  eval_f1 = 0.1695[0m
[32m  eval_mcc = 0.4705[0m
[32m  eval_precision = 0.2329[0m
[32m  eval_recall = 0.1625[0m
[32m  ********************[0m
[32m  Best f1:0.1695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2717:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 1 loss 2.23495:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 1 loss 2.23495:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 1 loss 2.23031:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5311[0m
[32m  eval_f1 = 0.189[0m
[32m  eval_mcc = 0.504[0m
[32m  eval_precision = 0.2311[0m
[32m  eval_recall = 0.1829[0m
[32m  ********************[0m
[32m  Best f1:0.189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23031:  14%|█▍        | 4/28 [00:12<01:29,  3.71s/it]epoch 1 loss 2.22828:  14%|█▍        | 4/28 [00:13<01:29,  3.71s/it]epoch 1 loss 2.22828:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it]epoch 1 loss 2.21828:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.551[0m
[32m  eval_f1 = 0.1939[0m
[32m  eval_mcc = 0.5233[0m
[32m  eval_precision = 0.2464[0m
[32m  eval_recall = 0.1904[0m
[32m  ********************[0m
[32m  Best f1:0.1939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21828:  21%|██▏       | 6/28 [00:19<01:23,  3.81s/it]epoch 1 loss 2.20112:  21%|██▏       | 6/28 [00:19<01:23,  3.81s/it]epoch 1 loss 2.20112:  25%|██▌       | 7/28 [00:19<00:56,  2.70s/it]epoch 1 loss 2.16429:  25%|██▌       | 7/28 [00:20<00:56,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5675[0m
[32m  eval_f1 = 0.2042[0m
[32m  eval_mcc = 0.5407[0m
[32m  eval_precision = 0.2535[0m
[32m  eval_recall = 0.1994[0m
[32m  ********************[0m
[32m  Best f1:0.2042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16429:  29%|██▊       | 8/28 [00:26<01:16,  3.83s/it]epoch 1 loss 2.135:  29%|██▊       | 8/28 [00:26<01:16,  3.83s/it]  epoch 1 loss 2.135:  32%|███▏      | 9/28 [00:26<00:52,  2.76s/it]epoch 1 loss 2.11874:  32%|███▏      | 9/28 [00:26<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5739[0m
[32m  eval_f1 = 0.209[0m
[32m  eval_mcc = 0.5473[0m
[32m  eval_precision = 0.267[0m
[32m  eval_recall = 0.2041[0m
[32m  ********************[0m
[32m  Best f1:0.209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11874:  36%|███▌      | 10/28 [00:37<01:34,  5.25s/it]epoch 1 loss 2.09466:  36%|███▌      | 10/28 [00:37<01:34,  5.25s/it]epoch 1 loss 2.09466:  39%|███▉      | 11/28 [00:37<01:04,  3.77s/it]epoch 1 loss 2.07239:  39%|███▉      | 11/28 [00:38<01:04,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5833[0m
[32m  eval_f1 = 0.2186[0m
[32m  eval_mcc = 0.5576[0m
[32m  eval_precision = 0.2859[0m
[32m  eval_recall = 0.2098[0m
[32m  ********************[0m
[32m  Best f1:0.2186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07239:  43%|████▎     | 12/28 [00:48<01:35,  5.96s/it]epoch 1 loss 2.04587:  43%|████▎     | 12/28 [00:49<01:35,  5.96s/it]epoch 1 loss 2.04587:  46%|████▋     | 13/28 [00:49<01:04,  4.28s/it]epoch 1 loss 2.03523:  46%|████▋     | 13/28 [00:49<01:04,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.589[0m
[32m  eval_f1 = 0.2274[0m
[32m  eval_mcc = 0.5664[0m
[32m  eval_precision = 0.2989[0m
[32m  eval_recall = 0.2157[0m
[32m  ********************[0m
[32m  Best f1:0.2274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03523:  50%|█████     | 14/28 [01:00<01:28,  6.35s/it]epoch 1 loss 2.01021:  50%|█████     | 14/28 [01:00<01:28,  6.35s/it]epoch 1 loss 2.01021:  54%|█████▎    | 15/28 [01:00<00:59,  4.57s/it]epoch 1 loss 1.99313:  54%|█████▎    | 15/28 [01:01<00:59,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5919[0m
[32m  eval_f1 = 0.2295[0m
[32m  eval_mcc = 0.5717[0m
[32m  eval_precision = 0.3025[0m
[32m  eval_recall = 0.2168[0m
[32m  ********************[0m
[32m  Best f1:0.2295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99313:  57%|█████▋    | 16/28 [01:11<01:16,  6.41s/it]epoch 1 loss 1.97732:  57%|█████▋    | 16/28 [01:11<01:16,  6.41s/it]epoch 1 loss 1.97732:  61%|██████    | 17/28 [01:11<00:50,  4.61s/it]epoch 1 loss 1.96319:  61%|██████    | 17/28 [01:12<00:50,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5962[0m
[32m  eval_f1 = 0.2363[0m
[32m  eval_mcc = 0.5767[0m
[32m  eval_precision = 0.3288[0m
[32m  eval_recall = 0.2219[0m
[32m  ********************[0m
[32m  Best f1:0.2363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96319:  64%|██████▍   | 18/28 [01:22<01:04,  6.45s/it]epoch 1 loss 1.94559:  64%|██████▍   | 18/28 [01:22<01:04,  6.45s/it]epoch 1 loss 1.94559:  68%|██████▊   | 19/28 [01:22<00:41,  4.64s/it]epoch 1 loss 1.92928:  68%|██████▊   | 19/28 [01:23<00:41,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.249[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3487[0m
[32m  eval_recall = 0.2314[0m
[32m  ********************[0m
[32m  Best f1:0.249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92928:  71%|███████▏  | 20/28 [01:33<00:51,  6.40s/it]epoch 1 loss 1.91518:  71%|███████▏  | 20/28 [01:33<00:51,  6.40s/it]epoch 1 loss 1.91518:  75%|███████▌  | 21/28 [01:33<00:32,  4.61s/it]epoch 1 loss 1.90519:  75%|███████▌  | 21/28 [01:34<00:32,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2555[0m
[32m  eval_mcc = 0.5887[0m
[32m  eval_precision = 0.3718[0m
[32m  eval_recall = 0.2373[0m
[32m  ********************[0m
[32m  Best f1:0.2555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90519:  79%|███████▊  | 22/28 [01:40<00:32,  5.34s/it]epoch 1 loss 1.89152:  79%|███████▊  | 22/28 [01:41<00:32,  5.34s/it]epoch 1 loss 1.89152:  82%|████████▏ | 23/28 [01:41<00:19,  3.86s/it]epoch 1 loss 1.8774:  82%|████████▏ | 23/28 [01:41<00:19,  3.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6114[0m
[32m  eval_f1 = 0.2607[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3838[0m
[32m  eval_recall = 0.2415[0m
[32m  ********************[0m
[32m  Best f1:0.2607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8774:  86%|████████▌ | 24/28 [01:52<00:23,  5.91s/it]epoch 1 loss 1.87089:  86%|████████▌ | 24/28 [01:52<00:23,  5.91s/it]epoch 1 loss 1.87089:  89%|████████▉ | 25/28 [01:52<00:12,  4.26s/it]epoch 1 loss 1.86255:  89%|████████▉ | 25/28 [01:52<00:12,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6129[0m
[32m  eval_f1 = 0.2669[0m
[32m  eval_mcc = 0.5905[0m
[32m  eval_precision = 0.3841[0m
[32m  eval_recall = 0.2473[0m
[32m  ********************[0m
[32m  Best f1:0.2669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86255:  93%|█████████▎| 26/28 [02:00<00:10,  5.50s/it]epoch 1 loss 1.84806:  93%|█████████▎| 26/28 [02:01<00:10,  5.50s/it]epoch 1 loss 1.84806:  96%|█████████▋| 27/28 [02:01<00:03,  3.97s/it]epoch 1 loss 1.84283:  96%|█████████▋| 27/28 [02:01<00:03,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6164[0m
[32m  eval_f1 = 0.2724[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.2528[0m
[32m  ********************[0m
[32m  Best f1:0.2724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84283: 100%|██████████| 28/28 [02:11<00:00,  5.90s/it]epoch 1 loss 1.84283: 100%|██████████| 28/28 [02:11<00:00,  4.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.49778:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.49778:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.51495:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2856[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.4063[0m
[32m  eval_recall = 0.2637[0m
[32m  ********************[0m
[32m  Best f1:0.2856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51495:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 2 loss 1.49984:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 2 loss 1.49984:  11%|█         | 3/28 [00:07<01:03,  2.54s/it]epoch 2 loss 1.47354:  11%|█         | 3/28 [00:08<01:03,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6244[0m
[32m  eval_f1 = 0.3082[0m
[32m  eval_mcc = 0.6024[0m
[32m  eval_precision = 0.4153[0m
[32m  eval_recall = 0.2861[0m
[32m  ********************[0m
[32m  Best f1:0.3082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47354:  14%|█▍        | 4/28 [00:18<02:18,  5.78s/it]epoch 2 loss 1.48795:  14%|█▍        | 4/28 [00:19<02:18,  5.78s/it]epoch 2 loss 1.48795:  18%|█▊        | 5/28 [00:19<01:28,  3.85s/it]epoch 2 loss 1.48885:  18%|█▊        | 5/28 [00:19<01:28,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6281[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.4188[0m
[32m  eval_recall = 0.2886[0m
[32m  ********************[0m
[32m  Best f1:0.3111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48885:  21%|██▏       | 6/28 [00:26<01:49,  4.98s/it]epoch 2 loss 1.48767:  21%|██▏       | 6/28 [00:26<01:49,  4.98s/it]epoch 2 loss 1.48767:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it]epoch 2 loss 1.47109:  25%|██▌       | 7/28 [00:27<01:13,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3125[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.2893[0m
[32m  ********************[0m
[32m  Best f1:0.3125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47109:  29%|██▊       | 8/28 [00:33<01:29,  4.48s/it]epoch 2 loss 1.48029:  29%|██▊       | 8/28 [00:33<01:29,  4.48s/it]epoch 2 loss 1.48029:  32%|███▏      | 9/28 [00:33<01:00,  3.21s/it]epoch 2 loss 1.4943:  32%|███▏      | 9/28 [00:34<01:00,  3.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.3132[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.425[0m
[32m  eval_recall = 0.2897[0m
[32m  ********************[0m
[32m  Best f1:0.3132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4943:  36%|███▌      | 10/28 [00:41<01:21,  4.52s/it]epoch 2 loss 1.49103:  36%|███▌      | 10/28 [00:41<01:21,  4.52s/it]epoch 2 loss 1.49103:  39%|███▉      | 11/28 [00:41<00:55,  3.26s/it]epoch 2 loss 1.49859:  39%|███▉      | 11/28 [00:41<00:55,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6341[0m
[32m  eval_f1 = 0.3151[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.4221[0m
[32m  eval_recall = 0.2918[0m
[32m  ********************[0m
[32m  Best f1:0.3151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49859:  43%|████▎     | 12/28 [00:49<01:15,  4.74s/it]epoch 2 loss 1.48536:  43%|████▎     | 12/28 [00:50<01:15,  4.74s/it]epoch 2 loss 1.48536:  46%|████▋     | 13/28 [00:50<00:51,  3.44s/it]epoch 2 loss 1.48981:  46%|████▋     | 13/28 [00:50<00:51,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.3206[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.2962[0m
[32m  ********************[0m
[32m  Best f1:0.3206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48981:  50%|█████     | 14/28 [00:57<01:05,  4.71s/it]epoch 2 loss 1.47833:  50%|█████     | 14/28 [00:58<01:05,  4.71s/it]epoch 2 loss 1.47833:  54%|█████▎    | 15/28 [00:58<00:44,  3.42s/it]epoch 2 loss 1.47869:  54%|█████▎    | 15/28 [00:58<00:44,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.425[0m
[32m  eval_recall = 0.2972[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.47869:  57%|█████▋    | 16/28 [01:03<00:46,  3.89s/it]epoch 2 loss 1.47852:  57%|█████▋    | 16/28 [01:03<00:46,  3.89s/it]epoch 2 loss 1.47852:  61%|██████    | 17/28 [01:03<00:31,  2.84s/it]epoch 2 loss 1.47573:  61%|██████    | 17/28 [01:03<00:31,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.325[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.4427[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47573:  64%|██████▍   | 18/28 [01:14<00:52,  5.25s/it]epoch 2 loss 1.47225:  64%|██████▍   | 18/28 [01:14<00:52,  5.25s/it]epoch 2 loss 1.47225:  68%|██████▊   | 19/28 [01:14<00:34,  3.80s/it]epoch 2 loss 1.46839:  68%|██████▊   | 19/28 [01:15<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3286[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46839:  71%|███████▏  | 20/28 [01:26<00:48,  6.09s/it]epoch 2 loss 1.45855:  71%|███████▏  | 20/28 [01:26<00:48,  6.09s/it]epoch 2 loss 1.45855:  75%|███████▌  | 21/28 [01:26<00:30,  4.39s/it]epoch 2 loss 1.45869:  75%|███████▌  | 21/28 [01:27<00:30,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.331[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.3052[0m
[32m  ********************[0m
[32m  Best f1:0.331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45869:  79%|███████▊  | 22/28 [01:37<00:38,  6.42s/it]epoch 2 loss 1.44787:  79%|███████▊  | 22/28 [01:38<00:38,  6.42s/it]epoch 2 loss 1.44787:  82%|████████▏ | 23/28 [01:38<00:23,  4.63s/it]epoch 2 loss 1.44244:  82%|████████▏ | 23/28 [01:38<00:23,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6433[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4467[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44244:  86%|████████▌ | 24/28 [01:49<00:26,  6.55s/it]epoch 2 loss 1.43806:  86%|████████▌ | 24/28 [01:49<00:26,  6.55s/it]epoch 2 loss 1.43806:  89%|████████▉ | 25/28 [01:49<00:14,  4.72s/it]epoch 2 loss 1.435:  89%|████████▉ | 25/28 [01:50<00:14,  4.72s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3311[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4349[0m
[32m  eval_recall = 0.3046[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.435:  93%|█████████▎| 26/28 [01:54<00:09,  4.82s/it]epoch 2 loss 1.42943:  93%|█████████▎| 26/28 [01:55<00:09,  4.82s/it]epoch 2 loss 1.42943:  96%|█████████▋| 27/28 [01:55<00:03,  3.50s/it]epoch 2 loss 1.42734:  96%|█████████▋| 27/28 [01:55<00:03,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3327[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42734: 100%|██████████| 28/28 [02:02<00:00,  4.56s/it]epoch 2 loss 1.42734: 100%|██████████| 28/28 [02:02<00:00,  4.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42558:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42558:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 3 loss 1.34066:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4347[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34066:   7%|▋         | 2/28 [00:07<01:54,  4.41s/it]epoch 3 loss 1.34298:   7%|▋         | 2/28 [00:08<01:54,  4.41s/it]epoch 3 loss 1.34298:  11%|█         | 3/28 [00:08<01:04,  2.59s/it]epoch 3 loss 1.33027:  11%|█         | 3/28 [00:08<01:04,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33027:  14%|█▍        | 4/28 [00:18<02:16,  5.69s/it]epoch 3 loss 1.33151:  14%|█▍        | 4/28 [00:18<02:16,  5.69s/it]epoch 3 loss 1.33151:  18%|█▊        | 5/28 [00:18<01:27,  3.79s/it]epoch 3 loss 1.31958:  18%|█▊        | 5/28 [00:19<01:27,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3126[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31958:  21%|██▏       | 6/28 [00:25<01:46,  4.82s/it]epoch 3 loss 1.31476:  21%|██▏       | 6/28 [00:26<01:46,  4.82s/it]epoch 3 loss 1.31476:  25%|██▌       | 7/28 [00:26<01:11,  3.38s/it]epoch 3 loss 1.30691:  25%|██▌       | 7/28 [00:26<01:11,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.338[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30691:  29%|██▊       | 8/28 [00:33<01:31,  4.59s/it]epoch 3 loss 1.3277:  29%|██▊       | 8/28 [00:33<01:31,  4.59s/it] epoch 3 loss 1.3277:  32%|███▏      | 9/28 [00:33<01:02,  3.29s/it]epoch 3 loss 1.33335:  32%|███▏      | 9/28 [00:34<01:02,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.3133[0m
[32m  ********************[0m
[32m  Best f1:0.3391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33335:  36%|███▌      | 10/28 [00:43<01:33,  5.18s/it]epoch 3 loss 1.33961:  36%|███▌      | 10/28 [00:43<01:33,  5.18s/it]epoch 3 loss 1.33961:  39%|███▉      | 11/28 [00:43<01:03,  3.72s/it]epoch 3 loss 1.33432:  39%|███▉      | 11/28 [00:44<01:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3404[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.3404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33432:  43%|████▎     | 12/28 [00:53<01:30,  5.65s/it]epoch 3 loss 1.33596:  43%|████▎     | 12/28 [00:54<01:30,  5.65s/it]epoch 3 loss 1.33596:  46%|████▋     | 13/28 [00:54<01:00,  4.07s/it]epoch 3 loss 1.33674:  46%|████▋     | 13/28 [00:54<01:00,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4561[0m
[32m  eval_recall = 0.3193[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33674:  50%|█████     | 14/28 [01:00<01:08,  4.88s/it]epoch 3 loss 1.33679:  50%|█████     | 14/28 [01:01<01:08,  4.88s/it]epoch 3 loss 1.33679:  54%|█████▎    | 15/28 [01:01<00:45,  3.54s/it]epoch 3 loss 1.33915:  54%|█████▎    | 15/28 [01:01<00:45,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3503[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4566[0m
[32m  eval_recall = 0.3213[0m
[32m  ********************[0m
[32m  Best f1:0.3503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33915:  57%|█████▋    | 16/28 [01:07<00:53,  4.49s/it]epoch 3 loss 1.33213:  57%|█████▋    | 16/28 [01:08<00:53,  4.49s/it]epoch 3 loss 1.33213:  61%|██████    | 17/28 [01:08<00:35,  3.27s/it]epoch 3 loss 1.32956:  61%|██████    | 17/28 [01:08<00:35,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3513[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.3513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32956:  64%|██████▍   | 18/28 [01:15<00:43,  4.31s/it]epoch 3 loss 1.326:  64%|██████▍   | 18/28 [01:15<00:43,  4.31s/it]  epoch 3 loss 1.326:  68%|██████▊   | 19/28 [01:15<00:28,  3.14s/it]epoch 3 loss 1.32059:  68%|██████▊   | 19/28 [01:15<00:28,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.3223[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32059:  71%|███████▏  | 20/28 [01:25<00:41,  5.21s/it]epoch 3 loss 1.31979:  71%|███████▏  | 20/28 [01:25<00:41,  5.21s/it]epoch 3 loss 1.31979:  75%|███████▌  | 21/28 [01:25<00:26,  3.77s/it]epoch 3 loss 1.31919:  75%|███████▌  | 21/28 [01:26<00:26,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.352[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.4533[0m
[32m  eval_recall = 0.3223[0m
[32m  ********************[0m
[32m  Best f1:0.352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.31919:  79%|███████▊  | 22/28 [01:32<00:27,  4.62s/it]epoch 3 loss 1.32563:  79%|███████▊  | 22/28 [01:33<00:27,  4.62s/it]epoch 3 loss 1.32563:  82%|████████▏ | 23/28 [01:33<00:16,  3.36s/it]epoch 3 loss 1.32684:  82%|████████▏ | 23/28 [01:33<00:16,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3557[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.4612[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32684:  86%|████████▌ | 24/28 [01:40<00:18,  4.55s/it]epoch 3 loss 1.32609:  86%|████████▌ | 24/28 [01:40<00:18,  4.55s/it]epoch 3 loss 1.32609:  89%|████████▉ | 25/28 [01:40<00:09,  3.31s/it]epoch 3 loss 1.32421:  89%|████████▉ | 25/28 [01:41<00:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3558[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.4606[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.3558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32421:  93%|█████████▎| 26/28 [01:49<00:09,  4.95s/it]epoch 3 loss 1.32412:  93%|█████████▎| 26/28 [01:49<00:09,  4.95s/it]epoch 3 loss 1.32412:  96%|█████████▋| 27/28 [01:49<00:03,  3.59s/it]epoch 3 loss 1.32656:  96%|█████████▋| 27/28 [01:50<00:03,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best f1:0.3561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32656: 100%|██████████| 28/28 [01:59<00:00,  5.46s/it]epoch 3 loss 1.32656: 100%|██████████| 28/28 [01:59<00:00,  4.28s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19043:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19043:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.2577:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best MCC:0.6392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2577:   7%|▋         | 2/28 [00:05<01:18,  3.01s/it]epoch 4 loss 1.25989:   7%|▋         | 2/28 [00:05<01:18,  3.01s/it]epoch 4 loss 1.25989:  11%|█         | 3/28 [00:05<00:45,  1.82s/it]epoch 4 loss 1.27407:  11%|█         | 3/28 [00:06<00:45,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.3261[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27407:  14%|█▍        | 4/28 [00:11<01:25,  3.55s/it]epoch 4 loss 1.27614:  14%|█▍        | 4/28 [00:12<01:25,  3.55s/it]epoch 4 loss 1.27614:  18%|█▊        | 5/28 [00:12<00:55,  2.42s/it]epoch 4 loss 1.28775:  18%|█▊        | 5/28 [00:12<00:55,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28775:  21%|██▏       | 6/28 [00:17<01:11,  3.25s/it]epoch 4 loss 1.3056:  21%|██▏       | 6/28 [00:17<01:11,  3.25s/it] epoch 4 loss 1.3056:  25%|██▌       | 7/28 [00:17<00:48,  2.32s/it]epoch 4 loss 1.29669:  25%|██▌       | 7/28 [00:17<00:48,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3591[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4731[0m
[32m  eval_recall = 0.3279[0m
[32m  ********************[0m
[32m  Best f1:0.3591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29669:  29%|██▊       | 8/28 [00:23<01:06,  3.33s/it]epoch 4 loss 1.28676:  29%|██▊       | 8/28 [00:23<01:06,  3.33s/it]epoch 4 loss 1.28676:  32%|███▏      | 9/28 [00:23<00:45,  2.42s/it]epoch 4 loss 1.29725:  32%|███▏      | 9/28 [00:23<00:45,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4746[0m
[32m  eval_recall = 0.3279[0m

epoch 4 loss 1.29725:  36%|███▌      | 10/28 [00:27<00:51,  2.84s/it]epoch 4 loss 1.29774:  36%|███▌      | 10/28 [00:27<00:51,  2.84s/it]epoch 4 loss 1.29774:  39%|███▉      | 11/28 [00:27<00:35,  2.10s/it]epoch 4 loss 1.29583:  39%|███▉      | 11/28 [00:28<00:35,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4769[0m
[32m  eval_recall = 0.3283[0m
[32m  ********************[0m
[32m  Best f1:0.3592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29583:  43%|████▎     | 12/28 [00:32<00:47,  2.97s/it]epoch 4 loss 1.29143:  43%|████▎     | 12/28 [00:33<00:47,  2.97s/it]epoch 4 loss 1.29143:  46%|████▋     | 13/28 [00:33<00:32,  2.19s/it]epoch 4 loss 1.30313:  46%|████▋     | 13/28 [00:33<00:32,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30313:  50%|█████     | 14/28 [00:38<00:42,  3.04s/it]epoch 4 loss 1.30419:  50%|█████     | 14/28 [00:38<00:42,  3.04s/it]epoch 4 loss 1.30419:  54%|█████▎    | 15/28 [00:38<00:29,  2.25s/it]epoch 4 loss 1.29855:  54%|█████▎    | 15/28 [00:38<00:29,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4747[0m
[32m  eval_recall = 0.3303[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29855:  57%|█████▋    | 16/28 [00:43<00:35,  2.98s/it]epoch 4 loss 1.29148:  57%|█████▋    | 16/28 [00:43<00:35,  2.98s/it]epoch 4 loss 1.29148:  61%|██████    | 17/28 [00:43<00:24,  2.20s/it]epoch 4 loss 1.28754:  61%|██████    | 17/28 [00:43<00:24,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4716[0m
[32m  eval_recall = 0.3303[0m

epoch 4 loss 1.28754:  64%|██████▍   | 18/28 [00:47<00:26,  2.69s/it]epoch 4 loss 1.28738:  64%|██████▍   | 18/28 [00:47<00:26,  2.69s/it]epoch 4 loss 1.28738:  68%|██████▊   | 19/28 [00:47<00:17,  2.00s/it]epoch 4 loss 1.28634:  68%|██████▊   | 19/28 [00:48<00:17,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4721[0m
[32m  eval_recall = 0.3308[0m
[32m  ********************[0m
[32m  Best f1:0.3618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28634:  71%|███████▏  | 20/28 [00:53<00:24,  3.08s/it]epoch 4 loss 1.29051:  71%|███████▏  | 20/28 [00:53<00:24,  3.08s/it]epoch 4 loss 1.29051:  75%|███████▌  | 21/28 [00:53<00:15,  2.29s/it]epoch 4 loss 1.29349:  75%|███████▌  | 21/28 [00:54<00:15,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4722[0m
[32m  eval_recall = 0.331[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29349:  79%|███████▊  | 22/28 [01:00<00:20,  3.49s/it]epoch 4 loss 1.28787:  79%|███████▊  | 22/28 [01:00<00:20,  3.49s/it]epoch 4 loss 1.28787:  82%|████████▏ | 23/28 [01:00<00:12,  2.57s/it]epoch 4 loss 1.28572:  82%|████████▏ | 23/28 [01:00<00:12,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4726[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best f1:0.3623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28572:  86%|████████▌ | 24/28 [01:06<00:14,  3.69s/it]epoch 4 loss 1.28377:  86%|████████▌ | 24/28 [01:07<00:14,  3.69s/it]epoch 4 loss 1.28377:  89%|████████▉ | 25/28 [01:07<00:08,  2.71s/it]epoch 4 loss 1.28551:  89%|████████▉ | 25/28 [01:07<00:08,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28551:  93%|█████████▎| 26/28 [01:13<00:07,  3.79s/it]epoch 4 loss 1.28416:  93%|█████████▎| 26/28 [01:13<00:07,  3.79s/it]epoch 4 loss 1.28416:  96%|█████████▋| 27/28 [01:13<00:02,  2.78s/it]epoch 4 loss 1.28863:  96%|█████████▋| 27/28 [01:14<00:02,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4728[0m
[32m  eval_recall = 0.3313[0m

epoch 4 loss 1.28863: 100%|██████████| 28/28 [01:17<00:00,  3.03s/it]epoch 4 loss 1.28863: 100%|██████████| 28/28 [01:17<00:00,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3314[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.2946[0m

