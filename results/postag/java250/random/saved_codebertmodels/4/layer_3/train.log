[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_3', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.26588:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.26588:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.25449:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0086[0m
[32m  eval_f1 = 0.0064[0m
[32m  eval_mcc = 0.0063[0m
[32m  eval_precision = 0.0124[0m
[32m  eval_recall = 0.0109[0m
[32m  ********************[0m
[32m  Best f1:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25449:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.24707:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.24707:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.23888:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0119[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0079[0m
[32m  eval_precision = 0.0112[0m
[32m  eval_recall = 0.0126[0m
[32m  ********************[0m
[32m  Best f1:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23888:  14%|█▍        | 4/28 [00:15<01:53,  4.72s/it]epoch 0 loss 5.21462:  14%|█▍        | 4/28 [00:15<01:53,  4.72s/it]epoch 0 loss 5.21462:  18%|█▊        | 5/28 [00:15<01:12,  3.16s/it]epoch 0 loss 5.19311:  18%|█▊        | 5/28 [00:15<01:12,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0186[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0145[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.19311:  21%|██▏       | 6/28 [00:22<01:36,  4.36s/it]epoch 0 loss 5.15664:  21%|██▏       | 6/28 [00:22<01:36,  4.36s/it]epoch 0 loss 5.15664:  25%|██▌       | 7/28 [00:22<01:04,  3.07s/it]epoch 0 loss 5.1162:  25%|██▌       | 7/28 [00:23<01:04,  3.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0413[0m
[32m  eval_f1 = 0.0099[0m
[32m  eval_mcc = 0.0155[0m
[32m  eval_precision = 0.0106[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1162:  29%|██▊       | 8/28 [00:30<01:29,  4.49s/it]epoch 0 loss 5.06985:  29%|██▊       | 8/28 [00:30<01:29,  4.49s/it]epoch 0 loss 5.06985:  32%|███▏      | 9/28 [00:30<01:01,  3.22s/it]epoch 0 loss 5.0243:  32%|███▏      | 9/28 [00:30<01:01,  3.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0802[0m
[32m  eval_f1 = 0.023[0m
[32m  eval_mcc = 0.0386[0m
[32m  eval_precision = 0.0261[0m
[32m  eval_recall = 0.0298[0m
[32m  ********************[0m
[32m  Best f1:0.023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0243:  36%|███▌      | 10/28 [00:40<01:33,  5.17s/it]epoch 0 loss 4.96964:  36%|███▌      | 10/28 [00:40<01:33,  5.17s/it]epoch 0 loss 4.96964:  39%|███▉      | 11/28 [00:40<01:03,  3.72s/it]epoch 0 loss 4.90968:  39%|███▉      | 11/28 [00:40<01:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0989[0m
[32m  eval_f1 = 0.0214[0m
[32m  eval_mcc = 0.0501[0m
[32m  eval_precision = 0.0289[0m
[32m  eval_recall = 0.0283[0m
[32m  ********************[0m
[32m  Best MCC:0.0501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.90968:  43%|████▎     | 12/28 [00:47<01:12,  4.56s/it]epoch 0 loss 4.84598:  43%|████▎     | 12/28 [00:47<01:12,  4.56s/it]epoch 0 loss 4.84598:  46%|████▋     | 13/28 [00:47<00:49,  3.30s/it]epoch 0 loss 4.77881:  46%|████▋     | 13/28 [00:47<00:49,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1402[0m
[32m  eval_f1 = 0.038[0m
[32m  eval_mcc = 0.0895[0m
[32m  eval_precision = 0.0623[0m
[32m  eval_recall = 0.0444[0m
[32m  ********************[0m
[32m  Best f1:0.038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77881:  50%|█████     | 14/28 [00:53<00:59,  4.25s/it]epoch 0 loss 4.71343:  50%|█████     | 14/28 [00:54<00:59,  4.25s/it]epoch 0 loss 4.71343:  54%|█████▎    | 15/28 [00:54<00:40,  3.09s/it]epoch 0 loss 4.64392:  54%|█████▎    | 15/28 [00:54<00:40,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1887[0m
[32m  eval_f1 = 0.0468[0m
[32m  eval_mcc = 0.1362[0m
[32m  eval_precision = 0.0657[0m
[32m  eval_recall = 0.0521[0m
[32m  ********************[0m
[32m  Best f1:0.0468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64392:  57%|█████▋    | 16/28 [01:00<00:49,  4.10s/it]epoch 0 loss 4.57169:  57%|█████▋    | 16/28 [01:01<00:49,  4.10s/it]epoch 0 loss 4.57169:  61%|██████    | 17/28 [01:01<00:32,  2.99s/it]epoch 0 loss 4.50538:  61%|██████    | 17/28 [01:01<00:32,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2562[0m
[32m  eval_f1 = 0.0602[0m
[32m  eval_mcc = 0.2041[0m
[32m  eval_precision = 0.0948[0m
[32m  eval_recall = 0.0621[0m
[32m  ********************[0m
[32m  Best f1:0.0602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50538:  64%|██████▍   | 18/28 [01:06<00:37,  3.74s/it]epoch 0 loss 4.43674:  64%|██████▍   | 18/28 [01:07<00:37,  3.74s/it]epoch 0 loss 4.43674:  68%|██████▊   | 19/28 [01:07<00:24,  2.74s/it]epoch 0 loss 4.37765:  68%|██████▊   | 19/28 [01:07<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3151[0m
[32m  eval_f1 = 0.0728[0m
[32m  eval_mcc = 0.266[0m
[32m  eval_precision = 0.1095[0m
[32m  eval_recall = 0.0727[0m
[32m  ********************[0m
[32m  Best f1:0.0728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.37765:  71%|███████▏  | 20/28 [01:12<00:28,  3.57s/it]epoch 0 loss 4.30768:  71%|███████▏  | 20/28 [01:12<00:28,  3.57s/it]epoch 0 loss 4.30768:  75%|███████▌  | 21/28 [01:12<00:18,  2.62s/it]epoch 0 loss 4.25073:  75%|███████▌  | 21/28 [01:13<00:18,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3448[0m
[32m  eval_f1 = 0.081[0m
[32m  eval_mcc = 0.2973[0m
[32m  eval_precision = 0.132[0m
[32m  eval_recall = 0.0784[0m
[32m  ********************[0m
[32m  Best f1:0.081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25073:  79%|███████▊  | 22/28 [01:18<00:21,  3.65s/it]epoch 0 loss 4.18483:  79%|███████▊  | 22/28 [01:19<00:21,  3.65s/it]epoch 0 loss 4.18483:  82%|████████▏ | 23/28 [01:19<00:13,  2.68s/it]epoch 0 loss 4.1193:  82%|████████▏ | 23/28 [01:19<00:13,  2.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3872[0m
[32m  eval_f1 = 0.115[0m
[32m  eval_mcc = 0.3443[0m
[32m  eval_precision = 0.1817[0m
[32m  eval_recall = 0.1042[0m
[32m  ********************[0m
[32m  Best f1:0.115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1193:  86%|████████▌ | 24/28 [01:25<00:14,  3.69s/it]epoch 0 loss 4.06153:  86%|████████▌ | 24/28 [01:25<00:14,  3.69s/it]epoch 0 loss 4.06153:  89%|████████▉ | 25/28 [01:25<00:08,  2.71s/it]epoch 0 loss 4.00137:  89%|████████▉ | 25/28 [01:26<00:08,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4343[0m
[32m  eval_f1 = 0.1351[0m
[32m  eval_mcc = 0.3965[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1248[0m
[32m  ********************[0m
[32m  Best f1:0.1351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.00137:  93%|█████████▎| 26/28 [01:31<00:07,  3.73s/it]epoch 0 loss 3.94127:  93%|█████████▎| 26/28 [01:32<00:07,  3.73s/it]epoch 0 loss 3.94127:  96%|█████████▋| 27/28 [01:32<00:02,  2.74s/it]epoch 0 loss 3.87976:  96%|█████████▋| 27/28 [01:32<00:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4822[0m
[32m  eval_f1 = 0.1578[0m
[32m  eval_mcc = 0.4502[0m
[32m  eval_precision = 0.221[0m
[32m  eval_recall = 0.1473[0m
[32m  ********************[0m
[32m  Best f1:0.1578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.87976: 100%|██████████| 28/28 [01:38<00:00,  3.70s/it]epoch 0 loss 3.87976: 100%|██████████| 28/28 [01:38<00:00,  3.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.21554:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.21554:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.11237:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5162[0m
[32m  eval_f1 = 0.1733[0m
[32m  eval_mcc = 0.4897[0m
[32m  eval_precision = 0.2257[0m
[32m  eval_recall = 0.1671[0m
[32m  ********************[0m
[32m  Best f1:0.1733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11237:   7%|▋         | 2/28 [00:06<01:44,  4.03s/it]epoch 1 loss 2.07548:   7%|▋         | 2/28 [00:07<01:44,  4.03s/it]epoch 1 loss 2.07548:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 1 loss 2.06966:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5554[0m
[32m  eval_f1 = 0.1964[0m
[32m  eval_mcc = 0.5316[0m
[32m  eval_precision = 0.2506[0m
[32m  eval_recall = 0.19[0m
[32m  ********************[0m
[32m  Best f1:0.1964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06966:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.06807:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.06807:  18%|█▊        | 5/28 [00:13<01:00,  2.62s/it]epoch 1 loss 2.05903:  18%|█▊        | 5/28 [00:14<01:00,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5726[0m
[32m  eval_f1 = 0.207[0m
[32m  eval_mcc = 0.5476[0m
[32m  eval_precision = 0.2466[0m
[32m  eval_recall = 0.2037[0m
[32m  ********************[0m
[32m  Best f1:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05903:  21%|██▏       | 6/28 [00:22<01:39,  4.50s/it]epoch 1 loss 2.04245:  21%|██▏       | 6/28 [00:22<01:39,  4.50s/it]epoch 1 loss 2.04245:  25%|██▌       | 7/28 [00:22<01:06,  3.17s/it]epoch 1 loss 2.00796:  25%|██▌       | 7/28 [00:22<01:06,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.585[0m
[32m  eval_f1 = 0.2194[0m
[32m  eval_mcc = 0.5595[0m
[32m  eval_precision = 0.2582[0m
[32m  eval_recall = 0.2159[0m
[32m  ********************[0m
[32m  Best f1:0.2194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00796:  29%|██▊       | 8/28 [00:32<01:49,  5.47s/it]epoch 1 loss 1.98198:  29%|██▊       | 8/28 [00:33<01:49,  5.47s/it]epoch 1 loss 1.98198:  32%|███▏      | 9/28 [00:33<01:13,  3.89s/it]epoch 1 loss 1.96705:  32%|███▏      | 9/28 [00:33<01:13,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5929[0m
[32m  eval_f1 = 0.2264[0m
[32m  eval_mcc = 0.5676[0m
[32m  eval_precision = 0.2815[0m
[32m  eval_recall = 0.2202[0m
[32m  ********************[0m
[32m  Best f1:0.2264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96705:  36%|███▌      | 10/28 [00:43<01:46,  5.93s/it]epoch 1 loss 1.94331:  36%|███▌      | 10/28 [00:44<01:46,  5.93s/it]epoch 1 loss 1.94331:  39%|███▉      | 11/28 [00:44<01:12,  4.25s/it]epoch 1 loss 1.92231:  39%|███▉      | 11/28 [00:44<01:12,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5962[0m
[32m  eval_f1 = 0.232[0m
[32m  eval_mcc = 0.5718[0m
[32m  eval_precision = 0.2846[0m
[32m  eval_recall = 0.2232[0m
[32m  ********************[0m
[32m  Best f1:0.232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92231:  43%|████▎     | 12/28 [00:56<01:45,  6.59s/it]epoch 1 loss 1.89788:  43%|████▎     | 12/28 [00:56<01:45,  6.59s/it]epoch 1 loss 1.89788:  46%|████▋     | 13/28 [00:56<01:10,  4.72s/it]epoch 1 loss 1.88932:  46%|████▋     | 13/28 [00:57<01:10,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5972[0m
[32m  eval_f1 = 0.2358[0m
[32m  eval_mcc = 0.5742[0m
[32m  eval_precision = 0.3087[0m
[32m  eval_recall = 0.2245[0m
[32m  ********************[0m
[32m  Best f1:0.2358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88932:  50%|█████     | 14/28 [01:06<01:29,  6.42s/it]epoch 1 loss 1.86506:  50%|█████     | 14/28 [01:07<01:29,  6.42s/it]epoch 1 loss 1.86506:  54%|█████▎    | 15/28 [01:07<00:59,  4.61s/it]epoch 1 loss 1.8486:  54%|█████▎    | 15/28 [01:07<00:59,  4.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5984[0m
[32m  eval_f1 = 0.2398[0m
[32m  eval_mcc = 0.577[0m
[32m  eval_precision = 0.332[0m
[32m  eval_recall = 0.2253[0m
[32m  ********************[0m
[32m  Best f1:0.2398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8486:  57%|█████▋    | 16/28 [01:17<01:15,  6.26s/it]epoch 1 loss 1.83392:  57%|█████▋    | 16/28 [01:17<01:15,  6.26s/it]epoch 1 loss 1.83392:  61%|██████    | 17/28 [01:17<00:49,  4.50s/it]epoch 1 loss 1.82055:  61%|██████    | 17/28 [01:18<00:49,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6014[0m
[32m  eval_f1 = 0.2462[0m
[32m  eval_mcc = 0.5812[0m
[32m  eval_precision = 0.34[0m
[32m  eval_recall = 0.2299[0m
[32m  ********************[0m
[32m  Best f1:0.2462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82055:  64%|██████▍   | 18/28 [01:27<01:01,  6.16s/it]epoch 1 loss 1.80405:  64%|██████▍   | 18/28 [01:28<01:01,  6.16s/it]epoch 1 loss 1.80405:  68%|██████▊   | 19/28 [01:28<00:39,  4.44s/it]epoch 1 loss 1.78889:  68%|██████▊   | 19/28 [01:28<00:39,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6133[0m
[32m  eval_f1 = 0.2579[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.38[0m
[32m  eval_recall = 0.2388[0m
[32m  ********************[0m
[32m  Best f1:0.2579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78889:  71%|███████▏  | 20/28 [01:37<00:46,  5.87s/it]epoch 1 loss 1.77537:  71%|███████▏  | 20/28 [01:37<00:46,  5.87s/it]epoch 1 loss 1.77537:  75%|███████▌  | 21/28 [01:37<00:29,  4.23s/it]epoch 1 loss 1.76592:  75%|███████▌  | 21/28 [01:38<00:29,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6208[0m
[32m  eval_f1 = 0.2768[0m
[32m  eval_mcc = 0.6012[0m
[32m  eval_precision = 0.3949[0m
[32m  eval_recall = 0.2538[0m
[32m  ********************[0m
[32m  Best f1:0.2768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76592:  79%|███████▊  | 22/28 [01:47<00:35,  5.93s/it]epoch 1 loss 1.75355:  79%|███████▊  | 22/28 [01:48<00:35,  5.93s/it]epoch 1 loss 1.75355:  82%|████████▏ | 23/28 [01:48<00:21,  4.28s/it]epoch 1 loss 1.7413:  82%|████████▏ | 23/28 [01:48<00:21,  4.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6062[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.274[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7413:  86%|████████▌ | 24/28 [01:56<00:21,  5.47s/it]epoch 1 loss 1.73563:  86%|████████▌ | 24/28 [01:56<00:21,  5.47s/it]epoch 1 loss 1.73563:  89%|████████▉ | 25/28 [01:56<00:11,  3.96s/it]epoch 1 loss 1.72861:  89%|████████▉ | 25/28 [01:57<00:11,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.3031[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.3031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72861:  93%|█████████▎| 26/28 [02:06<00:11,  5.67s/it]epoch 1 loss 1.71516:  93%|█████████▎| 26/28 [02:07<00:11,  5.67s/it]epoch 1 loss 1.71516:  96%|█████████▋| 27/28 [02:07<00:04,  4.10s/it]epoch 1 loss 1.70969:  96%|█████████▋| 27/28 [02:07<00:04,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.3183[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.4123[0m
[32m  eval_recall = 0.2953[0m
[32m  ********************[0m
[32m  Best f1:0.3183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70969: 100%|██████████| 28/28 [02:14<00:00,  5.23s/it]epoch 1 loss 1.70969: 100%|██████████| 28/28 [02:14<00:00,  4.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.38721:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.38721:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 2 loss 1.40579:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.423[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40579:   7%|▋         | 2/28 [00:10<02:32,  5.87s/it]epoch 2 loss 1.39526:   7%|▋         | 2/28 [00:10<02:32,  5.87s/it]epoch 2 loss 1.39526:  11%|█         | 3/28 [00:10<01:24,  3.38s/it]epoch 2 loss 1.36974:  11%|█         | 3/28 [00:10<01:24,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.4273[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36974:  14%|█▍        | 4/28 [00:18<02:03,  5.13s/it]epoch 2 loss 1.38158:  14%|█▍        | 4/28 [00:18<02:03,  5.13s/it]epoch 2 loss 1.38158:  18%|█▊        | 5/28 [00:18<01:18,  3.43s/it]epoch 2 loss 1.38199:  18%|█▊        | 5/28 [00:19<01:18,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.337[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38199:  21%|██▏       | 6/28 [00:28<02:04,  5.65s/it]epoch 2 loss 1.38034:  21%|██▏       | 6/28 [00:29<02:04,  5.65s/it]epoch 2 loss 1.38034:  25%|██▌       | 7/28 [00:29<01:22,  3.94s/it]epoch 2 loss 1.36383:  25%|██▌       | 7/28 [00:29<01:22,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.3107[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36383:  29%|██▊       | 8/28 [00:35<01:33,  4.69s/it]epoch 2 loss 1.37161:  29%|██▊       | 8/28 [00:35<01:33,  4.69s/it]epoch 2 loss 1.37161:  32%|███▏      | 9/28 [00:35<01:03,  3.36s/it]epoch 2 loss 1.38613:  32%|███▏      | 9/28 [00:36<01:03,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3388[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best f1:0.3388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38613:  36%|███▌      | 10/28 [00:45<01:34,  5.24s/it]epoch 2 loss 1.38399:  36%|███▌      | 10/28 [00:45<01:34,  5.24s/it]epoch 2 loss 1.38399:  39%|███▉      | 11/28 [00:45<01:04,  3.77s/it]epoch 2 loss 1.39158:  39%|███▉      | 11/28 [00:46<01:04,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3421[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3144[0m
[32m  ********************[0m
[32m  Best f1:0.3421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39158:  43%|████▎     | 12/28 [00:53<01:19,  4.94s/it]epoch 2 loss 1.37883:  43%|████▎     | 12/28 [00:53<01:19,  4.94s/it]epoch 2 loss 1.37883:  46%|████▋     | 13/28 [00:53<00:53,  3.57s/it]epoch 2 loss 1.38413:  46%|████▋     | 13/28 [00:54<00:53,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3446[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3171[0m
[32m  ********************[0m
[32m  Best f1:0.3446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38413:  50%|█████     | 14/28 [01:03<01:15,  5.42s/it]epoch 2 loss 1.37317:  50%|█████     | 14/28 [01:03<01:15,  5.42s/it]epoch 2 loss 1.37317:  54%|█████▎    | 15/28 [01:03<00:50,  3.91s/it]epoch 2 loss 1.37486:  54%|█████▎    | 15/28 [01:04<00:50,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.3476[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4553[0m
[32m  eval_recall = 0.3211[0m
[32m  ********************[0m
[32m  Best f1:0.3476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37486:  57%|█████▋    | 16/28 [01:11<01:01,  5.09s/it]epoch 2 loss 1.37541:  57%|█████▋    | 16/28 [01:12<01:01,  5.09s/it]epoch 2 loss 1.37541:  61%|██████    | 17/28 [01:12<00:40,  3.68s/it]epoch 2 loss 1.37247:  61%|██████    | 17/28 [01:12<00:40,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.655[0m
[32m  eval_f1 = 0.3496[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4553[0m
[32m  eval_recall = 0.3229[0m
[32m  ********************[0m
[32m  Best f1:0.3496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37247:  64%|██████▍   | 18/28 [01:19<00:46,  4.69s/it]epoch 2 loss 1.36966:  64%|██████▍   | 18/28 [01:19<00:46,  4.69s/it]epoch 2 loss 1.36966:  68%|██████▊   | 19/28 [01:19<00:30,  3.40s/it]epoch 2 loss 1.36561:  68%|██████▊   | 19/28 [01:19<00:30,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4635[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.36561:  71%|███████▏  | 20/28 [01:24<00:30,  3.86s/it]epoch 2 loss 1.35558:  71%|███████▏  | 20/28 [01:24<00:30,  3.86s/it]epoch 2 loss 1.35558:  75%|███████▌  | 21/28 [01:24<00:19,  2.82s/it]epoch 2 loss 1.35553:  75%|███████▌  | 21/28 [01:25<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3559[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3277[0m
[32m  ********************[0m
[32m  Best f1:0.3559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35553:  79%|███████▊  | 22/28 [01:31<00:22,  3.81s/it]epoch 2 loss 1.34535:  79%|███████▊  | 22/28 [01:31<00:22,  3.81s/it]epoch 2 loss 1.34535:  82%|████████▏ | 23/28 [01:31<00:13,  2.80s/it]epoch 2 loss 1.34029:  82%|████████▏ | 23/28 [01:31<00:13,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4742[0m
[32m  eval_recall = 0.3281[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34029:  86%|████████▌ | 24/28 [01:37<00:15,  3.80s/it]epoch 2 loss 1.33624:  86%|████████▌ | 24/28 [01:37<00:15,  3.80s/it]epoch 2 loss 1.33624:  89%|████████▉ | 25/28 [01:37<00:08,  2.78s/it]epoch 2 loss 1.3335:  89%|████████▉ | 25/28 [01:38<00:08,  2.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3594[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4703[0m
[32m  eval_recall = 0.329[0m
[32m  ********************[0m
[32m  Best f1:0.3594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3335:  93%|█████████▎| 26/28 [01:44<00:07,  3.82s/it]epoch 2 loss 1.32804:  93%|█████████▎| 26/28 [01:44<00:07,  3.82s/it]epoch 2 loss 1.32804:  96%|█████████▋| 27/28 [01:44<00:02,  2.80s/it]epoch 2 loss 1.32639:  96%|█████████▋| 27/28 [01:44<00:02,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3595[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4731[0m
[32m  eval_recall = 0.3288[0m
[32m  ********************[0m
[32m  Best f1:0.3595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32639: 100%|██████████| 28/28 [01:50<00:00,  3.75s/it]epoch 2 loss 1.32639: 100%|██████████| 28/28 [01:50<00:00,  3.95s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.34189:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.34189:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.24814:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3608[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4733[0m
[32m  eval_recall = 0.3303[0m
[32m  ********************[0m
[32m  Best f1:0.3608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24814:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 3 loss 1.24711:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 3 loss 1.24711:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 3 loss 1.23311:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3349[0m
[32m  ********************[0m
[32m  Best f1:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23311:  14%|█▍        | 4/28 [00:13<01:30,  3.75s/it]epoch 3 loss 1.23515:  14%|█▍        | 4/28 [00:13<01:30,  3.75s/it]epoch 3 loss 1.23515:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it]epoch 3 loss 1.22309:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6434[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3358[0m
[32m  ********************[0m
[32m  Best f1:0.3652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22309:  21%|██▏       | 6/28 [00:19<01:22,  3.75s/it]epoch 3 loss 1.21908:  21%|██▏       | 6/28 [00:19<01:22,  3.75s/it]epoch 3 loss 1.21908:  25%|██▌       | 7/28 [00:19<00:55,  2.66s/it]epoch 3 loss 1.21185:  25%|██▌       | 7/28 [00:20<00:55,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6442[0m
[32m  eval_precision = 0.4756[0m
[32m  eval_recall = 0.3359[0m
[32m  ********************[0m
[32m  Best MCC:0.6442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21185:  29%|██▊       | 8/28 [00:24<01:07,  3.40s/it]epoch 3 loss 1.23105:  29%|██▊       | 8/28 [00:25<01:07,  3.40s/it]epoch 3 loss 1.23105:  32%|███▏      | 9/28 [00:25<00:46,  2.46s/it]epoch 3 loss 1.23712:  32%|███▏      | 9/28 [00:25<00:46,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3656[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.4756[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23712:  36%|███▌      | 10/28 [00:31<01:04,  3.60s/it]epoch 3 loss 1.24384:  36%|███▌      | 10/28 [00:31<01:04,  3.60s/it]epoch 3 loss 1.24384:  39%|███▉      | 11/28 [00:31<00:44,  2.62s/it]epoch 3 loss 1.23863:  39%|███▉      | 11/28 [00:32<00:44,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3662[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4734[0m
[32m  eval_recall = 0.3372[0m
[32m  ********************[0m
[32m  Best f1:0.3662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23863:  43%|████▎     | 12/28 [00:38<01:01,  3.84s/it]epoch 3 loss 1.23986:  43%|████▎     | 12/28 [00:38<01:01,  3.84s/it]epoch 3 loss 1.23986:  46%|████▋     | 13/28 [00:38<00:42,  2.80s/it]epoch 3 loss 1.24101:  46%|████▋     | 13/28 [00:39<00:42,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4764[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24101:  50%|█████     | 14/28 [00:44<00:51,  3.70s/it]epoch 3 loss 1.2414:  50%|█████     | 14/28 [00:45<00:51,  3.70s/it] epoch 3 loss 1.2414:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it]epoch 3 loss 1.24434:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best f1:0.3733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24434:  57%|█████▋    | 16/28 [00:55<00:59,  4.98s/it]epoch 3 loss 1.2376:  57%|█████▋    | 16/28 [00:55<00:59,  4.98s/it] epoch 3 loss 1.2376:  61%|██████    | 17/28 [00:55<00:39,  3.61s/it]epoch 3 loss 1.23542:  61%|██████    | 17/28 [00:56<00:39,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3763[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.4945[0m
[32m  eval_recall = 0.3447[0m
[32m  ********************[0m
[32m  Best f1:0.3763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23542:  64%|██████▍   | 18/28 [01:06<00:57,  5.77s/it]epoch 3 loss 1.23172:  64%|██████▍   | 18/28 [01:06<00:57,  5.77s/it]epoch 3 loss 1.23172:  68%|██████▊   | 19/28 [01:06<00:37,  4.17s/it]epoch 3 loss 1.22604:  68%|██████▊   | 19/28 [01:07<00:37,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3791[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.5047[0m
[32m  eval_recall = 0.3469[0m
[32m  ********************[0m
[32m  Best f1:0.3791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22604:  71%|███████▏  | 20/28 [01:17<00:48,  6.09s/it]epoch 3 loss 1.22483:  71%|███████▏  | 20/28 [01:17<00:48,  6.09s/it]epoch 3 loss 1.22483:  75%|███████▌  | 21/28 [01:17<00:30,  4.39s/it]epoch 3 loss 1.22408:  75%|███████▌  | 21/28 [01:18<00:30,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3836[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.5051[0m
[32m  eval_recall = 0.3503[0m
[32m  ********************[0m
[32m  Best f1:0.3836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22408:  79%|███████▊  | 22/28 [01:27<00:36,  6.06s/it]epoch 3 loss 1.23046:  79%|███████▊  | 22/28 [01:28<00:36,  6.06s/it]epoch 3 loss 1.23046:  82%|████████▏ | 23/28 [01:28<00:21,  4.37s/it]epoch 3 loss 1.2318:  82%|████████▏ | 23/28 [01:28<00:21,  4.37s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3839[0m
[32m  eval_mcc = 0.6501[0m
[32m  eval_precision = 0.5062[0m
[32m  eval_recall = 0.3505[0m
[32m  ********************[0m
[32m  Best f1:0.3839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2318:  86%|████████▌ | 24/28 [01:38<00:24,  6.15s/it]epoch 3 loss 1.23105:  86%|████████▌ | 24/28 [01:39<00:24,  6.15s/it]epoch 3 loss 1.23105:  89%|████████▉ | 25/28 [01:39<00:13,  4.43s/it]epoch 3 loss 1.22914:  89%|████████▉ | 25/28 [01:39<00:13,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3846[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.5059[0m
[32m  eval_recall = 0.3512[0m
[32m  ********************[0m
[32m  Best f1:0.3846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22914:  93%|█████████▎| 26/28 [01:49<00:12,  6.19s/it]epoch 3 loss 1.22892:  93%|█████████▎| 26/28 [01:49<00:12,  6.19s/it]epoch 3 loss 1.22892:  96%|█████████▋| 27/28 [01:49<00:04,  4.46s/it]epoch 3 loss 1.23135:  96%|█████████▋| 27/28 [01:50<00:04,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.3844[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.5023[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23135: 100%|██████████| 28/28 [01:56<00:00,  5.13s/it]epoch 3 loss 1.23135: 100%|██████████| 28/28 [01:56<00:00,  4.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.0986:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.0986:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.16774:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3845[0m
[32m  eval_mcc = 0.6531[0m
[32m  eval_precision = 0.5029[0m
[32m  eval_recall = 0.3518[0m
[32m  ********************[0m
[32m  Best MCC:0.6531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16774:   7%|▋         | 2/28 [00:07<01:48,  4.17s/it]epoch 4 loss 1.16505:   7%|▋         | 2/28 [00:07<01:48,  4.17s/it]epoch 4 loss 1.16505:  11%|█         | 3/28 [00:07<01:01,  2.46s/it]epoch 4 loss 1.17867:  11%|█         | 3/28 [00:08<01:01,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.3843[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.5019[0m
[32m  eval_recall = 0.3517[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17867:  14%|█▍        | 4/28 [00:14<01:40,  4.17s/it]epoch 4 loss 1.18128:  14%|█▍        | 4/28 [00:14<01:40,  4.17s/it]epoch 4 loss 1.18128:  18%|█▊        | 5/28 [00:14<01:04,  2.82s/it]epoch 4 loss 1.19389:  18%|█▊        | 5/28 [00:15<01:04,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3853[0m
[32m  eval_mcc = 0.6531[0m
[32m  eval_precision = 0.502[0m
[32m  eval_recall = 0.3525[0m
[32m  ********************[0m
[32m  Best f1:0.3853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19389:  21%|██▏       | 6/28 [00:22<01:35,  4.33s/it]epoch 4 loss 1.21066:  21%|██▏       | 6/28 [00:22<01:35,  4.33s/it]epoch 4 loss 1.21066:  25%|██▌       | 7/28 [00:22<01:04,  3.05s/it]epoch 4 loss 1.20242:  25%|██▌       | 7/28 [00:22<01:04,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3858[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.5019[0m
[32m  eval_recall = 0.3529[0m
[32m  ********************[0m
[32m  Best f1:0.3858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20242:  29%|██▊       | 8/28 [00:29<01:27,  4.38s/it]epoch 4 loss 1.19336:  29%|██▊       | 8/28 [00:30<01:27,  4.38s/it]epoch 4 loss 1.19336:  32%|███▏      | 9/28 [00:30<00:59,  3.14s/it]epoch 4 loss 1.2039:  32%|███▏      | 9/28 [00:30<00:59,  3.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6713[0m
[32m  eval_f1 = 0.386[0m
[32m  eval_mcc = 0.6534[0m
[32m  eval_precision = 0.5018[0m
[32m  eval_recall = 0.3533[0m
[32m  ********************[0m
[32m  Best f1:0.386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2039:  36%|███▌      | 10/28 [00:36<01:12,  4.03s/it]epoch 4 loss 1.20454:  36%|███▌      | 10/28 [00:36<01:12,  4.03s/it]epoch 4 loss 1.20454:  39%|███▉      | 11/28 [00:36<00:49,  2.93s/it]epoch 4 loss 1.20212:  39%|███▉      | 11/28 [00:37<00:49,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3884[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.5033[0m
[32m  eval_recall = 0.3553[0m
[32m  ********************[0m
[32m  Best f1:0.3884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20212:  43%|████▎     | 12/28 [00:46<01:19,  4.94s/it]epoch 4 loss 1.19784:  43%|████▎     | 12/28 [00:46<01:19,  4.94s/it]epoch 4 loss 1.19784:  46%|████▋     | 13/28 [00:46<00:53,  3.57s/it]epoch 4 loss 1.20982:  46%|████▋     | 13/28 [00:47<00:53,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.5034[0m
[32m  eval_recall = 0.3561[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20982:  50%|█████     | 14/28 [00:56<01:15,  5.36s/it]epoch 4 loss 1.21076:  50%|█████     | 14/28 [00:56<01:15,  5.36s/it]epoch 4 loss 1.21076:  54%|█████▎    | 15/28 [00:56<00:50,  3.87s/it]epoch 4 loss 1.20471:  54%|█████▎    | 15/28 [00:56<00:50,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3925[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.5148[0m
[32m  eval_recall = 0.3581[0m
[32m  ********************[0m
[32m  Best f1:0.3925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20471:  57%|█████▋    | 16/28 [01:04<01:01,  5.13s/it]epoch 4 loss 1.19772:  57%|█████▋    | 16/28 [01:04<01:01,  5.13s/it]epoch 4 loss 1.19772:  61%|██████    | 17/28 [01:04<00:40,  3.72s/it]epoch 4 loss 1.19369:  61%|██████    | 17/28 [01:05<00:40,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3953[0m
[32m  eval_mcc = 0.6551[0m
[32m  eval_precision = 0.5157[0m
[32m  eval_recall = 0.36[0m
[32m  ********************[0m
[32m  Best f1:0.3953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19369:  64%|██████▍   | 18/28 [01:14<00:54,  5.48s/it]epoch 4 loss 1.19409:  64%|██████▍   | 18/28 [01:15<00:54,  5.48s/it]epoch 4 loss 1.19409:  68%|██████▊   | 19/28 [01:15<00:35,  3.97s/it]epoch 4 loss 1.19321:  68%|██████▊   | 19/28 [01:15<00:35,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3953[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.5149[0m
[32m  eval_recall = 0.3601[0m

epoch 4 loss 1.19321:  71%|███████▏  | 20/28 [01:18<00:31,  3.92s/it]epoch 4 loss 1.19715:  71%|███████▏  | 20/28 [01:19<00:31,  3.92s/it]epoch 4 loss 1.19715:  75%|███████▌  | 21/28 [01:19<00:20,  2.86s/it]epoch 4 loss 1.20021:  75%|███████▌  | 21/28 [01:19<00:20,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3955[0m
[32m  eval_mcc = 0.6551[0m
[32m  eval_precision = 0.5148[0m
[32m  eval_recall = 0.3603[0m
[32m  ********************[0m
[32m  Best f1:0.3955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20021:  79%|███████▊  | 22/28 [01:28<00:29,  4.85s/it]epoch 4 loss 1.19468:  79%|███████▊  | 22/28 [01:29<00:29,  4.85s/it]epoch 4 loss 1.19468:  82%|████████▏ | 23/28 [01:29<00:17,  3.52s/it]epoch 4 loss 1.1932:  82%|████████▏ | 23/28 [01:29<00:17,  3.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3957[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.5151[0m
[32m  eval_recall = 0.3605[0m
[32m  ********************[0m
[32m  Best f1:0.3957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1932:  86%|████████▌ | 24/28 [01:37<00:19,  4.96s/it]epoch 4 loss 1.19107:  86%|████████▌ | 24/28 [01:37<00:19,  4.96s/it]epoch 4 loss 1.19107:  89%|████████▉ | 25/28 [01:37<00:10,  3.60s/it]epoch 4 loss 1.19306:  89%|████████▉ | 25/28 [01:38<00:10,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6737[0m
[32m  eval_f1 = 0.3958[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.5153[0m
[32m  eval_recall = 0.3606[0m
[32m  ********************[0m
[32m  Best f1:0.3958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19306:  93%|█████████▎| 26/28 [01:43<00:08,  4.29s/it]epoch 4 loss 1.19172:  93%|█████████▎| 26/28 [01:44<00:08,  4.29s/it]epoch 4 loss 1.19172:  96%|█████████▋| 27/28 [01:44<00:03,  3.13s/it]epoch 4 loss 1.19697:  96%|█████████▋| 27/28 [01:44<00:03,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3959[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.5152[0m
[32m  eval_recall = 0.3607[0m
[32m  ********************[0m
[32m  Best f1:0.3959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19697: 100%|██████████| 28/28 [01:48<00:00,  3.63s/it]epoch 4 loss 1.19697: 100%|██████████| 28/28 [01:48<00:00,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3959[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.5152[0m
[32m  eval_recall = 0.3607[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3475[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3178[0m

