[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_1', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20773:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20773:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.19704:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0031[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0016[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.19704:   7%|▋         | 2/28 [00:05<01:14,  2.88s/it]epoch 0 loss 5.18943:   7%|▋         | 2/28 [00:05<01:14,  2.88s/it]epoch 0 loss 5.18943:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.18278:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0067[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = -0.0006[0m
[32m  eval_precision = 0.0094[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.18278:  14%|█▍        | 4/28 [00:10<01:13,  3.06s/it]epoch 0 loss 5.1612:  14%|█▍        | 4/28 [00:11<01:13,  3.06s/it] epoch 0 loss 5.1612:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it]epoch 0 loss 5.13926:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0221[0m
[32m  eval_f1 = 0.0072[0m
[32m  eval_mcc = 0.0068[0m
[32m  eval_precision = 0.0153[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13926:  21%|██▏       | 6/28 [00:16<01:11,  3.23s/it]epoch 0 loss 5.10523:  21%|██▏       | 6/28 [00:16<01:11,  3.23s/it]epoch 0 loss 5.10523:  25%|██▌       | 7/28 [00:16<00:48,  2.31s/it]epoch 0 loss 5.06552:  25%|██▌       | 7/28 [00:17<00:48,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0595[0m
[32m  eval_f1 = 0.0133[0m
[32m  eval_mcc = 0.0319[0m
[32m  eval_precision = 0.017[0m
[32m  eval_recall = 0.0178[0m
[32m  ********************[0m
[32m  Best f1:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06552:  29%|██▊       | 8/28 [00:26<01:35,  4.79s/it]epoch 0 loss 5.02066:  29%|██▊       | 8/28 [00:27<01:35,  4.79s/it]epoch 0 loss 5.02066:  32%|███▏      | 9/28 [00:27<01:05,  3.42s/it]epoch 0 loss 4.97622:  32%|███▏      | 9/28 [00:27<01:05,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0948[0m
[32m  eval_f1 = 0.0197[0m
[32m  eval_mcc = 0.058[0m
[32m  eval_precision = 0.0225[0m
[32m  eval_recall = 0.0268[0m
[32m  ********************[0m
[32m  Best f1:0.0197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97622:  36%|███▌      | 10/28 [00:34<01:19,  4.42s/it]epoch 0 loss 4.92324:  36%|███▌      | 10/28 [00:34<01:19,  4.42s/it]epoch 0 loss 4.92324:  39%|███▉      | 11/28 [00:34<00:54,  3.20s/it]epoch 0 loss 4.8654:  39%|███▉      | 11/28 [00:34<00:54,  3.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1332[0m
[32m  eval_f1 = 0.0301[0m
[32m  eval_mcc = 0.0928[0m
[32m  eval_precision = 0.0349[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8654:  43%|████▎     | 12/28 [00:44<01:24,  5.30s/it]epoch 0 loss 4.80353:  43%|████▎     | 12/28 [00:44<01:24,  5.30s/it]epoch 0 loss 4.80353:  46%|████▋     | 13/28 [00:44<00:57,  3.82s/it]epoch 0 loss 4.73796:  46%|████▋     | 13/28 [00:45<00:57,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1719[0m
[32m  eval_f1 = 0.0417[0m
[32m  eval_mcc = 0.1277[0m
[32m  eval_precision = 0.0517[0m
[32m  eval_recall = 0.05[0m
[32m  ********************[0m
[32m  Best f1:0.0417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73796:  50%|█████     | 14/28 [00:52<01:11,  5.09s/it]epoch 0 loss 4.67421:  50%|█████     | 14/28 [00:53<01:11,  5.09s/it]epoch 0 loss 4.67421:  54%|█████▎    | 15/28 [00:53<00:47,  3.69s/it]epoch 0 loss 4.60589:  54%|█████▎    | 15/28 [00:53<00:47,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.231[0m
[32m  eval_f1 = 0.0621[0m
[32m  eval_mcc = 0.1822[0m
[32m  eval_precision = 0.0754[0m
[32m  eval_recall = 0.0673[0m
[32m  ********************[0m
[32m  Best f1:0.0621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60589:  57%|█████▋    | 16/28 [01:00<00:54,  4.56s/it]epoch 0 loss 4.53387:  57%|█████▋    | 16/28 [01:00<00:54,  4.56s/it]epoch 0 loss 4.53387:  61%|██████    | 17/28 [01:00<00:36,  3.31s/it]epoch 0 loss 4.46773:  61%|██████    | 17/28 [01:00<00:36,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2921[0m
[32m  eval_f1 = 0.0752[0m
[32m  eval_mcc = 0.2424[0m
[32m  eval_precision = 0.0987[0m
[32m  eval_recall = 0.076[0m
[32m  ********************[0m
[32m  Best f1:0.0752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46773:  64%|██████▍   | 18/28 [01:10<00:52,  5.29s/it]epoch 0 loss 4.39846:  64%|██████▍   | 18/28 [01:10<00:52,  5.29s/it]epoch 0 loss 4.39846:  68%|██████▊   | 19/28 [01:10<00:34,  3.83s/it]epoch 0 loss 4.33753:  68%|██████▊   | 19/28 [01:11<00:34,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3412[0m
[32m  eval_f1 = 0.0922[0m
[32m  eval_mcc = 0.2932[0m
[32m  eval_precision = 0.1536[0m
[32m  eval_recall = 0.0881[0m
[32m  ********************[0m
[32m  Best f1:0.0922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33753:  71%|███████▏  | 20/28 [01:16<00:34,  4.36s/it]epoch 0 loss 4.26638:  71%|███████▏  | 20/28 [01:16<00:34,  4.36s/it]epoch 0 loss 4.26638:  75%|███████▌  | 21/28 [01:16<00:22,  3.17s/it]epoch 0 loss 4.2071:  75%|███████▌  | 21/28 [01:17<00:22,  3.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3829[0m
[32m  eval_f1 = 0.1083[0m
[32m  eval_mcc = 0.3384[0m
[32m  eval_precision = 0.1642[0m
[32m  eval_recall = 0.1016[0m
[32m  ********************[0m
[32m  Best f1:0.1083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2071:  79%|███████▊  | 22/28 [01:22<00:24,  4.02s/it]epoch 0 loss 4.13914:  79%|███████▊  | 22/28 [01:23<00:24,  4.02s/it]epoch 0 loss 4.13914:  82%|████████▏ | 23/28 [01:23<00:14,  2.94s/it]epoch 0 loss 4.07125:  82%|████████▏ | 23/28 [01:23<00:14,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4213[0m
[32m  eval_f1 = 0.1308[0m
[32m  eval_mcc = 0.3814[0m
[32m  eval_precision = 0.1939[0m
[32m  eval_recall = 0.1199[0m
[32m  ********************[0m
[32m  Best f1:0.1308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.07125:  86%|████████▌ | 24/28 [01:29<00:15,  3.93s/it]epoch 0 loss 4.01064:  86%|████████▌ | 24/28 [01:29<00:15,  3.93s/it]epoch 0 loss 4.01064:  89%|████████▉ | 25/28 [01:29<00:08,  2.88s/it]epoch 0 loss 3.94844:  89%|████████▉ | 25/28 [01:30<00:08,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4685[0m
[32m  eval_f1 = 0.1505[0m
[32m  eval_mcc = 0.4341[0m
[32m  eval_precision = 0.2127[0m
[32m  eval_recall = 0.1407[0m
[32m  ********************[0m
[32m  Best f1:0.1505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.94844:  93%|█████████▎| 26/28 [01:36<00:07,  3.88s/it]epoch 0 loss 3.88594:  93%|█████████▎| 26/28 [01:36<00:07,  3.88s/it]epoch 0 loss 3.88594:  96%|█████████▋| 27/28 [01:36<00:02,  2.85s/it]epoch 0 loss 3.82243:  96%|█████████▋| 27/28 [01:36<00:02,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.498[0m
[32m  eval_f1 = 0.1638[0m
[32m  eval_mcc = 0.4681[0m
[32m  eval_precision = 0.2173[0m
[32m  eval_recall = 0.1554[0m
[32m  ********************[0m
[32m  Best f1:0.1638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.82243: 100%|██████████| 28/28 [01:42<00:00,  3.80s/it]epoch 0 loss 3.82243: 100%|██████████| 28/28 [01:42<00:00,  3.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10867:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10867:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.00273:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5215[0m
[32m  eval_f1 = 0.1752[0m
[32m  eval_mcc = 0.4964[0m
[32m  eval_precision = 0.2365[0m
[32m  eval_recall = 0.1698[0m
[32m  ********************[0m
[32m  Best f1:0.1752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00273:   7%|▋         | 2/28 [00:06<01:29,  3.46s/it]epoch 1 loss 1.96862:   7%|▋         | 2/28 [00:06<01:29,  3.46s/it]epoch 1 loss 1.96862:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 1 loss 1.964:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5558[0m
[32m  eval_f1 = 0.1941[0m
[32m  eval_mcc = 0.5329[0m
[32m  eval_precision = 0.255[0m
[32m  eval_recall = 0.1869[0m
[32m  ********************[0m
[32m  Best f1:0.1941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.964:  14%|█▍        | 4/28 [00:12<01:28,  3.70s/it]epoch 1 loss 1.9659:  14%|█▍        | 4/28 [00:13<01:28,  3.70s/it]epoch 1 loss 1.9659:  18%|█▊        | 5/28 [00:13<00:57,  2.51s/it]epoch 1 loss 1.95717:  18%|█▊        | 5/28 [00:13<00:57,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5835[0m
[32m  eval_f1 = 0.2089[0m
[32m  eval_mcc = 0.5599[0m
[32m  eval_precision = 0.2498[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.2089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95717:  21%|██▏       | 6/28 [00:19<01:22,  3.77s/it]epoch 1 loss 1.94192:  21%|██▏       | 6/28 [00:19<01:22,  3.77s/it]epoch 1 loss 1.94192:  25%|██▌       | 7/28 [00:19<00:56,  2.68s/it]epoch 1 loss 1.90876:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5912[0m
[32m  eval_f1 = 0.2152[0m
[32m  eval_mcc = 0.5665[0m
[32m  eval_precision = 0.2697[0m
[32m  eval_recall = 0.2122[0m
[32m  ********************[0m
[32m  Best f1:0.2152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90876:  29%|██▊       | 8/28 [00:25<01:16,  3.80s/it]epoch 1 loss 1.88478:  29%|██▊       | 8/28 [00:26<01:16,  3.80s/it]epoch 1 loss 1.88478:  32%|███▏      | 9/28 [00:26<00:52,  2.75s/it]epoch 1 loss 1.87117:  32%|███▏      | 9/28 [00:26<00:52,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5958[0m
[32m  eval_f1 = 0.228[0m
[32m  eval_mcc = 0.5709[0m
[32m  eval_precision = 0.295[0m
[32m  eval_recall = 0.2218[0m
[32m  ********************[0m
[32m  Best f1:0.228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87117:  36%|███▌      | 10/28 [00:32<01:08,  3.82s/it]epoch 1 loss 1.84901:  36%|███▌      | 10/28 [00:32<01:08,  3.82s/it]epoch 1 loss 1.84901:  39%|███▉      | 11/28 [00:32<00:47,  2.78s/it]epoch 1 loss 1.82936:  39%|███▉      | 11/28 [00:33<00:47,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6013[0m
[32m  eval_f1 = 0.238[0m
[32m  eval_mcc = 0.5771[0m
[32m  eval_precision = 0.3071[0m
[32m  eval_recall = 0.2283[0m
[32m  ********************[0m
[32m  Best f1:0.238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82936:  43%|████▎     | 12/28 [00:38<00:57,  3.58s/it]epoch 1 loss 1.80614:  43%|████▎     | 12/28 [00:38<00:57,  3.58s/it]epoch 1 loss 1.80614:  46%|████▋     | 13/28 [00:38<00:39,  2.62s/it]epoch 1 loss 1.79889:  46%|████▋     | 13/28 [00:39<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.605[0m
[32m  eval_f1 = 0.2451[0m
[32m  eval_mcc = 0.5819[0m
[32m  eval_precision = 0.3516[0m
[32m  eval_recall = 0.2329[0m
[32m  ********************[0m
[32m  Best f1:0.2451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79889:  50%|█████     | 14/28 [00:44<00:51,  3.69s/it]epoch 1 loss 1.77637:  50%|█████     | 14/28 [00:45<00:51,  3.69s/it]epoch 1 loss 1.77637:  54%|█████▎    | 15/28 [00:45<00:35,  2.70s/it]epoch 1 loss 1.76077:  54%|█████▎    | 15/28 [00:45<00:35,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6104[0m
[32m  eval_f1 = 0.2543[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.3808[0m
[32m  eval_recall = 0.2383[0m
[32m  ********************[0m
[32m  Best f1:0.2543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76077:  57%|█████▋    | 16/28 [00:51<00:45,  3.75s/it]epoch 1 loss 1.74714:  57%|█████▋    | 16/28 [00:51<00:45,  3.75s/it]epoch 1 loss 1.74714:  61%|██████    | 17/28 [00:51<00:30,  2.75s/it]epoch 1 loss 1.7343:  61%|██████    | 17/28 [00:52<00:30,  2.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.614[0m
[32m  eval_f1 = 0.2611[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.3939[0m
[32m  eval_recall = 0.2427[0m
[32m  ********************[0m
[32m  Best f1:0.2611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7343:  64%|██████▍   | 18/28 [00:58<00:37,  3.74s/it]epoch 1 loss 1.71888:  64%|██████▍   | 18/28 [00:58<00:37,  3.74s/it]epoch 1 loss 1.71888:  68%|██████▊   | 19/28 [00:58<00:24,  2.75s/it]epoch 1 loss 1.7044:  68%|██████▊   | 19/28 [00:58<00:24,  2.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.622[0m
[32m  eval_f1 = 0.2797[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.423[0m
[32m  eval_recall = 0.2547[0m
[32m  ********************[0m
[32m  Best f1:0.2797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7044:  71%|███████▏  | 20/28 [01:06<00:35,  4.41s/it]epoch 1 loss 1.69217:  71%|███████▏  | 20/28 [01:07<00:35,  4.41s/it]epoch 1 loss 1.69217:  75%|███████▌  | 21/28 [01:07<00:22,  3.21s/it]epoch 1 loss 1.68359:  75%|███████▌  | 21/28 [01:07<00:22,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.291[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.4196[0m
[32m  eval_recall = 0.2644[0m
[32m  ********************[0m
[32m  Best f1:0.291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68359:  79%|███████▊  | 22/28 [01:13<00:25,  4.25s/it]epoch 1 loss 1.67214:  79%|███████▊  | 22/28 [01:14<00:25,  4.25s/it]epoch 1 loss 1.67214:  82%|████████▏ | 23/28 [01:14<00:15,  3.10s/it]epoch 1 loss 1.66081:  82%|████████▏ | 23/28 [01:14<00:15,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.324[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66081:  86%|████████▌ | 24/28 [01:23<00:19,  4.81s/it]epoch 1 loss 1.65629:  86%|████████▌ | 24/28 [01:23<00:19,  4.81s/it]epoch 1 loss 1.65629:  89%|████████▉ | 25/28 [01:23<00:10,  3.49s/it]epoch 1 loss 1.65004:  89%|████████▉ | 25/28 [01:23<00:10,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.4442[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65004:  93%|█████████▎| 26/28 [01:34<00:11,  5.82s/it]epoch 1 loss 1.63712:  93%|█████████▎| 26/28 [01:35<00:11,  5.82s/it]epoch 1 loss 1.63712:  96%|█████████▋| 27/28 [01:35<00:04,  4.20s/it]epoch 1 loss 1.6321:  96%|█████████▋| 27/28 [01:35<00:04,  4.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.3343[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3087[0m
[32m  ********************[0m
[32m  Best f1:0.3343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6321: 100%|██████████| 28/28 [01:46<00:00,  6.30s/it]epoch 1 loss 1.6321: 100%|██████████| 28/28 [01:46<00:00,  3.80s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33707:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33707:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.34982:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3406[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.3167[0m
[32m  ********************[0m
[32m  Best f1:0.3406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34982:   7%|▋         | 2/28 [00:12<03:01,  6.99s/it]epoch 2 loss 1.33631:   7%|▋         | 2/28 [00:12<03:01,  6.99s/it]epoch 2 loss 1.33631:  11%|█         | 3/28 [00:12<01:39,  3.99s/it]epoch 2 loss 1.31165:  11%|█         | 3/28 [00:12<01:39,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6487[0m
[32m  eval_f1 = 0.3465[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best f1:0.3465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31165:  14%|█▍        | 4/28 [00:23<02:42,  6.77s/it]epoch 2 loss 1.32331:  14%|█▍        | 4/28 [00:23<02:42,  6.77s/it]epoch 2 loss 1.32331:  18%|█▊        | 5/28 [00:23<01:43,  4.48s/it]epoch 2 loss 1.32325:  18%|█▊        | 5/28 [00:24<01:43,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3506[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.447[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32325:  21%|██▏       | 6/28 [00:35<02:28,  6.76s/it]epoch 2 loss 1.32208:  21%|██▏       | 6/28 [00:35<02:28,  6.76s/it]epoch 2 loss 1.32208:  25%|██▌       | 7/28 [00:35<01:38,  4.69s/it]epoch 2 loss 1.30631:  25%|██▌       | 7/28 [00:35<01:38,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3517[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4477[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30631:  29%|██▊       | 8/28 [00:46<02:13,  6.69s/it]epoch 2 loss 1.31335:  29%|██▊       | 8/28 [00:46<02:13,  6.69s/it]epoch 2 loss 1.31335:  32%|███▏      | 9/28 [00:46<01:29,  4.73s/it]epoch 2 loss 1.32775:  32%|███▏      | 9/28 [00:47<01:29,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3538[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.3291[0m
[32m  ********************[0m
[32m  Best f1:0.3538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32775:  36%|███▌      | 10/28 [00:56<01:52,  6.23s/it]epoch 2 loss 1.32652:  36%|███▌      | 10/28 [00:56<01:52,  6.23s/it]epoch 2 loss 1.32652:  39%|███▉      | 11/28 [00:56<01:15,  4.45s/it]epoch 2 loss 1.33351:  39%|███▉      | 11/28 [00:57<01:15,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3551[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4561[0m
[32m  eval_recall = 0.3295[0m
[32m  ********************[0m
[32m  Best f1:0.3551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33351:  43%|████▎     | 12/28 [01:06<01:34,  5.91s/it]epoch 2 loss 1.32189:  43%|████▎     | 12/28 [01:06<01:34,  5.91s/it]epoch 2 loss 1.32189:  46%|████▋     | 13/28 [01:06<01:03,  4.25s/it]epoch 2 loss 1.32741:  46%|████▋     | 13/28 [01:06<01:03,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4674[0m
[32m  eval_recall = 0.3324[0m
[32m  ********************[0m
[32m  Best f1:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32741:  50%|█████     | 14/28 [01:17<01:29,  6.41s/it]epoch 2 loss 1.31674:  50%|█████     | 14/28 [01:18<01:29,  6.41s/it]epoch 2 loss 1.31674:  54%|█████▎    | 15/28 [01:18<00:59,  4.60s/it]epoch 2 loss 1.31906:  54%|█████▎    | 15/28 [01:18<00:59,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6406[0m
[32m  eval_precision = 0.4769[0m
[32m  eval_recall = 0.3329[0m
[32m  ********************[0m
[32m  Best f1:0.3612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31906:  57%|█████▋    | 16/28 [01:27<01:11,  5.99s/it]epoch 2 loss 1.31998:  57%|█████▋    | 16/28 [01:28<01:11,  5.99s/it]epoch 2 loss 1.31998:  61%|██████    | 17/28 [01:28<00:47,  4.32s/it]epoch 2 loss 1.31693:  61%|██████    | 17/28 [01:28<00:47,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4713[0m
[32m  eval_recall = 0.3329[0m
[32m  ********************[0m
[32m  Best MCC:0.6408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31693:  64%|██████▍   | 18/28 [01:35<00:51,  5.16s/it]epoch 2 loss 1.31412:  64%|██████▍   | 18/28 [01:35<00:51,  5.16s/it]epoch 2 loss 1.31412:  68%|██████▊   | 19/28 [01:35<00:33,  3.74s/it]epoch 2 loss 1.31006:  68%|██████▊   | 19/28 [01:35<00:33,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.3627[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.334[0m
[32m  ********************[0m
[32m  Best f1:0.3627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31006:  71%|███████▏  | 20/28 [01:42<00:37,  4.69s/it]epoch 2 loss 1.30042:  71%|███████▏  | 20/28 [01:42<00:37,  4.69s/it]epoch 2 loss 1.30042:  75%|███████▌  | 21/28 [01:42<00:23,  3.41s/it]epoch 2 loss 1.30056:  75%|███████▌  | 21/28 [01:43<00:23,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3629[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4714[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30056:  79%|███████▊  | 22/28 [01:53<00:33,  5.54s/it]epoch 2 loss 1.29087:  79%|███████▊  | 22/28 [01:53<00:33,  5.54s/it]epoch 2 loss 1.29087:  82%|████████▏ | 23/28 [01:53<00:20,  4.00s/it]epoch 2 loss 1.28625:  82%|████████▏ | 23/28 [01:54<00:20,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.3644[0m
[32m  eval_mcc = 0.642[0m
[32m  eval_precision = 0.4713[0m
[32m  eval_recall = 0.3353[0m
[32m  ********************[0m
[32m  Best f1:0.3644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28625:  86%|████████▌ | 24/28 [02:00<00:19,  4.90s/it]epoch 2 loss 1.28263:  86%|████████▌ | 24/28 [02:01<00:19,  4.90s/it]epoch 2 loss 1.28263:  89%|████████▉ | 25/28 [02:01<00:10,  3.56s/it]epoch 2 loss 1.27983:  89%|████████▉ | 25/28 [02:01<00:10,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4808[0m
[32m  eval_recall = 0.3363[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27983:  93%|█████████▎| 26/28 [02:11<00:11,  5.54s/it]epoch 2 loss 1.27455:  93%|█████████▎| 26/28 [02:11<00:11,  5.54s/it]epoch 2 loss 1.27455:  96%|█████████▋| 27/28 [02:11<00:04,  4.01s/it]epoch 2 loss 1.27305:  96%|█████████▋| 27/28 [02:12<00:04,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.6437[0m
[32m  eval_precision = 0.4781[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best MCC:0.6437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27305: 100%|██████████| 28/28 [02:17<00:00,  4.54s/it]epoch 2 loss 1.27305: 100%|██████████| 28/28 [02:17<00:00,  4.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30007:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30007:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 3 loss 1.20809:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3684[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.4865[0m
[32m  eval_recall = 0.3386[0m
[32m  ********************[0m
[32m  Best f1:0.3684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20809:   7%|▋         | 2/28 [00:10<02:42,  6.25s/it]epoch 3 loss 1.20168:   7%|▋         | 2/28 [00:11<02:42,  6.25s/it]epoch 3 loss 1.20168:  11%|█         | 3/28 [00:11<01:29,  3.59s/it]epoch 3 loss 1.18713:  11%|█         | 3/28 [00:11<01:29,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18713:  14%|█▍        | 4/28 [00:17<01:47,  4.47s/it]epoch 3 loss 1.18801:  14%|█▍        | 4/28 [00:17<01:47,  4.47s/it]epoch 3 loss 1.18801:  18%|█▊        | 5/28 [00:17<01:09,  3.01s/it]epoch 3 loss 1.17697:  18%|█▊        | 5/28 [00:17<01:09,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3723[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3424[0m
[32m  ********************[0m
[32m  Best f1:0.3723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17697:  21%|██▏       | 6/28 [00:23<01:29,  4.08s/it]epoch 3 loss 1.17191:  21%|██▏       | 6/28 [00:23<01:29,  4.08s/it]epoch 3 loss 1.17191:  25%|██▌       | 7/28 [00:23<01:00,  2.88s/it]epoch 3 loss 1.16267:  25%|██▌       | 7/28 [00:24<01:00,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3738[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4854[0m
[32m  eval_recall = 0.3441[0m
[32m  ********************[0m
[32m  Best f1:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16267:  29%|██▊       | 8/28 [00:30<01:17,  3.89s/it]epoch 3 loss 1.18142:  29%|██▊       | 8/28 [00:30<01:17,  3.89s/it]epoch 3 loss 1.18142:  32%|███▏      | 9/28 [00:30<00:53,  2.81s/it]epoch 3 loss 1.18708:  32%|███▏      | 9/28 [00:30<00:53,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3747[0m
[32m  eval_mcc = 0.649[0m
[32m  eval_precision = 0.4846[0m
[32m  eval_recall = 0.3451[0m
[32m  ********************[0m
[32m  Best f1:0.3747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18708:  36%|███▌      | 10/28 [00:36<01:08,  3.81s/it]epoch 3 loss 1.19289:  36%|███▌      | 10/28 [00:36<01:08,  3.81s/it]epoch 3 loss 1.19289:  39%|███▉      | 11/28 [00:36<00:47,  2.77s/it]epoch 3 loss 1.18804:  39%|███▉      | 11/28 [00:37<00:47,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.376[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18804:  43%|████▎     | 12/28 [00:42<01:00,  3.75s/it]epoch 3 loss 1.18931:  43%|████▎     | 12/28 [00:43<01:00,  3.75s/it]epoch 3 loss 1.18931:  46%|████▋     | 13/28 [00:43<00:41,  2.74s/it]epoch 3 loss 1.191:  46%|████▋     | 13/28 [00:43<00:41,  2.74s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3792[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.496[0m
[32m  eval_recall = 0.3484[0m
[32m  ********************[0m
[32m  Best f1:0.3792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.191:  50%|█████     | 14/28 [00:49<00:53,  3.79s/it]epoch 3 loss 1.19164:  50%|█████     | 14/28 [00:49<00:53,  3.79s/it]epoch 3 loss 1.19164:  54%|█████▎    | 15/28 [00:49<00:36,  2.77s/it]epoch 3 loss 1.1949:  54%|█████▎    | 15/28 [00:50<00:36,  2.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3855[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4996[0m
[32m  eval_recall = 0.3533[0m
[32m  ********************[0m
[32m  Best f1:0.3855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1949:  57%|█████▋    | 16/28 [00:56<00:45,  3.83s/it]epoch 3 loss 1.18803:  57%|█████▋    | 16/28 [00:56<00:45,  3.83s/it]epoch 3 loss 1.18803:  61%|██████    | 17/28 [00:56<00:30,  2.80s/it]epoch 3 loss 1.18566:  61%|██████    | 17/28 [00:57<00:30,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3871[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.4996[0m
[32m  eval_recall = 0.3547[0m
[32m  ********************[0m
[32m  Best f1:0.3871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18566:  64%|██████▍   | 18/28 [01:03<00:39,  3.92s/it]epoch 3 loss 1.18236:  64%|██████▍   | 18/28 [01:03<00:39,  3.92s/it]epoch 3 loss 1.18236:  68%|██████▊   | 19/28 [01:03<00:25,  2.87s/it]epoch 3 loss 1.1771:  68%|██████▊   | 19/28 [01:04<00:25,  2.87s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6725[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.5098[0m
[32m  eval_recall = 0.3567[0m
[32m  ********************[0m
[32m  Best f1:0.3903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1771:  71%|███████▏  | 20/28 [01:14<00:41,  5.15s/it]epoch 3 loss 1.17588:  71%|███████▏  | 20/28 [01:14<00:41,  5.15s/it]epoch 3 loss 1.17588:  75%|███████▌  | 21/28 [01:14<00:26,  3.73s/it]epoch 3 loss 1.1755:  75%|███████▌  | 21/28 [01:14<00:26,  3.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3931[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.5081[0m
[32m  eval_recall = 0.3595[0m
[32m  ********************[0m
[32m  Best f1:0.3931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1755:  79%|███████▊  | 22/28 [01:22<00:30,  5.11s/it]epoch 3 loss 1.18194:  79%|███████▊  | 22/28 [01:23<00:30,  5.11s/it]epoch 3 loss 1.18194:  82%|████████▏ | 23/28 [01:23<00:18,  3.71s/it]epoch 3 loss 1.18319:  82%|████████▏ | 23/28 [01:23<00:18,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3933[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.5078[0m
[32m  eval_recall = 0.3598[0m
[32m  ********************[0m
[32m  Best f1:0.3933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18319:  86%|████████▌ | 24/28 [01:33<00:23,  5.76s/it]epoch 3 loss 1.1824:  86%|████████▌ | 24/28 [01:34<00:23,  5.76s/it] epoch 3 loss 1.1824:  89%|████████▉ | 25/28 [01:34<00:12,  4.16s/it]epoch 3 loss 1.18021:  89%|████████▉ | 25/28 [01:34<00:12,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3935[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.5058[0m
[32m  eval_recall = 0.3601[0m
[32m  ********************[0m
[32m  Best f1:0.3935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18021:  93%|█████████▎| 26/28 [01:44<00:11,  5.95s/it]epoch 3 loss 1.17972:  93%|█████████▎| 26/28 [01:44<00:11,  5.95s/it]epoch 3 loss 1.17972:  96%|█████████▋| 27/28 [01:44<00:04,  4.30s/it]epoch 3 loss 1.18215:  96%|█████████▋| 27/28 [01:45<00:04,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3946[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.507[0m
[32m  eval_recall = 0.3618[0m
[32m  ********************[0m
[32m  Best f1:0.3946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18215: 100%|██████████| 28/28 [01:53<00:00,  5.61s/it]epoch 3 loss 1.18215: 100%|██████████| 28/28 [01:53<00:00,  4.05s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.04739:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.04739:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.12008:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6749[0m
[32m  eval_f1 = 0.395[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.5065[0m
[32m  eval_recall = 0.3622[0m
[32m  ********************[0m
[32m  Best f1:0.395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12008:   7%|▋         | 2/28 [00:10<02:35,  5.99s/it]epoch 4 loss 1.11699:   7%|▋         | 2/28 [00:10<02:35,  5.99s/it]epoch 4 loss 1.11699:  11%|█         | 3/28 [00:10<01:26,  3.45s/it]epoch 4 loss 1.12929:  11%|█         | 3/28 [00:11<01:26,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.397[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.5081[0m
[32m  eval_recall = 0.3637[0m
[32m  ********************[0m
[32m  Best f1:0.397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12929:  14%|█▍        | 4/28 [00:20<02:23,  5.99s/it]epoch 4 loss 1.13245:  14%|█▍        | 4/28 [00:21<02:23,  5.99s/it]epoch 4 loss 1.13245:  18%|█▊        | 5/28 [00:21<01:31,  3.98s/it]epoch 4 loss 1.14573:  18%|█▊        | 5/28 [00:21<01:31,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3968[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.5084[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14573:  21%|██▏       | 6/28 [00:27<01:48,  4.95s/it]epoch 4 loss 1.16115:  21%|██▏       | 6/28 [00:28<01:48,  4.95s/it]epoch 4 loss 1.16115:  25%|██▌       | 7/28 [00:28<01:12,  3.47s/it]epoch 4 loss 1.15284:  25%|██▌       | 7/28 [00:28<01:12,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3971[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.508[0m
[32m  eval_recall = 0.3638[0m
[32m  ********************[0m
[32m  Best f1:0.3971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15284:  29%|██▊       | 8/28 [00:33<01:18,  3.92s/it]epoch 4 loss 1.14502:  29%|██▊       | 8/28 [00:33<01:18,  3.92s/it]epoch 4 loss 1.14502:  32%|███▏      | 9/28 [00:33<00:53,  2.82s/it]epoch 4 loss 1.15532:  32%|███▏      | 9/28 [00:33<00:53,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3978[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.5057[0m
[32m  eval_recall = 0.3652[0m
[32m  ********************[0m
[32m  Best f1:0.3978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15532:  36%|███▌      | 10/28 [00:40<01:14,  4.12s/it]epoch 4 loss 1.156:  36%|███▌      | 10/28 [00:41<01:14,  4.12s/it]  epoch 4 loss 1.156:  39%|███▉      | 11/28 [00:41<00:50,  2.99s/it]epoch 4 loss 1.15321:  39%|███▉      | 11/28 [00:41<00:50,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.397[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.5042[0m
[32m  eval_recall = 0.365[0m

epoch 4 loss 1.15321:  43%|████▎     | 12/28 [00:44<00:51,  3.23s/it]epoch 4 loss 1.14937:  43%|████▎     | 12/28 [00:45<00:51,  3.23s/it]epoch 4 loss 1.14937:  46%|████▋     | 13/28 [00:45<00:35,  2.37s/it]epoch 4 loss 1.16142:  46%|████▋     | 13/28 [00:45<00:35,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.3969[0m
[32m  eval_mcc = 0.6575[0m
[32m  eval_precision = 0.5043[0m
[32m  eval_recall = 0.3653[0m

epoch 4 loss 1.16142:  50%|█████     | 14/28 [00:49<00:39,  2.80s/it]epoch 4 loss 1.16256:  50%|█████     | 14/28 [00:49<00:39,  2.80s/it]epoch 4 loss 1.16256:  54%|█████▎    | 15/28 [00:49<00:26,  2.08s/it]epoch 4 loss 1.15639:  54%|█████▎    | 15/28 [00:49<00:26,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3991[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.5048[0m
[32m  eval_recall = 0.3669[0m
[32m  ********************[0m
[32m  Best f1:0.3991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15639:  57%|█████▋    | 16/28 [00:54<00:35,  2.97s/it]epoch 4 loss 1.14991:  57%|█████▋    | 16/28 [00:54<00:35,  2.97s/it]epoch 4 loss 1.14991:  61%|██████    | 17/28 [00:54<00:24,  2.20s/it]epoch 4 loss 1.14616:  61%|██████    | 17/28 [00:55<00:24,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3992[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5044[0m
[32m  eval_recall = 0.367[0m
[32m  ********************[0m
[32m  Best f1:0.3992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.14616:  64%|██████▍   | 18/28 [00:59<00:30,  3.02s/it]epoch 4 loss 1.14693:  64%|██████▍   | 18/28 [01:00<00:30,  3.02s/it]epoch 4 loss 1.14693:  68%|██████▊   | 19/28 [01:00<00:20,  2.23s/it]epoch 4 loss 1.1461:  68%|██████▊   | 19/28 [01:00<00:20,  2.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.3994[0m
[32m  eval_mcc = 0.6584[0m
[32m  eval_precision = 0.5043[0m
[32m  eval_recall = 0.3673[0m
[32m  ********************[0m
[32m  Best f1:0.3994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1461:  71%|███████▏  | 20/28 [01:06<00:28,  3.50s/it]epoch 4 loss 1.14989:  71%|███████▏  | 20/28 [01:07<00:28,  3.50s/it]epoch 4 loss 1.14989:  75%|███████▌  | 21/28 [01:07<00:18,  2.58s/it]epoch 4 loss 1.15299:  75%|███████▌  | 21/28 [01:07<00:18,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6767[0m
[32m  eval_f1 = 0.3996[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.5037[0m
[32m  eval_recall = 0.3674[0m
[32m  ********************[0m
[32m  Best f1:0.3996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15299:  79%|███████▊  | 22/28 [01:14<00:23,  3.98s/it]epoch 4 loss 1.14768:  79%|███████▊  | 22/28 [01:14<00:23,  3.98s/it]epoch 4 loss 1.14768:  82%|████████▏ | 23/28 [01:14<00:14,  2.92s/it]epoch 4 loss 1.14631:  82%|████████▏ | 23/28 [01:15<00:14,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6767[0m
[32m  eval_f1 = 0.3997[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3675[0m
[32m  ********************[0m
[32m  Best f1:0.3997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14631:  86%|████████▌ | 24/28 [01:24<00:20,  5.02s/it]epoch 4 loss 1.14424:  86%|████████▌ | 24/28 [01:25<00:20,  5.02s/it]epoch 4 loss 1.14424:  89%|████████▉ | 25/28 [01:25<00:10,  3.64s/it]epoch 4 loss 1.14632:  89%|████████▉ | 25/28 [01:25<00:10,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3998[0m
[32m  eval_mcc = 0.6588[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3677[0m
[32m  ********************[0m
[32m  Best f1:0.3998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14632:  93%|█████████▎| 26/28 [01:33<00:10,  5.02s/it]epoch 4 loss 1.14488:  93%|█████████▎| 26/28 [01:33<00:10,  5.02s/it]epoch 4 loss 1.14488:  96%|█████████▋| 27/28 [01:33<00:03,  3.64s/it]epoch 4 loss 1.15055:  96%|█████████▋| 27/28 [01:33<00:03,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.677[0m
[32m  eval_f1 = 0.3998[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3677[0m
[32m  ********************[0m
[32m  Best f1:0.3998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15055: 100%|██████████| 28/28 [01:43<00:00,  5.47s/it]epoch 4 loss 1.15055: 100%|██████████| 28/28 [01:43<00:00,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.57it/s] 20%|██        | 2/10 [00:00<00:02,  2.68it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.677[0m
[32m  eval_f1 = 0.3998[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3677[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.3308[0m

