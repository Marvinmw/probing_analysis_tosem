[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_0', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20883:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20883:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.19564:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0051[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0007[0m
[32m  eval_precision = 0.0032[0m
[32m  eval_recall = 0.0029[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19564:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.18695:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.18695:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.17996:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0101[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0029[0m
[32m  eval_precision = 0.0075[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17996:  14%|█▍        | 4/28 [00:12<01:26,  3.60s/it]epoch 0 loss 5.15772:  14%|█▍        | 4/28 [00:12<01:26,  3.60s/it]epoch 0 loss 5.15772:  18%|█▊        | 5/28 [00:12<00:56,  2.45s/it]epoch 0 loss 5.13474:  18%|█▊        | 5/28 [00:13<00:56,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0281[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0143[0m
[32m  eval_precision = 0.0095[0m
[32m  eval_recall = 0.0098[0m
[32m  ********************[0m
[32m  Best f1:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13474:  21%|██▏       | 6/28 [00:18<01:20,  3.66s/it]epoch 0 loss 5.09914:  21%|██▏       | 6/28 [00:19<01:20,  3.66s/it]epoch 0 loss 5.09914:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it]epoch 0 loss 5.05761:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0563[0m
[32m  eval_f1 = 0.0102[0m
[32m  eval_mcc = 0.0299[0m
[32m  eval_precision = 0.0135[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05761:  29%|██▊       | 8/28 [00:25<01:14,  3.70s/it]epoch 0 loss 5.01115:  29%|██▊       | 8/28 [00:25<01:14,  3.70s/it]epoch 0 loss 5.01115:  32%|███▏      | 9/28 [00:25<00:50,  2.68s/it]epoch 0 loss 4.96647:  32%|███▏      | 9/28 [00:26<00:50,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0938[0m
[32m  eval_f1 = 0.0152[0m
[32m  eval_mcc = 0.0577[0m
[32m  eval_precision = 0.019[0m
[32m  eval_recall = 0.0227[0m
[32m  ********************[0m
[32m  Best f1:0.0152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96647:  36%|███▌      | 10/28 [00:31<01:06,  3.71s/it]epoch 0 loss 4.91317:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 0 loss 4.91317:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it]epoch 0 loss 4.85364:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1324[0m
[32m  eval_f1 = 0.025[0m
[32m  eval_mcc = 0.0901[0m
[32m  eval_precision = 0.0342[0m
[32m  eval_recall = 0.0342[0m
[32m  ********************[0m
[32m  Best f1:0.025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85364:  43%|████▎     | 12/28 [00:37<00:58,  3.67s/it]epoch 0 loss 4.79082:  43%|████▎     | 12/28 [00:38<00:58,  3.67s/it]epoch 0 loss 4.79082:  46%|████▋     | 13/28 [00:38<00:40,  2.69s/it]epoch 0 loss 4.72368:  46%|████▋     | 13/28 [00:38<00:40,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1804[0m
[32m  eval_f1 = 0.0447[0m
[32m  eval_mcc = 0.1345[0m
[32m  eval_precision = 0.0613[0m
[32m  eval_recall = 0.0528[0m
[32m  ********************[0m
[32m  Best f1:0.0447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72368:  50%|█████     | 14/28 [00:44<00:51,  3.66s/it]epoch 0 loss 4.65841:  50%|█████     | 14/28 [00:44<00:51,  3.66s/it]epoch 0 loss 4.65841:  54%|█████▎    | 15/28 [00:44<00:34,  2.69s/it]epoch 0 loss 4.58851:  54%|█████▎    | 15/28 [00:45<00:34,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.249[0m
[32m  eval_f1 = 0.0617[0m
[32m  eval_mcc = 0.2009[0m
[32m  eval_precision = 0.0777[0m
[32m  eval_recall = 0.0681[0m
[32m  ********************[0m
[32m  Best f1:0.0617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58851:  57%|█████▋    | 16/28 [00:50<00:43,  3.67s/it]epoch 0 loss 4.5149:  57%|█████▋    | 16/28 [00:51<00:43,  3.67s/it] epoch 0 loss 4.5149:  61%|██████    | 17/28 [00:51<00:29,  2.69s/it]epoch 0 loss 4.44693:  61%|██████    | 17/28 [00:51<00:29,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3189[0m
[32m  eval_f1 = 0.0765[0m
[32m  eval_mcc = 0.2717[0m
[32m  eval_precision = 0.1053[0m
[32m  eval_recall = 0.0805[0m
[32m  ********************[0m
[32m  Best f1:0.0765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44693:  64%|██████▍   | 18/28 [00:57<00:36,  3.68s/it]epoch 0 loss 4.37553:  64%|██████▍   | 18/28 [00:57<00:36,  3.68s/it]epoch 0 loss 4.37553:  68%|██████▊   | 19/28 [00:57<00:24,  2.70s/it]epoch 0 loss 4.31238:  68%|██████▊   | 19/28 [00:57<00:24,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3598[0m
[32m  eval_f1 = 0.0972[0m
[32m  eval_mcc = 0.3147[0m
[32m  eval_precision = 0.1439[0m
[32m  eval_recall = 0.0946[0m
[32m  ********************[0m
[32m  Best f1:0.0972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31238:  71%|███████▏  | 20/28 [01:03<00:29,  3.70s/it]epoch 0 loss 4.2389:  71%|███████▏  | 20/28 [01:03<00:29,  3.70s/it] epoch 0 loss 4.2389:  75%|███████▌  | 21/28 [01:03<00:18,  2.71s/it]epoch 0 loss 4.1773:  75%|███████▌  | 21/28 [01:04<00:18,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3961[0m
[32m  eval_f1 = 0.1187[0m
[32m  eval_mcc = 0.354[0m
[32m  eval_precision = 0.1837[0m
[32m  eval_recall = 0.1103[0m
[32m  ********************[0m
[32m  Best f1:0.1187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1773:  79%|███████▊  | 22/28 [01:10<00:24,  4.01s/it]epoch 0 loss 4.10724:  79%|███████▊  | 22/28 [01:11<00:24,  4.01s/it]epoch 0 loss 4.10724:  82%|████████▏ | 23/28 [01:11<00:14,  2.93s/it]epoch 0 loss 4.03728:  82%|████████▏ | 23/28 [01:11<00:14,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4459[0m
[32m  eval_f1 = 0.1416[0m
[32m  eval_mcc = 0.4081[0m
[32m  eval_precision = 0.1986[0m
[32m  eval_recall = 0.1318[0m
[32m  ********************[0m
[32m  Best f1:0.1416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.03728:  86%|████████▌ | 24/28 [01:17<00:15,  3.87s/it]epoch 0 loss 3.97488:  86%|████████▌ | 24/28 [01:17<00:15,  3.87s/it]epoch 0 loss 3.97488:  89%|████████▉ | 25/28 [01:17<00:08,  2.83s/it]epoch 0 loss 3.91088:  89%|████████▉ | 25/28 [01:18<00:08,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4837[0m
[32m  eval_f1 = 0.1555[0m
[32m  eval_mcc = 0.4499[0m
[32m  eval_precision = 0.2134[0m
[32m  eval_recall = 0.1471[0m
[32m  ********************[0m
[32m  Best f1:0.1555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91088:  93%|█████████▎| 26/28 [01:23<00:07,  3.80s/it]epoch 0 loss 3.84672:  93%|█████████▎| 26/28 [01:24<00:07,  3.80s/it]epoch 0 loss 3.84672:  96%|█████████▋| 27/28 [01:24<00:02,  2.79s/it]epoch 0 loss 3.78146:  96%|█████████▋| 27/28 [01:24<00:02,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5111[0m
[32m  eval_f1 = 0.1693[0m
[32m  eval_mcc = 0.4827[0m
[32m  eval_precision = 0.2224[0m
[32m  eval_recall = 0.1613[0m
[32m  ********************[0m
[32m  Best f1:0.1693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.78146: 100%|██████████| 28/28 [01:31<00:00,  4.09s/it]epoch 0 loss 3.78146: 100%|██████████| 28/28 [01:31<00:00,  3.27s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.02325:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.02325:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 1.92087:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5392[0m
[32m  eval_f1 = 0.182[0m
[32m  eval_mcc = 0.5161[0m
[32m  eval_precision = 0.2432[0m
[32m  eval_recall = 0.1757[0m
[32m  ********************[0m
[32m  Best f1:0.182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92087:   7%|▋         | 2/28 [00:10<02:42,  6.24s/it]epoch 1 loss 1.88818:   7%|▋         | 2/28 [00:11<02:42,  6.24s/it]epoch 1 loss 1.88818:  11%|█         | 3/28 [00:11<01:29,  3.58s/it]epoch 1 loss 1.88689:  11%|█         | 3/28 [00:11<01:29,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5692[0m
[32m  eval_f1 = 0.205[0m
[32m  eval_mcc = 0.5479[0m
[32m  eval_precision = 0.2613[0m
[32m  eval_recall = 0.1964[0m
[32m  ********************[0m
[32m  Best f1:0.205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88689:  14%|█▍        | 4/28 [00:20<02:25,  6.04s/it]epoch 1 loss 1.89097:  14%|█▍        | 4/28 [00:21<02:25,  6.04s/it]epoch 1 loss 1.89097:  18%|█▊        | 5/28 [00:21<01:32,  4.02s/it]epoch 1 loss 1.8851:  18%|█▊        | 5/28 [00:21<01:32,  4.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5885[0m
[32m  eval_f1 = 0.2149[0m
[32m  eval_mcc = 0.5654[0m
[32m  eval_precision = 0.2643[0m
[32m  eval_recall = 0.2098[0m
[32m  ********************[0m
[32m  Best f1:0.2149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8851:  21%|██▏       | 6/28 [00:31<02:12,  6.04s/it]epoch 1 loss 1.87047:  21%|██▏       | 6/28 [00:31<02:12,  6.04s/it]epoch 1 loss 1.87047:  25%|██▌       | 7/28 [00:31<01:28,  4.21s/it]epoch 1 loss 1.83877:  25%|██▌       | 7/28 [00:32<01:28,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5944[0m
[32m  eval_f1 = 0.2278[0m
[32m  eval_mcc = 0.5701[0m
[32m  eval_precision = 0.2898[0m
[32m  eval_recall = 0.2209[0m
[32m  ********************[0m
[32m  Best f1:0.2278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83877:  29%|██▊       | 8/28 [00:42<02:03,  6.16s/it]epoch 1 loss 1.81667:  29%|██▊       | 8/28 [00:42<02:03,  6.16s/it]epoch 1 loss 1.81667:  32%|███▏      | 9/28 [00:42<01:23,  4.37s/it]epoch 1 loss 1.80411:  32%|███▏      | 9/28 [00:42<01:23,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5973[0m
[32m  eval_f1 = 0.2347[0m
[32m  eval_mcc = 0.5727[0m
[32m  eval_precision = 0.2882[0m
[32m  eval_recall = 0.2267[0m
[32m  ********************[0m
[32m  Best f1:0.2347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80411:  36%|███▌      | 10/28 [00:52<01:49,  6.09s/it]epoch 1 loss 1.78321:  36%|███▌      | 10/28 [00:52<01:49,  6.09s/it]epoch 1 loss 1.78321:  39%|███▉      | 11/28 [00:52<01:14,  4.36s/it]epoch 1 loss 1.76413:  39%|███▉      | 11/28 [00:53<01:14,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6052[0m
[32m  eval_f1 = 0.2508[0m
[32m  eval_mcc = 0.5814[0m
[32m  eval_precision = 0.3457[0m
[32m  eval_recall = 0.2386[0m
[32m  ********************[0m
[32m  Best f1:0.2508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76413:  43%|████▎     | 12/28 [01:02<01:37,  6.08s/it]epoch 1 loss 1.74206:  43%|████▎     | 12/28 [01:03<01:37,  6.08s/it]epoch 1 loss 1.74206:  46%|████▋     | 13/28 [01:03<01:05,  4.37s/it]epoch 1 loss 1.73606:  46%|████▋     | 13/28 [01:03<01:05,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6112[0m
[32m  eval_f1 = 0.2637[0m
[32m  eval_mcc = 0.5887[0m
[32m  eval_precision = 0.3926[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73606:  50%|█████     | 14/28 [01:11<01:17,  5.54s/it]epoch 1 loss 1.71468:  50%|█████     | 14/28 [01:12<01:17,  5.54s/it]epoch 1 loss 1.71468:  54%|█████▎    | 15/28 [01:12<00:52,  4.00s/it]epoch 1 loss 1.69921:  54%|█████▎    | 15/28 [01:12<00:52,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2715[0m
[32m  eval_mcc = 0.5925[0m
[32m  eval_precision = 0.4062[0m
[32m  eval_recall = 0.2504[0m
[32m  ********************[0m
[32m  Best f1:0.2715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69921:  57%|█████▋    | 16/28 [01:21<01:09,  5.76s/it]epoch 1 loss 1.68621:  57%|█████▋    | 16/28 [01:22<01:09,  5.76s/it]epoch 1 loss 1.68621:  61%|██████    | 17/28 [01:22<00:45,  4.16s/it]epoch 1 loss 1.67357:  61%|██████    | 17/28 [01:22<00:45,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2857[0m
[32m  eval_mcc = 0.6018[0m
[32m  eval_precision = 0.4223[0m
[32m  eval_recall = 0.262[0m
[32m  ********************[0m
[32m  Best f1:0.2857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67357:  64%|██████▍   | 18/28 [01:30<00:54,  5.40s/it]epoch 1 loss 1.65931:  64%|██████▍   | 18/28 [01:31<00:54,  5.40s/it]epoch 1 loss 1.65931:  68%|██████▊   | 19/28 [01:31<00:35,  3.91s/it]epoch 1 loss 1.64584:  68%|██████▊   | 19/28 [01:31<00:35,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6275[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.4351[0m
[32m  eval_recall = 0.2796[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.64584:  71%|███████▏  | 20/28 [01:40<00:44,  5.61s/it]epoch 1 loss 1.63436:  71%|███████▏  | 20/28 [01:41<00:44,  5.61s/it]epoch 1 loss 1.63436:  75%|███████▌  | 21/28 [01:41<00:28,  4.06s/it]epoch 1 loss 1.62666:  75%|███████▌  | 21/28 [01:41<00:28,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.3149[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.4389[0m
[32m  eval_recall = 0.2868[0m
[32m  ********************[0m
[32m  Best f1:0.3149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.62666:  79%|███████▊  | 22/28 [01:48<00:31,  5.18s/it]epoch 1 loss 1.61573:  79%|███████▊  | 22/28 [01:49<00:31,  5.18s/it]epoch 1 loss 1.61573:  82%|████████▏ | 23/28 [01:49<00:18,  3.75s/it]epoch 1 loss 1.60501:  82%|████████▏ | 23/28 [01:49<00:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6382[0m
[32m  eval_f1 = 0.3372[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.4586[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best f1:0.3372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60501:  86%|████████▌ | 24/28 [01:58<00:21,  5.43s/it]epoch 1 loss 1.60095:  86%|████████▌ | 24/28 [01:59<00:21,  5.43s/it]epoch 1 loss 1.60095:  89%|████████▉ | 25/28 [01:59<00:11,  3.93s/it]epoch 1 loss 1.59535:  89%|████████▉ | 25/28 [01:59<00:11,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3168[0m
[32m  ********************[0m
[32m  Best f1:0.3468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.59535:  93%|█████████▎| 26/28 [02:07<00:10,  5.22s/it]epoch 1 loss 1.58319:  93%|█████████▎| 26/28 [02:07<00:10,  5.22s/it]epoch 1 loss 1.58319:  96%|█████████▋| 27/28 [02:07<00:03,  3.78s/it]epoch 1 loss 1.57832:  96%|█████████▋| 27/28 [02:07<00:03,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3239[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.57832: 100%|██████████| 28/28 [02:17<00:00,  5.47s/it]epoch 1 loss 1.57832: 100%|██████████| 28/28 [02:17<00:00,  4.90s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30256:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30256:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.31076:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.458[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.3547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31076:   7%|▋         | 2/28 [00:08<02:12,  5.09s/it]epoch 2 loss 1.29808:   7%|▋         | 2/28 [00:09<02:12,  5.09s/it]epoch 2 loss 1.29808:  11%|█         | 3/28 [00:09<01:13,  2.96s/it]epoch 2 loss 1.27422:  11%|█         | 3/28 [00:09<01:13,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.3331[0m
[32m  ********************[0m
[32m  Best f1:0.3572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27422:  14%|█▍        | 4/28 [00:19<02:15,  5.66s/it]epoch 2 loss 1.2844:  14%|█▍        | 4/28 [00:19<02:15,  5.66s/it] epoch 2 loss 1.2844:  18%|█▊        | 5/28 [00:19<01:26,  3.77s/it]epoch 2 loss 1.28402:  18%|█▊        | 5/28 [00:19<01:26,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.452[0m
[32m  eval_recall = 0.3358[0m
[32m  ********************[0m
[32m  Best f1:0.3584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28402:  21%|██▏       | 6/28 [00:27<01:52,  5.13s/it]epoch 2 loss 1.28291:  21%|██▏       | 6/28 [00:27<01:52,  5.13s/it]epoch 2 loss 1.28291:  25%|██▌       | 7/28 [00:27<01:15,  3.59s/it]epoch 2 loss 1.2676:  25%|██▌       | 7/28 [00:28<01:15,  3.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3628[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best f1:0.3628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2676:  29%|██▊       | 8/28 [00:37<01:53,  5.65s/it]epoch 2 loss 1.27378:  29%|██▊       | 8/28 [00:38<01:53,  5.65s/it]epoch 2 loss 1.27378:  32%|███▏      | 9/28 [00:38<01:16,  4.02s/it]epoch 2 loss 1.28739:  32%|███▏      | 9/28 [00:38<01:16,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3631[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.4584[0m
[32m  eval_recall = 0.3375[0m
[32m  ********************[0m
[32m  Best f1:0.3631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28739:  36%|███▌      | 10/28 [00:48<01:46,  5.90s/it]epoch 2 loss 1.28639:  36%|███▌      | 10/28 [00:48<01:46,  5.90s/it]epoch 2 loss 1.28639:  39%|███▉      | 11/28 [00:48<01:11,  4.22s/it]epoch 2 loss 1.29386:  39%|███▉      | 11/28 [00:49<01:11,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3388[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29386:  43%|████▎     | 12/28 [00:58<01:33,  5.83s/it]epoch 2 loss 1.28269:  43%|████▎     | 12/28 [00:58<01:33,  5.83s/it]epoch 2 loss 1.28269:  46%|████▋     | 13/28 [00:58<01:02,  4.19s/it]epoch 2 loss 1.28851:  46%|████▋     | 13/28 [00:58<01:02,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6437[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28851:  50%|█████     | 14/28 [01:08<01:23,  5.94s/it]epoch 2 loss 1.27792:  50%|█████     | 14/28 [01:08<01:23,  5.94s/it]epoch 2 loss 1.27792:  54%|█████▎    | 15/28 [01:08<00:55,  4.27s/it]epoch 2 loss 1.28007:  54%|█████▎    | 15/28 [01:09<00:55,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3711[0m
[32m  eval_mcc = 0.645[0m
[32m  eval_precision = 0.4871[0m
[32m  eval_recall = 0.3416[0m
[32m  ********************[0m
[32m  Best f1:0.3711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28007:  57%|█████▋    | 16/28 [01:17<01:07,  5.59s/it]epoch 2 loss 1.28094:  57%|█████▋    | 16/28 [01:18<01:07,  5.59s/it]epoch 2 loss 1.28094:  61%|██████    | 17/28 [01:18<00:44,  4.03s/it]epoch 2 loss 1.27789:  61%|██████    | 17/28 [01:18<00:44,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4869[0m
[32m  eval_recall = 0.3428[0m
[32m  ********************[0m
[32m  Best f1:0.3731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27789:  64%|██████▍   | 18/28 [01:27<00:57,  5.78s/it]epoch 2 loss 1.27493:  64%|██████▍   | 18/28 [01:28<00:57,  5.78s/it]epoch 2 loss 1.27493:  68%|██████▊   | 19/28 [01:28<00:37,  4.17s/it]epoch 2 loss 1.27117:  68%|██████▊   | 19/28 [01:28<00:37,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.4832[0m
[32m  eval_recall = 0.3446[0m
[32m  ********************[0m
[32m  Best f1:0.3748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27117:  71%|███████▏  | 20/28 [01:37<00:45,  5.75s/it]epoch 2 loss 1.26183:  71%|███████▏  | 20/28 [01:38<00:45,  5.75s/it]epoch 2 loss 1.26183:  75%|███████▌  | 21/28 [01:38<00:29,  4.15s/it]epoch 2 loss 1.26215:  75%|███████▌  | 21/28 [01:38<00:29,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6664[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4846[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.26215:  79%|███████▊  | 22/28 [01:44<00:29,  4.96s/it]epoch 2 loss 1.25272:  79%|███████▊  | 22/28 [01:45<00:29,  4.96s/it]epoch 2 loss 1.25272:  82%|████████▏ | 23/28 [01:45<00:18,  3.60s/it]epoch 2 loss 1.24848:  82%|████████▏ | 23/28 [01:45<00:18,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3787[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4812[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.3787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.24848:  86%|████████▌ | 24/28 [01:52<00:18,  4.70s/it]epoch 2 loss 1.24521:  86%|████████▌ | 24/28 [01:53<00:18,  4.70s/it]epoch 2 loss 1.24521:  89%|████████▉ | 25/28 [01:53<00:10,  3.42s/it]epoch 2 loss 1.24244:  89%|████████▉ | 25/28 [01:53<00:10,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3836[0m
[32m  eval_mcc = 0.6477[0m
[32m  eval_precision = 0.4983[0m
[32m  eval_recall = 0.3505[0m
[32m  ********************[0m
[32m  Best f1:0.3836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24244:  93%|█████████▎| 26/28 [02:02<00:10,  5.27s/it]epoch 2 loss 1.23708:  93%|█████████▎| 26/28 [02:03<00:10,  5.27s/it]epoch 2 loss 1.23708:  96%|█████████▋| 27/28 [02:03<00:03,  3.82s/it]epoch 2 loss 1.23604:  96%|█████████▋| 27/28 [02:03<00:03,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3858[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4995[0m
[32m  eval_recall = 0.3526[0m
[32m  ********************[0m
[32m  Best f1:0.3858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23604: 100%|██████████| 28/28 [02:12<00:00,  5.47s/it]epoch 2 loss 1.23604: 100%|██████████| 28/28 [02:12<00:00,  4.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26092:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26092:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 3 loss 1.16928:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3878[0m
[32m  eval_mcc = 0.6528[0m
[32m  eval_precision = 0.4997[0m
[32m  eval_recall = 0.3553[0m
[32m  ********************[0m
[32m  Best f1:0.3878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16928:   7%|▋         | 2/28 [00:09<02:21,  5.43s/it]epoch 3 loss 1.16471:   7%|▋         | 2/28 [00:09<02:21,  5.43s/it]epoch 3 loss 1.16471:  11%|█         | 3/28 [00:09<01:18,  3.14s/it]epoch 3 loss 1.15107:  11%|█         | 3/28 [00:10<01:18,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3881[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4975[0m
[32m  eval_recall = 0.3569[0m
[32m  ********************[0m
[32m  Best f1:0.3881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.15107:  14%|█▍        | 4/28 [00:17<01:55,  4.83s/it]epoch 3 loss 1.15223:  14%|█▍        | 4/28 [00:17<01:55,  4.83s/it]epoch 3 loss 1.15223:  18%|█▊        | 5/28 [00:17<01:14,  3.24s/it]epoch 3 loss 1.14186:  18%|█▊        | 5/28 [00:18<01:14,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3849[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.4875[0m
[32m  eval_recall = 0.356[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14186:  21%|██▏       | 6/28 [00:24<01:35,  4.33s/it]epoch 3 loss 1.13704:  21%|██▏       | 6/28 [00:24<01:35,  4.33s/it]epoch 3 loss 1.13704:  25%|██▌       | 7/28 [00:24<01:04,  3.05s/it]epoch 3 loss 1.12813:  25%|██▌       | 7/28 [00:24<01:04,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3901[0m
[32m  eval_mcc = 0.6539[0m
[32m  eval_precision = 0.4975[0m
[32m  eval_recall = 0.3591[0m
[32m  ********************[0m
[32m  Best f1:0.3901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.12813:  29%|██▊       | 8/28 [00:33<01:41,  5.06s/it]epoch 3 loss 1.14627:  29%|██▊       | 8/28 [00:34<01:41,  5.06s/it]epoch 3 loss 1.14627:  32%|███▏      | 9/28 [00:34<01:08,  3.60s/it]epoch 3 loss 1.1522:  32%|███▏      | 9/28 [00:34<01:08,  3.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.393[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.4996[0m
[32m  eval_recall = 0.362[0m
[32m  ********************[0m
[32m  Best f1:0.393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1522:  36%|███▌      | 10/28 [00:41<01:25,  4.75s/it]epoch 3 loss 1.15831:  36%|███▌      | 10/28 [00:41<01:25,  4.75s/it]epoch 3 loss 1.15831:  39%|███▉      | 11/28 [00:41<00:58,  3.43s/it]epoch 3 loss 1.15329:  39%|███▉      | 11/28 [00:42<00:58,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.4004[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.5117[0m
[32m  eval_recall = 0.3681[0m
[32m  ********************[0m
[32m  Best f1:0.4004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15329:  43%|████▎     | 12/28 [00:48<01:07,  4.23s/it]epoch 3 loss 1.15431:  43%|████▎     | 12/28 [00:48<01:07,  4.23s/it]epoch 3 loss 1.15431:  46%|████▋     | 13/28 [00:48<00:46,  3.08s/it]epoch 3 loss 1.15592:  46%|████▋     | 13/28 [00:48<00:46,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6763[0m
[32m  eval_f1 = 0.4044[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.5246[0m
[32m  eval_recall = 0.3711[0m
[32m  ********************[0m
[32m  Best f1:0.4044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15592:  50%|█████     | 14/28 [00:55<01:01,  4.40s/it]epoch 3 loss 1.15661:  50%|█████     | 14/28 [00:56<01:01,  4.40s/it]epoch 3 loss 1.15661:  54%|█████▎    | 15/28 [00:56<00:41,  3.20s/it]epoch 3 loss 1.16037:  54%|█████▎    | 15/28 [00:56<00:41,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.4052[0m
[32m  eval_mcc = 0.6582[0m
[32m  eval_precision = 0.524[0m
[32m  eval_recall = 0.3715[0m
[32m  ********************[0m
[32m  Best f1:0.4052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16037:  57%|█████▋    | 16/28 [01:02<00:48,  4.06s/it]epoch 3 loss 1.1536:  57%|█████▋    | 16/28 [01:02<00:48,  4.06s/it] epoch 3 loss 1.1536:  61%|██████    | 17/28 [01:02<00:32,  2.97s/it]epoch 3 loss 1.15138:  61%|██████    | 17/28 [01:03<00:32,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6772[0m
[32m  eval_f1 = 0.4056[0m
[32m  eval_mcc = 0.6588[0m
[32m  eval_precision = 0.5244[0m
[32m  eval_recall = 0.3719[0m
[32m  ********************[0m
[32m  Best f1:0.4056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15138:  64%|██████▍   | 18/28 [01:08<00:38,  3.90s/it]epoch 3 loss 1.14823:  64%|██████▍   | 18/28 [01:09<00:38,  3.90s/it]epoch 3 loss 1.14823:  68%|██████▊   | 19/28 [01:09<00:25,  2.85s/it]epoch 3 loss 1.14305:  68%|██████▊   | 19/28 [01:09<00:25,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6778[0m
[32m  eval_f1 = 0.4063[0m
[32m  eval_mcc = 0.6595[0m
[32m  eval_precision = 0.5231[0m
[32m  eval_recall = 0.373[0m
[32m  ********************[0m
[32m  Best f1:0.4063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14305:  71%|███████▏  | 20/28 [01:15<00:29,  3.71s/it]epoch 3 loss 1.14167:  71%|███████▏  | 20/28 [01:15<00:29,  3.71s/it]epoch 3 loss 1.14167:  75%|███████▌  | 21/28 [01:15<00:19,  2.72s/it]epoch 3 loss 1.14134:  75%|███████▌  | 21/28 [01:15<00:19,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6787[0m
[32m  eval_f1 = 0.4067[0m
[32m  eval_mcc = 0.6606[0m
[32m  eval_precision = 0.5233[0m
[32m  eval_recall = 0.3736[0m
[32m  ********************[0m
[32m  Best f1:0.4067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14134:  79%|███████▊  | 22/28 [01:22<00:24,  4.09s/it]epoch 3 loss 1.1478:  79%|███████▊  | 22/28 [01:23<00:24,  4.09s/it] epoch 3 loss 1.1478:  82%|████████▏ | 23/28 [01:23<00:14,  2.99s/it]epoch 3 loss 1.14916:  82%|████████▏ | 23/28 [01:23<00:14,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.4073[0m
[32m  eval_mcc = 0.6611[0m
[32m  eval_precision = 0.5222[0m
[32m  eval_recall = 0.3741[0m
[32m  ********************[0m
[32m  Best f1:0.4073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14916:  86%|████████▌ | 24/28 [01:30<00:16,  4.23s/it]epoch 3 loss 1.14845:  86%|████████▌ | 24/28 [01:30<00:16,  4.23s/it]epoch 3 loss 1.14845:  89%|████████▉ | 25/28 [01:30<00:09,  3.09s/it]epoch 3 loss 1.14634:  89%|████████▉ | 25/28 [01:31<00:09,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6792[0m
[32m  eval_f1 = 0.4074[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.5236[0m
[32m  eval_recall = 0.374[0m
[32m  ********************[0m
[32m  Best f1:0.4074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14634:  93%|█████████▎| 26/28 [01:38<00:08,  4.41s/it]epoch 3 loss 1.14589:  93%|█████████▎| 26/28 [01:38<00:08,  4.41s/it]epoch 3 loss 1.14589:  96%|█████████▋| 27/28 [01:38<00:03,  3.21s/it]epoch 3 loss 1.14848:  96%|█████████▋| 27/28 [01:38<00:03,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6799[0m
[32m  eval_f1 = 0.4101[0m
[32m  eval_mcc = 0.6622[0m
[32m  eval_precision = 0.5235[0m
[32m  eval_recall = 0.3765[0m
[32m  ********************[0m
[32m  Best f1:0.4101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14848: 100%|██████████| 28/28 [01:45<00:00,  4.25s/it]epoch 3 loss 1.14848: 100%|██████████| 28/28 [01:45<00:00,  3.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.0151:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.0151:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.08512:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.4101[0m
[32m  eval_mcc = 0.6628[0m
[32m  eval_precision = 0.524[0m
[32m  eval_recall = 0.3764[0m
[32m  ********************[0m
[32m  Best f1:0.4101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08512:   7%|▋         | 2/28 [00:08<02:03,  4.76s/it]epoch 4 loss 1.08171:   7%|▋         | 2/28 [00:08<02:03,  4.76s/it]epoch 4 loss 1.08171:  11%|█         | 3/28 [00:08<01:09,  2.78s/it]epoch 4 loss 1.09493:  11%|█         | 3/28 [00:09<01:09,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.4097[0m
[32m  eval_mcc = 0.6628[0m
[32m  eval_precision = 0.5232[0m
[32m  eval_recall = 0.3765[0m
[32m  ********************[0m
[32m  Best MCC:0.6628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.09493:  14%|█▍        | 4/28 [00:16<01:52,  4.68s/it]epoch 4 loss 1.09882:  14%|█▍        | 4/28 [00:16<01:52,  4.68s/it]epoch 4 loss 1.09882:  18%|█▊        | 5/28 [00:16<01:12,  3.14s/it]epoch 4 loss 1.11328:  18%|█▊        | 5/28 [00:17<01:12,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6802[0m
[32m  eval_f1 = 0.4095[0m
[32m  eval_mcc = 0.6626[0m
[32m  eval_precision = 0.5242[0m
[32m  eval_recall = 0.376[0m

epoch 4 loss 1.11328:  21%|██▏       | 6/28 [00:20<01:14,  3.37s/it]epoch 4 loss 1.128:  21%|██▏       | 6/28 [00:20<01:14,  3.37s/it]  epoch 4 loss 1.128:  25%|██▌       | 7/28 [00:20<00:50,  2.40s/it]epoch 4 loss 1.1208:  25%|██▌       | 7/28 [00:21<00:50,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.409[0m
[32m  eval_mcc = 0.6628[0m
[32m  eval_precision = 0.5237[0m
[32m  eval_recall = 0.3759[0m

epoch 4 loss 1.1208:  29%|██▊       | 8/28 [00:24<00:56,  2.84s/it]epoch 4 loss 1.11281:  29%|██▊       | 8/28 [00:25<00:56,  2.84s/it]epoch 4 loss 1.11281:  32%|███▏      | 9/28 [00:25<00:39,  2.08s/it]epoch 4 loss 1.12346:  32%|███▏      | 9/28 [00:25<00:39,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.4084[0m
[32m  eval_mcc = 0.6623[0m
[32m  eval_precision = 0.5243[0m
[32m  eval_recall = 0.3757[0m

epoch 4 loss 1.12346:  36%|███▌      | 10/28 [00:28<00:46,  2.61s/it]epoch 4 loss 1.12402:  36%|███▌      | 10/28 [00:29<00:46,  2.61s/it]epoch 4 loss 1.12402:  39%|███▉      | 11/28 [00:29<00:32,  1.93s/it]epoch 4 loss 1.12053:  39%|███▉      | 11/28 [00:29<00:32,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6807[0m
[32m  eval_f1 = 0.4088[0m
[32m  eval_mcc = 0.6628[0m
[32m  eval_precision = 0.5253[0m
[32m  eval_recall = 0.3762[0m
[32m  ********************[0m
[32m  Best MCC:0.6628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12053:  43%|████▎     | 12/28 [00:35<00:53,  3.34s/it]epoch 4 loss 1.11672:  43%|████▎     | 12/28 [00:36<00:53,  3.34s/it]epoch 4 loss 1.11672:  46%|████▋     | 13/28 [00:36<00:36,  2.46s/it]epoch 4 loss 1.12865:  46%|████▋     | 13/28 [00:36<00:36,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6813[0m
[32m  eval_f1 = 0.409[0m
[32m  eval_mcc = 0.6633[0m
[32m  eval_precision = 0.5226[0m
[32m  eval_recall = 0.3766[0m
[32m  ********************[0m
[32m  Best MCC:0.6633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12865:  50%|█████     | 14/28 [00:42<00:50,  3.64s/it]epoch 4 loss 1.12983:  50%|█████     | 14/28 [00:43<00:50,  3.64s/it]epoch 4 loss 1.12983:  54%|█████▎    | 15/28 [00:43<00:34,  2.67s/it]epoch 4 loss 1.12347:  54%|█████▎    | 15/28 [00:43<00:34,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6816[0m
[32m  eval_f1 = 0.412[0m
[32m  eval_mcc = 0.6637[0m
[32m  eval_precision = 0.5226[0m
[32m  eval_recall = 0.3793[0m
[32m  ********************[0m
[32m  Best f1:0.412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12347:  57%|█████▋    | 16/28 [00:52<00:56,  4.74s/it]epoch 4 loss 1.11688:  57%|█████▋    | 16/28 [00:52<00:56,  4.74s/it]epoch 4 loss 1.11688:  61%|██████    | 17/28 [00:52<00:37,  3.44s/it]epoch 4 loss 1.11325:  61%|██████    | 17/28 [00:53<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6819[0m
[32m  eval_f1 = 0.4138[0m
[32m  eval_mcc = 0.6639[0m
[32m  eval_precision = 0.5233[0m
[32m  eval_recall = 0.3806[0m
[32m  ********************[0m
[32m  Best f1:0.4138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11325:  64%|██████▍   | 18/28 [01:02<00:53,  5.33s/it]epoch 4 loss 1.11416:  64%|██████▍   | 18/28 [01:03<00:53,  5.33s/it]epoch 4 loss 1.11416:  68%|██████▊   | 19/28 [01:03<00:34,  3.85s/it]epoch 4 loss 1.11326:  68%|██████▊   | 19/28 [01:03<00:34,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6822[0m
[32m  eval_f1 = 0.4141[0m
[32m  eval_mcc = 0.6642[0m
[32m  eval_precision = 0.5234[0m
[32m  eval_recall = 0.3809[0m
[32m  ********************[0m
[32m  Best f1:0.4141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11326:  71%|███████▏  | 20/28 [01:12<00:43,  5.47s/it]epoch 4 loss 1.11696:  71%|███████▏  | 20/28 [01:12<00:43,  5.47s/it]epoch 4 loss 1.11696:  75%|███████▌  | 21/28 [01:12<00:27,  3.95s/it]epoch 4 loss 1.11995:  75%|███████▌  | 21/28 [01:13<00:27,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6828[0m
[32m  eval_f1 = 0.4154[0m
[32m  eval_mcc = 0.6648[0m
[32m  eval_precision = 0.5245[0m
[32m  eval_recall = 0.3819[0m
[32m  ********************[0m
[32m  Best f1:0.4154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11995:  79%|███████▊  | 22/28 [01:22<00:33,  5.61s/it]epoch 4 loss 1.11436:  79%|███████▊  | 22/28 [01:22<00:33,  5.61s/it]epoch 4 loss 1.11436:  82%|████████▏ | 23/28 [01:22<00:20,  4.05s/it]epoch 4 loss 1.11305:  82%|████████▏ | 23/28 [01:23<00:20,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6829[0m
[32m  eval_f1 = 0.4159[0m
[32m  eval_mcc = 0.665[0m
[32m  eval_precision = 0.5248[0m
[32m  eval_recall = 0.3822[0m
[32m  ********************[0m
[32m  Best f1:0.4159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11305:  86%|████████▌ | 24/28 [01:30<00:20,  5.10s/it]epoch 4 loss 1.11119:  86%|████████▌ | 24/28 [01:30<00:20,  5.10s/it]epoch 4 loss 1.11119:  89%|████████▉ | 25/28 [01:30<00:11,  3.70s/it]epoch 4 loss 1.1132:  89%|████████▉ | 25/28 [01:31<00:11,  3.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6827[0m
[32m  eval_f1 = 0.4157[0m
[32m  eval_mcc = 0.6647[0m
[32m  eval_precision = 0.5243[0m
[32m  eval_recall = 0.3821[0m

epoch 4 loss 1.1132:  93%|█████████▎| 26/28 [01:34<00:07,  3.73s/it]epoch 4 loss 1.11167:  93%|█████████▎| 26/28 [01:34<00:07,  3.73s/it]epoch 4 loss 1.11167:  96%|█████████▋| 27/28 [01:34<00:02,  2.73s/it]epoch 4 loss 1.11737:  96%|█████████▋| 27/28 [01:35<00:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6828[0m
[32m  eval_f1 = 0.4158[0m
[32m  eval_mcc = 0.6649[0m
[32m  eval_precision = 0.5243[0m
[32m  eval_recall = 0.3822[0m

epoch 4 loss 1.11737: 100%|██████████| 28/28 [01:38<00:00,  2.99s/it]epoch 4 loss 1.11737: 100%|██████████| 28/28 [01:38<00:00,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6829[0m
[32m  eval_f1 = 0.4159[0m
[32m  eval_mcc = 0.665[0m
[32m  eval_precision = 0.5248[0m
[32m  eval_recall = 0.3822[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3775[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4986[0m
[32m  eval_recall = 0.3468[0m

