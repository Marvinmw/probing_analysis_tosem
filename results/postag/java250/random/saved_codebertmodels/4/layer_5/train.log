[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_5', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.2196:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.2196:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.21014:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0023[0m
[32m  eval_precision = 0.0066[0m
[32m  eval_recall = 0.0071[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.21014:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.19755:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.19755:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.18535:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0116[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = -0.0016[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.0082[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.18535:  14%|█▍        | 4/28 [00:12<01:31,  3.82s/it]epoch 0 loss 5.16214:  14%|█▍        | 4/28 [00:12<01:31,  3.82s/it]epoch 0 loss 5.16214:  18%|█▊        | 5/28 [00:12<00:59,  2.59s/it]epoch 0 loss 5.13905:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0242[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = -0.0036[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0097[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.13905:  21%|██▏       | 6/28 [00:19<01:23,  3.82s/it]epoch 0 loss 5.10106:  21%|██▏       | 6/28 [00:19<01:23,  3.82s/it]epoch 0 loss 5.10106:  25%|██▌       | 7/28 [00:19<00:56,  2.71s/it]epoch 0 loss 5.06111:  25%|██▌       | 7/28 [00:19<00:56,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0546[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.0022[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06111:  29%|██▊       | 8/28 [00:27<01:24,  4.24s/it]epoch 0 loss 5.0117:  29%|██▊       | 8/28 [00:27<01:24,  4.24s/it] epoch 0 loss 5.0117:  32%|███▏      | 9/28 [00:27<00:57,  3.04s/it]epoch 0 loss 4.96688:  32%|███▏      | 9/28 [00:27<00:57,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0839[0m
[32m  eval_f1 = 0.0097[0m
[32m  eval_mcc = 0.0182[0m
[32m  eval_precision = 0.0186[0m
[32m  eval_recall = 0.0128[0m
[32m  ********************[0m
[32m  Best f1:0.0097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96688:  36%|███▌      | 10/28 [00:35<01:23,  4.65s/it]epoch 0 loss 4.91116:  36%|███▌      | 10/28 [00:36<01:23,  4.65s/it]epoch 0 loss 4.91116:  39%|███▉      | 11/28 [00:36<00:57,  3.36s/it]epoch 0 loss 4.85038:  39%|███▉      | 11/28 [00:36<00:57,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1068[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.0396[0m
[32m  eval_precision = 0.0287[0m
[32m  eval_recall = 0.017[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85038:  43%|████▎     | 12/28 [00:45<01:22,  5.15s/it]epoch 0 loss 4.78624:  43%|████▎     | 12/28 [00:45<01:22,  5.15s/it]epoch 0 loss 4.78624:  46%|████▋     | 13/28 [00:45<00:55,  3.72s/it]epoch 0 loss 4.71943:  46%|████▋     | 13/28 [00:46<00:55,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1386[0m
[32m  eval_f1 = 0.0167[0m
[32m  eval_mcc = 0.0735[0m
[32m  eval_precision = 0.0334[0m
[32m  eval_recall = 0.0224[0m
[32m  ********************[0m
[32m  Best f1:0.0167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.71943:  50%|█████     | 14/28 [00:53<01:08,  4.88s/it]epoch 0 loss 4.65463:  50%|█████     | 14/28 [00:53<01:08,  4.88s/it]epoch 0 loss 4.65463:  54%|█████▎    | 15/28 [00:53<00:45,  3.53s/it]epoch 0 loss 4.58601:  54%|█████▎    | 15/28 [00:54<00:45,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1828[0m
[32m  eval_f1 = 0.0255[0m
[32m  eval_mcc = 0.1219[0m
[32m  eval_precision = 0.0487[0m
[32m  eval_recall = 0.0302[0m
[32m  ********************[0m
[32m  Best f1:0.0255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58601:  57%|█████▋    | 16/28 [01:00<00:52,  4.41s/it]epoch 0 loss 4.51515:  57%|█████▋    | 16/28 [01:00<00:52,  4.41s/it]epoch 0 loss 4.51515:  61%|██████    | 17/28 [01:00<00:35,  3.22s/it]epoch 0 loss 4.45145:  61%|██████    | 17/28 [01:01<00:35,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2356[0m
[32m  eval_f1 = 0.0369[0m
[32m  eval_mcc = 0.1786[0m
[32m  eval_precision = 0.0711[0m
[32m  eval_recall = 0.0408[0m
[32m  ********************[0m
[32m  Best f1:0.0369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45145:  64%|██████▍   | 18/28 [01:07<00:43,  4.35s/it]epoch 0 loss 4.3851:  64%|██████▍   | 18/28 [01:08<00:43,  4.35s/it] epoch 0 loss 4.3851:  68%|██████▊   | 19/28 [01:08<00:28,  3.17s/it]epoch 0 loss 4.32909:  68%|██████▊   | 19/28 [01:08<00:28,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2958[0m
[32m  eval_f1 = 0.0523[0m
[32m  eval_mcc = 0.2435[0m
[32m  eval_precision = 0.0779[0m
[32m  eval_recall = 0.0561[0m
[32m  ********************[0m
[32m  Best f1:0.0523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32909:  71%|███████▏  | 20/28 [01:14<00:32,  4.04s/it]epoch 0 loss 4.26152:  71%|███████▏  | 20/28 [01:14<00:32,  4.04s/it]epoch 0 loss 4.26152:  75%|███████▌  | 21/28 [01:14<00:20,  2.96s/it]epoch 0 loss 4.20861:  75%|███████▌  | 21/28 [01:15<00:20,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3258[0m
[32m  eval_f1 = 0.0614[0m
[32m  eval_mcc = 0.278[0m
[32m  eval_precision = 0.0948[0m
[32m  eval_recall = 0.0631[0m
[32m  ********************[0m
[32m  Best f1:0.0614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20861:  79%|███████▊  | 22/28 [01:20<00:23,  3.93s/it]epoch 0 loss 4.14599:  79%|███████▊  | 22/28 [01:21<00:23,  3.93s/it]epoch 0 loss 4.14599:  82%|████████▏ | 23/28 [01:21<00:14,  2.88s/it]epoch 0 loss 4.08407:  82%|████████▏ | 23/28 [01:21<00:14,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3803[0m
[32m  eval_f1 = 0.1072[0m
[32m  eval_mcc = 0.3403[0m
[32m  eval_precision = 0.1729[0m
[32m  eval_recall = 0.0977[0m
[32m  ********************[0m
[32m  Best f1:0.1072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.08407:  86%|████████▌ | 24/28 [01:27<00:15,  3.99s/it]epoch 0 loss 4.03017:  86%|████████▌ | 24/28 [01:28<00:15,  3.99s/it]epoch 0 loss 4.03017:  89%|████████▉ | 25/28 [01:28<00:08,  2.92s/it]epoch 0 loss 3.97344:  89%|████████▉ | 25/28 [01:28<00:08,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4334[0m
[32m  eval_f1 = 0.1359[0m
[32m  eval_mcc = 0.3991[0m
[32m  eval_precision = 0.1888[0m
[32m  eval_recall = 0.1241[0m
[32m  ********************[0m
[32m  Best f1:0.1359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97344:  93%|█████████▎| 26/28 [01:34<00:07,  3.89s/it]epoch 0 loss 3.91657:  93%|█████████▎| 26/28 [01:34<00:07,  3.89s/it]epoch 0 loss 3.91657:  96%|█████████▋| 27/28 [01:34<00:02,  2.85s/it]epoch 0 loss 3.85817:  96%|█████████▋| 27/28 [01:35<00:02,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4786[0m
[32m  eval_f1 = 0.158[0m
[32m  eval_mcc = 0.4486[0m
[32m  eval_precision = 0.2044[0m
[32m  eval_recall = 0.1499[0m
[32m  ********************[0m
[32m  Best f1:0.158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.85817: 100%|██████████| 28/28 [01:40<00:00,  3.77s/it]epoch 0 loss 3.85817: 100%|██████████| 28/28 [01:40<00:00,  3.60s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.27184:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.27184:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.17203:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5067[0m
[32m  eval_f1 = 0.1727[0m
[32m  eval_mcc = 0.4807[0m
[32m  eval_precision = 0.2313[0m
[32m  eval_recall = 0.1675[0m
[32m  ********************[0m
[32m  Best f1:0.1727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17203:   7%|▋         | 2/28 [00:06<01:40,  3.85s/it]epoch 1 loss 2.13627:   7%|▋         | 2/28 [00:07<01:40,  3.85s/it]epoch 1 loss 2.13627:  11%|█         | 3/28 [00:07<00:57,  2.29s/it]epoch 1 loss 2.13146:  11%|█         | 3/28 [00:07<00:57,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5417[0m
[32m  eval_f1 = 0.1914[0m
[32m  eval_mcc = 0.5161[0m
[32m  eval_precision = 0.2479[0m
[32m  eval_recall = 0.1863[0m
[32m  ********************[0m
[32m  Best f1:0.1914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13146:  14%|█▍        | 4/28 [00:16<01:58,  4.96s/it]epoch 1 loss 2.1307:  14%|█▍        | 4/28 [00:16<01:58,  4.96s/it] epoch 1 loss 2.1307:  18%|█▊        | 5/28 [00:16<01:16,  3.32s/it]epoch 1 loss 2.12073:  18%|█▊        | 5/28 [00:16<01:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5657[0m
[32m  eval_f1 = 0.2036[0m
[32m  eval_mcc = 0.5393[0m
[32m  eval_precision = 0.2448[0m
[32m  eval_recall = 0.1992[0m
[32m  ********************[0m
[32m  Best f1:0.2036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12073:  21%|██▏       | 6/28 [00:25<01:56,  5.30s/it]epoch 1 loss 2.10331:  21%|██▏       | 6/28 [00:26<01:56,  5.30s/it]epoch 1 loss 2.10331:  25%|██▌       | 7/28 [00:26<01:17,  3.71s/it]epoch 1 loss 2.06753:  25%|██▌       | 7/28 [00:26<01:17,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5802[0m
[32m  eval_f1 = 0.2177[0m
[32m  eval_mcc = 0.5541[0m
[32m  eval_precision = 0.2587[0m
[32m  eval_recall = 0.2132[0m
[32m  ********************[0m
[32m  Best f1:0.2177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06753:  29%|██▊       | 8/28 [00:36<01:53,  5.68s/it]epoch 1 loss 2.03989:  29%|██▊       | 8/28 [00:36<01:53,  5.68s/it]epoch 1 loss 2.03989:  32%|███▏      | 9/28 [00:36<01:16,  4.04s/it]epoch 1 loss 2.02484:  32%|███▏      | 9/28 [00:36<01:16,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5821[0m
[32m  eval_f1 = 0.221[0m
[32m  eval_mcc = 0.556[0m
[32m  eval_precision = 0.2628[0m
[32m  eval_recall = 0.2148[0m
[32m  ********************[0m
[32m  Best f1:0.221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02484:  36%|███▌      | 10/28 [00:46<01:43,  5.75s/it]epoch 1 loss 2.00124:  36%|███▌      | 10/28 [00:46<01:43,  5.75s/it]epoch 1 loss 2.00124:  39%|███▉      | 11/28 [00:46<01:10,  4.12s/it]epoch 1 loss 1.97988:  39%|███▉      | 11/28 [00:46<01:10,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.2263[0m
[32m  eval_mcc = 0.5629[0m
[32m  eval_precision = 0.273[0m
[32m  eval_recall = 0.2166[0m
[32m  ********************[0m
[32m  Best f1:0.2263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97988:  43%|████▎     | 12/28 [00:54<01:24,  5.31s/it]epoch 1 loss 1.95443:  43%|████▎     | 12/28 [00:54<01:24,  5.31s/it]epoch 1 loss 1.95443:  46%|████▋     | 13/28 [00:54<00:57,  3.83s/it]epoch 1 loss 1.94527:  46%|████▋     | 13/28 [00:55<00:57,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5936[0m
[32m  eval_f1 = 0.2316[0m
[32m  eval_mcc = 0.5703[0m
[32m  eval_precision = 0.2958[0m
[32m  eval_recall = 0.2187[0m
[32m  ********************[0m
[32m  Best f1:0.2316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94527:  50%|█████     | 14/28 [01:01<01:05,  4.67s/it]epoch 1 loss 1.92108:  50%|█████     | 14/28 [01:01<01:05,  4.67s/it]epoch 1 loss 1.92108:  54%|█████▎    | 15/28 [01:01<00:44,  3.39s/it]epoch 1 loss 1.90516:  54%|█████▎    | 15/28 [01:02<00:44,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5977[0m
[32m  eval_f1 = 0.235[0m
[32m  eval_mcc = 0.5765[0m
[32m  eval_precision = 0.3251[0m
[32m  eval_recall = 0.2207[0m
[32m  ********************[0m
[32m  Best f1:0.235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90516:  57%|█████▋    | 16/28 [01:09<00:55,  4.66s/it]epoch 1 loss 1.89038:  57%|█████▋    | 16/28 [01:10<00:55,  4.66s/it]epoch 1 loss 1.89038:  61%|██████    | 17/28 [01:10<00:37,  3.39s/it]epoch 1 loss 1.87709:  61%|██████    | 17/28 [01:10<00:37,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6038[0m
[32m  eval_f1 = 0.2431[0m
[32m  eval_mcc = 0.5837[0m
[32m  eval_precision = 0.3379[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87709:  64%|██████▍   | 18/28 [01:19<00:51,  5.20s/it]epoch 1 loss 1.86024:  64%|██████▍   | 18/28 [01:19<00:51,  5.20s/it]epoch 1 loss 1.86024:  68%|██████▊   | 19/28 [01:19<00:33,  3.76s/it]epoch 1 loss 1.84469:  68%|██████▊   | 19/28 [01:20<00:33,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6093[0m
[32m  eval_f1 = 0.2528[0m
[32m  eval_mcc = 0.5889[0m
[32m  eval_precision = 0.3667[0m
[32m  eval_recall = 0.2343[0m
[32m  ********************[0m
[32m  Best f1:0.2528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84469:  71%|███████▏  | 20/28 [01:29<00:43,  5.43s/it]epoch 1 loss 1.83139:  71%|███████▏  | 20/28 [01:29<00:43,  5.43s/it]epoch 1 loss 1.83139:  75%|███████▌  | 21/28 [01:29<00:27,  3.93s/it]epoch 1 loss 1.82215:  75%|███████▌  | 21/28 [01:30<00:27,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.612[0m
[32m  eval_f1 = 0.2645[0m
[32m  eval_mcc = 0.5909[0m
[32m  eval_precision = 0.3965[0m
[32m  eval_recall = 0.2434[0m
[32m  ********************[0m
[32m  Best f1:0.2645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82215:  79%|███████▊  | 22/28 [01:38<00:33,  5.52s/it]epoch 1 loss 1.80967:  79%|███████▊  | 22/28 [01:39<00:33,  5.52s/it]epoch 1 loss 1.80967:  82%|████████▏ | 23/28 [01:39<00:19,  3.99s/it]epoch 1 loss 1.79649:  82%|████████▏ | 23/28 [01:39<00:19,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2708[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2498[0m
[32m  ********************[0m
[32m  Best f1:0.2708[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79649:  86%|████████▌ | 24/28 [01:48<00:22,  5.62s/it]epoch 1 loss 1.79076:  86%|████████▌ | 24/28 [01:49<00:22,  5.62s/it]epoch 1 loss 1.79076:  89%|████████▉ | 25/28 [01:49<00:12,  4.06s/it]epoch 1 loss 1.78328:  89%|████████▉ | 25/28 [01:49<00:12,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.2909[0m
[32m  eval_mcc = 0.5977[0m
[32m  eval_precision = 0.4156[0m
[32m  eval_recall = 0.2677[0m
[32m  ********************[0m
[32m  Best f1:0.2909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78328:  93%|█████████▎| 26/28 [01:57<00:10,  5.37s/it]epoch 1 loss 1.76969:  93%|█████████▎| 26/28 [01:57<00:10,  5.37s/it]epoch 1 loss 1.76969:  96%|█████████▋| 27/28 [01:57<00:03,  3.89s/it]epoch 1 loss 1.76474:  96%|█████████▋| 27/28 [01:58<00:03,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.3088[0m
[32m  eval_mcc = 0.6[0m
[32m  eval_precision = 0.4243[0m
[32m  eval_recall = 0.2845[0m
[32m  ********************[0m
[32m  Best f1:0.3088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76474: 100%|██████████| 28/28 [02:07<00:00,  5.46s/it]epoch 1 loss 1.76474: 100%|██████████| 28/28 [02:07<00:00,  4.54s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43577:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43577:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.45373:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.3189[0m
[32m  eval_mcc = 0.6046[0m
[32m  eval_precision = 0.4241[0m
[32m  eval_recall = 0.2941[0m
[32m  ********************[0m
[32m  Best f1:0.3189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45373:   7%|▋         | 2/28 [00:08<02:03,  4.73s/it]epoch 2 loss 1.44097:   7%|▋         | 2/28 [00:08<02:03,  4.73s/it]epoch 2 loss 1.44097:  11%|█         | 3/28 [00:08<01:09,  2.77s/it]epoch 2 loss 1.41568:  11%|█         | 3/28 [00:08<01:09,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.3227[0m
[32m  eval_mcc = 0.6096[0m
[32m  eval_precision = 0.4226[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best f1:0.3227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41568:  14%|█▍        | 4/28 [00:18<02:09,  5.41s/it]epoch 2 loss 1.42986:  14%|█▍        | 4/28 [00:18<02:09,  5.41s/it]epoch 2 loss 1.42986:  18%|█▊        | 5/28 [00:18<01:23,  3.62s/it]epoch 2 loss 1.43051:  18%|█▊        | 5/28 [00:18<01:23,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.3236[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.4242[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43051:  21%|██▏       | 6/28 [00:26<01:53,  5.16s/it]epoch 2 loss 1.42885:  21%|██▏       | 6/28 [00:27<01:53,  5.16s/it]epoch 2 loss 1.42885:  25%|██▌       | 7/28 [00:27<01:15,  3.61s/it]epoch 2 loss 1.41311:  25%|██▌       | 7/28 [00:27<01:15,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41311:  29%|██▊       | 8/28 [00:32<01:24,  4.23s/it]epoch 2 loss 1.42147:  29%|██▊       | 8/28 [00:33<01:24,  4.23s/it]epoch 2 loss 1.42147:  32%|███▏      | 9/28 [00:33<00:57,  3.04s/it]epoch 2 loss 1.43504:  32%|███▏      | 9/28 [00:33<00:57,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.3265[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3005[0m
[32m  ********************[0m
[32m  Best f1:0.3265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43504:  36%|███▌      | 10/28 [00:38<01:09,  3.85s/it]epoch 2 loss 1.43228:  36%|███▌      | 10/28 [00:39<01:09,  3.85s/it]epoch 2 loss 1.43228:  39%|███▉      | 11/28 [00:39<00:47,  2.81s/it]epoch 2 loss 1.43984:  39%|███▉      | 11/28 [00:39<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6201[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3018[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43984:  43%|████▎     | 12/28 [00:45<01:01,  3.83s/it]epoch 2 loss 1.42773:  43%|████▎     | 12/28 [00:45<01:01,  3.83s/it]epoch 2 loss 1.42773:  46%|████▋     | 13/28 [00:45<00:41,  2.80s/it]epoch 2 loss 1.43291:  46%|████▋     | 13/28 [00:46<00:41,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3332[0m
[32m  eval_mcc = 0.6219[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43291:  50%|█████     | 14/28 [00:51<00:53,  3.80s/it]epoch 2 loss 1.4214:  50%|█████     | 14/28 [00:52<00:53,  3.80s/it] epoch 2 loss 1.4214:  54%|█████▎    | 15/28 [00:52<00:36,  2.79s/it]epoch 2 loss 1.42212:  54%|█████▎    | 15/28 [00:52<00:36,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.336[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3078[0m
[32m  ********************[0m
[32m  Best f1:0.336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42212:  57%|█████▋    | 16/28 [00:58<00:45,  3.78s/it]epoch 2 loss 1.42225:  57%|█████▋    | 16/28 [00:58<00:45,  3.78s/it]epoch 2 loss 1.42225:  61%|██████    | 17/28 [00:58<00:30,  2.77s/it]epoch 2 loss 1.41967:  61%|██████    | 17/28 [00:59<00:30,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4588[0m
[32m  eval_recall = 0.3124[0m
[32m  ********************[0m
[32m  Best f1:0.3402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41967:  64%|██████▍   | 18/28 [01:04<00:37,  3.79s/it]epoch 2 loss 1.41667:  64%|██████▍   | 18/28 [01:05<00:37,  3.79s/it]epoch 2 loss 1.41667:  68%|██████▊   | 19/28 [01:05<00:25,  2.78s/it]epoch 2 loss 1.41252:  68%|██████▊   | 19/28 [01:05<00:25,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3419[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4547[0m
[32m  eval_recall = 0.3142[0m
[32m  ********************[0m
[32m  Best f1:0.3419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41252:  71%|███████▏  | 20/28 [01:10<00:28,  3.60s/it]epoch 2 loss 1.40286:  71%|███████▏  | 20/28 [01:11<00:28,  3.60s/it]epoch 2 loss 1.40286:  75%|███████▌  | 21/28 [01:11<00:18,  2.64s/it]epoch 2 loss 1.40268:  75%|███████▌  | 21/28 [01:11<00:18,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3438[0m
[32m  eval_mcc = 0.6292[0m
[32m  eval_precision = 0.4533[0m
[32m  eval_recall = 0.3157[0m
[32m  ********************[0m
[32m  Best f1:0.3438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40268:  79%|███████▊  | 22/28 [01:17<00:22,  3.71s/it]epoch 2 loss 1.39237:  79%|███████▊  | 22/28 [01:17<00:22,  3.71s/it]epoch 2 loss 1.39237:  82%|████████▏ | 23/28 [01:17<00:13,  2.72s/it]epoch 2 loss 1.3871:  82%|████████▏ | 23/28 [01:18<00:13,  2.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.346[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.317[0m
[32m  ********************[0m
[32m  Best f1:0.346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3871:  86%|████████▌ | 24/28 [01:26<00:17,  4.35s/it]epoch 2 loss 1.3829:  86%|████████▌ | 24/28 [01:26<00:17,  4.35s/it]epoch 2 loss 1.3829:  89%|████████▉ | 25/28 [01:26<00:09,  3.17s/it]epoch 2 loss 1.37995:  89%|████████▉ | 25/28 [01:26<00:09,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3478[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4719[0m
[32m  eval_recall = 0.3181[0m
[32m  ********************[0m
[32m  Best f1:0.3478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37995:  93%|█████████▎| 26/28 [01:37<00:10,  5.49s/it]epoch 2 loss 1.37447:  93%|█████████▎| 26/28 [01:37<00:10,  5.49s/it]epoch 2 loss 1.37447:  96%|█████████▋| 27/28 [01:37<00:03,  3.97s/it]epoch 2 loss 1.37273:  96%|█████████▋| 27/28 [01:38<00:03,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4728[0m
[32m  eval_recall = 0.3191[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37273: 100%|██████████| 28/28 [01:49<00:00,  6.22s/it]epoch 2 loss 1.37273: 100%|██████████| 28/28 [01:49<00:00,  3.90s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38809:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38809:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 3 loss 1.29617:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3496[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3199[0m
[32m  ********************[0m
[32m  Best f1:0.3496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29617:   7%|▋         | 2/28 [00:09<02:18,  5.34s/it]epoch 3 loss 1.29683:   7%|▋         | 2/28 [00:09<02:18,  5.34s/it]epoch 3 loss 1.29683:  11%|█         | 3/28 [00:09<01:17,  3.09s/it]epoch 3 loss 1.28177:  11%|█         | 3/28 [00:10<01:17,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28177:  14%|█▍        | 4/28 [00:20<02:23,  5.98s/it]epoch 3 loss 1.28183:  14%|█▍        | 4/28 [00:20<02:23,  5.98s/it]epoch 3 loss 1.28183:  18%|█▊        | 5/28 [00:20<01:31,  3.97s/it]epoch 3 loss 1.2689:  18%|█▊        | 5/28 [00:20<01:31,  3.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3524[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3238[0m
[32m  ********************[0m
[32m  Best f1:0.3524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.2689:  21%|██▏       | 6/28 [00:26<01:43,  4.73s/it]epoch 3 loss 1.26411:  21%|██▏       | 6/28 [00:27<01:43,  4.73s/it]epoch 3 loss 1.26411:  25%|██▌       | 7/28 [00:27<01:09,  3.32s/it]epoch 3 loss 1.25698:  25%|██▌       | 7/28 [00:27<01:09,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3522[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3239[0m

epoch 3 loss 1.25698:  29%|██▊       | 8/28 [00:30<01:09,  3.48s/it]epoch 3 loss 1.27726:  29%|██▊       | 8/28 [00:31<01:09,  3.48s/it]epoch 3 loss 1.27726:  32%|███▏      | 9/28 [00:31<00:47,  2.51s/it]epoch 3 loss 1.28264:  32%|███▏      | 9/28 [00:31<00:47,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4788[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28264:  36%|███▌      | 10/28 [00:41<01:26,  4.80s/it]epoch 3 loss 1.28909:  36%|███▌      | 10/28 [00:41<01:26,  4.80s/it]epoch 3 loss 1.28909:  39%|███▉      | 11/28 [00:41<00:58,  3.46s/it]epoch 3 loss 1.28373:  39%|███▉      | 11/28 [00:42<00:58,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.3281[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28373:  43%|████▎     | 12/28 [00:51<01:26,  5.38s/it]epoch 3 loss 1.28515:  43%|████▎     | 12/28 [00:51<01:26,  5.38s/it]epoch 3 loss 1.28515:  46%|████▋     | 13/28 [00:51<00:58,  3.88s/it]epoch 3 loss 1.28624:  46%|████▋     | 13/28 [00:52<00:58,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3298[0m
[32m  ********************[0m
[32m  Best f1:0.359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28624:  50%|█████     | 14/28 [00:59<01:11,  5.11s/it]epoch 3 loss 1.28645:  50%|█████     | 14/28 [01:00<01:11,  5.11s/it]epoch 3 loss 1.28645:  54%|█████▎    | 15/28 [01:00<00:48,  3.70s/it]epoch 3 loss 1.28924:  54%|█████▎    | 15/28 [01:00<00:48,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6416[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28924:  57%|█████▋    | 16/28 [01:09<01:06,  5.51s/it]epoch 3 loss 1.28229:  57%|█████▋    | 16/28 [01:10<01:06,  5.51s/it]epoch 3 loss 1.28229:  61%|██████    | 17/28 [01:10<00:43,  3.98s/it]epoch 3 loss 1.28018:  61%|██████    | 17/28 [01:10<00:43,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3651[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3338[0m
[32m  ********************[0m
[32m  Best f1:0.3651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28018:  64%|██████▍   | 18/28 [01:18<00:52,  5.23s/it]epoch 3 loss 1.27673:  64%|██████▍   | 18/28 [01:18<00:52,  5.23s/it]epoch 3 loss 1.27673:  68%|██████▊   | 19/28 [01:18<00:34,  3.78s/it]epoch 3 loss 1.27135:  68%|██████▊   | 19/28 [01:19<00:34,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6622[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.6431[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27135:  71%|███████▏  | 20/28 [01:28<00:43,  5.47s/it]epoch 3 loss 1.27009:  71%|███████▏  | 20/28 [01:28<00:43,  5.47s/it]epoch 3 loss 1.27009:  75%|███████▌  | 21/28 [01:28<00:27,  3.96s/it]epoch 3 loss 1.26943:  75%|███████▌  | 21/28 [01:29<00:27,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3663[0m
[32m  eval_mcc = 0.6437[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.3663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26943:  79%|███████▊  | 22/28 [01:36<00:31,  5.22s/it]epoch 3 loss 1.27594:  79%|███████▊  | 22/28 [01:37<00:31,  5.22s/it]epoch 3 loss 1.27594:  82%|████████▏ | 23/28 [01:37<00:18,  3.78s/it]epoch 3 loss 1.27699:  82%|████████▏ | 23/28 [01:37<00:18,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6622[0m
[32m  eval_f1 = 0.3681[0m
[32m  eval_mcc = 0.6435[0m
[32m  eval_precision = 0.4724[0m
[32m  eval_recall = 0.3356[0m
[32m  ********************[0m
[32m  Best f1:0.3681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27699:  86%|████████▌ | 24/28 [01:44<00:18,  4.71s/it]epoch 3 loss 1.27618:  86%|████████▌ | 24/28 [01:44<00:18,  4.71s/it]epoch 3 loss 1.27618:  89%|████████▉ | 25/28 [01:44<00:10,  3.43s/it]epoch 3 loss 1.27446:  89%|████████▉ | 25/28 [01:45<00:10,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3738[0m
[32m  eval_mcc = 0.645[0m
[32m  eval_precision = 0.495[0m
[32m  eval_recall = 0.3392[0m
[32m  ********************[0m
[32m  Best f1:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27446:  93%|█████████▎| 26/28 [01:53<00:10,  5.16s/it]epoch 3 loss 1.27427:  93%|█████████▎| 26/28 [01:54<00:10,  5.16s/it]epoch 3 loss 1.27427:  96%|█████████▋| 27/28 [01:54<00:03,  3.74s/it]epoch 3 loss 1.27679:  96%|█████████▋| 27/28 [01:54<00:03,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3751[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27679: 100%|██████████| 28/28 [02:01<00:00,  4.92s/it]epoch 3 loss 1.27679: 100%|██████████| 28/28 [02:01<00:00,  4.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.13953:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.13953:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.21031:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.5067[0m
[32m  eval_recall = 0.3424[0m
[32m  ********************[0m
[32m  Best f1:0.3774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21031:   7%|▋         | 2/28 [00:06<01:44,  4.03s/it]epoch 4 loss 1.21087:   7%|▋         | 2/28 [00:07<01:44,  4.03s/it]epoch 4 loss 1.21087:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 4 loss 1.2257:  11%|█         | 3/28 [00:07<00:59,  2.38s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3783[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.509[0m
[32m  eval_recall = 0.3432[0m
[32m  ********************[0m
[32m  Best f1:0.3783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2257:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 4 loss 1.22822:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 4 loss 1.22822:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 4 loss 1.23962:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.51[0m
[32m  eval_recall = 0.3425[0m

epoch 4 loss 1.23962:  21%|██▏       | 6/28 [00:17<01:06,  3.02s/it]epoch 4 loss 1.25764:  21%|██▏       | 6/28 [00:18<01:06,  3.02s/it]epoch 4 loss 1.25764:  25%|██▌       | 7/28 [00:18<00:45,  2.17s/it]epoch 4 loss 1.24886:  25%|██▌       | 7/28 [00:18<00:45,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3776[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.5081[0m
[32m  eval_recall = 0.3437[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24886:  29%|██▊       | 8/28 [00:23<01:01,  3.05s/it]epoch 4 loss 1.23974:  29%|██▊       | 8/28 [00:23<01:01,  3.05s/it]epoch 4 loss 1.23974:  32%|███▏      | 9/28 [00:23<00:42,  2.22s/it]epoch 4 loss 1.25014:  32%|███▏      | 9/28 [00:23<00:42,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3765[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3433[0m

epoch 4 loss 1.25014:  36%|███▌      | 10/28 [00:27<00:48,  2.71s/it]epoch 4 loss 1.25094:  36%|███▌      | 10/28 [00:27<00:48,  2.71s/it]epoch 4 loss 1.25094:  39%|███▉      | 11/28 [00:27<00:34,  2.00s/it]epoch 4 loss 1.24883:  39%|███▉      | 11/28 [00:28<00:34,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.507[0m
[32m  eval_recall = 0.3438[0m

epoch 4 loss 1.24883:  43%|████▎     | 12/28 [00:31<00:40,  2.55s/it]epoch 4 loss 1.24453:  43%|████▎     | 12/28 [00:31<00:40,  2.55s/it]epoch 4 loss 1.24453:  46%|████▋     | 13/28 [00:31<00:28,  1.90s/it]epoch 4 loss 1.25631:  46%|████▋     | 13/28 [00:32<00:28,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3775[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.5064[0m
[32m  eval_recall = 0.3442[0m

epoch 4 loss 1.25631:  50%|█████     | 14/28 [00:35<00:34,  2.47s/it]epoch 4 loss 1.25713:  50%|█████     | 14/28 [00:36<00:34,  2.47s/it]epoch 4 loss 1.25713:  54%|█████▎    | 15/28 [00:36<00:24,  1.85s/it]epoch 4 loss 1.25098:  54%|█████▎    | 15/28 [00:36<00:24,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3779[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.506[0m
[32m  eval_recall = 0.3446[0m

epoch 4 loss 1.25098:  57%|█████▋    | 16/28 [00:39<00:29,  2.43s/it]epoch 4 loss 1.24363:  57%|█████▋    | 16/28 [00:40<00:29,  2.43s/it]epoch 4 loss 1.24363:  61%|██████    | 17/28 [00:40<00:20,  1.82s/it]epoch 4 loss 1.23955:  61%|██████    | 17/28 [00:40<00:20,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3793[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.506[0m
[32m  eval_recall = 0.3456[0m
[32m  ********************[0m
[32m  Best f1:0.3793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23955:  64%|██████▍   | 18/28 [00:45<00:27,  2.77s/it]epoch 4 loss 1.23949:  64%|██████▍   | 18/28 [00:45<00:27,  2.77s/it]epoch 4 loss 1.23949:  68%|██████▊   | 19/28 [00:45<00:18,  2.06s/it]epoch 4 loss 1.23867:  68%|██████▊   | 19/28 [00:46<00:18,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3801[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.5056[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.3801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23867:  71%|███████▏  | 20/28 [00:51<00:26,  3.30s/it]epoch 4 loss 1.24282:  71%|███████▏  | 20/28 [00:52<00:26,  3.30s/it]epoch 4 loss 1.24282:  75%|███████▌  | 21/28 [00:52<00:17,  2.44s/it]epoch 4 loss 1.246:  75%|███████▌  | 21/28 [00:52<00:17,  2.44s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.38[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.5043[0m
[32m  eval_recall = 0.3462[0m

epoch 4 loss 1.246:  79%|███████▊  | 22/28 [00:56<00:17,  2.85s/it]epoch 4 loss 1.24035:  79%|███████▊  | 22/28 [00:56<00:17,  2.85s/it]epoch 4 loss 1.24035:  82%|████████▏ | 23/28 [00:56<00:10,  2.11s/it]epoch 4 loss 1.23874:  82%|████████▏ | 23/28 [00:56<00:10,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.5042[0m
[32m  eval_recall = 0.3464[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23874:  86%|████████▌ | 24/28 [01:02<00:13,  3.33s/it]epoch 4 loss 1.23669:  86%|████████▌ | 24/28 [01:03<00:13,  3.33s/it]epoch 4 loss 1.23669:  89%|████████▉ | 25/28 [01:03<00:07,  2.46s/it]epoch 4 loss 1.23856:  89%|████████▉ | 25/28 [01:03<00:07,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.5041[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23856:  93%|█████████▎| 26/28 [01:08<00:06,  3.47s/it]epoch 4 loss 1.23728:  93%|█████████▎| 26/28 [01:09<00:06,  3.47s/it]epoch 4 loss 1.23728:  96%|█████████▋| 27/28 [01:09<00:02,  2.56s/it]epoch 4 loss 1.24219:  96%|█████████▋| 27/28 [01:09<00:02,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.5041[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24219: 100%|██████████| 28/28 [01:15<00:00,  3.55s/it]epoch 4 loss 1.24219: 100%|██████████| 28/28 [01:15<00:00,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.60it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.70it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.5041[0m
[32m  eval_recall = 0.3465[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4459[0m
[32m  eval_recall = 0.3072[0m

