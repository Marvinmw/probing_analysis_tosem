[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/4/layer_4', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.2095:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.2095:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.19877:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0044[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0008[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.0051[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.19877:   7%|▋         | 2/28 [00:05<01:15,  2.91s/it]epoch 0 loss 5.19071:   7%|▋         | 2/28 [00:05<01:15,  2.91s/it]epoch 0 loss 5.19071:  11%|█         | 3/28 [00:05<00:44,  1.76s/it]epoch 0 loss 5.18014:  11%|█         | 3/28 [00:05<00:44,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0072[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = -0.0009[0m
[32m  eval_precision = 0.0067[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.18014:  14%|█▍        | 4/28 [00:12<01:31,  3.82s/it]epoch 0 loss 5.15764:  14%|█▍        | 4/28 [00:12<01:31,  3.82s/it]epoch 0 loss 5.15764:  18%|█▊        | 5/28 [00:12<00:59,  2.60s/it]epoch 0 loss 5.13462:  18%|█▊        | 5/28 [00:13<00:59,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0235[0m
[32m  eval_f1 = 0.0105[0m
[32m  eval_mcc = 0.0059[0m
[32m  eval_precision = 0.0138[0m
[32m  eval_recall = 0.0137[0m
[32m  ********************[0m
[32m  Best f1:0.0105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13462:  21%|██▏       | 6/28 [00:20<01:32,  4.22s/it]epoch 0 loss 5.0987:  21%|██▏       | 6/28 [00:20<01:32,  4.22s/it] epoch 0 loss 5.0987:  25%|██▌       | 7/28 [00:20<01:02,  2.98s/it]epoch 0 loss 5.05861:  25%|██▌       | 7/28 [00:21<01:02,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0492[0m
[32m  eval_f1 = 0.0141[0m
[32m  eval_mcc = 0.0144[0m
[32m  eval_precision = 0.017[0m
[32m  eval_recall = 0.0166[0m
[32m  ********************[0m
[32m  Best f1:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05861:  29%|██▊       | 8/28 [00:29<01:34,  4.71s/it]epoch 0 loss 5.01093:  29%|██▊       | 8/28 [00:29<01:34,  4.71s/it]epoch 0 loss 5.01093:  32%|███▏      | 9/28 [00:29<01:03,  3.37s/it]epoch 0 loss 4.96548:  32%|███▏      | 9/28 [00:30<01:03,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.076[0m
[32m  eval_f1 = 0.0168[0m
[32m  eval_mcc = 0.0239[0m
[32m  eval_precision = 0.0209[0m
[32m  eval_recall = 0.0196[0m
[32m  ********************[0m
[32m  Best f1:0.0168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96548:  36%|███▌      | 10/28 [00:39<01:37,  5.39s/it]epoch 0 loss 4.91004:  36%|███▌      | 10/28 [00:39<01:37,  5.39s/it]epoch 0 loss 4.91004:  39%|███▉      | 11/28 [00:39<01:05,  3.87s/it]epoch 0 loss 4.85057:  39%|███▉      | 11/28 [00:40<01:05,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1031[0m
[32m  eval_f1 = 0.021[0m
[32m  eval_mcc = 0.047[0m
[32m  eval_precision = 0.0253[0m
[32m  eval_recall = 0.0258[0m
[32m  ********************[0m
[32m  Best f1:0.021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85057:  43%|████▎     | 12/28 [00:47<01:17,  4.85s/it]epoch 0 loss 4.78714:  43%|████▎     | 12/28 [00:47<01:17,  4.85s/it]epoch 0 loss 4.78714:  46%|████▋     | 13/28 [00:47<00:52,  3.50s/it]epoch 0 loss 4.72054:  46%|████▋     | 13/28 [00:47<00:52,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1362[0m
[32m  eval_f1 = 0.0274[0m
[32m  eval_mcc = 0.0784[0m
[32m  eval_precision = 0.0376[0m
[32m  eval_recall = 0.033[0m
[32m  ********************[0m
[32m  Best f1:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72054:  50%|█████     | 14/28 [00:54<01:02,  4.48s/it]epoch 0 loss 4.6562:  50%|█████     | 14/28 [00:54<01:02,  4.48s/it] epoch 0 loss 4.6562:  54%|█████▎    | 15/28 [00:54<00:42,  3.26s/it]epoch 0 loss 4.58789:  54%|█████▎    | 15/28 [00:55<00:42,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1886[0m
[32m  eval_f1 = 0.0439[0m
[32m  eval_mcc = 0.1318[0m
[32m  eval_precision = 0.0647[0m
[32m  eval_recall = 0.0479[0m
[32m  ********************[0m
[32m  Best f1:0.0439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58789:  57%|█████▋    | 16/28 [01:00<00:50,  4.19s/it]epoch 0 loss 4.51682:  57%|█████▋    | 16/28 [01:01<00:50,  4.19s/it]epoch 0 loss 4.51682:  61%|██████    | 17/28 [01:01<00:33,  3.06s/it]epoch 0 loss 4.45248:  61%|██████    | 17/28 [01:01<00:33,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2467[0m
[32m  eval_f1 = 0.0466[0m
[32m  eval_mcc = 0.192[0m
[32m  eval_precision = 0.0796[0m
[32m  eval_recall = 0.0509[0m
[32m  ********************[0m
[32m  Best f1:0.0466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45248:  64%|██████▍   | 18/28 [01:07<00:40,  4.05s/it]epoch 0 loss 4.38547:  64%|██████▍   | 18/28 [01:08<00:40,  4.05s/it]epoch 0 loss 4.38547:  68%|██████▊   | 19/28 [01:08<00:26,  2.96s/it]epoch 0 loss 4.32876:  68%|██████▊   | 19/28 [01:08<00:26,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2942[0m
[32m  eval_f1 = 0.053[0m
[32m  eval_mcc = 0.2403[0m
[32m  eval_precision = 0.1025[0m
[32m  eval_recall = 0.0569[0m
[32m  ********************[0m
[32m  Best f1:0.053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32876:  71%|███████▏  | 20/28 [01:14<00:31,  3.97s/it]epoch 0 loss 4.26075:  71%|███████▏  | 20/28 [01:14<00:31,  3.97s/it]epoch 0 loss 4.26075:  75%|███████▌  | 21/28 [01:14<00:20,  2.90s/it]epoch 0 loss 4.20664:  75%|███████▌  | 21/28 [01:15<00:20,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3384[0m
[32m  eval_f1 = 0.0742[0m
[32m  eval_mcc = 0.2892[0m
[32m  eval_precision = 0.1359[0m
[32m  eval_recall = 0.0726[0m
[32m  ********************[0m
[32m  Best f1:0.0742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20664:  79%|███████▊  | 22/28 [01:21<00:23,  3.95s/it]epoch 0 loss 4.14308:  79%|███████▊  | 22/28 [01:21<00:23,  3.95s/it]epoch 0 loss 4.14308:  82%|████████▏ | 23/28 [01:21<00:14,  2.89s/it]epoch 0 loss 4.07984:  82%|████████▏ | 23/28 [01:22<00:14,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3887[0m
[32m  eval_f1 = 0.1156[0m
[32m  eval_mcc = 0.3463[0m
[32m  eval_precision = 0.174[0m
[32m  eval_recall = 0.1053[0m
[32m  ********************[0m
[32m  Best f1:0.1156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.07984:  86%|████████▌ | 24/28 [01:32<00:20,  5.24s/it]epoch 0 loss 4.02458:  86%|████████▌ | 24/28 [01:32<00:20,  5.24s/it]epoch 0 loss 4.02458:  89%|████████▉ | 25/28 [01:32<00:11,  3.80s/it]epoch 0 loss 3.96667:  89%|████████▉ | 25/28 [01:33<00:11,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.437[0m
[32m  eval_f1 = 0.1387[0m
[32m  eval_mcc = 0.4008[0m
[32m  eval_precision = 0.2043[0m
[32m  eval_recall = 0.1267[0m
[32m  ********************[0m
[32m  Best f1:0.1387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.96667:  93%|█████████▎| 26/28 [01:40<00:10,  5.04s/it]epoch 0 loss 3.90866:  93%|█████████▎| 26/28 [01:41<00:10,  5.04s/it]epoch 0 loss 3.90866:  96%|█████████▋| 27/28 [01:41<00:03,  3.65s/it]epoch 0 loss 3.84905:  96%|█████████▋| 27/28 [01:41<00:03,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4788[0m
[32m  eval_f1 = 0.158[0m
[32m  eval_mcc = 0.4469[0m
[32m  eval_precision = 0.2101[0m
[32m  eval_recall = 0.1476[0m
[32m  ********************[0m
[32m  Best f1:0.158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.84905: 100%|██████████| 28/28 [01:48<00:00,  4.63s/it]epoch 0 loss 3.84905: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.23332:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.23332:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.12932:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5129[0m
[32m  eval_f1 = 0.1778[0m
[32m  eval_mcc = 0.4862[0m
[32m  eval_precision = 0.2427[0m
[32m  eval_recall = 0.1698[0m
[32m  ********************[0m
[32m  Best f1:0.1778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12932:   7%|▋         | 2/28 [00:11<02:49,  6.53s/it]epoch 1 loss 2.09405:   7%|▋         | 2/28 [00:11<02:49,  6.53s/it]epoch 1 loss 2.09405:  11%|█         | 3/28 [00:11<01:33,  3.74s/it]epoch 1 loss 2.0901:  11%|█         | 3/28 [00:12<01:33,  3.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5531[0m
[32m  eval_f1 = 0.1976[0m
[32m  eval_mcc = 0.5287[0m
[32m  eval_precision = 0.2513[0m
[32m  eval_recall = 0.1908[0m
[32m  ********************[0m
[32m  Best f1:0.1976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0901:  14%|█▍        | 4/28 [00:18<02:02,  5.11s/it]epoch 1 loss 2.09009:  14%|█▍        | 4/28 [00:19<02:02,  5.11s/it]epoch 1 loss 2.09009:  18%|█▊        | 5/28 [00:19<01:18,  3.42s/it]epoch 1 loss 2.08169:  18%|█▊        | 5/28 [00:19<01:18,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5715[0m
[32m  eval_f1 = 0.2147[0m
[32m  eval_mcc = 0.5462[0m
[32m  eval_precision = 0.2573[0m
[32m  eval_recall = 0.2094[0m
[32m  ********************[0m
[32m  Best f1:0.2147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08169:  21%|██▏       | 6/28 [00:29<02:03,  5.60s/it]epoch 1 loss 2.06436:  21%|██▏       | 6/28 [00:29<02:03,  5.60s/it]epoch 1 loss 2.06436:  25%|██▌       | 7/28 [00:29<01:22,  3.91s/it]epoch 1 loss 2.02931:  25%|██▌       | 7/28 [00:29<01:22,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5862[0m
[32m  eval_f1 = 0.2202[0m
[32m  eval_mcc = 0.5609[0m
[32m  eval_precision = 0.2602[0m
[32m  eval_recall = 0.2159[0m
[32m  ********************[0m
[32m  Best f1:0.2202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02931:  29%|██▊       | 8/28 [00:38<01:51,  5.58s/it]epoch 1 loss 2.00188:  29%|██▊       | 8/28 [00:39<01:51,  5.58s/it]epoch 1 loss 2.00188:  32%|███▏      | 9/28 [00:39<01:15,  3.97s/it]epoch 1 loss 1.98695:  32%|███▏      | 9/28 [00:39<01:15,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5907[0m
[32m  eval_f1 = 0.2247[0m
[32m  eval_mcc = 0.5654[0m
[32m  eval_precision = 0.2831[0m
[32m  eval_recall = 0.2178[0m
[32m  ********************[0m
[32m  Best f1:0.2247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98695:  36%|███▌      | 10/28 [00:50<01:54,  6.37s/it]epoch 1 loss 1.96335:  36%|███▌      | 10/28 [00:51<01:54,  6.37s/it]epoch 1 loss 1.96335:  39%|███▉      | 11/28 [00:51<01:17,  4.55s/it]epoch 1 loss 1.94202:  39%|███▉      | 11/28 [00:51<01:17,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.594[0m
[32m  eval_f1 = 0.2287[0m
[32m  eval_mcc = 0.5696[0m
[32m  eval_precision = 0.2896[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best f1:0.2287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94202:  43%|████▎     | 12/28 [00:57<01:20,  5.01s/it]epoch 1 loss 1.91713:  43%|████▎     | 12/28 [00:57<01:20,  5.01s/it]epoch 1 loss 1.91713:  46%|████▋     | 13/28 [00:57<00:54,  3.62s/it]epoch 1 loss 1.90838:  46%|████▋     | 13/28 [00:58<00:54,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5962[0m
[32m  eval_f1 = 0.2326[0m
[32m  eval_mcc = 0.5731[0m
[32m  eval_precision = 0.2956[0m
[32m  eval_recall = 0.2205[0m
[32m  ********************[0m
[32m  Best f1:0.2326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90838:  50%|█████     | 14/28 [01:03<01:01,  4.39s/it]epoch 1 loss 1.88449:  50%|█████     | 14/28 [01:04<01:01,  4.39s/it]epoch 1 loss 1.88449:  54%|█████▎    | 15/28 [01:04<00:41,  3.19s/it]epoch 1 loss 1.86847:  54%|█████▎    | 15/28 [01:04<00:41,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5996[0m
[32m  eval_f1 = 0.2347[0m
[32m  eval_mcc = 0.578[0m
[32m  eval_precision = 0.3121[0m
[32m  eval_recall = 0.2215[0m
[32m  ********************[0m
[32m  Best f1:0.2347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86847:  57%|█████▋    | 16/28 [01:16<01:09,  5.82s/it]epoch 1 loss 1.8535:  57%|█████▋    | 16/28 [01:16<01:09,  5.82s/it] epoch 1 loss 1.8535:  61%|██████    | 17/28 [01:16<00:46,  4.20s/it]epoch 1 loss 1.8403:  61%|██████    | 17/28 [01:17<00:46,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.2429[0m
[32m  eval_mcc = 0.5825[0m
[32m  eval_precision = 0.3458[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8403:  64%|██████▍   | 18/28 [01:27<01:03,  6.31s/it]epoch 1 loss 1.82375:  64%|██████▍   | 18/28 [01:28<01:03,  6.31s/it]epoch 1 loss 1.82375:  68%|██████▊   | 19/28 [01:28<00:40,  4.55s/it]epoch 1 loss 1.80837:  68%|██████▊   | 19/28 [01:28<00:40,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2578[0m
[32m  eval_mcc = 0.5904[0m
[32m  eval_precision = 0.3753[0m
[32m  eval_recall = 0.2374[0m
[32m  ********************[0m
[32m  Best f1:0.2578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80837:  71%|███████▏  | 20/28 [01:40<00:54,  6.81s/it]epoch 1 loss 1.79528:  71%|███████▏  | 20/28 [01:40<00:54,  6.81s/it]epoch 1 loss 1.79528:  75%|███████▌  | 21/28 [01:40<00:34,  4.89s/it]epoch 1 loss 1.78604:  75%|███████▌  | 21/28 [01:41<00:34,  4.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2679[0m
[32m  eval_mcc = 0.5935[0m
[32m  eval_precision = 0.3834[0m
[32m  eval_recall = 0.2457[0m
[32m  ********************[0m
[32m  Best f1:0.2679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78604:  79%|███████▊  | 22/28 [01:52<00:40,  6.76s/it]epoch 1 loss 1.77372:  79%|███████▊  | 22/28 [01:52<00:40,  6.76s/it]epoch 1 loss 1.77372:  82%|████████▏ | 23/28 [01:52<00:24,  4.86s/it]epoch 1 loss 1.76105:  82%|████████▏ | 23/28 [01:52<00:24,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.2875[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.4046[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76105:  86%|████████▌ | 24/28 [02:04<00:27,  6.93s/it]epoch 1 loss 1.75544:  86%|████████▌ | 24/28 [02:04<00:27,  6.93s/it]epoch 1 loss 1.75544:  89%|████████▉ | 25/28 [02:04<00:14,  4.97s/it]epoch 1 loss 1.74841:  89%|████████▉ | 25/28 [02:05<00:14,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6247[0m
[32m  eval_f1 = 0.3071[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.4133[0m
[32m  eval_recall = 0.2827[0m
[32m  ********************[0m
[32m  Best f1:0.3071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74841:  93%|█████████▎| 26/28 [02:15<00:13,  6.89s/it]epoch 1 loss 1.7349:  93%|█████████▎| 26/28 [02:16<00:13,  6.89s/it] epoch 1 loss 1.7349:  96%|█████████▋| 27/28 [02:16<00:04,  4.95s/it]epoch 1 loss 1.72978:  96%|█████████▋| 27/28 [02:16<00:04,  4.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6284[0m
[32m  eval_f1 = 0.3165[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.4237[0m
[32m  eval_recall = 0.2907[0m
[32m  ********************[0m
[32m  Best f1:0.3165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72978: 100%|██████████| 28/28 [02:23<00:00,  5.72s/it]epoch 1 loss 1.72978: 100%|██████████| 28/28 [02:23<00:00,  5.14s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40651:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40651:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.42473:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6327[0m
[32m  eval_f1 = 0.3219[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.3219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42473:   7%|▋         | 2/28 [00:11<02:55,  6.76s/it]epoch 2 loss 1.414:   7%|▋         | 2/28 [00:12<02:55,  6.76s/it]  epoch 2 loss 1.414:  11%|█         | 3/28 [00:12<01:36,  3.87s/it]epoch 2 loss 1.38864:  11%|█         | 3/28 [00:12<01:36,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.326[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.3007[0m
[32m  ********************[0m
[32m  Best f1:0.326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38864:  14%|█▍        | 4/28 [00:23<02:40,  6.68s/it]epoch 2 loss 1.40144:  14%|█▍        | 4/28 [00:23<02:40,  6.68s/it]epoch 2 loss 1.40144:  18%|█▊        | 5/28 [00:23<01:41,  4.43s/it]epoch 2 loss 1.40225:  18%|█▊        | 5/28 [00:23<01:41,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6162[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40225:  21%|██▏       | 6/28 [00:32<02:09,  5.91s/it]epoch 2 loss 1.40067:  21%|██▏       | 6/28 [00:32<02:09,  5.91s/it]epoch 2 loss 1.40067:  25%|██▌       | 7/28 [00:32<01:26,  4.11s/it]epoch 2 loss 1.38454:  25%|██▌       | 7/28 [00:33<01:26,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6398[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.436[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38454:  29%|██▊       | 8/28 [00:43<02:06,  6.30s/it]epoch 2 loss 1.39235:  29%|██▊       | 8/28 [00:44<02:06,  6.30s/it]epoch 2 loss 1.39235:  32%|███▏      | 9/28 [00:44<01:24,  4.47s/it]epoch 2 loss 1.40611:  32%|███▏      | 9/28 [00:44<01:24,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.3321[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4394[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40611:  36%|███▌      | 10/28 [00:51<01:38,  5.45s/it]epoch 2 loss 1.4036:  36%|███▌      | 10/28 [00:52<01:38,  5.45s/it] epoch 2 loss 1.4036:  39%|███▉      | 11/28 [00:52<01:06,  3.91s/it]epoch 2 loss 1.41126:  39%|███▉      | 11/28 [00:52<01:06,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.4427[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41126:  43%|████▎     | 12/28 [01:02<01:34,  5.92s/it]epoch 2 loss 1.39908:  43%|████▎     | 12/28 [01:03<01:34,  5.92s/it]epoch 2 loss 1.39908:  46%|████▋     | 13/28 [01:03<01:03,  4.26s/it]epoch 2 loss 1.40423:  46%|████▋     | 13/28 [01:03<01:03,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6461[0m
[32m  eval_f1 = 0.342[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40423:  50%|█████     | 14/28 [01:10<01:12,  5.17s/it]epoch 2 loss 1.39314:  50%|█████     | 14/28 [01:10<01:12,  5.17s/it]epoch 2 loss 1.39314:  54%|█████▎    | 15/28 [01:10<00:48,  3.74s/it]epoch 2 loss 1.3944:  54%|█████▎    | 15/28 [01:11<00:48,  3.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3167[0m
[32m  ********************[0m
[32m  Best f1:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3944:  57%|█████▋    | 16/28 [01:20<01:05,  5.42s/it]epoch 2 loss 1.39461:  57%|█████▋    | 16/28 [01:20<01:05,  5.42s/it]epoch 2 loss 1.39461:  61%|██████    | 17/28 [01:20<00:43,  3.92s/it]epoch 2 loss 1.39191:  61%|██████    | 17/28 [01:20<00:43,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.319[0m
[32m  ********************[0m
[32m  Best f1:0.3468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39191:  64%|██████▍   | 18/28 [01:28<00:50,  5.01s/it]epoch 2 loss 1.3889:  64%|██████▍   | 18/28 [01:28<00:50,  5.01s/it] epoch 2 loss 1.3889:  68%|██████▊   | 19/28 [01:28<00:32,  3.63s/it]epoch 2 loss 1.3847:  68%|██████▊   | 19/28 [01:28<00:32,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3502[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3847:  71%|███████▏  | 20/28 [01:35<00:37,  4.68s/it]epoch 2 loss 1.37488:  71%|███████▏  | 20/28 [01:36<00:37,  4.68s/it]epoch 2 loss 1.37488:  75%|███████▌  | 21/28 [01:36<00:23,  3.41s/it]epoch 2 loss 1.37472:  75%|███████▌  | 21/28 [01:36<00:23,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3536[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best f1:0.3536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37472:  79%|███████▊  | 22/28 [01:42<00:25,  4.22s/it]epoch 2 loss 1.36455:  79%|███████▊  | 22/28 [01:42<00:25,  4.22s/it]epoch 2 loss 1.36455:  82%|████████▏ | 23/28 [01:42<00:15,  3.08s/it]epoch 2 loss 1.35944:  82%|████████▏ | 23/28 [01:43<00:15,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3558[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best f1:0.3558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35944:  86%|████████▌ | 24/28 [01:48<00:15,  3.97s/it]epoch 2 loss 1.35559:  86%|████████▌ | 24/28 [01:49<00:15,  3.97s/it]epoch 2 loss 1.35559:  89%|████████▉ | 25/28 [01:49<00:08,  2.91s/it]epoch 2 loss 1.35276:  89%|████████▉ | 25/28 [01:49<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3275[0m
[32m  ********************[0m
[32m  Best f1:0.3589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35276:  93%|█████████▎| 26/28 [01:55<00:07,  3.84s/it]epoch 2 loss 1.34741:  93%|█████████▎| 26/28 [01:55<00:07,  3.84s/it]epoch 2 loss 1.34741:  96%|█████████▋| 27/28 [01:55<00:02,  2.82s/it]epoch 2 loss 1.34583:  96%|█████████▋| 27/28 [01:55<00:02,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4755[0m
[32m  eval_recall = 0.3265[0m
[32m  ********************[0m
[32m  Best MCC:0.6381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34583: 100%|██████████| 28/28 [02:00<00:00,  3.41s/it]epoch 2 loss 1.34583: 100%|██████████| 28/28 [02:00<00:00,  4.30s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36452:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36452:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 3 loss 1.27:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]   [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3601[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.478[0m
[32m  eval_recall = 0.3285[0m
[32m  ********************[0m
[32m  Best f1:0.3601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 3 loss 1.26941:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 3 loss 1.26941:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 3 loss 1.25557:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4784[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25557:  14%|█▍        | 4/28 [00:12<01:29,  3.73s/it]epoch 3 loss 1.25598:  14%|█▍        | 4/28 [00:13<01:29,  3.73s/it]epoch 3 loss 1.25598:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it]epoch 3 loss 1.24342:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4878[0m
[32m  eval_recall = 0.3336[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.24342:  21%|██▏       | 6/28 [00:18<01:13,  3.33s/it]epoch 3 loss 1.23949:  21%|██▏       | 6/28 [00:18<01:13,  3.33s/it]epoch 3 loss 1.23949:  25%|██▌       | 7/28 [00:18<00:49,  2.37s/it]epoch 3 loss 1.23199:  25%|██▌       | 7/28 [00:19<00:49,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3665[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4927[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23199:  29%|██▊       | 8/28 [00:26<01:20,  4.05s/it]epoch 3 loss 1.2518:  29%|██▊       | 8/28 [00:26<01:20,  4.05s/it] epoch 3 loss 1.2518:  32%|███▏      | 9/28 [00:26<00:55,  2.91s/it]epoch 3 loss 1.25721:  32%|███▏      | 9/28 [00:27<00:55,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3672[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4903[0m
[32m  eval_recall = 0.3356[0m
[32m  ********************[0m
[32m  Best f1:0.3672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25721:  36%|███▌      | 10/28 [00:38<01:41,  5.66s/it]epoch 3 loss 1.26403:  36%|███▌      | 10/28 [00:38<01:41,  5.66s/it]epoch 3 loss 1.26403:  39%|███▉      | 11/28 [00:38<01:08,  4.06s/it]epoch 3 loss 1.25853:  39%|███▉      | 11/28 [00:39<01:08,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6622[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4891[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25853:  43%|████▎     | 12/28 [00:50<01:42,  6.41s/it]epoch 3 loss 1.26005:  43%|████▎     | 12/28 [00:51<01:42,  6.41s/it]epoch 3 loss 1.26005:  46%|████▋     | 13/28 [00:51<01:08,  4.60s/it]epoch 3 loss 1.26115:  46%|████▋     | 13/28 [00:51<01:08,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4877[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26115:  50%|█████     | 14/28 [01:02<01:33,  6.71s/it]epoch 3 loss 1.26114:  50%|█████     | 14/28 [01:03<01:33,  6.71s/it]epoch 3 loss 1.26114:  54%|█████▎    | 15/28 [01:03<01:02,  4.81s/it]epoch 3 loss 1.2641:  54%|█████▎    | 15/28 [01:03<01:02,  4.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3421[0m
[32m  ********************[0m
[32m  Best f1:0.3732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2641:  57%|█████▋    | 16/28 [01:12<01:15,  6.32s/it]epoch 3 loss 1.25738:  57%|█████▋    | 16/28 [01:13<01:15,  6.32s/it]epoch 3 loss 1.25738:  61%|██████    | 17/28 [01:13<00:50,  4.55s/it]epoch 3 loss 1.25518:  61%|██████    | 17/28 [01:13<00:50,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3742[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4849[0m
[32m  eval_recall = 0.3432[0m
[32m  ********************[0m
[32m  Best f1:0.3742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25518:  64%|██████▍   | 18/28 [01:24<01:05,  6.52s/it]epoch 3 loss 1.25173:  64%|██████▍   | 18/28 [01:24<01:05,  6.52s/it]epoch 3 loss 1.25173:  68%|██████▊   | 19/28 [01:24<00:42,  4.69s/it]epoch 3 loss 1.24609:  68%|██████▊   | 19/28 [01:25<00:42,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3744[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3434[0m
[32m  ********************[0m
[32m  Best f1:0.3744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24609:  71%|███████▏  | 20/28 [01:35<00:52,  6.57s/it]epoch 3 loss 1.24472:  71%|███████▏  | 20/28 [01:36<00:52,  6.57s/it]epoch 3 loss 1.24472:  75%|███████▌  | 21/28 [01:36<00:33,  4.73s/it]epoch 3 loss 1.24386:  75%|███████▌  | 21/28 [01:36<00:33,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3751[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4838[0m
[32m  eval_recall = 0.3441[0m
[32m  ********************[0m
[32m  Best f1:0.3751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.24386:  79%|███████▊  | 22/28 [01:43<00:32,  5.49s/it]epoch 3 loss 1.25016:  79%|███████▊  | 22/28 [01:44<00:32,  5.49s/it]epoch 3 loss 1.25016:  82%|████████▏ | 23/28 [01:44<00:19,  3.97s/it]epoch 3 loss 1.25161:  82%|████████▏ | 23/28 [01:44<00:19,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3759[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4839[0m
[32m  eval_recall = 0.345[0m
[32m  ********************[0m
[32m  Best f1:0.3759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25161:  86%|████████▌ | 24/28 [01:54<00:23,  6.00s/it]epoch 3 loss 1.2508:  86%|████████▌ | 24/28 [01:55<00:23,  6.00s/it] epoch 3 loss 1.2508:  89%|████████▉ | 25/28 [01:55<00:12,  4.32s/it]epoch 3 loss 1.24897:  89%|████████▉ | 25/28 [01:55<00:12,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3769[0m
[32m  eval_mcc = 0.6479[0m
[32m  eval_precision = 0.485[0m
[32m  eval_recall = 0.3458[0m
[32m  ********************[0m
[32m  Best f1:0.3769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24897:  93%|█████████▎| 26/28 [02:06<00:12,  6.31s/it]epoch 3 loss 1.2488:  93%|█████████▎| 26/28 [02:06<00:12,  6.31s/it] epoch 3 loss 1.2488:  96%|█████████▋| 27/28 [02:06<00:04,  4.55s/it]epoch 3 loss 1.25121:  96%|█████████▋| 27/28 [02:06<00:04,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4851[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.3771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25121: 100%|██████████| 28/28 [02:17<00:00,  6.47s/it]epoch 3 loss 1.25121: 100%|██████████| 28/28 [02:17<00:00,  4.91s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11438:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11438:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.18585:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6486[0m
[32m  eval_precision = 0.4852[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best MCC:0.6486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18585:   7%|▋         | 2/28 [00:06<01:38,  3.80s/it]epoch 4 loss 1.18469:   7%|▋         | 2/28 [00:07<01:38,  3.80s/it]epoch 4 loss 1.18469:  11%|█         | 3/28 [00:07<00:56,  2.26s/it]epoch 4 loss 1.19848:  11%|█         | 3/28 [00:07<00:56,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3772[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3466[0m
[32m  ********************[0m
[32m  Best f1:0.3772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19848:  14%|█▍        | 4/28 [00:17<02:12,  5.53s/it]epoch 4 loss 1.20121:  14%|█▍        | 4/28 [00:17<02:12,  5.53s/it]epoch 4 loss 1.20121:  18%|█▊        | 5/28 [00:17<01:24,  3.69s/it]epoch 4 loss 1.21386:  18%|█▊        | 5/28 [00:18<01:24,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3779[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.4964[0m
[32m  eval_recall = 0.3469[0m
[32m  ********************[0m
[32m  Best f1:0.3779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21386:  21%|██▏       | 6/28 [00:25<01:50,  5.02s/it]epoch 4 loss 1.2313:  21%|██▏       | 6/28 [00:25<01:50,  5.02s/it] epoch 4 loss 1.2313:  25%|██▌       | 7/28 [00:25<01:13,  3.52s/it]epoch 4 loss 1.22299:  25%|██▌       | 7/28 [00:26<01:13,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4978[0m
[32m  eval_recall = 0.3475[0m
[32m  ********************[0m
[32m  Best f1:0.3785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22299:  29%|██▊       | 8/28 [00:32<01:26,  4.33s/it]epoch 4 loss 1.21414:  29%|██▊       | 8/28 [00:32<01:26,  4.33s/it]epoch 4 loss 1.21414:  32%|███▏      | 9/28 [00:32<00:59,  3.11s/it]epoch 4 loss 1.22429:  32%|███▏      | 9/28 [00:32<00:59,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3777[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3474[0m
[32m  ********************[0m
[32m  Best MCC:0.6507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22429:  36%|███▌      | 10/28 [00:37<01:05,  3.66s/it]epoch 4 loss 1.22504:  36%|███▌      | 10/28 [00:37<01:05,  3.66s/it]epoch 4 loss 1.22504:  39%|███▉      | 11/28 [00:37<00:45,  2.66s/it]epoch 4 loss 1.22293:  39%|███▉      | 11/28 [00:38<00:45,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3805[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4985[0m
[32m  eval_recall = 0.3492[0m
[32m  ********************[0m
[32m  Best f1:0.3805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22293:  43%|████▎     | 12/28 [00:43<00:58,  3.64s/it]epoch 4 loss 1.21886:  43%|████▎     | 12/28 [00:44<00:58,  3.64s/it]epoch 4 loss 1.21886:  46%|████▋     | 13/28 [00:44<00:40,  2.67s/it]epoch 4 loss 1.2311:  46%|████▋     | 13/28 [00:44<00:40,  2.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3804[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4978[0m
[32m  eval_recall = 0.3494[0m

epoch 4 loss 1.2311:  50%|█████     | 14/28 [00:47<00:42,  3.01s/it]epoch 4 loss 1.23212:  50%|█████     | 14/28 [00:48<00:42,  3.01s/it]epoch 4 loss 1.23212:  54%|█████▎    | 15/28 [00:48<00:28,  2.22s/it]epoch 4 loss 1.22606:  54%|█████▎    | 15/28 [00:48<00:28,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3833[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.509[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best f1:0.3833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22606:  57%|█████▋    | 16/28 [00:54<00:40,  3.38s/it]epoch 4 loss 1.21876:  57%|█████▋    | 16/28 [00:54<00:40,  3.38s/it]epoch 4 loss 1.21876:  61%|██████    | 17/28 [00:54<00:27,  2.49s/it]epoch 4 loss 1.21464:  61%|██████    | 17/28 [00:55<00:27,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3831[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.5067[0m
[32m  eval_recall = 0.3514[0m

epoch 4 loss 1.21464:  64%|██████▍   | 18/28 [00:58<00:28,  2.88s/it]epoch 4 loss 1.21465:  64%|██████▍   | 18/28 [00:58<00:28,  2.88s/it]epoch 4 loss 1.21465:  68%|██████▊   | 19/28 [00:58<00:19,  2.14s/it]epoch 4 loss 1.21384:  68%|██████▊   | 19/28 [00:59<00:19,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3831[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.5056[0m
[32m  eval_recall = 0.3515[0m

epoch 4 loss 1.21384:  71%|███████▏  | 20/28 [01:02<00:21,  2.64s/it]epoch 4 loss 1.21769:  71%|███████▏  | 20/28 [01:03<00:21,  2.64s/it]epoch 4 loss 1.21769:  75%|███████▌  | 21/28 [01:03<00:13,  1.97s/it]epoch 4 loss 1.22089:  75%|███████▌  | 21/28 [01:03<00:13,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6513[0m
[32m  eval_precision = 0.5056[0m
[32m  eval_recall = 0.3515[0m
[32m  ********************[0m
[32m  Best MCC:0.6513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22089:  79%|███████▊  | 22/28 [01:07<00:16,  2.79s/it]epoch 4 loss 1.21522:  79%|███████▊  | 22/28 [01:08<00:16,  2.79s/it]epoch 4 loss 1.21522:  82%|████████▏ | 23/28 [01:08<00:10,  2.07s/it]epoch 4 loss 1.21368:  82%|████████▏ | 23/28 [01:08<00:10,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.67[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.5054[0m
[32m  eval_recall = 0.3515[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21368:  86%|████████▌ | 24/28 [01:12<00:11,  2.85s/it]epoch 4 loss 1.21145:  86%|████████▌ | 24/28 [01:13<00:11,  2.85s/it]epoch 4 loss 1.21145:  89%|████████▉ | 25/28 [01:13<00:06,  2.12s/it]epoch 4 loss 1.21345:  89%|████████▉ | 25/28 [01:13<00:06,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3832[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.5055[0m
[32m  eval_recall = 0.3516[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21345:  93%|█████████▎| 26/28 [01:18<00:05,  2.88s/it]epoch 4 loss 1.21213:  93%|█████████▎| 26/28 [01:18<00:05,  2.88s/it]epoch 4 loss 1.21213:  96%|█████████▋| 27/28 [01:18<00:02,  2.14s/it]epoch 4 loss 1.21711:  96%|█████████▋| 27/28 [01:18<00:02,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3832[0m
[32m  eval_mcc = 0.6516[0m
[32m  eval_precision = 0.5055[0m
[32m  eval_recall = 0.3517[0m
[32m  ********************[0m
[32m  Best MCC:0.6516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21711: 100%|██████████| 28/28 [01:22<00:00,  2.85s/it]epoch 4 loss 1.21711: 100%|██████████| 28/28 [01:22<00:00,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3833[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.509[0m
[32m  eval_recall = 0.3514[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.69it/s] 40%|████      | 4/10 [00:01<00:02,  2.71it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.344[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.314[0m

