[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/plm/saved_codebertmodels/4/layer_5', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.16368:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0015[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0018[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.16368:   7%|▋         | 1/14 [00:05<01:07,  5.19s/it]epoch 0 loss 5.17343:   7%|▋         | 1/14 [00:05<01:07,  5.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0017[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.001[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.17343:  14%|█▍        | 2/14 [00:10<01:01,  5.13s/it]epoch 0 loss 5.16874:  14%|█▍        | 2/14 [00:11<01:01,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0021[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0008[0m
[32m  eval_precision = 0.0031[0m
[32m  eval_recall = 0.0027[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.16874:  21%|██▏       | 3/14 [00:15<00:56,  5.13s/it]epoch 0 loss 5.15882:  21%|██▏       | 3/14 [00:16<00:56,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0036[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0003[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15882:  29%|██▊       | 4/14 [00:21<00:53,  5.36s/it]epoch 0 loss 5.14523:  29%|██▊       | 4/14 [00:21<00:53,  5.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0066[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0051[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.14523:  36%|███▌      | 5/14 [00:27<00:50,  5.58s/it]epoch 0 loss 5.12587:  36%|███▌      | 5/14 [00:27<00:50,  5.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0242[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.0203[0m
[32m  eval_precision = 0.0152[0m
[32m  eval_recall = 0.0151[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12587:  43%|████▎     | 6/14 [00:33<00:45,  5.73s/it]epoch 0 loss 5.10477:  43%|████▎     | 6/14 [00:33<00:45,  5.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0388[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.034[0m
[32m  eval_precision = 0.0299[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10477:  50%|█████     | 7/14 [00:39<00:42,  6.08s/it]epoch 0 loss 5.07804:  50%|█████     | 7/14 [00:40<00:42,  6.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0627[0m
[32m  eval_f1 = 0.0195[0m
[32m  eval_mcc = 0.0566[0m
[32m  eval_precision = 0.0415[0m
[32m  eval_recall = 0.0316[0m
[32m  ********************[0m
[32m  Best f1:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07804:  57%|█████▋    | 8/14 [00:46<00:37,  6.29s/it]epoch 0 loss 5.04737:  57%|█████▋    | 8/14 [00:47<00:37,  6.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1086[0m
[32m  eval_f1 = 0.0352[0m
[32m  eval_mcc = 0.1014[0m
[32m  eval_precision = 0.0527[0m
[32m  eval_recall = 0.0518[0m
[32m  ********************[0m
[32m  Best f1:0.0352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04737:  64%|██████▍   | 9/14 [00:53<00:32,  6.40s/it]epoch 0 loss 5.01437:  64%|██████▍   | 9/14 [00:54<00:32,  6.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1619[0m
[32m  eval_f1 = 0.0483[0m
[32m  eval_mcc = 0.1536[0m
[32m  eval_precision = 0.0624[0m
[32m  eval_recall = 0.0711[0m
[32m  ********************[0m
[32m  Best f1:0.0483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01437:  71%|███████▏  | 10/14 [01:00<00:26,  6.53s/it]epoch 0 loss 4.97627:  71%|███████▏  | 10/14 [01:00<00:26,  6.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.215[0m
[32m  eval_f1 = 0.067[0m
[32m  eval_mcc = 0.2056[0m
[32m  eval_precision = 0.0947[0m
[32m  eval_recall = 0.0946[0m
[32m  ********************[0m
[32m  Best f1:0.067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97627:  79%|███████▊  | 11/14 [01:10<00:22,  7.65s/it]epoch 0 loss 4.93076:  79%|███████▊  | 11/14 [01:11<00:22,  7.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.284[0m
[32m  eval_f1 = 0.1039[0m
[32m  eval_mcc = 0.274[0m
[32m  eval_precision = 0.1521[0m
[32m  eval_recall = 0.132[0m
[32m  ********************[0m
[32m  Best f1:0.1039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93076:  86%|████████▌ | 12/14 [01:19<00:16,  8.14s/it]epoch 0 loss 4.88282:  86%|████████▌ | 12/14 [01:20<00:16,  8.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3434[0m
[32m  eval_f1 = 0.1339[0m
[32m  eval_mcc = 0.3324[0m
[32m  eval_precision = 0.1846[0m
[32m  eval_recall = 0.1634[0m
[32m  ********************[0m
[32m  Best f1:0.1339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88282:  93%|█████████▎| 13/14 [01:29<00:08,  8.63s/it]epoch 0 loss 4.82853:  93%|█████████▎| 13/14 [01:29<00:08,  8.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4082[0m
[32m  eval_f1 = 0.1769[0m
[32m  eval_mcc = 0.3969[0m
[32m  eval_precision = 0.242[0m
[32m  eval_recall = 0.2059[0m
[32m  ********************[0m
[32m  Best f1:0.1769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82853: 100%|██████████| 14/14 [01:36<00:00,  8.33s/it]epoch 0 loss 4.82853: 100%|██████████| 14/14 [01:36<00:00,  6.93s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 3.97444:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4675[0m
[32m  eval_f1 = 0.2116[0m
[32m  eval_mcc = 0.456[0m
[32m  eval_precision = 0.2807[0m
[32m  eval_recall = 0.237[0m
[32m  ********************[0m
[32m  Best f1:0.2116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.97444:   7%|▋         | 1/14 [00:09<02:06,  9.70s/it]epoch 1 loss 3.88366:   7%|▋         | 1/14 [00:10<02:06,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5113[0m
[32m  eval_f1 = 0.2351[0m
[32m  eval_mcc = 0.4996[0m
[32m  eval_precision = 0.3017[0m
[32m  eval_recall = 0.2574[0m
[32m  ********************[0m
[32m  Best f1:0.2351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88366:  14%|█▍        | 2/14 [00:17<01:44,  8.72s/it]epoch 1 loss 3.81425:  14%|█▍        | 2/14 [00:18<01:44,  8.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.557[0m
[32m  eval_f1 = 0.2516[0m
[32m  eval_mcc = 0.5448[0m
[32m  eval_precision = 0.3285[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.81425:  21%|██▏       | 3/14 [00:26<01:35,  8.65s/it]epoch 1 loss 3.73016:  21%|██▏       | 3/14 [00:27<01:35,  8.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5974[0m
[32m  eval_f1 = 0.2696[0m
[32m  eval_mcc = 0.585[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2817[0m
[32m  ********************[0m
[32m  Best f1:0.2696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.73016:  29%|██▊       | 4/14 [00:35<01:27,  8.77s/it]epoch 1 loss 3.65465:  29%|██▊       | 4/14 [00:36<01:27,  8.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6367[0m
[32m  eval_f1 = 0.2868[0m
[32m  eval_mcc = 0.624[0m
[32m  eval_precision = 0.3812[0m
[32m  eval_recall = 0.2935[0m
[32m  ********************[0m
[32m  Best f1:0.2868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.65465:  36%|███▌      | 5/14 [00:44<01:21,  9.03s/it]epoch 1 loss 3.57941:  36%|███▌      | 5/14 [00:45<01:21,  9.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.298[0m
[32m  eval_mcc = 0.6584[0m
[32m  eval_precision = 0.3893[0m
[32m  eval_recall = 0.3009[0m
[32m  ********************[0m
[32m  Best f1:0.298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.57941:  43%|████▎     | 6/14 [00:52<01:09,  8.68s/it]epoch 1 loss 3.51484:  43%|████▎     | 6/14 [00:53<01:09,  8.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.698[0m
[32m  eval_f1 = 0.3071[0m
[32m  eval_mcc = 0.6851[0m
[32m  eval_precision = 0.4042[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.51484:  50%|█████     | 7/14 [00:59<00:57,  8.17s/it]epoch 1 loss 3.4424:  50%|█████     | 7/14 [01:00<00:57,  8.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7192[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.7065[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.4424:  57%|█████▋    | 8/14 [01:06<00:47,  7.84s/it]epoch 1 loss 3.37784:  57%|█████▋    | 8/14 [01:07<00:47,  7.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7385[0m
[32m  eval_f1 = 0.3232[0m
[32m  eval_mcc = 0.7261[0m
[32m  eval_precision = 0.4109[0m
[32m  eval_recall = 0.3177[0m
[32m  ********************[0m
[32m  Best f1:0.3232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.37784:  64%|██████▍   | 9/14 [01:16<00:42,  8.43s/it]epoch 1 loss 3.3058:  64%|██████▍   | 9/14 [01:17<00:42,  8.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7541[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.7421[0m
[32m  eval_precision = 0.4271[0m
[32m  eval_recall = 0.3214[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.3058:  71%|███████▏  | 10/14 [01:25<00:34,  8.54s/it]epoch 1 loss 3.24471:  71%|███████▏  | 10/14 [01:26<00:34,  8.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7661[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.7545[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3249[0m
[32m  ********************[0m
[32m  Best f1:0.334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.24471:  79%|███████▊  | 11/14 [01:35<00:26,  8.87s/it]epoch 1 loss 3.18253:  79%|███████▊  | 11/14 [01:35<00:26,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7762[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.765[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3293[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.18253:  86%|████████▌ | 12/14 [01:43<00:17,  8.60s/it]epoch 1 loss 3.12475:  86%|████████▌ | 12/14 [01:43<00:17,  8.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7847[0m
[32m  eval_f1 = 0.3466[0m
[32m  eval_mcc = 0.7739[0m
[32m  eval_precision = 0.4452[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best f1:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.12475:  93%|█████████▎| 13/14 [01:52<00:08,  8.86s/it]epoch 1 loss 3.06733:  93%|█████████▎| 13/14 [01:53<00:08,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7908[0m
[32m  eval_f1 = 0.3512[0m
[32m  eval_mcc = 0.7803[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.338[0m
[32m  ********************[0m
[32m  Best f1:0.3512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.06733: 100%|██████████| 14/14 [02:00<00:00,  8.59s/it]epoch 1 loss 3.06733: 100%|██████████| 14/14 [02:00<00:00,  8.61s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.22422:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7967[0m
[32m  eval_f1 = 0.3566[0m
[32m  eval_mcc = 0.7864[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3428[0m
[32m  ********************[0m
[32m  Best f1:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.22422:   7%|▋         | 1/14 [00:06<01:26,  6.67s/it]epoch 2 loss 2.14746:   7%|▋         | 1/14 [00:07<01:26,  6.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8009[0m
[32m  eval_f1 = 0.36[0m
[32m  eval_mcc = 0.7908[0m
[32m  eval_precision = 0.4503[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.36[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.14746:  14%|█▍        | 2/14 [00:13<01:20,  6.71s/it]epoch 2 loss 2.12393:  14%|█▍        | 2/14 [00:14<01:20,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8048[0m
[32m  eval_f1 = 0.3633[0m
[32m  eval_mcc = 0.7949[0m
[32m  eval_precision = 0.4415[0m
[32m  eval_recall = 0.3484[0m
[32m  ********************[0m
[32m  Best f1:0.3633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.12393:  21%|██▏       | 3/14 [00:19<01:13,  6.65s/it]epoch 2 loss 2.0766:  21%|██▏       | 3/14 [00:20<01:13,  6.65s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8085[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.7988[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.3504[0m
[32m  ********************[0m
[32m  Best f1:0.3657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.0766:  29%|██▊       | 4/14 [00:26<01:07,  6.75s/it]epoch 2 loss 2.06039:  29%|██▊       | 4/14 [00:27<01:07,  6.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.812[0m
[32m  eval_f1 = 0.3695[0m
[32m  eval_mcc = 0.8025[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3539[0m
[32m  ********************[0m
[32m  Best f1:0.3695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.06039:  36%|███▌      | 5/14 [00:32<00:57,  6.34s/it]epoch 2 loss 2.03205:  36%|███▌      | 5/14 [00:33<00:57,  6.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8151[0m
[32m  eval_f1 = 0.3718[0m
[32m  eval_mcc = 0.8057[0m
[32m  eval_precision = 0.4456[0m
[32m  eval_recall = 0.3559[0m
[32m  ********************[0m
[32m  Best f1:0.3718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.03205:  43%|████▎     | 6/14 [00:38<00:50,  6.27s/it]epoch 2 loss 2.00189:  43%|████▎     | 6/14 [00:39<00:50,  6.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8178[0m
[32m  eval_f1 = 0.3739[0m
[32m  eval_mcc = 0.8086[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.3575[0m
[32m  ********************[0m
[32m  Best f1:0.3739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.00189:  50%|█████     | 7/14 [00:44<00:44,  6.30s/it]epoch 2 loss 1.96569:  50%|█████     | 7/14 [00:45<00:44,  6.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8206[0m
[32m  eval_f1 = 0.3788[0m
[32m  eval_mcc = 0.8115[0m
[32m  eval_precision = 0.4588[0m
[32m  eval_recall = 0.3618[0m
[32m  ********************[0m
[32m  Best f1:0.3788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.96569:  57%|█████▋    | 8/14 [00:51<00:37,  6.31s/it]epoch 2 loss 1.93523:  57%|█████▋    | 8/14 [00:52<00:37,  6.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8229[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.8139[0m
[32m  eval_precision = 0.4595[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.93523:  64%|██████▍   | 9/14 [00:57<00:31,  6.32s/it]epoch 2 loss 1.90427:  64%|██████▍   | 9/14 [00:58<00:31,  6.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8248[0m
[32m  eval_f1 = 0.3834[0m
[32m  eval_mcc = 0.8159[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3659[0m
[32m  ********************[0m
[32m  Best f1:0.3834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.90427:  71%|███████▏  | 10/14 [01:04<00:25,  6.35s/it]epoch 2 loss 1.87215:  71%|███████▏  | 10/14 [01:04<00:25,  6.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8267[0m
[32m  eval_f1 = 0.387[0m
[32m  eval_mcc = 0.8178[0m
[32m  eval_precision = 0.4713[0m
[32m  eval_recall = 0.3693[0m
[32m  ********************[0m
[32m  Best f1:0.387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.87215:  79%|███████▊  | 11/14 [01:10<00:19,  6.35s/it]epoch 2 loss 1.83712:  79%|███████▊  | 11/14 [01:11<00:19,  6.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8281[0m
[32m  eval_f1 = 0.3893[0m
[32m  eval_mcc = 0.8193[0m
[32m  eval_precision = 0.472[0m
[32m  eval_recall = 0.371[0m
[32m  ********************[0m
[32m  Best f1:0.3893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.83712:  86%|████████▌ | 12/14 [01:18<00:13,  6.88s/it]epoch 2 loss 1.80767:  86%|████████▌ | 12/14 [01:19<00:13,  6.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8296[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.8209[0m
[32m  eval_precision = 0.4719[0m
[32m  eval_recall = 0.373[0m
[32m  ********************[0m
[32m  Best f1:0.3912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.80767:  93%|█████████▎| 13/14 [01:25<00:06,  6.95s/it]epoch 2 loss 1.78121:  93%|█████████▎| 13/14 [01:26<00:06,  6.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8307[0m
[32m  eval_f1 = 0.3928[0m
[32m  eval_mcc = 0.822[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3743[0m
[32m  ********************[0m
[32m  Best f1:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.78121: 100%|██████████| 14/14 [01:32<00:00,  7.02s/it]epoch 2 loss 1.78121: 100%|██████████| 14/14 [01:32<00:00,  6.63s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.40543:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8319[0m
[32m  eval_f1 = 0.395[0m
[32m  eval_mcc = 0.8233[0m
[32m  eval_precision = 0.4833[0m
[32m  eval_recall = 0.3769[0m
[32m  ********************[0m
[32m  Best f1:0.395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40543:   7%|▋         | 1/14 [00:06<01:20,  6.18s/it]epoch 3 loss 1.37555:   7%|▋         | 1/14 [00:06<01:20,  6.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8331[0m
[32m  eval_f1 = 0.3978[0m
[32m  eval_mcc = 0.8245[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3799[0m
[32m  ********************[0m
[32m  Best f1:0.3978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37555:  14%|█▍        | 2/14 [00:12<01:16,  6.36s/it]epoch 3 loss 1.35793:  14%|█▍        | 2/14 [00:13<01:16,  6.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.834[0m
[32m  eval_f1 = 0.3994[0m
[32m  eval_mcc = 0.8255[0m
[32m  eval_precision = 0.4943[0m
[32m  eval_recall = 0.3814[0m
[32m  ********************[0m
[32m  Best f1:0.3994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35793:  21%|██▏       | 3/14 [00:21<01:20,  7.30s/it]epoch 3 loss 1.334:  21%|██▏       | 3/14 [00:21<01:20,  7.30s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8346[0m
[32m  eval_f1 = 0.4001[0m
[32m  eval_mcc = 0.8261[0m
[32m  eval_precision = 0.4985[0m
[32m  eval_recall = 0.3822[0m
[32m  ********************[0m
[32m  Best f1:0.4001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.334:  29%|██▊       | 4/14 [00:27<01:09,  6.90s/it]epoch 3 loss 1.34198:  29%|██▊       | 4/14 [00:28<01:09,  6.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8355[0m
[32m  eval_f1 = 0.4017[0m
[32m  eval_mcc = 0.8271[0m
[32m  eval_precision = 0.4972[0m
[32m  eval_recall = 0.3836[0m
[32m  ********************[0m
[32m  Best f1:0.4017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34198:  36%|███▌      | 5/14 [00:36<01:10,  7.80s/it]epoch 3 loss 1.32867:  36%|███▌      | 5/14 [00:37<01:10,  7.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8365[0m
[32m  eval_f1 = 0.4041[0m
[32m  eval_mcc = 0.8281[0m
[32m  eval_precision = 0.4977[0m
[32m  eval_recall = 0.3859[0m
[32m  ********************[0m
[32m  Best f1:0.4041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32867:  43%|████▎     | 6/14 [00:43<00:59,  7.41s/it]epoch 3 loss 1.3153:  43%|████▎     | 6/14 [00:44<00:59,  7.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8375[0m
[32m  eval_f1 = 0.4052[0m
[32m  eval_mcc = 0.8292[0m
[32m  eval_precision = 0.5081[0m
[32m  eval_recall = 0.3872[0m
[32m  ********************[0m
[32m  Best f1:0.4052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3153:  50%|█████     | 7/14 [00:54<00:59,  8.46s/it]epoch 3 loss 1.30385:  50%|█████     | 7/14 [00:54<00:59,  8.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8384[0m
[32m  eval_f1 = 0.4061[0m
[32m  eval_mcc = 0.8301[0m
[32m  eval_precision = 0.5086[0m
[32m  eval_recall = 0.3881[0m
[32m  ********************[0m
[32m  Best f1:0.4061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30385:  57%|█████▋    | 8/14 [01:04<00:55,  9.24s/it]epoch 3 loss 1.28563:  57%|█████▋    | 8/14 [01:05<00:55,  9.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8395[0m
[32m  eval_f1 = 0.4082[0m
[32m  eval_mcc = 0.8312[0m
[32m  eval_precision = 0.5185[0m
[32m  eval_recall = 0.3901[0m
[32m  ********************[0m
[32m  Best f1:0.4082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28563:  64%|██████▍   | 9/14 [01:15<00:48,  9.70s/it]epoch 3 loss 1.26756:  64%|██████▍   | 9/14 [01:16<00:48,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8402[0m
[32m  eval_f1 = 0.4093[0m
[32m  eval_mcc = 0.832[0m
[32m  eval_precision = 0.5185[0m
[32m  eval_recall = 0.3911[0m
[32m  ********************[0m
[32m  Best f1:0.4093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26756:  71%|███████▏  | 10/14 [01:24<00:37,  9.41s/it]epoch 3 loss 1.25498:  71%|███████▏  | 10/14 [01:25<00:37,  9.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8414[0m
[32m  eval_f1 = 0.4103[0m
[32m  eval_mcc = 0.8332[0m
[32m  eval_precision = 0.5191[0m
[32m  eval_recall = 0.3922[0m
[32m  ********************[0m
[32m  Best f1:0.4103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25498:  79%|███████▊  | 11/14 [01:35<00:29,  9.93s/it]epoch 3 loss 1.25103:  79%|███████▊  | 11/14 [01:36<00:29,  9.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8425[0m
[32m  eval_f1 = 0.4123[0m
[32m  eval_mcc = 0.8343[0m
[32m  eval_precision = 0.5195[0m
[32m  eval_recall = 0.3939[0m
[32m  ********************[0m
[32m  Best f1:0.4123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25103:  86%|████████▌ | 12/14 [01:43<00:18,  9.26s/it]epoch 3 loss 1.24078:  86%|████████▌ | 12/14 [01:44<00:18,  9.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8433[0m
[32m  eval_f1 = 0.4138[0m
[32m  eval_mcc = 0.8352[0m
[32m  eval_precision = 0.5191[0m
[32m  eval_recall = 0.3951[0m
[32m  ********************[0m
[32m  Best f1:0.4138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24078:  93%|█████████▎| 13/14 [01:54<00:09,  9.85s/it]epoch 3 loss 1.2343:  93%|█████████▎| 13/14 [01:55<00:09,  9.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8444[0m
[32m  eval_f1 = 0.4159[0m
[32m  eval_mcc = 0.8363[0m
[32m  eval_precision = 0.5193[0m
[32m  eval_recall = 0.3969[0m
[32m  ********************[0m
[32m  Best f1:0.4159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2343: 100%|██████████| 14/14 [02:01<00:00,  9.09s/it]epoch 3 loss 1.2343: 100%|██████████| 14/14 [02:01<00:00,  8.70s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.10759:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8455[0m
[32m  eval_f1 = 0.4173[0m
[32m  eval_mcc = 0.8375[0m
[32m  eval_precision = 0.5168[0m
[32m  eval_recall = 0.3982[0m
[32m  ********************[0m
[32m  Best f1:0.4173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.10759:   7%|▋         | 1/14 [00:08<01:51,  8.57s/it]epoch 4 loss 1.08195:   7%|▋         | 1/14 [00:09<01:51,  8.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8461[0m
[32m  eval_f1 = 0.4185[0m
[32m  eval_mcc = 0.8381[0m
[32m  eval_precision = 0.5169[0m
[32m  eval_recall = 0.3992[0m
[32m  ********************[0m
[32m  Best f1:0.4185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08195:  14%|█▍        | 2/14 [00:17<01:44,  8.75s/it]epoch 4 loss 1.07749:  14%|█▍        | 2/14 [00:18<01:44,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8467[0m
[32m  eval_f1 = 0.4194[0m
[32m  eval_mcc = 0.8387[0m
[32m  eval_precision = 0.5171[0m
[32m  eval_recall = 0.3999[0m
[32m  ********************[0m
[32m  Best f1:0.4194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07749:  21%|██▏       | 3/14 [00:26<01:36,  8.73s/it]epoch 4 loss 1.06699:  21%|██▏       | 3/14 [00:26<01:36,  8.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8474[0m
[32m  eval_f1 = 0.4201[0m
[32m  eval_mcc = 0.8394[0m
[32m  eval_precision = 0.5174[0m
[32m  eval_recall = 0.4007[0m
[32m  ********************[0m
[32m  Best f1:0.4201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.06699:  29%|██▊       | 4/14 [00:34<01:26,  8.61s/it]epoch 4 loss 1.06613:  29%|██▊       | 4/14 [00:35<01:26,  8.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8483[0m
[32m  eval_f1 = 0.421[0m
[32m  eval_mcc = 0.8404[0m
[32m  eval_precision = 0.512[0m
[32m  eval_recall = 0.4017[0m
[32m  ********************[0m
[32m  Best f1:0.421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.06613:  36%|███▌      | 5/14 [00:40<01:09,  7.75s/it]epoch 4 loss 1.05979:  36%|███▌      | 5/14 [00:41<01:09,  7.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8489[0m
[32m  eval_f1 = 0.4214[0m
[32m  eval_mcc = 0.8411[0m
[32m  eval_precision = 0.5119[0m
[32m  eval_recall = 0.4022[0m
[32m  ********************[0m
[32m  Best f1:0.4214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.05979:  43%|████▎     | 6/14 [00:48<01:02,  7.87s/it]epoch 4 loss 1.06228:  43%|████▎     | 6/14 [00:49<01:02,  7.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8495[0m
[32m  eval_f1 = 0.4217[0m
[32m  eval_mcc = 0.8417[0m
[32m  eval_precision = 0.5103[0m
[32m  eval_recall = 0.4026[0m
[32m  ********************[0m
[32m  Best f1:0.4217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.06228:  50%|█████     | 7/14 [00:55<00:53,  7.58s/it]epoch 4 loss 1.05057:  50%|█████     | 7/14 [00:56<00:53,  7.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8501[0m
[32m  eval_f1 = 0.4223[0m
[32m  eval_mcc = 0.8423[0m
[32m  eval_precision = 0.5105[0m
[32m  eval_recall = 0.4033[0m
[32m  ********************[0m
[32m  Best f1:0.4223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.05057:  57%|█████▋    | 8/14 [01:05<00:49,  8.25s/it]epoch 4 loss 1.03905:  57%|█████▋    | 8/14 [01:06<00:49,  8.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8505[0m
[32m  eval_f1 = 0.4227[0m
[32m  eval_mcc = 0.8427[0m
[32m  eval_precision = 0.5106[0m
[32m  eval_recall = 0.4037[0m
[32m  ********************[0m
[32m  Best f1:0.4227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03905:  64%|██████▍   | 9/14 [01:11<00:38,  7.64s/it]epoch 4 loss 1.03606:  64%|██████▍   | 9/14 [01:12<00:38,  7.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8509[0m
[32m  eval_f1 = 0.4233[0m
[32m  eval_mcc = 0.8432[0m
[32m  eval_precision = 0.5107[0m
[32m  eval_recall = 0.4043[0m
[32m  ********************[0m
[32m  Best f1:0.4233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03606:  71%|███████▏  | 10/14 [01:23<00:34,  8.74s/it]epoch 4 loss 1.03975:  71%|███████▏  | 10/14 [01:23<00:34,  8.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8513[0m
[32m  eval_f1 = 0.4237[0m
[32m  eval_mcc = 0.8436[0m
[32m  eval_precision = 0.5108[0m
[32m  eval_recall = 0.4047[0m
[32m  ********************[0m
[32m  Best f1:0.4237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03975:  79%|███████▊  | 11/14 [01:34<00:28,  9.47s/it]epoch 4 loss 1.03223:  79%|███████▊  | 11/14 [01:35<00:28,  9.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8514[0m
[32m  eval_f1 = 0.4239[0m
[32m  eval_mcc = 0.8437[0m
[32m  eval_precision = 0.5108[0m
[32m  eval_recall = 0.4049[0m
[32m  ********************[0m
[32m  Best f1:0.4239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03223:  86%|████████▌ | 12/14 [01:44<00:19,  9.79s/it]epoch 4 loss 1.03003:  86%|████████▌ | 12/14 [01:45<00:19,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8516[0m
[32m  eval_f1 = 0.424[0m
[32m  eval_mcc = 0.8439[0m
[32m  eval_precision = 0.5108[0m
[32m  eval_recall = 0.405[0m
[32m  ********************[0m
[32m  Best f1:0.424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03003:  93%|█████████▎| 13/14 [01:53<00:09,  9.38s/it]epoch 4 loss 1.0279:  93%|█████████▎| 13/14 [01:53<00:09,  9.38s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8518[0m
[32m  eval_f1 = 0.4243[0m
[32m  eval_mcc = 0.8441[0m
[32m  eval_precision = 0.5118[0m
[32m  eval_recall = 0.4052[0m
[32m  ********************[0m
[32m  Best f1:0.4243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.0279: 100%|██████████| 14/14 [02:04<00:00,  9.88s/it]epoch 4 loss 1.0279: 100%|██████████| 14/14 [02:04<00:00,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8518[0m
[32m  eval_f1 = 0.4243[0m
[32m  eval_mcc = 0.8441[0m
[32m  eval_precision = 0.5118[0m
[32m  eval_recall = 0.4052[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8404[0m
[32m  eval_f1 = 0.3865[0m
[32m  eval_mcc = 0.8327[0m
[32m  eval_precision = 0.5076[0m
[32m  eval_recall = 0.3661[0m

