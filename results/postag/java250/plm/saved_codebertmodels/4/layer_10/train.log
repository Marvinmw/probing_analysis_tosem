[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/plm/saved_codebertmodels/4/layer_10', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.17939:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.17939:   7%|▋         | 1/14 [00:05<01:07,  5.18s/it]epoch 0 loss 5.1852:   7%|▋         | 1/14 [00:05<01:07,  5.18s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0015[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0012[0m
[32m  eval_precision = 0.0019[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.1852:  14%|█▍        | 2/14 [00:10<01:01,  5.13s/it]epoch 0 loss 5.17856:  14%|█▍        | 2/14 [00:11<01:01,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.002[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.17856:  21%|██▏       | 3/14 [00:15<00:56,  5.12s/it]epoch 0 loss 5.16583:  21%|██▏       | 3/14 [00:16<00:56,  5.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0034[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = -0.0007[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.16583:  29%|██▊       | 4/14 [00:20<00:51,  5.12s/it]epoch 0 loss 5.14907:  29%|██▊       | 4/14 [00:21<00:51,  5.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0067[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0013[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.0056[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.14907:  36%|███▌      | 5/14 [00:26<00:49,  5.46s/it]epoch 0 loss 5.12529:  36%|███▌      | 5/14 [00:27<00:49,  5.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0211[0m
[32m  eval_f1 = 0.008[0m
[32m  eval_mcc = 0.0135[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12529:  43%|████▎     | 6/14 [00:33<00:47,  5.90s/it]epoch 0 loss 5.09645:  43%|████▎     | 6/14 [00:34<00:47,  5.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0488[0m
[32m  eval_f1 = 0.0174[0m
[32m  eval_mcc = 0.0387[0m
[32m  eval_precision = 0.0363[0m
[32m  eval_recall = 0.0241[0m
[32m  ********************[0m
[32m  Best f1:0.0174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09645:  50%|█████     | 7/14 [00:40<00:43,  6.19s/it]epoch 0 loss 5.05996:  50%|█████     | 7/14 [00:40<00:43,  6.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.086[0m
[32m  eval_f1 = 0.0297[0m
[32m  eval_mcc = 0.0732[0m
[32m  eval_precision = 0.0455[0m
[32m  eval_recall = 0.0426[0m
[32m  ********************[0m
[32m  Best f1:0.0297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05996:  57%|█████▋    | 8/14 [00:46<00:38,  6.36s/it]epoch 0 loss 5.01922:  57%|█████▋    | 8/14 [00:47<00:38,  6.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1378[0m
[32m  eval_f1 = 0.0422[0m
[32m  eval_mcc = 0.1231[0m
[32m  eval_precision = 0.0525[0m
[32m  eval_recall = 0.0608[0m
[32m  ********************[0m
[32m  Best f1:0.0422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01922:  64%|██████▍   | 9/14 [00:52<00:31,  6.25s/it]epoch 0 loss 4.97481:  64%|██████▍   | 9/14 [00:53<00:31,  6.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1992[0m
[32m  eval_f1 = 0.0564[0m
[32m  eval_mcc = 0.1843[0m
[32m  eval_precision = 0.0649[0m
[32m  eval_recall = 0.081[0m
[32m  ********************[0m
[32m  Best f1:0.0564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97481:  71%|███████▏  | 10/14 [00:59<00:25,  6.29s/it]epoch 0 loss 4.92427:  71%|███████▏  | 10/14 [01:00<00:25,  6.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2675[0m
[32m  eval_f1 = 0.083[0m
[32m  eval_mcc = 0.2539[0m
[32m  eval_precision = 0.1102[0m
[32m  eval_recall = 0.1097[0m
[32m  ********************[0m
[32m  Best f1:0.083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92427:  79%|███████▊  | 11/14 [01:05<00:19,  6.41s/it]epoch 0 loss 4.86567:  79%|███████▊  | 11/14 [01:06<00:19,  6.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3316[0m
[32m  eval_f1 = 0.1076[0m
[32m  eval_mcc = 0.3191[0m
[32m  eval_precision = 0.144[0m
[32m  eval_recall = 0.1331[0m
[32m  ********************[0m
[32m  Best f1:0.1076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86567:  86%|████████▌ | 12/14 [01:12<00:13,  6.51s/it]epoch 0 loss 4.80373:  86%|████████▌ | 12/14 [01:13<00:13,  6.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3918[0m
[32m  eval_f1 = 0.1443[0m
[32m  eval_mcc = 0.3793[0m
[32m  eval_precision = 0.1928[0m
[32m  eval_recall = 0.1681[0m
[32m  ********************[0m
[32m  Best f1:0.1443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80373:  93%|█████████▎| 13/14 [01:19<00:06,  6.56s/it]epoch 0 loss 4.73448:  93%|█████████▎| 13/14 [01:19<00:06,  6.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4473[0m
[32m  eval_f1 = 0.1694[0m
[32m  eval_mcc = 0.4341[0m
[32m  eval_precision = 0.2315[0m
[32m  eval_recall = 0.1884[0m
[32m  ********************[0m
[32m  Best f1:0.1694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73448: 100%|██████████| 14/14 [01:25<00:00,  6.56s/it]epoch 0 loss 4.73448: 100%|██████████| 14/14 [01:25<00:00,  6.13s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 3.64363:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4948[0m
[32m  eval_f1 = 0.1996[0m
[32m  eval_mcc = 0.4806[0m
[32m  eval_precision = 0.2823[0m
[32m  eval_recall = 0.2141[0m
[32m  ********************[0m
[32m  Best f1:0.1996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.64363:   7%|▋         | 1/14 [00:08<01:48,  8.34s/it]epoch 1 loss 3.53416:   7%|▋         | 1/14 [00:09<01:48,  8.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5436[0m
[32m  eval_f1 = 0.2167[0m
[32m  eval_mcc = 0.5285[0m
[32m  eval_precision = 0.3008[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.2167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.53416:  14%|█▍        | 2/14 [00:20<02:06, 10.52s/it]epoch 1 loss 3.45344:  14%|█▍        | 2/14 [00:21<02:06, 10.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5864[0m
[32m  eval_f1 = 0.2297[0m
[32m  eval_mcc = 0.5706[0m
[32m  eval_precision = 0.3039[0m
[32m  eval_recall = 0.2369[0m
[32m  ********************[0m
[32m  Best f1:0.2297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.45344:  21%|██▏       | 3/14 [00:32<02:04, 11.31s/it]epoch 1 loss 3.35551:  21%|██▏       | 3/14 [00:33<02:04, 11.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.2401[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.3124[0m
[32m  eval_recall = 0.245[0m
[32m  ********************[0m
[32m  Best f1:0.2401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.35551:  29%|██▊       | 4/14 [00:45<01:58, 11.85s/it]epoch 1 loss 3.26705:  29%|██▊       | 4/14 [00:46<01:58, 11.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.249[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.3212[0m
[32m  eval_recall = 0.2515[0m
[32m  ********************[0m
[32m  Best f1:0.249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.26705:  36%|███▌      | 5/14 [00:57<01:46, 11.80s/it]epoch 1 loss 3.18067:  36%|███▌      | 5/14 [00:57<01:46, 11.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6962[0m
[32m  eval_f1 = 0.2595[0m
[32m  eval_mcc = 0.6805[0m
[32m  eval_precision = 0.3417[0m
[32m  eval_recall = 0.2599[0m
[32m  ********************[0m
[32m  Best f1:0.2595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.18067:  43%|████▎     | 6/14 [01:05<01:26, 10.79s/it]epoch 1 loss 3.1068:  43%|████▎     | 6/14 [01:06<01:26, 10.79s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7171[0m
[32m  eval_f1 = 0.2681[0m
[32m  eval_mcc = 0.7019[0m
[32m  eval_precision = 0.369[0m
[32m  eval_recall = 0.2659[0m
[32m  ********************[0m
[32m  Best f1:0.2681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.1068:  50%|█████     | 7/14 [01:17<01:17, 11.09s/it]epoch 1 loss 3.02595:  50%|█████     | 7/14 [01:18<01:17, 11.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7325[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.7177[0m
[32m  eval_precision = 0.3736[0m
[32m  eval_recall = 0.2698[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.02595:  57%|█████▋    | 8/14 [01:28<01:05, 10.93s/it]epoch 1 loss 2.95578:  57%|█████▋    | 8/14 [01:28<01:05, 10.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7442[0m
[32m  eval_f1 = 0.2803[0m
[32m  eval_mcc = 0.7299[0m
[32m  eval_precision = 0.3872[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best f1:0.2803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.95578:  64%|██████▍   | 9/14 [01:37<00:52, 10.59s/it]epoch 1 loss 2.87831:  64%|██████▍   | 9/14 [01:38<00:52, 10.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7529[0m
[32m  eval_f1 = 0.287[0m
[32m  eval_mcc = 0.7389[0m
[32m  eval_precision = 0.3935[0m
[32m  eval_recall = 0.2785[0m
[32m  ********************[0m
[32m  Best f1:0.287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.87831:  71%|███████▏  | 10/14 [01:49<00:43, 10.85s/it]epoch 1 loss 2.81344:  71%|███████▏  | 10/14 [01:50<00:43, 10.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7605[0m
[32m  eval_f1 = 0.2951[0m
[32m  eval_mcc = 0.747[0m
[32m  eval_precision = 0.3967[0m
[32m  eval_recall = 0.2844[0m
[32m  ********************[0m
[32m  Best f1:0.2951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.81344:  79%|███████▊  | 11/14 [01:58<00:30, 10.19s/it]epoch 1 loss 2.74828:  79%|███████▊  | 11/14 [01:58<00:30, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7674[0m
[32m  eval_f1 = 0.3038[0m
[32m  eval_mcc = 0.7543[0m
[32m  eval_precision = 0.4006[0m
[32m  eval_recall = 0.2919[0m
[32m  ********************[0m
[32m  Best f1:0.3038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.74828:  86%|████████▌ | 12/14 [02:08<00:20, 10.40s/it]epoch 1 loss 2.69066:  86%|████████▌ | 12/14 [02:09<00:20, 10.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7742[0m
[32m  eval_f1 = 0.3113[0m
[32m  eval_mcc = 0.7616[0m
[32m  eval_precision = 0.4015[0m
[32m  eval_recall = 0.2981[0m
[32m  ********************[0m
[32m  Best f1:0.3113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.69066:  93%|█████████▎| 13/14 [02:21<00:10, 10.90s/it]epoch 1 loss 2.63216:  93%|█████████▎| 13/14 [02:21<00:10, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7789[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.7665[0m
[32m  eval_precision = 0.4109[0m
[32m  eval_recall = 0.3026[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.63216: 100%|██████████| 14/14 [02:30<00:00, 10.45s/it]epoch 1 loss 2.63216: 100%|██████████| 14/14 [02:30<00:00, 10.75s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 1.77224:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.784[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.772[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.77224:   7%|▋         | 1/14 [00:11<02:28, 11.44s/it]epoch 2 loss 1.69823:   7%|▋         | 1/14 [00:12<02:28, 11.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.789[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.7773[0m
[32m  eval_precision = 0.4263[0m
[32m  eval_recall = 0.3117[0m
[32m  ********************[0m
[32m  Best f1:0.3274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69823:  14%|█▍        | 2/14 [00:22<02:11, 10.99s/it]epoch 2 loss 1.68563:  14%|█▍        | 2/14 [00:22<02:11, 10.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7946[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.7833[0m
[32m  eval_precision = 0.4269[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68563:  21%|██▏       | 3/14 [00:34<02:07, 11.56s/it]epoch 2 loss 1.64248:  21%|██▏       | 3/14 [00:35<02:07, 11.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7979[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.7868[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.3186[0m
[32m  ********************[0m
[32m  Best f1:0.3358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64248:  29%|██▊       | 4/14 [00:48<02:04, 12.41s/it]epoch 2 loss 1.63625:  29%|██▊       | 4/14 [00:48<02:04, 12.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.801[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.7902[0m
[32m  eval_precision = 0.435[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63625:  36%|███▌      | 5/14 [01:00<01:51, 12.43s/it]epoch 2 loss 1.61106:  36%|███▌      | 5/14 [01:01<01:51, 12.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8027[0m
[32m  eval_f1 = 0.3501[0m
[32m  eval_mcc = 0.7919[0m
[32m  eval_precision = 0.436[0m
[32m  eval_recall = 0.3306[0m
[32m  ********************[0m
[32m  Best f1:0.3501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61106:  43%|████▎     | 6/14 [01:12<01:36, 12.11s/it]epoch 2 loss 1.58427:  43%|████▎     | 6/14 [01:12<01:36, 12.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8048[0m
[32m  eval_f1 = 0.3556[0m
[32m  eval_mcc = 0.7942[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best f1:0.3556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58427:  50%|█████     | 7/14 [01:20<01:16, 10.92s/it]epoch 2 loss 1.5523:  50%|█████     | 7/14 [01:21<01:16, 10.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8068[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.7963[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5523:  57%|█████▋    | 8/14 [01:30<01:03, 10.57s/it]epoch 2 loss 1.5264:  57%|█████▋    | 8/14 [01:31<01:03, 10.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.809[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.7987[0m
[32m  eval_precision = 0.4671[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5264:  64%|██████▍   | 9/14 [01:39<00:50, 10.03s/it]epoch 2 loss 1.49893:  64%|██████▍   | 9/14 [01:39<00:50, 10.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.60it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8115[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.8013[0m
[32m  eval_precision = 0.4674[0m
[32m  eval_recall = 0.348[0m
[32m  ********************[0m
[32m  Best f1:0.3694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49893:  71%|███████▏  | 10/14 [01:50<00:41, 10.35s/it]epoch 2 loss 1.47144:  71%|███████▏  | 10/14 [01:51<00:41, 10.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.814[0m
[32m  eval_f1 = 0.3738[0m
[32m  eval_mcc = 0.8039[0m
[32m  eval_precision = 0.4696[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best f1:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47144:  79%|███████▊  | 11/14 [01:58<00:29,  9.83s/it]epoch 2 loss 1.44012:  79%|███████▊  | 11/14 [01:59<00:29,  9.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8157[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.8057[0m
[32m  eval_precision = 0.4718[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44012:  86%|████████▌ | 12/14 [02:10<00:20, 10.30s/it]epoch 2 loss 1.41392:  86%|████████▌ | 12/14 [02:11<00:20, 10.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8181[0m
[32m  eval_f1 = 0.3851[0m
[32m  eval_mcc = 0.8082[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3651[0m
[32m  ********************[0m
[32m  Best f1:0.3851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41392:  93%|█████████▎| 13/14 [02:21<00:10, 10.64s/it]epoch 2 loss 1.39192:  93%|█████████▎| 13/14 [02:22<00:10, 10.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8205[0m
[32m  eval_f1 = 0.3877[0m
[32m  eval_mcc = 0.8108[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3678[0m
[32m  ********************[0m
[32m  Best f1:0.3877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39192: 100%|██████████| 14/14 [02:30<00:00, 10.17s/it]epoch 2 loss 1.39192: 100%|██████████| 14/14 [02:30<00:00, 10.77s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.07605:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8227[0m
[32m  eval_f1 = 0.3906[0m
[32m  eval_mcc = 0.8131[0m
[32m  eval_precision = 0.4734[0m
[32m  eval_recall = 0.3708[0m
[32m  ********************[0m
[32m  Best f1:0.3906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.07605:   7%|▋         | 1/14 [00:09<02:07,  9.81s/it]epoch 3 loss 1.04944:   7%|▋         | 1/14 [00:10<02:07,  9.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8253[0m
[32m  eval_f1 = 0.3927[0m
[32m  eval_mcc = 0.8159[0m
[32m  eval_precision = 0.4731[0m
[32m  eval_recall = 0.3729[0m
[32m  ********************[0m
[32m  Best f1:0.3927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.04944:  14%|█▍        | 2/14 [00:19<01:57,  9.79s/it]epoch 3 loss 1.03499:  14%|█▍        | 2/14 [00:20<01:57,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.827[0m
[32m  eval_f1 = 0.3948[0m
[32m  eval_mcc = 0.8177[0m
[32m  eval_precision = 0.473[0m
[32m  eval_recall = 0.3748[0m
[32m  ********************[0m
[32m  Best f1:0.3948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.03499:  21%|██▏       | 3/14 [00:31<01:56, 10.63s/it]epoch 3 loss 1.02001:  21%|██▏       | 3/14 [00:32<01:56, 10.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8287[0m
[32m  eval_f1 = 0.3978[0m
[32m  eval_mcc = 0.8195[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3779[0m
[32m  ********************[0m
[32m  Best f1:0.3978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.02001:  29%|██▊       | 4/14 [00:37<01:29,  8.92s/it]epoch 3 loss 1.03465:  29%|██▊       | 4/14 [00:38<01:29,  8.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8309[0m
[32m  eval_f1 = 0.4008[0m
[32m  eval_mcc = 0.8218[0m
[32m  eval_precision = 0.4838[0m
[32m  eval_recall = 0.3807[0m
[32m  ********************[0m
[32m  Best f1:0.4008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.03465:  36%|███▌      | 5/14 [00:43<01:11,  7.94s/it]epoch 3 loss 1.02485:  36%|███▌      | 5/14 [00:44<01:11,  7.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8329[0m
[32m  eval_f1 = 0.4032[0m
[32m  eval_mcc = 0.8239[0m
[32m  eval_precision = 0.484[0m
[32m  eval_recall = 0.383[0m
[32m  ********************[0m
[32m  Best f1:0.4032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.02485:  43%|████▎     | 6/14 [00:57<01:18,  9.82s/it]epoch 3 loss 1.01805:  43%|████▎     | 6/14 [00:57<01:18,  9.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8353[0m
[32m  eval_f1 = 0.4065[0m
[32m  eval_mcc = 0.8264[0m
[32m  eval_precision = 0.4842[0m
[32m  eval_recall = 0.386[0m
[32m  ********************[0m
[32m  Best f1:0.4065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.01805:  50%|█████     | 7/14 [01:10<01:16, 10.97s/it]epoch 3 loss 1.00994:  50%|█████     | 7/14 [01:11<01:16, 10.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8379[0m
[32m  eval_f1 = 0.4091[0m
[32m  eval_mcc = 0.8291[0m
[32m  eval_precision = 0.4951[0m
[32m  eval_recall = 0.3887[0m
[32m  ********************[0m
[32m  Best f1:0.4091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.00994:  57%|█████▋    | 8/14 [01:22<01:08, 11.34s/it]epoch 3 loss 0.9949:  57%|█████▋    | 8/14 [01:23<01:08, 11.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8401[0m
[32m  eval_f1 = 0.4132[0m
[32m  eval_mcc = 0.8314[0m
[32m  eval_precision = 0.5159[0m
[32m  eval_recall = 0.3924[0m
[32m  ********************[0m
[32m  Best f1:0.4132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.9949:  64%|██████▍   | 9/14 [01:34<00:57, 11.52s/it]epoch 3 loss 0.98094:  64%|██████▍   | 9/14 [01:35<00:57, 11.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8414[0m
[32m  eval_f1 = 0.4144[0m
[32m  eval_mcc = 0.8328[0m
[32m  eval_precision = 0.5154[0m
[32m  eval_recall = 0.3939[0m
[32m  ********************[0m
[32m  Best f1:0.4144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.98094:  71%|███████▏  | 10/14 [01:42<00:41, 10.45s/it]epoch 3 loss 0.97386:  71%|███████▏  | 10/14 [01:43<00:41, 10.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8429[0m
[32m  eval_f1 = 0.4166[0m
[32m  eval_mcc = 0.8344[0m
[32m  eval_precision = 0.5156[0m
[32m  eval_recall = 0.3959[0m
[32m  ********************[0m
[32m  Best f1:0.4166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.97386:  79%|███████▊  | 11/14 [01:54<00:32, 10.77s/it]epoch 3 loss 0.97312:  79%|███████▊  | 11/14 [01:54<00:32, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8446[0m
[32m  eval_f1 = 0.4191[0m
[32m  eval_mcc = 0.8362[0m
[32m  eval_precision = 0.5161[0m
[32m  eval_recall = 0.3984[0m
[32m  ********************[0m
[32m  Best f1:0.4191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.97312:  86%|████████▌ | 12/14 [02:02<00:19,  9.94s/it]epoch 3 loss 0.96553:  86%|████████▌ | 12/14 [02:02<00:19,  9.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8461[0m
[32m  eval_f1 = 0.4214[0m
[32m  eval_mcc = 0.8378[0m
[32m  eval_precision = 0.5158[0m
[32m  eval_recall = 0.4006[0m
[32m  ********************[0m
[32m  Best f1:0.4214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.96553:  93%|█████████▎| 13/14 [02:13<00:10, 10.41s/it]epoch 3 loss 0.96279:  93%|█████████▎| 13/14 [02:14<00:10, 10.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8478[0m
[32m  eval_f1 = 0.4235[0m
[32m  eval_mcc = 0.8396[0m
[32m  eval_precision = 0.5156[0m
[32m  eval_recall = 0.4026[0m
[32m  ********************[0m
[32m  Best f1:0.4235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.96279: 100%|██████████| 14/14 [02:21<00:00,  9.74s/it]epoch 3 loss 0.96279: 100%|██████████| 14/14 [02:21<00:00, 10.13s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 0.86683:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8491[0m
[32m  eval_f1 = 0.4248[0m
[32m  eval_mcc = 0.8409[0m
[32m  eval_precision = 0.5154[0m
[32m  eval_recall = 0.404[0m
[32m  ********************[0m
[32m  Best f1:0.4248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.86683:   7%|▋         | 1/14 [00:11<02:31, 11.67s/it]epoch 4 loss 0.84477:   7%|▋         | 1/14 [00:12<02:31, 11.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8504[0m
[32m  eval_f1 = 0.4272[0m
[32m  eval_mcc = 0.8423[0m
[32m  eval_precision = 0.5142[0m
[32m  eval_recall = 0.4061[0m
[32m  ********************[0m
[32m  Best f1:0.4272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84477:  14%|█▍        | 2/14 [00:19<01:56,  9.70s/it]epoch 4 loss 0.85025:  14%|█▍        | 2/14 [00:20<01:56,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8513[0m
[32m  eval_f1 = 0.4286[0m
[32m  eval_mcc = 0.8433[0m
[32m  eval_precision = 0.5147[0m
[32m  eval_recall = 0.4077[0m
[32m  ********************[0m
[32m  Best f1:0.4286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.85025:  21%|██▏       | 3/14 [00:30<01:52, 10.19s/it]epoch 4 loss 0.84269:  21%|██▏       | 3/14 [00:31<01:52, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8524[0m
[32m  eval_f1 = 0.4304[0m
[32m  eval_mcc = 0.8444[0m
[32m  eval_precision = 0.5137[0m
[32m  eval_recall = 0.4094[0m
[32m  ********************[0m
[32m  Best f1:0.4304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84269:  29%|██▊       | 4/14 [00:41<01:44, 10.48s/it]epoch 4 loss 0.84594:  29%|██▊       | 4/14 [00:42<01:44, 10.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8537[0m
[32m  eval_f1 = 0.4317[0m
[32m  eval_mcc = 0.8458[0m
[32m  eval_precision = 0.5137[0m
[32m  eval_recall = 0.4108[0m
[32m  ********************[0m
[32m  Best f1:0.4317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84594:  36%|███▌      | 5/14 [00:53<01:37, 10.86s/it]epoch 4 loss 0.8422:  36%|███▌      | 5/14 [00:54<01:37, 10.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8545[0m
[32m  eval_f1 = 0.4326[0m
[32m  eval_mcc = 0.8466[0m
[32m  eval_precision = 0.5138[0m
[32m  eval_recall = 0.4117[0m
[32m  ********************[0m
[32m  Best f1:0.4326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.8422:  43%|████▎     | 6/14 [01:05<01:31, 11.44s/it]epoch 4 loss 0.8494:  43%|████▎     | 6/14 [01:06<01:31, 11.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.69it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8554[0m
[32m  eval_f1 = 0.4341[0m
[32m  eval_mcc = 0.8475[0m
[32m  eval_precision = 0.5136[0m
[32m  eval_recall = 0.4132[0m
[32m  ********************[0m
[32m  Best f1:0.4341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.8494:  50%|█████     | 7/14 [01:24<01:35, 13.69s/it]epoch 4 loss 0.84083:  50%|█████     | 7/14 [01:24<01:35, 13.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8562[0m
[32m  eval_f1 = 0.4351[0m
[32m  eval_mcc = 0.8484[0m
[32m  eval_precision = 0.5138[0m
[32m  eval_recall = 0.4145[0m
[32m  ********************[0m
[32m  Best f1:0.4351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84083:  57%|█████▋    | 8/14 [01:36<01:18, 13.13s/it]epoch 4 loss 0.83335:  57%|█████▋    | 8/14 [01:36<01:18, 13.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8567[0m
[32m  eval_f1 = 0.4358[0m
[32m  eval_mcc = 0.849[0m
[32m  eval_precision = 0.513[0m
[32m  eval_recall = 0.4154[0m
[32m  ********************[0m
[32m  Best f1:0.4358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83335:  64%|██████▍   | 9/14 [01:47<01:03, 12.75s/it]epoch 4 loss 0.83261:  64%|██████▍   | 9/14 [01:48<01:03, 12.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8572[0m
[32m  eval_f1 = 0.4359[0m
[32m  eval_mcc = 0.8494[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.4156[0m
[32m  ********************[0m
[32m  Best f1:0.4359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83261:  71%|███████▏  | 10/14 [01:59<00:49, 12.42s/it]epoch 4 loss 0.83782:  71%|███████▏  | 10/14 [02:00<00:49, 12.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8575[0m
[32m  eval_f1 = 0.4366[0m
[32m  eval_mcc = 0.8498[0m
[32m  eval_precision = 0.5133[0m
[32m  eval_recall = 0.4162[0m
[32m  ********************[0m
[32m  Best f1:0.4366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83782:  79%|███████▊  | 11/14 [02:07<00:33, 11.17s/it]epoch 4 loss 0.83154:  79%|███████▊  | 11/14 [02:08<00:33, 11.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8578[0m
[32m  eval_f1 = 0.4371[0m
[32m  eval_mcc = 0.8501[0m
[32m  eval_precision = 0.5135[0m
[32m  eval_recall = 0.4166[0m
[32m  ********************[0m
[32m  Best f1:0.4371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83154:  86%|████████▌ | 12/14 [02:19<00:22, 11.28s/it]epoch 4 loss 0.83018:  86%|████████▌ | 12/14 [02:20<00:22, 11.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.858[0m
[32m  eval_f1 = 0.4371[0m
[32m  eval_mcc = 0.8503[0m
[32m  eval_precision = 0.5134[0m
[32m  eval_recall = 0.4167[0m
[32m  ********************[0m
[32m  Best f1:0.4371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83018:  93%|█████████▎| 13/14 [02:27<00:10, 10.35s/it]epoch 4 loss 0.82953:  93%|█████████▎| 13/14 [02:28<00:10, 10.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8581[0m
[32m  eval_f1 = 0.4372[0m
[32m  eval_mcc = 0.8503[0m
[32m  eval_precision = 0.5135[0m
[32m  eval_recall = 0.4168[0m
[32m  ********************[0m
[32m  Best f1:0.4372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.82953: 100%|██████████| 14/14 [02:38<00:00, 10.47s/it]epoch 4 loss 0.82953: 100%|██████████| 14/14 [02:38<00:00, 11.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.64it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8581[0m
[32m  eval_f1 = 0.4372[0m
[32m  eval_mcc = 0.8503[0m
[32m  eval_precision = 0.5135[0m
[32m  eval_recall = 0.4168[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8421[0m
[32m  eval_f1 = 0.3931[0m
[32m  eval_mcc = 0.834[0m
[32m  eval_precision = 0.4708[0m
[32m  eval_recall = 0.3736[0m

