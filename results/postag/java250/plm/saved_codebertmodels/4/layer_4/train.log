[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/plm/saved_codebertmodels/4/layer_4', posratio=0.5, seed=970, token_config='microsoft/codebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.15446:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0031[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0003[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15446:   7%|▋         | 1/14 [00:05<01:15,  5.80s/it]epoch 0 loss 5.16321:   7%|▋         | 1/14 [00:06<01:15,  5.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.005[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0021[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0049[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.16321:  14%|█▍        | 2/14 [00:12<01:13,  6.12s/it]epoch 0 loss 5.15981:  14%|█▍        | 2/14 [00:12<01:13,  6.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.007[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.004[0m
[32m  eval_precision = 0.0031[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15981:  21%|██▏       | 3/14 [00:18<01:10,  6.36s/it]epoch 0 loss 5.15109:  21%|██▏       | 3/14 [00:19<01:10,  6.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0085[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0053[0m
[32m  eval_precision = 0.0042[0m
[32m  eval_recall = 0.0071[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15109:  29%|██▊       | 4/14 [00:25<01:04,  6.46s/it]epoch 0 loss 5.13914:  29%|██▊       | 4/14 [00:26<01:04,  6.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0108[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0071[0m
[32m  eval_precision = 0.0045[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13914:  36%|███▌      | 5/14 [00:32<00:58,  6.53s/it]epoch 0 loss 5.12146:  36%|███▌      | 5/14 [00:32<00:58,  6.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0188[0m
[32m  eval_f1 = 0.0049[0m
[32m  eval_mcc = 0.0148[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.0129[0m
[32m  ********************[0m
[32m  Best f1:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12146:  43%|████▎     | 6/14 [00:38<00:52,  6.56s/it]epoch 0 loss 5.10244:  43%|████▎     | 6/14 [00:39<00:52,  6.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0287[0m
[32m  eval_f1 = 0.0082[0m
[32m  eval_mcc = 0.0238[0m
[32m  eval_precision = 0.0131[0m
[32m  eval_recall = 0.0174[0m
[32m  ********************[0m
[32m  Best f1:0.0082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10244:  50%|█████     | 7/14 [00:44<00:45,  6.43s/it]epoch 0 loss 5.07841:  50%|█████     | 7/14 [00:45<00:45,  6.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.051[0m
[32m  eval_f1 = 0.02[0m
[32m  eval_mcc = 0.0451[0m
[32m  eval_precision = 0.0451[0m
[32m  eval_recall = 0.0296[0m
[32m  ********************[0m
[32m  Best f1:0.02[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07841:  57%|█████▋    | 8/14 [00:51<00:39,  6.51s/it]epoch 0 loss 5.05046:  57%|█████▋    | 8/14 [00:52<00:39,  6.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0903[0m
[32m  eval_f1 = 0.0324[0m
[32m  eval_mcc = 0.0831[0m
[32m  eval_precision = 0.0601[0m
[32m  eval_recall = 0.0452[0m
[32m  ********************[0m
[32m  Best f1:0.0324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05046:  64%|██████▍   | 9/14 [00:58<00:32,  6.55s/it]epoch 0 loss 5.02019:  64%|██████▍   | 9/14 [00:58<00:32,  6.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1575[0m
[32m  eval_f1 = 0.0601[0m
[32m  eval_mcc = 0.1496[0m
[32m  eval_precision = 0.0823[0m
[32m  eval_recall = 0.0767[0m
[32m  ********************[0m
[32m  Best f1:0.0601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02019:  71%|███████▏  | 10/14 [01:04<00:26,  6.56s/it]epoch 0 loss 4.98507:  71%|███████▏  | 10/14 [01:05<00:26,  6.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2263[0m
[32m  eval_f1 = 0.0816[0m
[32m  eval_mcc = 0.2181[0m
[32m  eval_precision = 0.1055[0m
[32m  eval_recall = 0.1034[0m
[32m  ********************[0m
[32m  Best f1:0.0816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98507:  79%|███████▊  | 11/14 [01:11<00:19,  6.62s/it]epoch 0 loss 4.94377:  79%|███████▊  | 11/14 [01:12<00:19,  6.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2801[0m
[32m  eval_f1 = 0.1012[0m
[32m  eval_mcc = 0.2713[0m
[32m  eval_precision = 0.1289[0m
[32m  eval_recall = 0.129[0m
[32m  ********************[0m
[32m  Best f1:0.1012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94377:  86%|████████▌ | 12/14 [01:17<00:12,  6.44s/it]epoch 0 loss 4.9001:  86%|████████▌ | 12/14 [01:18<00:12,  6.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3342[0m
[32m  eval_f1 = 0.1273[0m
[32m  eval_mcc = 0.3247[0m
[32m  eval_precision = 0.1667[0m
[32m  eval_recall = 0.1583[0m
[32m  ********************[0m
[32m  Best f1:0.1273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9001:  93%|█████████▎| 13/14 [01:24<00:06,  6.49s/it]epoch 0 loss 4.8505:  93%|█████████▎| 13/14 [01:24<00:06,  6.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.387[0m
[32m  eval_f1 = 0.1535[0m
[32m  eval_mcc = 0.3766[0m
[32m  eval_precision = 0.2033[0m
[32m  eval_recall = 0.1854[0m
[32m  ********************[0m
[32m  Best f1:0.1535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8505: 100%|██████████| 14/14 [01:30<00:00,  6.48s/it]epoch 0 loss 4.8505: 100%|██████████| 14/14 [01:30<00:00,  6.47s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.07173:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4354[0m
[32m  eval_f1 = 0.183[0m
[32m  eval_mcc = 0.4242[0m
[32m  eval_precision = 0.2424[0m
[32m  eval_recall = 0.2111[0m
[32m  ********************[0m
[32m  Best f1:0.183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.07173:   7%|▋         | 1/14 [00:06<01:26,  6.65s/it]epoch 1 loss 3.9913:   7%|▋         | 1/14 [00:07<01:26,  6.65s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4721[0m
[32m  eval_f1 = 0.2041[0m
[32m  eval_mcc = 0.4603[0m
[32m  eval_precision = 0.267[0m
[32m  eval_recall = 0.2292[0m
[32m  ********************[0m
[32m  Best f1:0.2041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.9913:  14%|█▍        | 2/14 [00:13<01:17,  6.49s/it]epoch 1 loss 3.92674:  14%|█▍        | 2/14 [00:13<01:17,  6.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5061[0m
[32m  eval_f1 = 0.2221[0m
[32m  eval_mcc = 0.4939[0m
[32m  eval_precision = 0.3048[0m
[32m  eval_recall = 0.2438[0m
[32m  ********************[0m
[32m  Best f1:0.2221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.92674:  21%|██▏       | 3/14 [00:19<01:09,  6.33s/it]epoch 1 loss 3.85088:  21%|██▏       | 3/14 [00:19<01:09,  6.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5418[0m
[32m  eval_f1 = 0.2454[0m
[32m  eval_mcc = 0.5294[0m
[32m  eval_precision = 0.342[0m
[32m  eval_recall = 0.2628[0m
[32m  ********************[0m
[32m  Best f1:0.2454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.85088:  29%|██▊       | 4/14 [00:25<01:03,  6.31s/it]epoch 1 loss 3.78092:  29%|██▊       | 4/14 [00:26<01:03,  6.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5777[0m
[32m  eval_f1 = 0.2659[0m
[32m  eval_mcc = 0.5649[0m
[32m  eval_precision = 0.3576[0m
[32m  eval_recall = 0.2767[0m
[32m  ********************[0m
[32m  Best f1:0.2659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.78092:  36%|███▌      | 5/14 [00:31<00:56,  6.30s/it]epoch 1 loss 3.71072:  36%|███▌      | 5/14 [00:32<00:56,  6.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2792[0m
[32m  eval_mcc = 0.6006[0m
[32m  eval_precision = 0.3685[0m
[32m  eval_recall = 0.2853[0m
[32m  ********************[0m
[32m  Best f1:0.2792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.71072:  43%|████▎     | 6/14 [00:41<01:00,  7.62s/it]epoch 1 loss 3.65025:  43%|████▎     | 6/14 [00:42<01:00,  7.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.2901[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.3871[0m
[32m  eval_recall = 0.2916[0m
[32m  ********************[0m
[32m  Best f1:0.2901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.65025:  50%|█████     | 7/14 [00:51<00:58,  8.31s/it]epoch 1 loss 3.58183:  50%|█████     | 7/14 [00:52<00:58,  8.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.2991[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4024[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.2991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.58183:  57%|█████▋    | 8/14 [01:02<00:55,  9.24s/it]epoch 1 loss 3.5209:  57%|█████▋    | 8/14 [01:03<00:55,  9.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6887[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6753[0m
[32m  eval_precision = 0.4196[0m
[32m  eval_recall = 0.3047[0m
[32m  ********************[0m
[32m  Best f1:0.3107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.5209:  64%|██████▍   | 9/14 [01:12<00:46,  9.34s/it]epoch 1 loss 3.45439:  64%|██████▍   | 9/14 [01:13<00:46,  9.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7068[0m
[32m  eval_f1 = 0.3173[0m
[32m  eval_mcc = 0.6935[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.3088[0m
[32m  ********************[0m
[32m  Best f1:0.3173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.45439:  71%|███████▏  | 10/14 [01:20<00:35,  8.95s/it]epoch 1 loss 3.3964:  71%|███████▏  | 10/14 [01:21<00:35,  8.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7213[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.7082[0m
[32m  eval_precision = 0.4161[0m
[32m  eval_recall = 0.3138[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.3964:  79%|███████▊  | 11/14 [01:30<00:27,  9.16s/it]epoch 1 loss 3.33749:  79%|███████▊  | 11/14 [01:30<00:27,  9.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7344[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.7216[0m
[32m  eval_precision = 0.4194[0m
[32m  eval_recall = 0.319[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.33749:  86%|████████▌ | 12/14 [01:37<00:17,  8.75s/it]epoch 1 loss 3.28296:  86%|████████▌ | 12/14 [01:38<00:17,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7451[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.7326[0m
[32m  eval_precision = 0.4246[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.28296:  93%|█████████▎| 13/14 [01:47<00:09,  9.00s/it]epoch 1 loss 3.22876:  93%|█████████▎| 13/14 [01:48<00:09,  9.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7554[0m
[32m  eval_f1 = 0.3472[0m
[32m  eval_mcc = 0.7432[0m
[32m  eval_precision = 0.4327[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.22876: 100%|██████████| 14/14 [01:55<00:00,  8.75s/it]epoch 1 loss 3.22876: 100%|██████████| 14/14 [01:55<00:00,  8.27s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.42808:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7628[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.7508[0m
[32m  eval_precision = 0.4348[0m
[32m  eval_recall = 0.3349[0m
[32m  ********************[0m
[32m  Best f1:0.3516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.42808:   7%|▋         | 1/14 [00:09<02:05,  9.66s/it]epoch 2 loss 2.3561:   7%|▋         | 1/14 [00:10<02:05,  9.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7695[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.7577[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.3375[0m
[32m  ********************[0m
[32m  Best f1:0.3547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3561:  14%|█▍        | 2/14 [00:17<01:44,  8.67s/it]epoch 2 loss 2.33349:  14%|█▍        | 2/14 [00:18<01:44,  8.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7751[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.7636[0m
[32m  eval_precision = 0.4384[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.33349:  21%|██▏       | 3/14 [00:27<01:38,  9.00s/it]epoch 2 loss 2.28898:  21%|██▏       | 3/14 [00:27<01:38,  9.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7809[0m
[32m  eval_f1 = 0.3619[0m
[32m  eval_mcc = 0.7696[0m
[32m  eval_precision = 0.4407[0m
[32m  eval_recall = 0.344[0m
[32m  ********************[0m
[32m  Best f1:0.3619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.28898:  29%|██▊       | 4/14 [00:35<01:27,  8.78s/it]epoch 2 loss 2.27147:  29%|██▊       | 4/14 [00:36<01:27,  8.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7854[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.7744[0m
[32m  eval_precision = 0.4417[0m
[32m  eval_recall = 0.3469[0m
[32m  ********************[0m
[32m  Best f1:0.3652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.27147:  36%|███▌      | 5/14 [00:42<01:13,  8.19s/it]epoch 2 loss 2.24409:  36%|███▌      | 5/14 [00:43<01:13,  8.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7904[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.7797[0m
[32m  eval_precision = 0.4415[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.24409:  43%|████▎     | 6/14 [00:51<01:07,  8.47s/it]epoch 2 loss 2.21281:  43%|████▎     | 6/14 [00:52<01:07,  8.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7939[0m
[32m  eval_f1 = 0.3734[0m
[32m  eval_mcc = 0.7833[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.354[0m
[32m  ********************[0m
[32m  Best f1:0.3734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.21281:  50%|█████     | 7/14 [00:59<00:58,  8.37s/it]epoch 2 loss 2.17634:  50%|█████     | 7/14 [01:00<00:58,  8.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7973[0m
[32m  eval_f1 = 0.3759[0m
[32m  eval_mcc = 0.7869[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3563[0m
[32m  ********************[0m
[32m  Best f1:0.3759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.17634:  57%|█████▋    | 8/14 [01:08<00:50,  8.46s/it]epoch 2 loss 2.14649:  57%|█████▋    | 8/14 [01:09<00:50,  8.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.801[0m
[32m  eval_f1 = 0.38[0m
[32m  eval_mcc = 0.7907[0m
[32m  eval_precision = 0.478[0m
[32m  eval_recall = 0.36[0m
[32m  ********************[0m
[32m  Best f1:0.38[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.14649:  64%|██████▍   | 9/14 [01:14<00:38,  7.77s/it]epoch 2 loss 2.11597:  64%|██████▍   | 9/14 [01:15<00:38,  7.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8041[0m
[32m  eval_f1 = 0.3829[0m
[32m  eval_mcc = 0.794[0m
[32m  eval_precision = 0.4796[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best f1:0.3829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.11597:  71%|███████▏  | 10/14 [01:21<00:29,  7.32s/it]epoch 2 loss 2.08419:  71%|███████▏  | 10/14 [01:21<00:29,  7.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8073[0m
[32m  eval_f1 = 0.3856[0m
[32m  eval_mcc = 0.7973[0m
[32m  eval_precision = 0.4807[0m
[32m  eval_recall = 0.366[0m
[32m  ********************[0m
[32m  Best f1:0.3856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.08419:  79%|███████▊  | 11/14 [01:27<00:21,  7.03s/it]epoch 2 loss 2.04906:  79%|███████▊  | 11/14 [01:28<00:21,  7.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8089[0m
[32m  eval_f1 = 0.3878[0m
[32m  eval_mcc = 0.7991[0m
[32m  eval_precision = 0.4813[0m
[32m  eval_recall = 0.3683[0m
[32m  ********************[0m
[32m  Best f1:0.3878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.04906:  86%|████████▌ | 12/14 [01:32<00:13,  6.57s/it]epoch 2 loss 2.01927:  86%|████████▌ | 12/14 [01:33<00:13,  6.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8112[0m
[32m  eval_f1 = 0.3893[0m
[32m  eval_mcc = 0.8014[0m
[32m  eval_precision = 0.4824[0m
[32m  eval_recall = 0.3697[0m
[32m  ********************[0m
[32m  Best f1:0.3893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.01927:  93%|█████████▎| 13/14 [01:39<00:06,  6.48s/it]epoch 2 loss 1.99234:  93%|█████████▎| 13/14 [01:39<00:06,  6.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8135[0m
[32m  eval_f1 = 0.3909[0m
[32m  eval_mcc = 0.8039[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3714[0m
[32m  ********************[0m
[32m  Best f1:0.3909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.99234: 100%|██████████| 14/14 [01:45<00:00,  6.37s/it]epoch 2 loss 1.99234: 100%|██████████| 14/14 [01:45<00:00,  7.52s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.61418:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8155[0m
[32m  eval_f1 = 0.3948[0m
[32m  eval_mcc = 0.8059[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3747[0m
[32m  ********************[0m
[32m  Best f1:0.3948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.61418:   7%|▋         | 1/14 [00:05<01:12,  5.59s/it]epoch 3 loss 1.58563:   7%|▋         | 1/14 [00:06<01:12,  5.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8174[0m
[32m  eval_f1 = 0.3967[0m
[32m  eval_mcc = 0.8079[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3772[0m
[32m  ********************[0m
[32m  Best f1:0.3967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.58563:  14%|█▍        | 2/14 [00:11<01:11,  5.98s/it]epoch 3 loss 1.5671:  14%|█▍        | 2/14 [00:12<01:11,  5.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8187[0m
[32m  eval_f1 = 0.399[0m
[32m  eval_mcc = 0.8093[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.3802[0m
[32m  ********************[0m
[32m  Best f1:0.399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5671:  21%|██▏       | 3/14 [00:18<01:08,  6.18s/it]epoch 3 loss 1.54143:  21%|██▏       | 3/14 [00:19<01:08,  6.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8201[0m
[32m  eval_f1 = 0.4002[0m
[32m  eval_mcc = 0.8107[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.3815[0m
[32m  ********************[0m
[32m  Best f1:0.4002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54143:  29%|██▊       | 4/14 [00:24<01:02,  6.21s/it]epoch 3 loss 1.54707:  29%|██▊       | 4/14 [00:25<01:02,  6.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8215[0m
[32m  eval_f1 = 0.4014[0m
[32m  eval_mcc = 0.8122[0m
[32m  eval_precision = 0.4935[0m
[32m  eval_recall = 0.3828[0m
[32m  ********************[0m
[32m  Best f1:0.4014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54707:  36%|███▌      | 5/14 [00:30<00:56,  6.27s/it]epoch 3 loss 1.53419:  36%|███▌      | 5/14 [00:31<00:56,  6.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8232[0m
[32m  eval_f1 = 0.4029[0m
[32m  eval_mcc = 0.814[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3845[0m
[32m  ********************[0m
[32m  Best f1:0.4029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53419:  43%|████▎     | 6/14 [00:37<00:50,  6.29s/it]epoch 3 loss 1.51984:  43%|████▎     | 6/14 [00:38<00:50,  6.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8252[0m
[32m  eval_f1 = 0.4042[0m
[32m  eval_mcc = 0.8161[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3857[0m
[32m  ********************[0m
[32m  Best f1:0.4042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51984:  50%|█████     | 7/14 [00:47<00:52,  7.43s/it]epoch 3 loss 1.50725:  50%|█████     | 7/14 [00:47<00:52,  7.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.827[0m
[32m  eval_f1 = 0.405[0m
[32m  eval_mcc = 0.818[0m
[32m  eval_precision = 0.4893[0m
[32m  eval_recall = 0.3864[0m
[32m  ********************[0m
[32m  Best f1:0.405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50725:  57%|█████▋    | 8/14 [00:55<00:47,  7.88s/it]epoch 3 loss 1.48828:  57%|█████▋    | 8/14 [00:56<00:47,  7.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8289[0m
[32m  eval_f1 = 0.4063[0m
[32m  eval_mcc = 0.8199[0m
[32m  eval_precision = 0.4897[0m
[32m  eval_recall = 0.3876[0m
[32m  ********************[0m
[32m  Best f1:0.4063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48828:  64%|██████▍   | 9/14 [01:06<00:43,  8.63s/it]epoch 3 loss 1.46941:  64%|██████▍   | 9/14 [01:06<00:43,  8.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8312[0m
[32m  eval_f1 = 0.4079[0m
[32m  eval_mcc = 0.8223[0m
[32m  eval_precision = 0.5015[0m
[32m  eval_recall = 0.3888[0m
[32m  ********************[0m
[32m  Best f1:0.4079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46941:  71%|███████▏  | 10/14 [01:17<00:37,  9.35s/it]epoch 3 loss 1.45616:  71%|███████▏  | 10/14 [01:17<00:37,  9.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8324[0m
[32m  eval_f1 = 0.4087[0m
[32m  eval_mcc = 0.8236[0m
[32m  eval_precision = 0.4996[0m
[32m  eval_recall = 0.3897[0m
[32m  ********************[0m
[32m  Best f1:0.4087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45616:  79%|███████▊  | 11/14 [01:25<00:27,  9.01s/it]epoch 3 loss 1.45112:  79%|███████▊  | 11/14 [01:26<00:27,  9.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8336[0m
[32m  eval_f1 = 0.4096[0m
[32m  eval_mcc = 0.8249[0m
[32m  eval_precision = 0.5001[0m
[32m  eval_recall = 0.3906[0m
[32m  ********************[0m
[32m  Best f1:0.4096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45112:  86%|████████▌ | 12/14 [01:34<00:18,  9.17s/it]epoch 3 loss 1.44026:  86%|████████▌ | 12/14 [01:35<00:18,  9.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8352[0m
[32m  eval_f1 = 0.4117[0m
[32m  eval_mcc = 0.8266[0m
[32m  eval_precision = 0.5016[0m
[32m  eval_recall = 0.3923[0m
[32m  ********************[0m
[32m  Best f1:0.4117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44026:  93%|█████████▎| 13/14 [01:43<00:08,  8.91s/it]epoch 3 loss 1.43233:  93%|█████████▎| 13/14 [01:43<00:08,  8.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8367[0m
[32m  eval_f1 = 0.4126[0m
[32m  eval_mcc = 0.8281[0m
[32m  eval_precision = 0.5017[0m
[32m  eval_recall = 0.3934[0m
[32m  ********************[0m
[32m  Best f1:0.4126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43233: 100%|██████████| 14/14 [01:52<00:00,  9.08s/it]epoch 3 loss 1.43233: 100%|██████████| 14/14 [01:52<00:00,  8.05s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.2861:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8377[0m
[32m  eval_f1 = 0.4146[0m
[32m  eval_mcc = 0.8292[0m
[32m  eval_precision = 0.5021[0m
[32m  eval_recall = 0.3952[0m
[32m  ********************[0m
[32m  Best f1:0.4146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2861:   7%|▋         | 1/14 [00:08<01:46,  8.17s/it]epoch 4 loss 1.26969:   7%|▋         | 1/14 [00:08<01:46,  8.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8387[0m
[32m  eval_f1 = 0.4161[0m
[32m  eval_mcc = 0.8302[0m
[32m  eval_precision = 0.5024[0m
[32m  eval_recall = 0.3963[0m
[32m  ********************[0m
[32m  Best f1:0.4161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26969:  14%|█▍        | 2/14 [00:17<01:49,  9.09s/it]epoch 4 loss 1.26623:  14%|█▍        | 2/14 [00:18<01:49,  9.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8394[0m
[32m  eval_f1 = 0.4177[0m
[32m  eval_mcc = 0.831[0m
[32m  eval_precision = 0.5024[0m
[32m  eval_recall = 0.3976[0m
[32m  ********************[0m
[32m  Best f1:0.4177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26623:  21%|██▏       | 3/14 [00:26<01:37,  8.90s/it]epoch 4 loss 1.25662:  21%|██▏       | 3/14 [00:27<01:37,  8.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8401[0m
[32m  eval_f1 = 0.4181[0m
[32m  eval_mcc = 0.8317[0m
[32m  eval_precision = 0.5023[0m
[32m  eval_recall = 0.3981[0m
[32m  ********************[0m
[32m  Best f1:0.4181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25662:  29%|██▊       | 4/14 [00:36<01:32,  9.23s/it]epoch 4 loss 1.25506:  29%|██▊       | 4/14 [00:37<01:32,  9.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8408[0m
[32m  eval_f1 = 0.4186[0m
[32m  eval_mcc = 0.8324[0m
[32m  eval_precision = 0.5011[0m
[32m  eval_recall = 0.3987[0m
[32m  ********************[0m
[32m  Best f1:0.4186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25506:  36%|███▌      | 5/14 [00:44<01:19,  8.81s/it]epoch 4 loss 1.24842:  36%|███▌      | 5/14 [00:45<01:19,  8.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8413[0m
[32m  eval_f1 = 0.4201[0m
[32m  eval_mcc = 0.8329[0m
[32m  eval_precision = 0.5012[0m
[32m  eval_recall = 0.4[0m
[32m  ********************[0m
[32m  Best f1:0.4201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24842:  43%|████▎     | 6/14 [00:53<01:12,  9.07s/it]epoch 4 loss 1.25002:  43%|████▎     | 6/14 [00:54<01:12,  9.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8419[0m
[32m  eval_f1 = 0.4214[0m
[32m  eval_mcc = 0.8336[0m
[32m  eval_precision = 0.5013[0m
[32m  eval_recall = 0.401[0m
[32m  ********************[0m
[32m  Best f1:0.4214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25002:  50%|█████     | 7/14 [01:02<01:01,  8.81s/it]epoch 4 loss 1.23869:  50%|█████     | 7/14 [01:03<01:01,  8.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8423[0m
[32m  eval_f1 = 0.4222[0m
[32m  eval_mcc = 0.834[0m
[32m  eval_precision = 0.5017[0m
[32m  eval_recall = 0.4016[0m
[32m  ********************[0m
[32m  Best f1:0.4222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23869:  57%|█████▋    | 8/14 [01:11<00:54,  9.07s/it]epoch 4 loss 1.2265:  57%|█████▋    | 8/14 [01:12<00:54,  9.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8427[0m
[32m  eval_f1 = 0.4224[0m
[32m  eval_mcc = 0.8345[0m
[32m  eval_precision = 0.5017[0m
[32m  eval_recall = 0.4019[0m
[32m  ********************[0m
[32m  Best f1:0.4224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2265:  64%|██████▍   | 9/14 [01:18<00:40,  8.18s/it]epoch 4 loss 1.22254:  64%|██████▍   | 9/14 [01:18<00:40,  8.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8432[0m
[32m  eval_f1 = 0.4232[0m
[32m  eval_mcc = 0.8349[0m
[32m  eval_precision = 0.5016[0m
[32m  eval_recall = 0.4027[0m
[32m  ********************[0m
[32m  Best f1:0.4232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22254:  71%|███████▏  | 10/14 [01:24<00:30,  7.65s/it]epoch 4 loss 1.22579:  71%|███████▏  | 10/14 [01:25<00:30,  7.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8434[0m
[32m  eval_f1 = 0.4238[0m
[32m  eval_mcc = 0.8352[0m
[32m  eval_precision = 0.5076[0m
[32m  eval_recall = 0.4031[0m
[32m  ********************[0m
[32m  Best f1:0.4238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22579:  79%|███████▊  | 11/14 [01:30<00:21,  7.17s/it]epoch 4 loss 1.21764:  79%|███████▊  | 11/14 [01:31<00:21,  7.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8435[0m
[32m  eval_f1 = 0.4242[0m
[32m  eval_mcc = 0.8353[0m
[32m  eval_precision = 0.5076[0m
[32m  eval_recall = 0.4033[0m
[32m  ********************[0m
[32m  Best f1:0.4242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21764:  86%|████████▌ | 12/14 [01:37<00:13,  6.95s/it]epoch 4 loss 1.21464:  86%|████████▌ | 12/14 [01:37<00:13,  6.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8436[0m
[32m  eval_f1 = 0.4244[0m
[32m  eval_mcc = 0.8354[0m
[32m  eval_precision = 0.5093[0m
[32m  eval_recall = 0.4035[0m
[32m  ********************[0m
[32m  Best f1:0.4244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21464:  93%|█████████▎| 13/14 [01:43<00:06,  6.84s/it]epoch 4 loss 1.2122:  93%|█████████▎| 13/14 [01:44<00:06,  6.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8437[0m
[32m  eval_f1 = 0.4244[0m
[32m  eval_mcc = 0.8355[0m
[32m  eval_precision = 0.5092[0m
[32m  eval_recall = 0.4035[0m
[32m  ********************[0m
[32m  Best f1:0.4244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2122: 100%|██████████| 14/14 [01:49<00:00,  6.59s/it]epoch 4 loss 1.2122: 100%|██████████| 14/14 [01:49<00:00,  7.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.57it/s] 20%|██        | 2/10 [00:00<00:02,  2.67it/s] 30%|███       | 3/10 [00:01<00:02,  2.70it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8437[0m
[32m  eval_f1 = 0.4244[0m
[32m  eval_mcc = 0.8355[0m
[32m  eval_precision = 0.5092[0m
[32m  eval_recall = 0.4035[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8293[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.8209[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3631[0m

