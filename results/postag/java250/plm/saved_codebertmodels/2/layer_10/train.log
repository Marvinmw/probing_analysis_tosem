[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/plm/saved_codebertmodels/2/layer_10', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.09499:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0119[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = 0.0009[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0138[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09499:   7%|▋         | 1/14 [00:05<01:14,  5.72s/it]epoch 0 loss 5.10307:   7%|▋         | 1/14 [00:06<01:14,  5.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0132[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = 0.0014[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0143[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10307:  14%|█▍        | 2/14 [00:12<01:15,  6.28s/it]epoch 0 loss 5.09667:  14%|█▍        | 2/14 [00:13<01:15,  6.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0158[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = 0.0026[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0149[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09667:  21%|██▏       | 3/14 [00:19<01:11,  6.52s/it]epoch 0 loss 5.0844:  21%|██▏       | 3/14 [00:20<01:11,  6.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0203[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0046[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.0157[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0844:  29%|██▊       | 4/14 [00:26<01:06,  6.65s/it]epoch 0 loss 5.06801:  29%|██▊       | 4/14 [00:26<01:06,  6.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0283[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0091[0m
[32m  eval_precision = 0.0051[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06801:  36%|███▌      | 5/14 [00:32<01:00,  6.69s/it]epoch 0 loss 5.04407:  36%|███▌      | 5/14 [00:33<01:00,  6.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0417[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.018[0m
[32m  eval_precision = 0.0069[0m
[32m  eval_recall = 0.0148[0m
[32m  ********************[0m
[32m  Best f1:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04407:  43%|████▎     | 6/14 [00:39<00:53,  6.71s/it]epoch 0 loss 5.01685:  43%|████▎     | 6/14 [00:40<00:53,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0595[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.0306[0m
[32m  eval_precision = 0.0108[0m
[32m  eval_recall = 0.0187[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01685:  50%|█████     | 7/14 [00:45<00:46,  6.61s/it]epoch 0 loss 4.98228:  50%|█████     | 7/14 [00:46<00:46,  6.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0809[0m
[32m  eval_f1 = 0.011[0m
[32m  eval_mcc = 0.047[0m
[32m  eval_precision = 0.0137[0m
[32m  eval_recall = 0.0222[0m
[32m  ********************[0m
[32m  Best f1:0.011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98228:  57%|█████▋    | 8/14 [00:52<00:39,  6.67s/it]epoch 0 loss 4.94411:  57%|█████▋    | 8/14 [00:53<00:39,  6.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1085[0m
[32m  eval_f1 = 0.0181[0m
[32m  eval_mcc = 0.0721[0m
[32m  eval_precision = 0.0382[0m
[32m  eval_recall = 0.0287[0m
[32m  ********************[0m
[32m  Best f1:0.0181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94411:  64%|██████▍   | 9/14 [00:59<00:33,  6.71s/it]epoch 0 loss 4.89915:  64%|██████▍   | 9/14 [01:00<00:33,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1545[0m
[32m  eval_f1 = 0.036[0m
[32m  eval_mcc = 0.12[0m
[32m  eval_precision = 0.0868[0m
[32m  eval_recall = 0.0451[0m
[32m  ********************[0m
[32m  Best f1:0.036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.12[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89915:  71%|███████▏  | 10/14 [01:05<00:25,  6.48s/it]epoch 0 loss 4.84675:  71%|███████▏  | 10/14 [01:06<00:25,  6.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2207[0m
[32m  eval_f1 = 0.0696[0m
[32m  eval_mcc = 0.1927[0m
[32m  eval_precision = 0.1338[0m
[32m  eval_recall = 0.0748[0m
[32m  ********************[0m
[32m  Best f1:0.0696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84675:  79%|███████▊  | 11/14 [01:12<00:19,  6.58s/it]epoch 0 loss 4.79093:  79%|███████▊  | 11/14 [01:13<00:19,  6.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2854[0m
[32m  eval_f1 = 0.1009[0m
[32m  eval_mcc = 0.264[0m
[32m  eval_precision = 0.1675[0m
[32m  eval_recall = 0.1045[0m
[32m  ********************[0m
[32m  Best f1:0.1009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79093:  86%|████████▌ | 12/14 [01:19<00:13,  6.65s/it]epoch 0 loss 4.73205:  86%|████████▌ | 12/14 [01:19<00:13,  6.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.348[0m
[32m  eval_f1 = 0.1315[0m
[32m  eval_mcc = 0.3311[0m
[32m  eval_precision = 0.2109[0m
[32m  eval_recall = 0.1364[0m
[32m  ********************[0m
[32m  Best f1:0.1315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73205:  93%|█████████▎| 13/14 [01:25<00:06,  6.71s/it]epoch 0 loss 4.6663:  93%|█████████▎| 13/14 [01:26<00:06,  6.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4124[0m
[32m  eval_f1 = 0.1577[0m
[32m  eval_mcc = 0.3979[0m
[32m  eval_precision = 0.2355[0m
[32m  eval_recall = 0.1605[0m
[32m  ********************[0m
[32m  Best f1:0.1577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6663: 100%|██████████| 14/14 [01:32<00:00,  6.69s/it]epoch 0 loss 4.6663: 100%|██████████| 14/14 [01:32<00:00,  6.62s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 3.58116:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4799[0m
[32m  eval_f1 = 0.1917[0m
[32m  eval_mcc = 0.466[0m
[32m  eval_precision = 0.2788[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.1917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.58116:   7%|▋         | 1/14 [00:06<01:18,  6.01s/it]epoch 1 loss 3.50482:   7%|▋         | 1/14 [00:06<01:18,  6.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5492[0m
[32m  eval_f1 = 0.2158[0m
[32m  eval_mcc = 0.5352[0m
[32m  eval_precision = 0.2898[0m
[32m  eval_recall = 0.2129[0m
[32m  ********************[0m
[32m  Best f1:0.2158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.50482:  14%|█▍        | 2/14 [00:12<01:15,  6.33s/it]epoch 1 loss 3.41216:  14%|█▍        | 2/14 [00:13<01:15,  6.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6023[0m
[32m  eval_f1 = 0.2342[0m
[32m  eval_mcc = 0.5882[0m
[32m  eval_precision = 0.3032[0m
[32m  eval_recall = 0.23[0m
[32m  ********************[0m
[32m  Best f1:0.2342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.41216:  21%|██▏       | 3/14 [00:19<01:10,  6.45s/it]epoch 1 loss 3.32455:  21%|██▏       | 3/14 [00:19<01:10,  6.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.25[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.3176[0m
[32m  eval_recall = 0.2457[0m
[32m  ********************[0m
[32m  Best f1:0.25[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.32455:  29%|██▊       | 4/14 [00:25<01:05,  6.51s/it]epoch 1 loss 3.22575:  29%|██▊       | 4/14 [00:26<01:05,  6.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.2591[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.3224[0m
[32m  eval_recall = 0.255[0m
[32m  ********************[0m
[32m  Best f1:0.2591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.22575:  36%|███▌      | 5/14 [00:37<01:15,  8.34s/it]epoch 1 loss 3.14968:  36%|███▌      | 5/14 [00:38<01:15,  8.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6892[0m
[32m  eval_f1 = 0.2651[0m
[32m  eval_mcc = 0.6763[0m
[32m  eval_precision = 0.3347[0m
[32m  eval_recall = 0.2602[0m
[32m  ********************[0m
[32m  Best f1:0.2651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.14968:  43%|████▎     | 6/14 [00:43<01:01,  7.75s/it]epoch 1 loss 3.07217:  43%|████▎     | 6/14 [00:44<01:01,  7.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7048[0m
[32m  eval_f1 = 0.2701[0m
[32m  eval_mcc = 0.6921[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.2644[0m
[32m  ********************[0m
[32m  Best f1:0.2701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.07217:  50%|█████     | 7/14 [00:52<00:56,  8.01s/it]epoch 1 loss 3.00113:  50%|█████     | 7/14 [00:53<00:56,  8.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.719[0m
[32m  eval_f1 = 0.2747[0m
[32m  eval_mcc = 0.7066[0m
[32m  eval_precision = 0.3448[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.00113:  57%|█████▋    | 8/14 [00:59<00:45,  7.55s/it]epoch 1 loss 2.92335:  57%|█████▋    | 8/14 [00:59<00:45,  7.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.73[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.7179[0m
[32m  eval_precision = 0.3475[0m
[32m  eval_recall = 0.2717[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.92335:  64%|██████▍   | 9/14 [01:09<00:41,  8.31s/it]epoch 1 loss 2.84509:  64%|██████▍   | 9/14 [01:09<00:41,  8.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7376[0m
[32m  eval_f1 = 0.2841[0m
[32m  eval_mcc = 0.7256[0m
[32m  eval_precision = 0.3595[0m
[32m  eval_recall = 0.275[0m
[32m  ********************[0m
[32m  Best f1:0.2841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.84509:  71%|███████▏  | 10/14 [01:15<00:30,  7.73s/it]epoch 1 loss 2.77552:  71%|███████▏  | 10/14 [01:16<00:30,  7.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7451[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.7333[0m
[32m  eval_precision = 0.3714[0m
[32m  eval_recall = 0.2796[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.77552:  79%|███████▊  | 11/14 [01:23<00:23,  7.92s/it]epoch 1 loss 2.70839:  79%|███████▊  | 11/14 [01:24<00:23,  7.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7508[0m
[32m  eval_f1 = 0.2954[0m
[32m  eval_mcc = 0.7391[0m
[32m  eval_precision = 0.3935[0m
[32m  eval_recall = 0.2843[0m
[32m  ********************[0m
[32m  Best f1:0.2954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.70839:  86%|████████▌ | 12/14 [01:31<00:15,  7.71s/it]epoch 1 loss 2.6442:  86%|████████▌ | 12/14 [01:31<00:15,  7.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7576[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.746[0m
[32m  eval_precision = 0.3965[0m
[32m  eval_recall = 0.2884[0m
[32m  ********************[0m
[32m  Best f1:0.3003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.6442:  93%|█████████▎| 13/14 [01:37<00:07,  7.35s/it]epoch 1 loss 2.58436:  93%|█████████▎| 13/14 [01:38<00:07,  7.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7659[0m
[32m  eval_f1 = 0.3088[0m
[32m  eval_mcc = 0.7546[0m
[32m  eval_precision = 0.4057[0m
[32m  eval_recall = 0.2947[0m
[32m  ********************[0m
[32m  Best f1:0.3088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.58436: 100%|██████████| 14/14 [01:43<00:00,  7.02s/it]epoch 1 loss 2.58436: 100%|██████████| 14/14 [01:43<00:00,  7.42s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 1.68164:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7762[0m
[32m  eval_f1 = 0.3169[0m
[32m  eval_mcc = 0.7651[0m
[32m  eval_precision = 0.4101[0m
[32m  eval_recall = 0.3003[0m
[32m  ********************[0m
[32m  Best f1:0.3169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68164:   7%|▋         | 1/14 [00:11<02:31, 11.66s/it]epoch 2 loss 1.69871:   7%|▋         | 1/14 [00:12<02:31, 11.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7842[0m
[32m  eval_f1 = 0.3227[0m
[32m  eval_mcc = 0.7734[0m
[32m  eval_precision = 0.4131[0m
[32m  eval_recall = 0.305[0m
[32m  ********************[0m
[32m  Best f1:0.3227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69871:  14%|█▍        | 2/14 [00:23<02:20, 11.70s/it]epoch 2 loss 1.65792:  14%|█▍        | 2/14 [00:24<02:20, 11.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7895[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.7788[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3111[0m
[32m  ********************[0m
[32m  Best f1:0.3309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65792:  21%|██▏       | 3/14 [00:35<02:09, 11.78s/it]epoch 2 loss 1.63406:  21%|██▏       | 3/14 [00:36<02:09, 11.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7932[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.7827[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.315[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63406:  29%|██▊       | 4/14 [00:44<01:48, 10.89s/it]epoch 2 loss 1.58396:  29%|██▊       | 4/14 [00:45<01:48, 10.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7964[0m
[32m  eval_f1 = 0.3439[0m
[32m  eval_mcc = 0.786[0m
[32m  eval_precision = 0.4637[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.3439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58396:  36%|███▌      | 5/14 [00:56<01:40, 11.15s/it]epoch 2 loss 1.55261:  36%|███▌      | 5/14 [00:57<01:40, 11.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7991[0m
[32m  eval_f1 = 0.3556[0m
[32m  eval_mcc = 0.7888[0m
[32m  eval_precision = 0.4637[0m
[32m  eval_recall = 0.333[0m
[32m  ********************[0m
[32m  Best f1:0.3556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55261:  43%|████▎     | 6/14 [01:07<01:30, 11.30s/it]epoch 2 loss 1.51897:  43%|████▎     | 6/14 [01:08<01:30, 11.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8015[0m
[32m  eval_f1 = 0.36[0m
[32m  eval_mcc = 0.7913[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.36[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51897:  50%|█████     | 7/14 [01:17<01:14, 10.66s/it]epoch 2 loss 1.49667:  50%|█████     | 7/14 [01:18<01:14, 10.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.804[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.7938[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49667:  57%|█████▋    | 8/14 [01:28<01:05, 10.90s/it]epoch 2 loss 1.464:  57%|█████▋    | 8/14 [01:29<01:05, 10.90s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8061[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.796[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3502[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.464:  64%|██████▍   | 9/14 [01:37<00:51, 10.35s/it]epoch 2 loss 1.43787:  64%|██████▍   | 9/14 [01:38<00:51, 10.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8085[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.7985[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3528[0m
[32m  ********************[0m
[32m  Best f1:0.3716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43787:  71%|███████▏  | 10/14 [01:48<00:41, 10.46s/it]epoch 2 loss 1.41227:  71%|███████▏  | 10/14 [01:49<00:41, 10.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8117[0m
[32m  eval_f1 = 0.3756[0m
[32m  eval_mcc = 0.8018[0m
[32m  eval_precision = 0.4753[0m
[32m  eval_recall = 0.3567[0m
[32m  ********************[0m
[32m  Best f1:0.3756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41227:  79%|███████▊  | 11/14 [01:59<00:31, 10.65s/it]epoch 2 loss 1.39727:  79%|███████▊  | 11/14 [02:00<00:31, 10.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8146[0m
[32m  eval_f1 = 0.3791[0m
[32m  eval_mcc = 0.8048[0m
[32m  eval_precision = 0.4755[0m
[32m  eval_recall = 0.3603[0m
[32m  ********************[0m
[32m  Best f1:0.3791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39727:  86%|████████▌ | 12/14 [02:08<00:20, 10.19s/it]epoch 2 loss 1.37927:  86%|████████▌ | 12/14 [02:09<00:20, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8175[0m
[32m  eval_f1 = 0.3822[0m
[32m  eval_mcc = 0.8078[0m
[32m  eval_precision = 0.4761[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best f1:0.3822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37927:  93%|█████████▎| 13/14 [02:19<00:10, 10.32s/it]epoch 2 loss 1.36184:  93%|█████████▎| 13/14 [02:20<00:10, 10.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8202[0m
[32m  eval_f1 = 0.3863[0m
[32m  eval_mcc = 0.8106[0m
[32m  eval_precision = 0.4856[0m
[32m  eval_recall = 0.367[0m
[32m  ********************[0m
[32m  Best f1:0.3863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36184: 100%|██████████| 14/14 [02:28<00:00,  9.88s/it]epoch 2 loss 1.36184: 100%|██████████| 14/14 [02:28<00:00, 10.59s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.09261:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8232[0m
[32m  eval_f1 = 0.3896[0m
[32m  eval_mcc = 0.8137[0m
[32m  eval_precision = 0.4855[0m
[32m  eval_recall = 0.37[0m
[32m  ********************[0m
[32m  Best f1:0.3896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.09261:   7%|▋         | 1/14 [00:06<01:29,  6.86s/it]epoch 3 loss 1.07082:   7%|▋         | 1/14 [00:07<01:29,  6.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8261[0m
[32m  eval_f1 = 0.394[0m
[32m  eval_mcc = 0.8168[0m
[32m  eval_precision = 0.4859[0m
[32m  eval_recall = 0.3736[0m
[32m  ********************[0m
[32m  Best f1:0.394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.07082:  14%|█▍        | 2/14 [00:12<01:15,  6.32s/it]epoch 3 loss 1.03833:  14%|█▍        | 2/14 [00:13<01:15,  6.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8291[0m
[32m  eval_f1 = 0.3979[0m
[32m  eval_mcc = 0.8199[0m
[32m  eval_precision = 0.497[0m
[32m  eval_recall = 0.3768[0m
[32m  ********************[0m
[32m  Best f1:0.3979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.03833:  21%|██▏       | 3/14 [00:19<01:10,  6.44s/it]epoch 3 loss 1.02187:  21%|██▏       | 3/14 [00:20<01:10,  6.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8319[0m
[32m  eval_f1 = 0.4018[0m
[32m  eval_mcc = 0.8229[0m
[32m  eval_precision = 0.4974[0m
[32m  eval_recall = 0.3802[0m
[32m  ********************[0m
[32m  Best f1:0.4018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.02187:  29%|██▊       | 4/14 [00:25<01:04,  6.48s/it]epoch 3 loss 1.00854:  29%|██▊       | 4/14 [00:26<01:04,  6.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8351[0m
[32m  eval_f1 = 0.4055[0m
[32m  eval_mcc = 0.8261[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3838[0m
[32m  ********************[0m
[32m  Best f1:0.4055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.00854:  36%|███▌      | 5/14 [00:32<00:58,  6.47s/it]epoch 3 loss 1.00021:  36%|███▌      | 5/14 [00:33<00:58,  6.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8377[0m
[32m  eval_f1 = 0.4093[0m
[32m  eval_mcc = 0.8289[0m
[32m  eval_precision = 0.508[0m
[32m  eval_recall = 0.3871[0m
[32m  ********************[0m
[32m  Best f1:0.4093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.00021:  43%|████▎     | 6/14 [00:38<00:52,  6.52s/it]epoch 3 loss 1.00128:  43%|████▎     | 6/14 [00:39<00:52,  6.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8403[0m
[32m  eval_f1 = 0.412[0m
[32m  eval_mcc = 0.8316[0m
[32m  eval_precision = 0.5074[0m
[32m  eval_recall = 0.3898[0m
[32m  ********************[0m
[32m  Best f1:0.412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.00128:  50%|█████     | 7/14 [00:45<00:44,  6.41s/it]epoch 3 loss 0.99612:  50%|█████     | 7/14 [00:45<00:44,  6.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8428[0m
[32m  eval_f1 = 0.4146[0m
[32m  eval_mcc = 0.8342[0m
[32m  eval_precision = 0.5256[0m
[32m  eval_recall = 0.3923[0m
[32m  ********************[0m
[32m  Best f1:0.4146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.99612:  57%|█████▋    | 8/14 [00:51<00:38,  6.45s/it]epoch 3 loss 0.98409:  57%|█████▋    | 8/14 [00:52<00:38,  6.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8448[0m
[32m  eval_f1 = 0.4187[0m
[32m  eval_mcc = 0.8364[0m
[32m  eval_precision = 0.5363[0m
[32m  eval_recall = 0.3962[0m
[32m  ********************[0m
[32m  Best f1:0.4187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.98409:  64%|██████▍   | 9/14 [01:01<00:37,  7.56s/it]epoch 3 loss 0.98163:  64%|██████▍   | 9/14 [01:02<00:37,  7.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8474[0m
[32m  eval_f1 = 0.4214[0m
[32m  eval_mcc = 0.8391[0m
[32m  eval_precision = 0.5363[0m
[32m  eval_recall = 0.3989[0m
[32m  ********************[0m
[32m  Best f1:0.4214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.98163:  71%|███████▏  | 10/14 [01:08<00:29,  7.27s/it]epoch 3 loss 0.97065:  71%|███████▏  | 10/14 [01:09<00:29,  7.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8492[0m
[32m  eval_f1 = 0.4232[0m
[32m  eval_mcc = 0.841[0m
[32m  eval_precision = 0.533[0m
[32m  eval_recall = 0.4009[0m
[32m  ********************[0m
[32m  Best f1:0.4232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.97065:  79%|███████▊  | 11/14 [01:20<00:26,  8.77s/it]epoch 3 loss 0.96191:  79%|███████▊  | 11/14 [01:21<00:26,  8.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8511[0m
[32m  eval_f1 = 0.4256[0m
[32m  eval_mcc = 0.843[0m
[32m  eval_precision = 0.5311[0m
[32m  eval_recall = 0.4034[0m
[32m  ********************[0m
[32m  Best f1:0.4256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.96191:  86%|████████▌ | 12/14 [01:32<00:19,  9.72s/it]epoch 3 loss 0.9539:  86%|████████▌ | 12/14 [01:33<00:19,  9.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8527[0m
[32m  eval_f1 = 0.4276[0m
[32m  eval_mcc = 0.8447[0m
[32m  eval_precision = 0.5273[0m
[32m  eval_recall = 0.4054[0m
[32m  ********************[0m
[32m  Best f1:0.4276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.9539:  93%|█████████▎| 13/14 [01:43<00:10, 10.23s/it]epoch 3 loss 0.94903:  93%|█████████▎| 13/14 [01:44<00:10, 10.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8537[0m
[32m  eval_f1 = 0.4287[0m
[32m  eval_mcc = 0.8458[0m
[32m  eval_precision = 0.5271[0m
[32m  eval_recall = 0.4068[0m
[32m  ********************[0m
[32m  Best f1:0.4287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 0.94903: 100%|██████████| 14/14 [01:55<00:00, 10.62s/it]epoch 3 loss 0.94903: 100%|██████████| 14/14 [01:55<00:00,  8.24s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 0.85623:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8552[0m
[32m  eval_f1 = 0.4306[0m
[32m  eval_mcc = 0.8473[0m
[32m  eval_precision = 0.5274[0m
[32m  eval_recall = 0.4087[0m
[32m  ********************[0m
[32m  Best f1:0.4306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.85623:   7%|▋         | 1/14 [00:11<02:31, 11.65s/it]epoch 4 loss 0.86753:   7%|▋         | 1/14 [00:12<02:31, 11.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8564[0m
[32m  eval_f1 = 0.4327[0m
[32m  eval_mcc = 0.8485[0m
[32m  eval_precision = 0.5263[0m
[32m  eval_recall = 0.4107[0m
[32m  ********************[0m
[32m  Best f1:0.4327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.86753:  14%|█▍        | 2/14 [00:21<02:06, 10.57s/it]epoch 4 loss 0.85265:  14%|█▍        | 2/14 [00:22<02:06, 10.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8578[0m
[32m  eval_f1 = 0.4347[0m
[32m  eval_mcc = 0.85[0m
[32m  eval_precision = 0.5266[0m
[32m  eval_recall = 0.4127[0m
[32m  ********************[0m
[32m  Best f1:0.4347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.85[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.85265:  21%|██▏       | 3/14 [00:30<01:49,  9.98s/it]epoch 4 loss 0.84934:  21%|██▏       | 3/14 [00:31<01:49,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.859[0m
[32m  eval_f1 = 0.4368[0m
[32m  eval_mcc = 0.8513[0m
[32m  eval_precision = 0.528[0m
[32m  eval_recall = 0.4144[0m
[32m  ********************[0m
[32m  Best f1:0.4368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84934:  29%|██▊       | 4/14 [00:39<01:35,  9.54s/it]epoch 4 loss 0.83894:  29%|██▊       | 4/14 [00:40<01:35,  9.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8595[0m
[32m  eval_f1 = 0.4373[0m
[32m  eval_mcc = 0.8519[0m
[32m  eval_precision = 0.5277[0m
[32m  eval_recall = 0.4148[0m
[32m  ********************[0m
[32m  Best f1:0.4373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.83894:  36%|███▌      | 5/14 [00:48<01:23,  9.25s/it]epoch 4 loss 0.84093:  36%|███▌      | 5/14 [00:49<01:23,  9.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8603[0m
[32m  eval_f1 = 0.4385[0m
[32m  eval_mcc = 0.8527[0m
[32m  eval_precision = 0.5278[0m
[32m  eval_recall = 0.4161[0m
[32m  ********************[0m
[32m  Best f1:0.4385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.84093:  43%|████▎     | 6/14 [00:56<01:10,  8.83s/it]epoch 4 loss 0.837:  43%|████▎     | 6/14 [00:57<01:10,  8.83s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8612[0m
[32m  eval_f1 = 0.44[0m
[32m  eval_mcc = 0.8537[0m
[32m  eval_precision = 0.5289[0m
[32m  eval_recall = 0.4176[0m
[32m  ********************[0m
[32m  Best f1:0.44[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.837:  50%|█████     | 7/14 [01:07<01:06,  9.44s/it]epoch 4 loss 0.8338:  50%|█████     | 7/14 [01:07<01:06,  9.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8618[0m
[32m  eval_f1 = 0.4418[0m
[32m  eval_mcc = 0.8543[0m
[32m  eval_precision = 0.5293[0m
[32m  eval_recall = 0.4189[0m
[32m  ********************[0m
[32m  Best f1:0.4418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.8338:  57%|█████▋    | 8/14 [01:14<00:53,  8.86s/it]epoch 4 loss 0.82861:  57%|█████▋    | 8/14 [01:15<00:53,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8622[0m
[32m  eval_f1 = 0.4422[0m
[32m  eval_mcc = 0.8547[0m
[32m  eval_precision = 0.5292[0m
[32m  eval_recall = 0.4196[0m
[32m  ********************[0m
[32m  Best f1:0.4422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.82861:  64%|██████▍   | 9/14 [01:24<00:45,  9.08s/it]epoch 4 loss 0.82126:  64%|██████▍   | 9/14 [01:25<00:45,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8626[0m
[32m  eval_f1 = 0.4428[0m
[32m  eval_mcc = 0.8551[0m
[32m  eval_precision = 0.5296[0m
[32m  eval_recall = 0.4201[0m
[32m  ********************[0m
[32m  Best f1:0.4428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.82126:  71%|███████▏  | 10/14 [01:32<00:35,  8.78s/it]epoch 4 loss 0.8144:  71%|███████▏  | 10/14 [01:33<00:35,  8.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8629[0m
[32m  eval_f1 = 0.4436[0m
[32m  eval_mcc = 0.8555[0m
[32m  eval_precision = 0.5304[0m
[32m  eval_recall = 0.4207[0m
[32m  ********************[0m
[32m  Best f1:0.4436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.8144:  79%|███████▊  | 11/14 [01:38<00:24,  8.11s/it]epoch 4 loss 0.81804:  79%|███████▊  | 11/14 [01:39<00:24,  8.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8631[0m
[32m  eval_f1 = 0.4438[0m
[32m  eval_mcc = 0.8556[0m
[32m  eval_precision = 0.53[0m
[32m  eval_recall = 0.421[0m
[32m  ********************[0m
[32m  Best f1:0.4438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.81804:  86%|████████▌ | 12/14 [01:48<00:16,  8.49s/it]epoch 4 loss 0.81972:  86%|████████▌ | 12/14 [01:49<00:16,  8.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8633[0m
[32m  eval_f1 = 0.4439[0m
[32m  eval_mcc = 0.8559[0m
[32m  eval_precision = 0.5301[0m
[32m  eval_recall = 0.4211[0m
[32m  ********************[0m
[32m  Best f1:0.4439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.81972:  93%|█████████▎| 13/14 [01:54<00:07,  7.90s/it]epoch 4 loss 0.82054:  93%|█████████▎| 13/14 [01:55<00:07,  7.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8634[0m
[32m  eval_f1 = 0.4443[0m
[32m  eval_mcc = 0.8559[0m
[32m  eval_precision = 0.5301[0m
[32m  eval_recall = 0.4213[0m
[32m  ********************[0m
[32m  Best f1:0.4443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.82054: 100%|██████████| 14/14 [02:04<00:00,  8.41s/it]epoch 4 loss 0.82054: 100%|██████████| 14/14 [02:04<00:00,  8.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.64it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8634[0m
[32m  eval_f1 = 0.4443[0m
[32m  eval_mcc = 0.8559[0m
[32m  eval_precision = 0.5301[0m
[32m  eval_recall = 0.4213[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8477[0m
[32m  eval_f1 = 0.4004[0m
[32m  eval_mcc = 0.8398[0m
[32m  eval_precision = 0.4889[0m
[32m  eval_recall = 0.379[0m

