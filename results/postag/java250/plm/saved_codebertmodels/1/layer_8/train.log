[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/plm/saved_codebertmodels/1/layer_8', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 4.99065:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0186[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = 0.0111[0m
[32m  eval_precision = 0.0048[0m
[32m  eval_recall = 0.0096[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.99065:   7%|▋         | 1/14 [00:05<01:14,  5.74s/it]epoch 0 loss 4.98747:   7%|▋         | 1/14 [00:06<01:14,  5.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0202[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0123[0m
[32m  eval_precision = 0.0049[0m
[32m  eval_recall = 0.0098[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98747:  14%|█▍        | 2/14 [00:12<01:14,  6.18s/it]epoch 0 loss 4.98475:  14%|█▍        | 2/14 [00:13<01:14,  6.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0229[0m
[32m  eval_f1 = 0.0032[0m
[32m  eval_mcc = 0.014[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0103[0m
[32m  ********************[0m
[32m  Best f1:0.0032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98475:  21%|██▏       | 3/14 [00:18<01:06,  6.07s/it]epoch 0 loss 4.976:  21%|██▏       | 3/14 [00:18<01:06,  6.07s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0288[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0183[0m
[32m  eval_precision = 0.0059[0m
[32m  eval_recall = 0.0118[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.976:  29%|██▊       | 4/14 [00:24<01:00,  6.04s/it]epoch 0 loss 4.95808:  29%|██▊       | 4/14 [00:24<01:00,  6.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0382[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0254[0m
[32m  eval_precision = 0.0073[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95808:  36%|███▌      | 5/14 [00:30<00:54,  6.02s/it]epoch 0 loss 4.93901:  36%|███▌      | 5/14 [00:30<00:54,  6.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0496[0m
[32m  eval_f1 = 0.0082[0m
[32m  eval_mcc = 0.0333[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93901:  43%|████▎     | 6/14 [00:36<00:48,  6.01s/it]epoch 0 loss 4.91425:  43%|████▎     | 6/14 [00:36<00:48,  6.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0671[0m
[32m  eval_f1 = 0.0104[0m
[32m  eval_mcc = 0.0461[0m
[32m  eval_precision = 0.0135[0m
[32m  eval_recall = 0.0234[0m
[32m  ********************[0m
[32m  Best f1:0.0104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.91425:  50%|█████     | 7/14 [00:42<00:42,  6.00s/it]epoch 0 loss 4.8857:  50%|█████     | 7/14 [00:42<00:42,  6.00s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0991[0m
[32m  eval_f1 = 0.0188[0m
[32m  eval_mcc = 0.073[0m
[32m  eval_precision = 0.0372[0m
[32m  eval_recall = 0.0332[0m
[32m  ********************[0m
[32m  Best f1:0.0188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8857:  57%|█████▋    | 8/14 [00:48<00:37,  6.21s/it]epoch 0 loss 4.85381:  57%|█████▋    | 8/14 [00:49<00:37,  6.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1476[0m
[32m  eval_f1 = 0.0327[0m
[32m  eval_mcc = 0.1169[0m
[32m  eval_precision = 0.0561[0m
[32m  eval_recall = 0.0512[0m
[32m  ********************[0m
[32m  Best f1:0.0327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85381:  64%|██████▍   | 9/14 [00:55<00:31,  6.38s/it]epoch 0 loss 4.81697:  64%|██████▍   | 9/14 [00:56<00:31,  6.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2019[0m
[32m  eval_f1 = 0.0465[0m
[32m  eval_mcc = 0.1692[0m
[32m  eval_precision = 0.0854[0m
[32m  eval_recall = 0.0686[0m
[32m  ********************[0m
[32m  Best f1:0.0465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.81697:  71%|███████▏  | 10/14 [01:01<00:25,  6.26s/it]epoch 0 loss 4.77448:  71%|███████▏  | 10/14 [01:02<00:25,  6.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2614[0m
[32m  eval_f1 = 0.0631[0m
[32m  eval_mcc = 0.2291[0m
[32m  eval_precision = 0.1091[0m
[32m  eval_recall = 0.0854[0m
[32m  ********************[0m
[32m  Best f1:0.0631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77448:  79%|███████▊  | 11/14 [01:08<00:19,  6.38s/it]epoch 0 loss 4.72882:  79%|███████▊  | 11/14 [01:08<00:19,  6.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3285[0m
[32m  eval_f1 = 0.0891[0m
[32m  eval_mcc = 0.2986[0m
[32m  eval_precision = 0.1589[0m
[32m  eval_recall = 0.1083[0m
[32m  ********************[0m
[32m  Best f1:0.0891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72882:  86%|████████▌ | 12/14 [01:14<00:12,  6.48s/it]epoch 0 loss 4.67869:  86%|████████▌ | 12/14 [01:15<00:12,  6.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3999[0m
[32m  eval_f1 = 0.1221[0m
[32m  eval_mcc = 0.3735[0m
[32m  eval_precision = 0.2082[0m
[32m  eval_recall = 0.135[0m
[32m  ********************[0m
[32m  Best f1:0.1221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.67869:  93%|█████████▎| 13/14 [01:21<00:06,  6.56s/it]epoch 0 loss 4.62201:  93%|█████████▎| 13/14 [01:22<00:06,  6.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4665[0m
[32m  eval_f1 = 0.153[0m
[32m  eval_mcc = 0.4432[0m
[32m  eval_precision = 0.2527[0m
[32m  eval_recall = 0.1584[0m
[32m  ********************[0m
[32m  Best f1:0.153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62201: 100%|██████████| 14/14 [01:28<00:00,  6.77s/it]epoch 0 loss 4.62201: 100%|██████████| 14/14 [01:28<00:00,  6.35s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 3.77407:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5234[0m
[32m  eval_f1 = 0.1822[0m
[32m  eval_mcc = 0.5025[0m
[32m  eval_precision = 0.2701[0m
[32m  eval_recall = 0.1811[0m
[32m  ********************[0m
[32m  Best f1:0.1822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.77407:   7%|▋         | 1/14 [00:06<01:18,  6.02s/it]epoch 1 loss 3.69289:   7%|▋         | 1/14 [00:06<01:18,  6.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5762[0m
[32m  eval_f1 = 0.2083[0m
[32m  eval_mcc = 0.5575[0m
[32m  eval_precision = 0.3073[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.2083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.69289:  14%|█▍        | 2/14 [00:13<01:23,  6.94s/it]epoch 1 loss 3.59088:  14%|█▍        | 2/14 [00:14<01:23,  6.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6148[0m
[32m  eval_f1 = 0.2285[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3328[0m
[32m  eval_recall = 0.2213[0m
[32m  ********************[0m
[32m  Best f1:0.2285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.59088:  21%|██▏       | 3/14 [00:21<01:22,  7.51s/it]epoch 1 loss 3.49833:  21%|██▏       | 3/14 [00:22<01:22,  7.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.2453[0m
[32m  eval_mcc = 0.6292[0m
[32m  eval_precision = 0.3438[0m
[32m  eval_recall = 0.2364[0m
[32m  ********************[0m
[32m  Best f1:0.2453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.49833:  29%|██▊       | 4/14 [00:32<01:27,  8.77s/it]epoch 1 loss 3.40984:  29%|██▊       | 4/14 [00:33<01:27,  8.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.2587[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.3494[0m
[32m  eval_recall = 0.2487[0m
[32m  ********************[0m
[32m  Best f1:0.2587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.40984:  36%|███▌      | 5/14 [00:43<01:25,  9.50s/it]epoch 1 loss 3.32581:  36%|███▌      | 5/14 [00:44<01:25,  9.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6942[0m
[32m  eval_f1 = 0.2667[0m
[32m  eval_mcc = 0.6802[0m
[32m  eval_precision = 0.3538[0m
[32m  eval_recall = 0.2567[0m
[32m  ********************[0m
[32m  Best f1:0.2667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.32581:  43%|████▎     | 6/14 [00:53<01:16,  9.59s/it]epoch 1 loss 3.25087:  43%|████▎     | 6/14 [00:53<01:16,  9.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7094[0m
[32m  eval_f1 = 0.273[0m
[32m  eval_mcc = 0.696[0m
[32m  eval_precision = 0.3608[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best f1:0.273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.25087:  50%|█████     | 7/14 [01:03<01:08,  9.73s/it]epoch 1 loss 3.18525:  50%|█████     | 7/14 [01:03<01:08,  9.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7215[0m
[32m  eval_f1 = 0.2779[0m
[32m  eval_mcc = 0.7085[0m
[32m  eval_precision = 0.3735[0m
[32m  eval_recall = 0.2678[0m
[32m  ********************[0m
[32m  Best f1:0.2779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.18525:  57%|█████▋    | 8/14 [01:11<00:56,  9.34s/it]epoch 1 loss 3.1172:  57%|█████▋    | 8/14 [01:12<00:56,  9.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7333[0m
[32m  eval_f1 = 0.2824[0m
[32m  eval_mcc = 0.7207[0m
[32m  eval_precision = 0.3759[0m
[32m  eval_recall = 0.2724[0m
[32m  ********************[0m
[32m  Best f1:0.2824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.1172:  64%|██████▍   | 9/14 [01:22<00:48,  9.70s/it]epoch 1 loss 3.05182:  64%|██████▍   | 9/14 [01:22<00:48,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7434[0m
[32m  eval_f1 = 0.2877[0m
[32m  eval_mcc = 0.7313[0m
[32m  eval_precision = 0.3989[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.2877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.05182:  71%|███████▏  | 10/14 [01:30<00:37,  9.33s/it]epoch 1 loss 2.99571:  71%|███████▏  | 10/14 [01:31<00:37,  9.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7514[0m
[32m  eval_f1 = 0.2937[0m
[32m  eval_mcc = 0.7396[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.282[0m
[32m  ********************[0m
[32m  Best f1:0.2937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.99571:  79%|███████▊  | 11/14 [01:40<00:28,  9.61s/it]epoch 1 loss 2.94449:  79%|███████▊  | 11/14 [01:41<00:28,  9.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7589[0m
[32m  eval_f1 = 0.2993[0m
[32m  eval_mcc = 0.7473[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.2867[0m
[32m  ********************[0m
[32m  Best f1:0.2993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.94449:  86%|████████▌ | 12/14 [01:49<00:18,  9.18s/it]epoch 1 loss 2.87837:  86%|████████▌ | 12/14 [01:49<00:18,  9.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7649[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.7535[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2899[0m
[32m  ********************[0m
[32m  Best f1:0.3022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.87837:  93%|█████████▎| 13/14 [01:58<00:09,  9.30s/it]epoch 1 loss 2.81856:  93%|█████████▎| 13/14 [01:59<00:09,  9.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7709[0m
[32m  eval_f1 = 0.3063[0m
[32m  eval_mcc = 0.7597[0m
[32m  eval_precision = 0.4058[0m
[32m  eval_recall = 0.2941[0m
[32m  ********************[0m
[32m  Best f1:0.3063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.81856: 100%|██████████| 14/14 [02:08<00:00,  9.50s/it]epoch 1 loss 2.81856: 100%|██████████| 14/14 [02:08<00:00,  9.18s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 1.96932:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.776[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.7649[0m
[32m  eval_precision = 0.4093[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best f1:0.3111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.96932:   7%|▋         | 1/14 [00:10<02:16, 10.47s/it]epoch 2 loss 1.93623:   7%|▋         | 1/14 [00:11<02:16, 10.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7807[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.7698[0m
[32m  eval_precision = 0.4217[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.93623:  14%|█▍        | 2/14 [00:20<02:05, 10.42s/it]epoch 2 loss 1.88974:  14%|█▍        | 2/14 [00:21<02:05, 10.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7844[0m
[32m  eval_f1 = 0.3201[0m
[32m  eval_mcc = 0.7737[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.306[0m
[32m  ********************[0m
[32m  Best f1:0.3201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.88974:  21%|██▏       | 3/14 [00:31<01:53, 10.34s/it]epoch 2 loss 1.85734:  21%|██▏       | 3/14 [00:31<01:53, 10.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7885[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.7779[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.3089[0m
[32m  ********************[0m
[32m  Best f1:0.3234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.85734:  29%|██▊       | 4/14 [00:40<01:41, 10.14s/it]epoch 2 loss 1.80599:  29%|██▊       | 4/14 [00:41<01:41, 10.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7933[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.7828[0m
[32m  eval_precision = 0.4334[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.80599:  36%|███▌      | 5/14 [00:51<01:31, 10.15s/it]epoch 2 loss 1.78432:  36%|███▌      | 5/14 [00:51<01:31, 10.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.798[0m
[32m  eval_f1 = 0.3328[0m
[32m  eval_mcc = 0.7877[0m
[32m  eval_precision = 0.4351[0m
[32m  eval_recall = 0.3169[0m
[32m  ********************[0m
[32m  Best f1:0.3328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.78432:  43%|████▎     | 6/14 [01:01<01:21, 10.20s/it]epoch 2 loss 1.75591:  43%|████▎     | 6/14 [01:02<01:21, 10.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8018[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.7916[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3209[0m
[32m  ********************[0m
[32m  Best f1:0.3377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.75591:  50%|█████     | 7/14 [01:10<01:09,  9.95s/it]epoch 2 loss 1.72929:  50%|█████     | 7/14 [01:11<01:09,  9.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8059[0m
[32m  eval_f1 = 0.3432[0m
[32m  eval_mcc = 0.7959[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.3256[0m
[32m  ********************[0m
[32m  Best f1:0.3432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.72929:  57%|█████▋    | 8/14 [01:17<00:54,  9.02s/it]epoch 2 loss 1.71438:  57%|█████▋    | 8/14 [01:18<00:54,  9.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8092[0m
[32m  eval_f1 = 0.3481[0m
[32m  eval_mcc = 0.7993[0m
[32m  eval_precision = 0.4481[0m
[32m  eval_recall = 0.3299[0m
[32m  ********************[0m
[32m  Best f1:0.3481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.71438:  64%|██████▍   | 9/14 [01:27<00:46,  9.25s/it]epoch 2 loss 1.69254:  64%|██████▍   | 9/14 [01:28<00:46,  9.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8121[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.8023[0m
[32m  eval_precision = 0.4455[0m
[32m  eval_recall = 0.3342[0m
[32m  ********************[0m
[32m  Best f1:0.3526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69254:  71%|███████▏  | 10/14 [01:36<00:36,  9.14s/it]epoch 2 loss 1.66448:  71%|███████▏  | 10/14 [01:37<00:36,  9.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8143[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.8046[0m
[32m  eval_precision = 0.4461[0m
[32m  eval_recall = 0.3369[0m
[32m  ********************[0m
[32m  Best f1:0.3555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66448:  79%|███████▊  | 11/14 [01:46<00:28,  9.35s/it]epoch 2 loss 1.6414:  79%|███████▊  | 11/14 [01:47<00:28,  9.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8164[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.8068[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6414:  86%|████████▌ | 12/14 [01:53<00:17,  8.72s/it]epoch 2 loss 1.62531:  86%|████████▌ | 12/14 [01:54<00:17,  8.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.819[0m
[32m  eval_f1 = 0.366[0m
[32m  eval_mcc = 0.8095[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62531:  93%|█████████▎| 13/14 [01:59<00:07,  7.94s/it]epoch 2 loss 1.60241:  93%|█████████▎| 13/14 [02:00<00:07,  7.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8207[0m
[32m  eval_f1 = 0.3726[0m
[32m  eval_mcc = 0.8114[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3508[0m
[32m  ********************[0m
[32m  Best f1:0.3726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60241: 100%|██████████| 14/14 [02:05<00:00,  7.41s/it]epoch 2 loss 1.60241: 100%|██████████| 14/14 [02:05<00:00,  9.00s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.23092:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8226[0m
[32m  eval_f1 = 0.3756[0m
[32m  eval_mcc = 0.8133[0m
[32m  eval_precision = 0.4603[0m
[32m  eval_recall = 0.3536[0m
[32m  ********************[0m
[32m  Best f1:0.3756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23092:   7%|▋         | 1/14 [00:11<02:27, 11.36s/it]epoch 3 loss 1.18236:   7%|▋         | 1/14 [00:12<02:27, 11.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8248[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.8156[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18236:  14%|█▍        | 2/14 [00:22<02:12, 11.06s/it]epoch 3 loss 1.21438:  14%|█▍        | 2/14 [00:23<02:12, 11.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8266[0m
[32m  eval_f1 = 0.3872[0m
[32m  eval_mcc = 0.8176[0m
[32m  eval_precision = 0.4796[0m
[32m  eval_recall = 0.3641[0m
[32m  ********************[0m
[32m  Best f1:0.3872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21438:  21%|██▏       | 3/14 [00:33<02:03, 11.19s/it]epoch 3 loss 1.22377:  21%|██▏       | 3/14 [00:34<02:03, 11.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8285[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.8196[0m
[32m  eval_precision = 0.4827[0m
[32m  eval_recall = 0.3718[0m
[32m  ********************[0m
[32m  Best f1:0.3943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22377:  29%|██▊       | 4/14 [00:44<01:49, 10.98s/it]epoch 3 loss 1.195:  29%|██▊       | 4/14 [00:45<01:49, 10.98s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8302[0m
[32m  eval_f1 = 0.3991[0m
[32m  eval_mcc = 0.8213[0m
[32m  eval_precision = 0.4842[0m
[32m  eval_recall = 0.3777[0m
[32m  ********************[0m
[32m  Best f1:0.3991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.195:  36%|███▌      | 5/14 [00:55<01:40, 11.14s/it]epoch 3 loss 1.19918:  36%|███▌      | 5/14 [00:56<01:40, 11.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8318[0m
[32m  eval_f1 = 0.4022[0m
[32m  eval_mcc = 0.823[0m
[32m  eval_precision = 0.4851[0m
[32m  eval_recall = 0.3813[0m
[32m  ********************[0m
[32m  Best f1:0.4022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19918:  43%|████▎     | 6/14 [01:04<01:23, 10.47s/it]epoch 3 loss 1.17973:  43%|████▎     | 6/14 [01:05<01:23, 10.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8329[0m
[32m  eval_f1 = 0.4038[0m
[32m  eval_mcc = 0.8242[0m
[32m  eval_precision = 0.4955[0m
[32m  eval_recall = 0.3831[0m
[32m  ********************[0m
[32m  Best f1:0.4038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17973:  50%|█████     | 7/14 [01:15<01:13, 10.48s/it]epoch 3 loss 1.1679:  50%|█████     | 7/14 [01:16<01:13, 10.48s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8339[0m
[32m  eval_f1 = 0.4053[0m
[32m  eval_mcc = 0.8252[0m
[32m  eval_precision = 0.4957[0m
[32m  eval_recall = 0.3845[0m
[32m  ********************[0m
[32m  Best f1:0.4053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1679:  57%|█████▋    | 8/14 [01:23<00:58,  9.81s/it]epoch 3 loss 1.15928:  57%|█████▋    | 8/14 [01:24<00:58,  9.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8352[0m
[32m  eval_f1 = 0.4065[0m
[32m  eval_mcc = 0.8266[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3856[0m
[32m  ********************[0m
[32m  Best f1:0.4065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15928:  64%|██████▍   | 9/14 [01:34<00:49,  9.98s/it]epoch 3 loss 1.14823:  64%|██████▍   | 9/14 [01:34<00:49,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8365[0m
[32m  eval_f1 = 0.4086[0m
[32m  eval_mcc = 0.8279[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3874[0m
[32m  ********************[0m
[32m  Best f1:0.4086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14823:  71%|███████▏  | 10/14 [01:42<00:38,  9.59s/it]epoch 3 loss 1.13975:  71%|███████▏  | 10/14 [01:43<00:38,  9.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8376[0m
[32m  eval_f1 = 0.4104[0m
[32m  eval_mcc = 0.8291[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3892[0m
[32m  ********************[0m
[32m  Best f1:0.4104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13975:  79%|███████▊  | 11/14 [01:52<00:29,  9.78s/it]epoch 3 loss 1.13533:  79%|███████▊  | 11/14 [01:53<00:29,  9.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8389[0m
[32m  eval_f1 = 0.4113[0m
[32m  eval_mcc = 0.8305[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3902[0m
[32m  ********************[0m
[32m  Best f1:0.4113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13533:  86%|████████▌ | 12/14 [02:01<00:18,  9.42s/it]epoch 3 loss 1.12863:  86%|████████▌ | 12/14 [02:02<00:18,  9.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.84[0m
[32m  eval_f1 = 0.4126[0m
[32m  eval_mcc = 0.8316[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3915[0m
[32m  ********************[0m
[32m  Best f1:0.4126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.12863:  93%|█████████▎| 13/14 [02:11<00:09,  9.49s/it]epoch 3 loss 1.11421:  93%|█████████▎| 13/14 [02:11<00:09,  9.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8409[0m
[32m  eval_f1 = 0.4143[0m
[32m  eval_mcc = 0.8326[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3931[0m
[32m  ********************[0m
[32m  Best f1:0.4143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.11421: 100%|██████████| 14/14 [02:19<00:00,  9.07s/it]epoch 3 loss 1.11421: 100%|██████████| 14/14 [02:19<00:00,  9.95s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 0.99602:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.842[0m
[32m  eval_f1 = 0.4158[0m
[32m  eval_mcc = 0.8337[0m
[32m  eval_precision = 0.5033[0m
[32m  eval_recall = 0.3945[0m
[32m  ********************[0m
[32m  Best f1:0.4158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.99602:   7%|▋         | 1/14 [00:06<01:28,  6.79s/it]epoch 4 loss 1.01566:   7%|▋         | 1/14 [00:07<01:28,  6.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8429[0m
[32m  eval_f1 = 0.4172[0m
[32m  eval_mcc = 0.8346[0m
[32m  eval_precision = 0.5034[0m
[32m  eval_recall = 0.3956[0m
[32m  ********************[0m
[32m  Best f1:0.4172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.01566:  14%|█▍        | 2/14 [00:17<01:47,  8.97s/it]epoch 4 loss 0.99125:  14%|█▍        | 2/14 [00:18<01:47,  8.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8437[0m
[32m  eval_f1 = 0.4189[0m
[32m  eval_mcc = 0.8355[0m
[32m  eval_precision = 0.5142[0m
[32m  eval_recall = 0.397[0m
[32m  ********************[0m
[32m  Best f1:0.4189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.99125:  21%|██▏       | 3/14 [00:27<01:45,  9.55s/it]epoch 4 loss 0.9839:  21%|██▏       | 3/14 [00:28<01:45,  9.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8443[0m
[32m  eval_f1 = 0.4194[0m
[32m  eval_mcc = 0.8361[0m
[32m  eval_precision = 0.5138[0m
[32m  eval_recall = 0.3975[0m
[32m  ********************[0m
[32m  Best f1:0.4194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.9839:  29%|██▊       | 4/14 [00:38<01:40, 10.03s/it]epoch 4 loss 0.97709:  29%|██▊       | 4/14 [00:39<01:40, 10.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8451[0m
[32m  eval_f1 = 0.4203[0m
[32m  eval_mcc = 0.837[0m
[32m  eval_precision = 0.5142[0m
[32m  eval_recall = 0.3984[0m
[32m  ********************[0m
[32m  Best f1:0.4203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.97709:  36%|███▌      | 5/14 [00:48<01:29,  9.93s/it]epoch 4 loss 0.97763:  36%|███▌      | 5/14 [00:48<01:29,  9.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8457[0m
[32m  eval_f1 = 0.4209[0m
[32m  eval_mcc = 0.8376[0m
[32m  eval_precision = 0.5143[0m
[32m  eval_recall = 0.399[0m
[32m  ********************[0m
[32m  Best f1:0.4209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.97763:  43%|████▎     | 6/14 [00:57<01:19,  9.89s/it]epoch 4 loss 0.96626:  43%|████▎     | 6/14 [00:58<01:19,  9.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8461[0m
[32m  eval_f1 = 0.4211[0m
[32m  eval_mcc = 0.838[0m
[32m  eval_precision = 0.5144[0m
[32m  eval_recall = 0.3993[0m
[32m  ********************[0m
[32m  Best f1:0.4211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.96626:  50%|█████     | 7/14 [01:06<01:07,  9.63s/it]epoch 4 loss 0.96636:  50%|█████     | 7/14 [01:07<01:07,  9.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8467[0m
[32m  eval_f1 = 0.423[0m
[32m  eval_mcc = 0.8387[0m
[32m  eval_precision = 0.5196[0m
[32m  eval_recall = 0.4008[0m
[32m  ********************[0m
[32m  Best f1:0.423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.96636:  57%|█████▋    | 8/14 [01:16<00:58,  9.70s/it]epoch 4 loss 0.95873:  57%|█████▋    | 8/14 [01:17<00:58,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8474[0m
[32m  eval_f1 = 0.4243[0m
[32m  eval_mcc = 0.8394[0m
[32m  eval_precision = 0.5196[0m
[32m  eval_recall = 0.4022[0m
[32m  ********************[0m
[32m  Best f1:0.4243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.95873:  64%|██████▍   | 9/14 [01:27<00:49,  9.86s/it]epoch 4 loss 0.96269:  64%|██████▍   | 9/14 [01:27<00:49,  9.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8478[0m
[32m  eval_f1 = 0.4246[0m
[32m  eval_mcc = 0.8398[0m
[32m  eval_precision = 0.5197[0m
[32m  eval_recall = 0.4025[0m
[32m  ********************[0m
[32m  Best f1:0.4246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.96269:  71%|███████▏  | 10/14 [01:35<00:37,  9.49s/it]epoch 4 loss 0.9603:  71%|███████▏  | 10/14 [01:36<00:37,  9.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8482[0m
[32m  eval_f1 = 0.4251[0m
[32m  eval_mcc = 0.8402[0m
[32m  eval_precision = 0.5198[0m
[32m  eval_recall = 0.4032[0m
[32m  ********************[0m
[32m  Best f1:0.4251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.9603:  79%|███████▊  | 11/14 [01:45<00:29,  9.71s/it]epoch 4 loss 0.9587:  79%|███████▊  | 11/14 [01:46<00:29,  9.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8484[0m
[32m  eval_f1 = 0.4254[0m
[32m  eval_mcc = 0.8404[0m
[32m  eval_precision = 0.5199[0m
[32m  eval_recall = 0.4035[0m
[32m  ********************[0m
[32m  Best f1:0.4254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.9587:  86%|████████▌ | 12/14 [01:53<00:18,  9.23s/it]epoch 4 loss 0.95572:  86%|████████▌ | 12/14 [01:54<00:18,  9.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8485[0m
[32m  eval_f1 = 0.4259[0m
[32m  eval_mcc = 0.8405[0m
[32m  eval_precision = 0.52[0m
[32m  eval_recall = 0.4041[0m
[32m  ********************[0m
[32m  Best f1:0.4259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.95572:  93%|█████████▎| 13/14 [02:04<00:09,  9.46s/it]epoch 4 loss 0.95286:  93%|█████████▎| 13/14 [02:04<00:09,  9.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8486[0m
[32m  eval_f1 = 0.426[0m
[32m  eval_mcc = 0.8406[0m
[32m  eval_precision = 0.52[0m
[32m  eval_recall = 0.4043[0m
[32m  ********************[0m
[32m  Best f1:0.426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/plm/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 0.95286: 100%|██████████| 14/14 [02:11<00:00,  8.95s/it]epoch 4 loss 0.95286: 100%|██████████| 14/14 [02:11<00:00,  9.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.63it/s] 20%|██        | 2/10 [00:00<00:03,  2.66it/s] 30%|███       | 3/10 [00:01<00:02,  2.66it/s] 40%|████      | 4/10 [00:01<00:02,  2.70it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8486[0m
[32m  eval_f1 = 0.426[0m
[32m  eval_mcc = 0.8406[0m
[32m  eval_precision = 0.52[0m
[32m  eval_recall = 0.4043[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8357[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.8276[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.363[0m

