[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.dense.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.bias', 'lm_head.decoder.weight', 'lm_head.bias', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.50047:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0039[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0001[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0006[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50047:   7%|▋         | 1/14 [00:06<01:20,  6.21s/it]epoch 0 loss 5.49966:   7%|▋         | 1/14 [00:06<01:20,  6.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0051[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0011[0m
[32m  eval_precision = 0.0025[0m
[32m  eval_recall = 0.0008[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49966:  14%|█▍        | 2/14 [00:12<01:13,  6.14s/it]epoch 0 loss 5.49767:  14%|█▍        | 2/14 [00:13<01:13,  6.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0076[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0012[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49767:  21%|██▏       | 3/14 [00:18<01:07,  6.17s/it]epoch 0 loss 5.48579:  21%|██▏       | 3/14 [00:19<01:07,  6.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0132[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.007[0m
[32m  eval_precision = 0.0053[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48579:  29%|██▊       | 4/14 [00:25<01:05,  6.53s/it]epoch 0 loss 5.47352:  29%|██▊       | 4/14 [00:26<01:05,  6.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0226[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0141[0m
[32m  eval_precision = 0.0064[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47352:  36%|███▌      | 5/14 [00:32<01:00,  6.68s/it]epoch 0 loss 5.45352:  36%|███▌      | 5/14 [00:33<01:00,  6.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0344[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0225[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.0054[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45352:  43%|████▎     | 6/14 [00:39<00:54,  6.78s/it]epoch 0 loss 5.43031:  43%|████▎     | 6/14 [00:40<00:54,  6.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0552[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0386[0m
[32m  eval_precision = 0.0129[0m
[32m  eval_recall = 0.0105[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43031:  50%|█████     | 7/14 [00:46<00:47,  6.86s/it]epoch 0 loss 5.40131:  50%|█████     | 7/14 [00:47<00:47,  6.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0889[0m
[32m  eval_f1 = 0.0141[0m
[32m  eval_mcc = 0.0673[0m
[32m  eval_precision = 0.0255[0m
[32m  eval_recall = 0.0179[0m
[32m  ********************[0m
[32m  Best f1:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40131:  57%|█████▋    | 8/14 [00:53<00:41,  6.86s/it]epoch 0 loss 5.36727:  57%|█████▋    | 8/14 [00:54<00:41,  6.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.137[0m
[32m  eval_f1 = 0.0245[0m
[32m  eval_mcc = 0.1109[0m
[32m  eval_precision = 0.0333[0m
[32m  eval_recall = 0.0302[0m
[32m  ********************[0m
[32m  Best f1:0.0245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.36727:  64%|██████▍   | 9/14 [01:00<00:34,  6.87s/it]epoch 0 loss 5.32697:  64%|██████▍   | 9/14 [01:01<00:34,  6.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1912[0m
[32m  eval_f1 = 0.0345[0m
[32m  eval_mcc = 0.1631[0m
[32m  eval_precision = 0.0483[0m
[32m  eval_recall = 0.042[0m
[32m  ********************[0m
[32m  Best f1:0.0345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.32697:  71%|███████▏  | 10/14 [01:07<00:27,  6.90s/it]epoch 0 loss 5.28133:  71%|███████▏  | 10/14 [01:08<00:27,  6.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.241[0m
[32m  eval_f1 = 0.0512[0m
[32m  eval_mcc = 0.2131[0m
[32m  eval_precision = 0.068[0m
[32m  eval_recall = 0.0614[0m
[32m  ********************[0m
[32m  Best f1:0.0512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.28133:  79%|███████▊  | 11/14 [01:14<00:20,  6.90s/it]epoch 0 loss 5.23232:  79%|███████▊  | 11/14 [01:14<00:20,  6.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3023[0m
[32m  eval_f1 = 0.0765[0m
[32m  eval_mcc = 0.2765[0m
[32m  eval_precision = 0.1061[0m
[32m  eval_recall = 0.0877[0m
[32m  ********************[0m
[32m  Best f1:0.0765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23232:  86%|████████▌ | 12/14 [01:21<00:13,  6.91s/it]epoch 0 loss 5.17869:  86%|████████▌ | 12/14 [01:21<00:13,  6.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3642[0m
[32m  eval_f1 = 0.1116[0m
[32m  eval_mcc = 0.341[0m
[32m  eval_precision = 0.1553[0m
[32m  eval_recall = 0.1211[0m
[32m  ********************[0m
[32m  Best f1:0.1116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17869:  93%|█████████▎| 13/14 [01:29<00:07,  7.50s/it]epoch 0 loss 5.12087:  93%|█████████▎| 13/14 [01:30<00:07,  7.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4324[0m
[32m  eval_f1 = 0.1493[0m
[32m  eval_mcc = 0.4113[0m
[32m  eval_precision = 0.2113[0m
[32m  eval_recall = 0.157[0m
[32m  ********************[0m
[32m  Best f1:0.1493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12087: 100%|██████████| 14/14 [01:38<00:00,  7.78s/it]epoch 0 loss 5.12087: 100%|██████████| 14/14 [01:38<00:00,  7.02s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.18984:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4997[0m
[32m  eval_f1 = 0.1846[0m
[32m  eval_mcc = 0.4805[0m
[32m  eval_precision = 0.2494[0m
[32m  eval_recall = 0.1901[0m
[32m  ********************[0m
[32m  Best f1:0.1846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.18984:   7%|▋         | 1/14 [00:08<01:53,  8.71s/it]epoch 1 loss 4.10049:   7%|▋         | 1/14 [00:09<01:53,  8.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5544[0m
[32m  eval_f1 = 0.2067[0m
[32m  eval_mcc = 0.5362[0m
[32m  eval_precision = 0.2689[0m
[32m  eval_recall = 0.2098[0m
[32m  ********************[0m
[32m  Best f1:0.2067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.10049:  14%|█▍        | 2/14 [00:18<01:48,  9.07s/it]epoch 1 loss 3.99661:  14%|█▍        | 2/14 [00:18<01:48,  9.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5982[0m
[32m  eval_f1 = 0.2259[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.2964[0m
[32m  eval_recall = 0.227[0m
[32m  ********************[0m
[32m  Best f1:0.2259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.99661:  21%|██▏       | 3/14 [00:28<01:47,  9.73s/it]epoch 1 loss 3.9097:  21%|██▏       | 3/14 [00:29<01:47,  9.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.2426[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.3283[0m
[32m  eval_recall = 0.2422[0m
[32m  ********************[0m
[32m  Best f1:0.2426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.9097:  29%|██▊       | 4/14 [00:39<01:43, 10.36s/it]epoch 1 loss 3.82228:  29%|██▊       | 4/14 [00:40<01:43, 10.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.2562[0m
[32m  eval_mcc = 0.6446[0m
[32m  eval_precision = 0.3383[0m
[32m  eval_recall = 0.2542[0m
[32m  ********************[0m
[32m  Best f1:0.2562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.82228:  36%|███▌      | 5/14 [00:49<01:29,  9.96s/it]epoch 1 loss 3.73861:  36%|███▌      | 5/14 [00:49<01:29,  9.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6808[0m
[32m  eval_f1 = 0.2657[0m
[32m  eval_mcc = 0.6661[0m
[32m  eval_precision = 0.3448[0m
[32m  eval_recall = 0.2622[0m
[32m  ********************[0m
[32m  Best f1:0.2657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.73861:  43%|████▎     | 6/14 [00:57<01:15,  9.48s/it]epoch 1 loss 3.66441:  43%|████▎     | 6/14 [00:58<01:15,  9.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6993[0m
[32m  eval_f1 = 0.2715[0m
[32m  eval_mcc = 0.6851[0m
[32m  eval_precision = 0.3492[0m
[32m  eval_recall = 0.2673[0m
[32m  ********************[0m
[32m  Best f1:0.2715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.66441:  50%|█████     | 7/14 [01:06<01:05,  9.36s/it]epoch 1 loss 3.58877:  50%|█████     | 7/14 [01:07<01:05,  9.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7143[0m
[32m  eval_f1 = 0.2778[0m
[32m  eval_mcc = 0.7006[0m
[32m  eval_precision = 0.3538[0m
[32m  eval_recall = 0.272[0m
[32m  ********************[0m
[32m  Best f1:0.2778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.58877:  57%|█████▋    | 8/14 [01:14<00:53,  8.97s/it]epoch 1 loss 3.51251:  57%|█████▋    | 8/14 [01:15<00:53,  8.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7277[0m
[32m  eval_f1 = 0.2822[0m
[32m  eval_mcc = 0.7144[0m
[32m  eval_precision = 0.3575[0m
[32m  eval_recall = 0.2757[0m
[32m  ********************[0m
[32m  Best f1:0.2822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.51251:  64%|██████▍   | 9/14 [01:22<00:42,  8.48s/it]epoch 1 loss 3.43503:  64%|██████▍   | 9/14 [01:23<00:42,  8.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7404[0m
[32m  eval_f1 = 0.2867[0m
[32m  eval_mcc = 0.7274[0m
[32m  eval_precision = 0.3696[0m
[32m  eval_recall = 0.2789[0m
[32m  ********************[0m
[32m  Best f1:0.2867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.43503:  71%|███████▏  | 10/14 [01:29<00:32,  8.17s/it]epoch 1 loss 3.37074:  71%|███████▏  | 10/14 [01:30<00:32,  8.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7508[0m
[32m  eval_f1 = 0.291[0m
[32m  eval_mcc = 0.7382[0m
[32m  eval_precision = 0.3724[0m
[32m  eval_recall = 0.2822[0m
[32m  ********************[0m
[32m  Best f1:0.291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.37074:  79%|███████▊  | 11/14 [01:38<00:25,  8.45s/it]epoch 1 loss 3.30154:  79%|███████▊  | 11/14 [01:39<00:25,  8.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7596[0m
[32m  eval_f1 = 0.2933[0m
[32m  eval_mcc = 0.7473[0m
[32m  eval_precision = 0.3751[0m
[32m  eval_recall = 0.2839[0m
[32m  ********************[0m
[32m  Best f1:0.2933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.30154:  86%|████████▌ | 12/14 [01:46<00:16,  8.28s/it]epoch 1 loss 3.23549:  86%|████████▌ | 12/14 [01:47<00:16,  8.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.767[0m
[32m  eval_f1 = 0.2962[0m
[32m  eval_mcc = 0.755[0m
[32m  eval_precision = 0.3756[0m
[32m  eval_recall = 0.2861[0m
[32m  ********************[0m
[32m  Best f1:0.2962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.23549:  93%|█████████▎| 13/14 [01:55<00:08,  8.49s/it]epoch 1 loss 3.17229:  93%|█████████▎| 13/14 [01:56<00:08,  8.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7732[0m
[32m  eval_f1 = 0.299[0m
[32m  eval_mcc = 0.7614[0m
[32m  eval_precision = 0.3859[0m
[32m  eval_recall = 0.288[0m
[32m  ********************[0m
[32m  Best f1:0.299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.17229: 100%|██████████| 14/14 [02:04<00:00,  8.60s/it]epoch 1 loss 3.17229: 100%|██████████| 14/14 [02:04<00:00,  8.90s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.19526:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7795[0m
[32m  eval_f1 = 0.302[0m
[32m  eval_mcc = 0.7679[0m
[32m  eval_precision = 0.3879[0m
[32m  eval_recall = 0.29[0m
[32m  ********************[0m
[32m  Best f1:0.302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.19526:   7%|▋         | 1/14 [00:11<02:26, 11.28s/it]epoch 2 loss 2.16136:   7%|▋         | 1/14 [00:12<02:26, 11.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7843[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.7729[0m
[32m  eval_precision = 0.3873[0m
[32m  eval_recall = 0.2924[0m
[32m  ********************[0m
[32m  Best f1:0.305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.16136:  14%|█▍        | 2/14 [00:20<02:00, 10.08s/it]epoch 2 loss 2.13537:  14%|█▍        | 2/14 [00:21<02:00, 10.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7884[0m
[32m  eval_f1 = 0.3093[0m
[32m  eval_mcc = 0.7771[0m
[32m  eval_precision = 0.3908[0m
[32m  eval_recall = 0.2956[0m
[32m  ********************[0m
[32m  Best f1:0.3093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.13537:  21%|██▏       | 3/14 [00:30<01:51, 10.15s/it]epoch 2 loss 2.09394:  21%|██▏       | 3/14 [00:31<01:51, 10.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7921[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.7809[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2971[0m
[32m  ********************[0m
[32m  Best f1:0.3111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.09394:  29%|██▊       | 4/14 [00:44<01:57, 11.72s/it]epoch 2 loss 2.07228:  29%|██▊       | 4/14 [00:45<01:57, 11.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.795[0m
[32m  eval_f1 = 0.3164[0m
[32m  eval_mcc = 0.784[0m
[32m  eval_precision = 0.396[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.07228:  36%|███▌      | 5/14 [00:54<01:39, 11.10s/it]epoch 2 loss 2.03598:  36%|███▌      | 5/14 [00:55<01:39, 11.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7977[0m
[32m  eval_f1 = 0.3201[0m
[32m  eval_mcc = 0.7868[0m
[32m  eval_precision = 0.3982[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.03598:  43%|████▎     | 6/14 [01:09<01:39, 12.46s/it]epoch 2 loss 2.00574:  43%|████▎     | 6/14 [01:10<01:39, 12.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8016[0m
[32m  eval_f1 = 0.324[0m
[32m  eval_mcc = 0.7909[0m
[32m  eval_precision = 0.3996[0m
[32m  eval_recall = 0.3104[0m
[32m  ********************[0m
[32m  Best f1:0.324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.00574:  50%|█████     | 7/14 [01:18<01:17, 11.14s/it]epoch 2 loss 1.97126:  50%|█████     | 7/14 [01:19<01:17, 11.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.804[0m
[32m  eval_f1 = 0.3256[0m
[32m  eval_mcc = 0.7934[0m
[32m  eval_precision = 0.4007[0m
[32m  eval_recall = 0.3115[0m
[32m  ********************[0m
[32m  Best f1:0.3256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.97126:  57%|█████▋    | 8/14 [01:28<01:04, 10.75s/it]epoch 2 loss 1.94017:  57%|█████▋    | 8/14 [01:29<01:04, 10.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8072[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.7968[0m
[32m  eval_precision = 0.4012[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.94017:  64%|██████▍   | 9/14 [01:38<00:52, 10.49s/it]epoch 2 loss 1.91948:  64%|██████▍   | 9/14 [01:39<00:52, 10.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8103[0m
[32m  eval_f1 = 0.3291[0m
[32m  eval_mcc = 0.8[0m
[32m  eval_precision = 0.4024[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.91948:  71%|███████▏  | 10/14 [01:47<00:40, 10.17s/it]epoch 2 loss 1.8942:  71%|███████▏  | 10/14 [01:48<00:40, 10.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8124[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.8022[0m
[32m  eval_precision = 0.4034[0m
[32m  eval_recall = 0.3159[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.8942:  79%|███████▊  | 11/14 [01:57<00:30, 10.20s/it]epoch 2 loss 1.87105:  79%|███████▊  | 11/14 [01:58<00:30, 10.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8143[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.8043[0m
[32m  eval_precision = 0.4041[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.87105:  86%|████████▌ | 12/14 [02:05<00:19,  9.54s/it]epoch 2 loss 1.84622:  86%|████████▌ | 12/14 [02:06<00:19,  9.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8153[0m
[32m  eval_f1 = 0.3343[0m
[32m  eval_mcc = 0.8053[0m
[32m  eval_precision = 0.4045[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.84622:  93%|█████████▎| 13/14 [02:14<00:09,  9.14s/it]epoch 2 loss 1.82152:  93%|█████████▎| 13/14 [02:14<00:09,  9.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8167[0m
[32m  eval_f1 = 0.3361[0m
[32m  eval_mcc = 0.8068[0m
[32m  eval_precision = 0.4127[0m
[32m  eval_recall = 0.3201[0m
[32m  ********************[0m
[32m  Best f1:0.3361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.82152: 100%|██████████| 14/14 [02:23<00:00,  9.27s/it]epoch 2 loss 1.82152: 100%|██████████| 14/14 [02:23<00:00, 10.27s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.4613:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8183[0m
[32m  eval_f1 = 0.3412[0m
[32m  eval_mcc = 0.8085[0m
[32m  eval_precision = 0.4136[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best f1:0.3412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4613:   7%|▋         | 1/14 [00:11<02:32, 11.70s/it]epoch 3 loss 1.44046:   7%|▋         | 1/14 [00:12<02:32, 11.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8199[0m
[32m  eval_f1 = 0.3435[0m
[32m  eval_mcc = 0.8102[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.3267[0m
[32m  ********************[0m
[32m  Best f1:0.3435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44046:  14%|█▍        | 2/14 [00:21<02:09, 10.83s/it]epoch 3 loss 1.42658:  14%|█▍        | 2/14 [00:22<02:09, 10.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.821[0m
[32m  eval_f1 = 0.3455[0m
[32m  eval_mcc = 0.8114[0m
[32m  eval_precision = 0.4225[0m
[32m  eval_recall = 0.3283[0m
[32m  ********************[0m
[32m  Best f1:0.3455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42658:  21%|██▏       | 3/14 [00:28<01:35,  8.66s/it]epoch 3 loss 1.42708:  21%|██▏       | 3/14 [00:28<01:35,  8.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8224[0m
[32m  eval_f1 = 0.3472[0m
[32m  eval_mcc = 0.8128[0m
[32m  eval_precision = 0.4227[0m
[32m  eval_recall = 0.3302[0m
[32m  ********************[0m
[32m  Best f1:0.3472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42708:  29%|██▊       | 4/14 [00:34<01:16,  7.64s/it]epoch 3 loss 1.38529:  29%|██▊       | 4/14 [00:34<01:16,  7.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8231[0m
[32m  eval_f1 = 0.3488[0m
[32m  eval_mcc = 0.8136[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.3315[0m
[32m  ********************[0m
[32m  Best f1:0.3488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38529:  36%|███▌      | 5/14 [00:40<01:03,  7.06s/it]epoch 3 loss 1.36902:  36%|███▌      | 5/14 [00:40<01:03,  7.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8244[0m
[32m  eval_f1 = 0.3506[0m
[32m  eval_mcc = 0.815[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3334[0m
[32m  ********************[0m
[32m  Best f1:0.3506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36902:  43%|████▎     | 6/14 [00:47<00:56,  7.02s/it]epoch 3 loss 1.35904:  43%|████▎     | 6/14 [00:47<00:56,  7.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8255[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.8161[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35904:  50%|█████     | 7/14 [00:53<00:48,  7.00s/it]epoch 3 loss 1.35185:  50%|█████     | 7/14 [00:54<00:48,  7.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8268[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.8175[0m
[32m  eval_precision = 0.4496[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35185:  57%|█████▋    | 8/14 [01:00<00:41,  6.97s/it]epoch 3 loss 1.33699:  57%|█████▋    | 8/14 [01:01<00:41,  6.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8275[0m
[32m  eval_f1 = 0.3577[0m
[32m  eval_mcc = 0.8183[0m
[32m  eval_precision = 0.4501[0m
[32m  eval_recall = 0.3391[0m
[32m  ********************[0m
[32m  Best f1:0.3577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33699:  64%|██████▍   | 9/14 [01:07<00:34,  6.97s/it]epoch 3 loss 1.32737:  64%|██████▍   | 9/14 [01:08<00:34,  6.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8285[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.8194[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best f1:0.3602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32737:  71%|███████▏  | 10/14 [01:13<00:26,  6.70s/it]epoch 3 loss 1.32216:  71%|███████▏  | 10/14 [01:14<00:26,  6.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8293[0m
[32m  eval_f1 = 0.3617[0m
[32m  eval_mcc = 0.8202[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.3617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32216:  79%|███████▊  | 11/14 [01:20<00:20,  6.80s/it]epoch 3 loss 1.30418:  79%|███████▊  | 11/14 [01:21<00:20,  6.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8303[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.8213[0m
[32m  eval_precision = 0.4677[0m
[32m  eval_recall = 0.3448[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30418:  86%|████████▌ | 12/14 [01:33<00:16,  8.40s/it]epoch 3 loss 1.28774:  86%|████████▌ | 12/14 [01:33<00:16,  8.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8315[0m
[32m  eval_f1 = 0.3662[0m
[32m  eval_mcc = 0.8226[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.3662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28774:  93%|█████████▎| 13/14 [01:42<00:08,  8.86s/it]epoch 3 loss 1.27507:  93%|█████████▎| 13/14 [01:43<00:08,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8324[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.8236[0m
[32m  eval_precision = 0.465[0m
[32m  eval_recall = 0.3482[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27507: 100%|██████████| 14/14 [01:56<00:00, 10.12s/it]epoch 3 loss 1.27507: 100%|██████████| 14/14 [01:56<00:00,  8.29s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.06778:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8332[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.8244[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3491[0m
[32m  ********************[0m
[32m  Best f1:0.3694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.06778:   7%|▋         | 1/14 [00:15<03:17, 15.16s/it]epoch 4 loss 1.12997:   7%|▋         | 1/14 [00:15<03:17, 15.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8336[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.8248[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3496[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12997:  14%|█▍        | 2/14 [00:24<02:23, 11.99s/it]epoch 4 loss 1.13323:  14%|█▍        | 2/14 [00:25<02:23, 11.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8343[0m
[32m  eval_f1 = 0.3707[0m
[32m  eval_mcc = 0.8255[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13323:  21%|██▏       | 3/14 [00:36<02:11, 11.94s/it]epoch 4 loss 1.1242:  21%|██▏       | 3/14 [00:37<02:11, 11.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.835[0m
[32m  eval_f1 = 0.3715[0m
[32m  eval_mcc = 0.8262[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3515[0m
[32m  ********************[0m
[32m  Best f1:0.3715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1242:  29%|██▊       | 4/14 [00:48<01:58, 11.88s/it]epoch 4 loss 1.12199:  29%|██▊       | 4/14 [00:49<01:58, 11.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8355[0m
[32m  eval_f1 = 0.3719[0m
[32m  eval_mcc = 0.8267[0m
[32m  eval_precision = 0.4645[0m
[32m  eval_recall = 0.352[0m
[32m  ********************[0m
[32m  Best f1:0.3719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12199:  36%|███▌      | 5/14 [00:57<01:38, 10.96s/it]epoch 4 loss 1.1026:  36%|███▌      | 5/14 [00:58<01:38, 10.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.836[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.8273[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1026:  43%|████▎     | 6/14 [01:08<01:26, 10.77s/it]epoch 4 loss 1.09902:  43%|████▎     | 6/14 [01:09<01:26, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8366[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.8279[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3533[0m
[32m  ********************[0m
[32m  Best f1:0.3732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.09902:  50%|█████     | 7/14 [01:19<01:15, 10.75s/it]epoch 4 loss 1.08625:  50%|█████     | 7/14 [01:19<01:15, 10.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.837[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.8284[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3535[0m
[32m  ********************[0m
[32m  Best f1:0.3733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08625:  57%|█████▋    | 8/14 [01:30<01:05, 10.89s/it]epoch 4 loss 1.08515:  57%|█████▋    | 8/14 [01:31<01:05, 10.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8373[0m
[32m  eval_f1 = 0.3735[0m
[32m  eval_mcc = 0.8286[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3537[0m
[32m  ********************[0m
[32m  Best f1:0.3735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08515:  64%|██████▍   | 9/14 [01:37<00:49,  9.87s/it]epoch 4 loss 1.07857:  64%|██████▍   | 9/14 [01:38<00:49,  9.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8376[0m
[32m  eval_f1 = 0.3736[0m
[32m  eval_mcc = 0.829[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3538[0m
[32m  ********************[0m
[32m  Best f1:0.3736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07857:  71%|███████▏  | 10/14 [01:46<00:38,  9.58s/it]epoch 4 loss 1.07652:  71%|███████▏  | 10/14 [01:47<00:38,  9.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8377[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.8291[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.354[0m
[32m  ********************[0m
[32m  Best f1:0.3737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07652:  79%|███████▊  | 11/14 [01:54<00:27,  9.02s/it]epoch 4 loss 1.08065:  79%|███████▊  | 11/14 [01:55<00:27,  9.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8379[0m
[32m  eval_f1 = 0.374[0m
[32m  eval_mcc = 0.8293[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3541[0m
[32m  ********************[0m
[32m  Best f1:0.374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08065:  86%|████████▌ | 12/14 [02:02<00:17,  8.57s/it]epoch 4 loss 1.07645:  86%|████████▌ | 12/14 [02:02<00:17,  8.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.838[0m
[32m  eval_f1 = 0.3741[0m
[32m  eval_mcc = 0.8294[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3543[0m
[32m  ********************[0m
[32m  Best f1:0.3741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07645:  93%|█████████▎| 13/14 [02:09<00:08,  8.27s/it]epoch 4 loss 1.08114:  93%|█████████▎| 13/14 [02:10<00:08,  8.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8381[0m
[32m  eval_f1 = 0.3741[0m
[32m  eval_mcc = 0.8295[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3543[0m
[32m  ********************[0m
[32m  Best f1:0.3741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08114: 100%|██████████| 14/14 [02:17<00:00,  8.01s/it]epoch 4 loss 1.08114: 100%|██████████| 14/14 [02:17<00:00,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.66it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8381[0m
[32m  eval_f1 = 0.3741[0m
[32m  eval_mcc = 0.8295[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3543[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8221[0m
[32m  eval_f1 = 0.3007[0m
[32m  eval_mcc = 0.8133[0m
[32m  eval_precision = 0.3779[0m
[32m  eval_recall = 0.2847[0m

