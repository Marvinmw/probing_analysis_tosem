[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight', 'lm_head.dense.weight', 'lm_head.bias', 'lm_head.dense.bias', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.50368:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0016[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0015[0m
[32m  eval_precision = 0.0022[0m
[32m  eval_recall = 0.0003[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.50368:   7%|▋         | 1/14 [00:05<01:12,  5.56s/it]epoch 0 loss 5.50346:   7%|▋         | 1/14 [00:06<01:12,  5.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.002[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0014[0m
[32m  eval_precision = 0.0022[0m
[32m  eval_recall = 0.0004[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.50346:  14%|█▍        | 2/14 [00:10<01:03,  5.33s/it]epoch 0 loss 5.50018:  14%|█▍        | 2/14 [00:11<01:03,  5.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.003[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.001[0m
[32m  eval_precision = 0.0021[0m
[32m  eval_recall = 0.0005[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.50018:  21%|██▏       | 3/14 [00:15<00:57,  5.26s/it]epoch 0 loss 5.4892:  21%|██▏       | 3/14 [00:16<00:57,  5.26s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0065[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0013[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.001[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4892:  29%|██▊       | 4/14 [00:21<00:54,  5.50s/it]epoch 0 loss 5.47752:  29%|██▊       | 4/14 [00:22<00:54,  5.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0125[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0055[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47752:  36%|███▌      | 5/14 [00:27<00:51,  5.75s/it]epoch 0 loss 5.45874:  36%|███▌      | 5/14 [00:28<00:51,  5.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.023[0m
[32m  eval_f1 = 0.0038[0m
[32m  eval_mcc = 0.0127[0m
[32m  eval_precision = 0.0059[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best f1:0.0038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45874:  43%|████▎     | 6/14 [00:35<00:49,  6.20s/it]epoch 0 loss 5.43705:  43%|████▎     | 6/14 [00:35<00:49,  6.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0415[0m
[32m  eval_f1 = 0.0089[0m
[32m  eval_mcc = 0.0267[0m
[32m  eval_precision = 0.0126[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43705:  50%|█████     | 7/14 [00:42<00:45,  6.51s/it]epoch 0 loss 5.41006:  50%|█████     | 7/14 [00:43<00:45,  6.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0685[0m
[32m  eval_f1 = 0.016[0m
[32m  eval_mcc = 0.0484[0m
[32m  eval_precision = 0.0188[0m
[32m  eval_recall = 0.0204[0m
[32m  ********************[0m
[32m  Best f1:0.016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41006:  57%|█████▋    | 8/14 [00:49<00:39,  6.66s/it]epoch 0 loss 5.37861:  57%|█████▋    | 8/14 [00:49<00:39,  6.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1133[0m
[32m  eval_f1 = 0.0266[0m
[32m  eval_mcc = 0.0885[0m
[32m  eval_precision = 0.0373[0m
[32m  eval_recall = 0.0338[0m
[32m  ********************[0m
[32m  Best f1:0.0266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37861:  64%|██████▍   | 9/14 [00:56<00:33,  6.78s/it]epoch 0 loss 5.34118:  64%|██████▍   | 9/14 [00:57<00:33,  6.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1681[0m
[32m  eval_f1 = 0.0392[0m
[32m  eval_mcc = 0.1404[0m
[32m  eval_precision = 0.0521[0m
[32m  eval_recall = 0.05[0m
[32m  ********************[0m
[32m  Best f1:0.0392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34118:  71%|███████▏  | 10/14 [01:06<00:31,  7.84s/it]epoch 0 loss 5.29878:  71%|███████▏  | 10/14 [01:07<00:31,  7.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2284[0m
[32m  eval_f1 = 0.0582[0m
[32m  eval_mcc = 0.2008[0m
[32m  eval_precision = 0.078[0m
[32m  eval_recall = 0.0709[0m
[32m  ********************[0m
[32m  Best f1:0.0582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29878:  79%|███████▊  | 11/14 [01:15<00:24,  8.28s/it]epoch 0 loss 5.25336:  79%|███████▊  | 11/14 [01:16<00:24,  8.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2899[0m
[32m  eval_f1 = 0.0852[0m
[32m  eval_mcc = 0.2639[0m
[32m  eval_precision = 0.1177[0m
[32m  eval_recall = 0.0975[0m
[32m  ********************[0m
[32m  Best f1:0.0852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25336:  86%|████████▌ | 12/14 [01:24<00:16,  8.50s/it]epoch 0 loss 5.20357:  86%|████████▌ | 12/14 [01:25<00:16,  8.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3593[0m
[32m  eval_f1 = 0.1113[0m
[32m  eval_mcc = 0.3363[0m
[32m  eval_precision = 0.1502[0m
[32m  eval_recall = 0.1232[0m
[32m  ********************[0m
[32m  Best f1:0.1113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20357:  93%|█████████▎| 13/14 [01:33<00:08,  8.48s/it]epoch 0 loss 5.15042:  93%|█████████▎| 13/14 [01:33<00:08,  8.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4325[0m
[32m  eval_f1 = 0.1455[0m
[32m  eval_mcc = 0.4126[0m
[32m  eval_precision = 0.1891[0m
[32m  eval_recall = 0.1561[0m
[32m  ********************[0m
[32m  Best f1:0.1455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15042: 100%|██████████| 14/14 [01:41<00:00,  8.45s/it]epoch 0 loss 5.15042: 100%|██████████| 14/14 [01:41<00:00,  7.25s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.28511:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4952[0m
[32m  eval_f1 = 0.1794[0m
[32m  eval_mcc = 0.4769[0m
[32m  eval_precision = 0.226[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.28511:   7%|▋         | 1/14 [00:07<01:33,  7.22s/it]epoch 1 loss 4.19792:   7%|▋         | 1/14 [00:08<01:33,  7.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.545[0m
[32m  eval_f1 = 0.203[0m
[32m  eval_mcc = 0.5273[0m
[32m  eval_precision = 0.2584[0m
[32m  eval_recall = 0.2096[0m
[32m  ********************[0m
[32m  Best f1:0.203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.19792:  14%|█▍        | 2/14 [00:15<01:36,  8.08s/it]epoch 1 loss 4.09716:  14%|█▍        | 2/14 [00:16<01:36,  8.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5869[0m
[32m  eval_f1 = 0.2192[0m
[32m  eval_mcc = 0.5697[0m
[32m  eval_precision = 0.2681[0m
[32m  eval_recall = 0.2248[0m
[32m  ********************[0m
[32m  Best f1:0.2192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.09716:  21%|██▏       | 3/14 [00:23<01:24,  7.70s/it]epoch 1 loss 4.01692:  21%|██▏       | 3/14 [00:23<01:24,  7.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.2361[0m
[32m  eval_mcc = 0.6012[0m
[32m  eval_precision = 0.2947[0m
[32m  eval_recall = 0.2402[0m
[32m  ********************[0m
[32m  Best f1:0.2361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.01692:  29%|██▊       | 4/14 [00:30<01:14,  7.50s/it]epoch 1 loss 3.93529:  29%|██▊       | 4/14 [00:31<01:14,  7.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.2455[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.3132[0m
[32m  eval_recall = 0.2483[0m
[32m  ********************[0m
[32m  Best f1:0.2455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.93529:  36%|███▌      | 5/14 [00:37<01:06,  7.40s/it]epoch 1 loss 3.85684:  36%|███▌      | 5/14 [00:38<01:06,  7.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.253[0m
[32m  eval_mcc = 0.6486[0m
[32m  eval_precision = 0.3272[0m
[32m  eval_recall = 0.2542[0m
[32m  ********************[0m
[32m  Best f1:0.253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.85684:  43%|████▎     | 6/14 [00:44<00:58,  7.34s/it]epoch 1 loss 3.78627:  43%|████▎     | 6/14 [00:45<00:58,  7.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6817[0m
[32m  eval_f1 = 0.2608[0m
[32m  eval_mcc = 0.6664[0m
[32m  eval_precision = 0.3335[0m
[32m  eval_recall = 0.26[0m
[32m  ********************[0m
[32m  Best f1:0.2608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.78627:  50%|█████     | 7/14 [00:53<00:55,  7.86s/it]epoch 1 loss 3.7142:  50%|█████     | 7/14 [00:54<00:55,  7.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6972[0m
[32m  eval_f1 = 0.2663[0m
[32m  eval_mcc = 0.6824[0m
[32m  eval_precision = 0.3385[0m
[32m  eval_recall = 0.2643[0m
[32m  ********************[0m
[32m  Best f1:0.2663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.7142:  57%|█████▋    | 8/14 [01:01<00:47,  7.87s/it]epoch 1 loss 3.64127:  57%|█████▋    | 8/14 [01:02<00:47,  7.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7082[0m
[32m  eval_f1 = 0.2714[0m
[32m  eval_mcc = 0.6937[0m
[32m  eval_precision = 0.3587[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.64127:  64%|██████▍   | 9/14 [01:10<00:40,  8.15s/it]epoch 1 loss 3.56769:  64%|██████▍   | 9/14 [01:11<00:40,  8.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7172[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.703[0m
[32m  eval_precision = 0.3619[0m
[32m  eval_recall = 0.2704[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.56769:  71%|███████▏  | 10/14 [01:18<00:32,  8.06s/it]epoch 1 loss 3.50617:  71%|███████▏  | 10/14 [01:19<00:32,  8.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.726[0m
[32m  eval_f1 = 0.2778[0m
[32m  eval_mcc = 0.7121[0m
[32m  eval_precision = 0.3733[0m
[32m  eval_recall = 0.2726[0m
[32m  ********************[0m
[32m  Best f1:0.2778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.50617:  79%|███████▊  | 11/14 [01:27<00:24,  8.29s/it]epoch 1 loss 3.43938:  79%|███████▊  | 11/14 [01:27<00:24,  8.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7332[0m
[32m  eval_f1 = 0.2813[0m
[32m  eval_mcc = 0.7196[0m
[32m  eval_precision = 0.3761[0m
[32m  eval_recall = 0.2748[0m
[32m  ********************[0m
[32m  Best f1:0.2813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.43938:  86%|████████▌ | 12/14 [01:35<00:16,  8.22s/it]epoch 1 loss 3.37657:  86%|████████▌ | 12/14 [01:35<00:16,  8.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7409[0m
[32m  eval_f1 = 0.2851[0m
[32m  eval_mcc = 0.7275[0m
[32m  eval_precision = 0.379[0m
[32m  eval_recall = 0.2776[0m
[32m  ********************[0m
[32m  Best f1:0.2851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.37657:  93%|█████████▎| 13/14 [01:43<00:08,  8.33s/it]epoch 1 loss 3.31533:  93%|█████████▎| 13/14 [01:44<00:08,  8.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7505[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.7374[0m
[32m  eval_precision = 0.3908[0m
[32m  eval_recall = 0.2808[0m
[32m  ********************[0m
[32m  Best f1:0.2902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.31533: 100%|██████████| 14/14 [01:50<00:00,  7.84s/it]epoch 1 loss 3.31533: 100%|██████████| 14/14 [01:50<00:00,  7.89s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.36711:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7591[0m
[32m  eval_f1 = 0.2933[0m
[32m  eval_mcc = 0.7464[0m
[32m  eval_precision = 0.3923[0m
[32m  eval_recall = 0.2828[0m
[32m  ********************[0m
[32m  Best f1:0.2933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.36711:   7%|▋         | 1/14 [00:06<01:29,  6.89s/it]epoch 2 loss 2.33082:   7%|▋         | 1/14 [00:07<01:29,  6.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7671[0m
[32m  eval_f1 = 0.2978[0m
[32m  eval_mcc = 0.7546[0m
[32m  eval_precision = 0.3947[0m
[32m  eval_recall = 0.2859[0m
[32m  ********************[0m
[32m  Best f1:0.2978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.33082:  14%|█▍        | 2/14 [00:13<01:17,  6.46s/it]epoch 2 loss 2.3083:  14%|█▍        | 2/14 [00:13<01:17,  6.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7727[0m
[32m  eval_f1 = 0.3004[0m
[32m  eval_mcc = 0.7605[0m
[32m  eval_precision = 0.3917[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3083:  21%|██▏       | 3/14 [00:19<01:12,  6.63s/it]epoch 2 loss 2.26509:  21%|██▏       | 3/14 [00:20<01:12,  6.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7774[0m
[32m  eval_f1 = 0.3023[0m
[32m  eval_mcc = 0.7654[0m
[32m  eval_precision = 0.3933[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.26509:  29%|██▊       | 4/14 [00:26<01:07,  6.73s/it]epoch 2 loss 2.24472:  29%|██▊       | 4/14 [00:27<01:07,  6.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7816[0m
[32m  eval_f1 = 0.304[0m
[32m  eval_mcc = 0.7698[0m
[32m  eval_precision = 0.3946[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.24472:  36%|███▌      | 5/14 [00:33<00:59,  6.61s/it]epoch 2 loss 2.20879:  36%|███▌      | 5/14 [00:33<00:59,  6.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7861[0m
[32m  eval_f1 = 0.3067[0m
[32m  eval_mcc = 0.7745[0m
[32m  eval_precision = 0.396[0m
[32m  eval_recall = 0.2919[0m
[32m  ********************[0m
[32m  Best f1:0.3067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.20879:  43%|████▎     | 6/14 [00:40<00:53,  6.72s/it]epoch 2 loss 2.17882:  43%|████▎     | 6/14 [00:40<00:53,  6.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7892[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.7778[0m
[32m  eval_precision = 0.397[0m
[32m  eval_recall = 0.2931[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.17882:  50%|█████     | 7/14 [00:47<00:47,  6.78s/it]epoch 2 loss 2.14352:  50%|█████     | 7/14 [00:47<00:47,  6.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7929[0m
[32m  eval_f1 = 0.3106[0m
[32m  eval_mcc = 0.7817[0m
[32m  eval_precision = 0.3979[0m
[32m  eval_recall = 0.2949[0m
[32m  ********************[0m
[32m  Best f1:0.3106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.14352:  57%|█████▋    | 8/14 [00:53<00:40,  6.81s/it]epoch 2 loss 2.11187:  57%|█████▋    | 8/14 [00:54<00:40,  6.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7958[0m
[32m  eval_f1 = 0.314[0m
[32m  eval_mcc = 0.7847[0m
[32m  eval_precision = 0.3992[0m
[32m  eval_recall = 0.2979[0m
[32m  ********************[0m
[32m  Best f1:0.314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.11187:  64%|██████▍   | 9/14 [01:00<00:34,  6.88s/it]epoch 2 loss 2.08984:  64%|██████▍   | 9/14 [01:01<00:34,  6.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7988[0m
[32m  eval_f1 = 0.3175[0m
[32m  eval_mcc = 0.7878[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.08984:  71%|███████▏  | 10/14 [01:06<00:26,  6.62s/it]epoch 2 loss 2.06343:  71%|███████▏  | 10/14 [01:07<00:26,  6.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8013[0m
[32m  eval_f1 = 0.3204[0m
[32m  eval_mcc = 0.7905[0m
[32m  eval_precision = 0.4096[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.06343:  79%|███████▊  | 11/14 [01:13<00:19,  6.66s/it]epoch 2 loss 2.03962:  79%|███████▊  | 11/14 [01:14<00:19,  6.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8039[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.7933[0m
[32m  eval_precision = 0.411[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.03962:  86%|████████▌ | 12/14 [01:23<00:15,  7.67s/it]epoch 2 loss 2.0131:  86%|████████▌ | 12/14 [01:24<00:15,  7.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8058[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.7953[0m
[32m  eval_precision = 0.4128[0m
[32m  eval_recall = 0.3086[0m
[32m  ********************[0m
[32m  Best f1:0.3272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.0131:  93%|█████████▎| 13/14 [01:33<00:08,  8.23s/it]epoch 2 loss 1.98689:  93%|█████████▎| 13/14 [01:33<00:08,  8.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8081[0m
[32m  eval_f1 = 0.3323[0m
[32m  eval_mcc = 0.7977[0m
[32m  eval_precision = 0.4143[0m
[32m  eval_recall = 0.3131[0m
[32m  ********************[0m
[32m  Best f1:0.3323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.98689: 100%|██████████| 14/14 [01:43<00:00,  8.79s/it]epoch 2 loss 1.98689: 100%|██████████| 14/14 [01:43<00:00,  7.38s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.61472:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8097[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.7994[0m
[32m  eval_precision = 0.4158[0m
[32m  eval_recall = 0.317[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.61472:   7%|▋         | 1/14 [00:08<01:50,  8.47s/it]epoch 3 loss 1.58757:   7%|▋         | 1/14 [00:09<01:50,  8.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8117[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.8015[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.3205[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.58757:  14%|█▍        | 2/14 [00:17<01:47,  8.92s/it]epoch 3 loss 1.5734:  14%|█▍        | 2/14 [00:18<01:47,  8.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8133[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.8032[0m
[32m  eval_precision = 0.4172[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5734:  21%|██▏       | 3/14 [00:25<01:34,  8.59s/it]epoch 3 loss 1.5729:  21%|██▏       | 3/14 [00:26<01:34,  8.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8148[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.8048[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.3244[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5729:  29%|██▊       | 4/14 [00:34<01:27,  8.78s/it]epoch 3 loss 1.52894:  29%|██▊       | 4/14 [00:35<01:27,  8.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8161[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.8062[0m
[32m  eval_precision = 0.4159[0m
[32m  eval_recall = 0.3261[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.52894:  36%|███▌      | 5/14 [00:43<01:17,  8.64s/it]epoch 3 loss 1.51207:  36%|███▌      | 5/14 [00:44<01:17,  8.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8175[0m
[32m  eval_f1 = 0.3444[0m
[32m  eval_mcc = 0.8076[0m
[32m  eval_precision = 0.4172[0m
[32m  eval_recall = 0.3276[0m
[32m  ********************[0m
[32m  Best f1:0.3444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51207:  43%|████▎     | 6/14 [00:50<01:06,  8.29s/it]epoch 3 loss 1.49984:  43%|████▎     | 6/14 [00:51<01:06,  8.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8185[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.8087[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.3468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49984:  50%|█████     | 7/14 [01:00<01:00,  8.58s/it]epoch 3 loss 1.4918:  50%|█████     | 7/14 [01:00<01:00,  8.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8197[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.8099[0m
[32m  eval_precision = 0.447[0m
[32m  eval_recall = 0.3312[0m
[32m  ********************[0m
[32m  Best f1:0.3486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4918:  57%|█████▋    | 8/14 [01:07<00:50,  8.35s/it]epoch 3 loss 1.47683:  57%|█████▋    | 8/14 [01:08<00:50,  8.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8206[0m
[32m  eval_f1 = 0.351[0m
[32m  eval_mcc = 0.8109[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3334[0m
[32m  ********************[0m
[32m  Best f1:0.351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47683:  64%|██████▍   | 9/14 [01:17<00:43,  8.72s/it]epoch 3 loss 1.46766:  64%|██████▍   | 9/14 [01:18<00:43,  8.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8217[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.8121[0m
[32m  eval_precision = 0.4499[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.3526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46766:  71%|███████▏  | 10/14 [01:25<00:33,  8.43s/it]epoch 3 loss 1.4618:  71%|███████▏  | 10/14 [01:26<00:33,  8.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.823[0m
[32m  eval_f1 = 0.3533[0m
[32m  eval_mcc = 0.8134[0m
[32m  eval_precision = 0.4503[0m
[32m  eval_recall = 0.3354[0m
[32m  ********************[0m
[32m  Best f1:0.3533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4618:  79%|███████▊  | 11/14 [01:34<00:25,  8.51s/it]epoch 3 loss 1.44308:  79%|███████▊  | 11/14 [01:34<00:25,  8.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8242[0m
[32m  eval_f1 = 0.3549[0m
[32m  eval_mcc = 0.8148[0m
[32m  eval_precision = 0.4514[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44308:  86%|████████▌ | 12/14 [01:43<00:17,  8.87s/it]epoch 3 loss 1.42651:  86%|████████▌ | 12/14 [01:44<00:17,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.825[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.8156[0m
[32m  eval_precision = 0.4517[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best f1:0.356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42651:  93%|█████████▎| 13/14 [01:51<00:08,  8.49s/it]epoch 3 loss 1.41278:  93%|█████████▎| 13/14 [01:51<00:08,  8.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8258[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.8164[0m
[32m  eval_precision = 0.452[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41278: 100%|██████████| 14/14 [01:58<00:00,  8.15s/it]epoch 3 loss 1.41278: 100%|██████████| 14/14 [01:58<00:00,  8.48s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.1876:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8265[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.8172[0m
[32m  eval_precision = 0.452[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1876:   7%|▋         | 1/14 [00:07<01:40,  7.74s/it]epoch 4 loss 1.25446:   7%|▋         | 1/14 [00:08<01:40,  7.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8271[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.8179[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25446:  14%|█▍        | 2/14 [00:14<01:27,  7.25s/it]epoch 4 loss 1.25413:  14%|█▍        | 2/14 [00:15<01:27,  7.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8281[0m
[32m  eval_f1 = 0.3603[0m
[32m  eval_mcc = 0.8189[0m
[32m  eval_precision = 0.4666[0m
[32m  eval_recall = 0.3414[0m
[32m  ********************[0m
[32m  Best f1:0.3603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25413:  21%|██▏       | 3/14 [00:21<01:18,  7.11s/it]epoch 4 loss 1.24495:  21%|██▏       | 3/14 [00:22<01:18,  7.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8287[0m
[32m  eval_f1 = 0.3611[0m
[32m  eval_mcc = 0.8195[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.342[0m
[32m  ********************[0m
[32m  Best f1:0.3611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24495:  29%|██▊       | 4/14 [00:27<01:07,  6.71s/it]epoch 4 loss 1.24271:  29%|██▊       | 4/14 [00:28<01:07,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8293[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.8201[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24271:  36%|███▌      | 5/14 [00:34<01:00,  6.73s/it]epoch 4 loss 1.22262:  36%|███▌      | 5/14 [00:35<01:00,  6.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8299[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.8208[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3436[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22262:  43%|████▎     | 6/14 [00:41<00:54,  6.79s/it]epoch 4 loss 1.21839:  43%|████▎     | 6/14 [00:42<00:54,  6.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8305[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.8214[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.3439[0m
[32m  ********************[0m
[32m  Best f1:0.3632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21839:  50%|█████     | 7/14 [00:48<00:47,  6.84s/it]epoch 4 loss 1.20508:  50%|█████     | 7/14 [00:49<00:47,  6.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8308[0m
[32m  eval_f1 = 0.3638[0m
[32m  eval_mcc = 0.8218[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3442[0m
[32m  ********************[0m
[32m  Best f1:0.3638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20508:  57%|█████▋    | 8/14 [00:55<00:40,  6.82s/it]epoch 4 loss 1.20472:  57%|█████▋    | 8/14 [00:55<00:40,  6.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8311[0m
[32m  eval_f1 = 0.3641[0m
[32m  eval_mcc = 0.8221[0m
[32m  eval_precision = 0.4666[0m
[32m  eval_recall = 0.3445[0m
[32m  ********************[0m
[32m  Best f1:0.3641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20472:  64%|██████▍   | 9/14 [01:02<00:34,  6.87s/it]epoch 4 loss 1.19775:  64%|██████▍   | 9/14 [01:02<00:34,  6.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8315[0m
[32m  eval_f1 = 0.3647[0m
[32m  eval_mcc = 0.8225[0m
[32m  eval_precision = 0.4667[0m
[32m  eval_recall = 0.345[0m
[32m  ********************[0m
[32m  Best f1:0.3647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19775:  71%|███████▏  | 10/14 [01:09<00:27,  6.92s/it]epoch 4 loss 1.19513:  71%|███████▏  | 10/14 [01:09<00:27,  6.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8319[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.8229[0m
[32m  eval_precision = 0.4667[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.3654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19513:  79%|███████▊  | 11/14 [01:15<00:20,  6.73s/it]epoch 4 loss 1.19885:  79%|███████▊  | 11/14 [01:16<00:20,  6.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8321[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.8231[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.3654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19885:  86%|████████▌ | 12/14 [01:26<00:16,  8.20s/it]epoch 4 loss 1.19381:  86%|████████▌ | 12/14 [01:27<00:16,  8.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8321[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.8232[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.3655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19381:  93%|█████████▎| 13/14 [01:36<00:08,  8.51s/it]epoch 4 loss 1.19719:  93%|█████████▎| 13/14 [01:36<00:08,  8.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8322[0m
[32m  eval_f1 = 0.3656[0m
[32m  eval_mcc = 0.8233[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19719: 100%|██████████| 14/14 [01:44<00:00,  8.44s/it]epoch 4 loss 1.19719: 100%|██████████| 14/14 [01:44<00:00,  7.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.70it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8322[0m
[32m  eval_f1 = 0.3656[0m
[32m  eval_mcc = 0.8233[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3455[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8133[0m
[32m  eval_f1 = 0.2966[0m
[32m  eval_mcc = 0.804[0m
[32m  eval_precision = 0.3854[0m
[32m  eval_recall = 0.2793[0m

