[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.dense.weight', 'lm_head.bias', 'lm_head.decoder.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.bias', 'lm_head.decoder.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.60167:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.82it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.83it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.83it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.83it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.83it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.83it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.83it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.83it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.83it/s][A100%|██████████| 10/10 [00:03<00:00,  3.08it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0014[0m
[32m  eval_precision = 0.0025[0m
[32m  eval_recall = 0.0006[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60167:   7%|▋         | 1/14 [00:05<01:10,  5.44s/it]epoch 0 loss 5.60032:   7%|▋         | 1/14 [00:06<01:10,  5.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.82it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.83it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.83it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.83it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.83it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.83it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.83it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.83it/s][A100%|██████████| 10/10 [00:03<00:00,  3.08it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0016[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0025[0m
[32m  eval_recall = 0.0006[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60032:  14%|█▍        | 2/14 [00:10<01:02,  5.20s/it]epoch 0 loss 5.59822:  14%|█▍        | 2/14 [00:11<01:02,  5.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.81it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.82it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.82it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.83it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.83it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.83it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.83it/s][A100%|██████████| 10/10 [00:03<00:00,  3.07it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0022[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0021[0m
[32m  eval_precision = 0.0021[0m
[32m  eval_recall = 0.0007[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.59822:  21%|██▏       | 3/14 [00:15<00:56,  5.13s/it]epoch 0 loss 5.58559:  21%|██▏       | 3/14 [00:16<00:56,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.82it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.82it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.82it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.82it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.82it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.82it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.82it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.82it/s][A100%|██████████| 10/10 [00:03<00:00,  3.07it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0045[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.001[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.58559:  29%|██▊       | 4/14 [00:20<00:50,  5.09s/it]epoch 0 loss 5.56524:  29%|██▊       | 4/14 [00:21<00:50,  5.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.82it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.82it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.82it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.82it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.82it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.82it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.82it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.82it/s][A100%|██████████| 10/10 [00:03<00:00,  3.07it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0111[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0019[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.56524:  36%|███▌      | 5/14 [00:26<00:48,  5.34s/it]epoch 0 loss 5.53713:  36%|███▌      | 5/14 [00:27<00:48,  5.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.82it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.81it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.82it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.82it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.82it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.82it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.82it/s][A100%|██████████| 10/10 [00:03<00:00,  3.07it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0231[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0083[0m
[32m  eval_precision = 0.0074[0m
[32m  eval_recall = 0.0061[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53713:  43%|████▎     | 6/14 [00:32<00:44,  5.56s/it]epoch 0 loss 5.50206:  43%|████▎     | 6/14 [00:33<00:44,  5.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.82it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.82it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.82it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.82it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.82it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.82it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.82it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.81it/s][A100%|██████████| 10/10 [00:03<00:00,  3.07it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0416[0m
[32m  eval_f1 = 0.008[0m
[32m  eval_mcc = 0.0205[0m
[32m  eval_precision = 0.0106[0m
[32m  eval_recall = 0.0147[0m
[32m  ********************[0m
[32m  Best f1:0.008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50206:  50%|█████     | 7/14 [00:38<00:39,  5.71s/it]epoch 0 loss 5.45898:  50%|█████     | 7/14 [00:39<00:39,  5.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.82it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.81it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.82it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.81it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.82it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.82it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.82it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.81it/s][A100%|██████████| 10/10 [00:03<00:00,  3.06it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0594[0m
[32m  eval_f1 = 0.0101[0m
[32m  eval_mcc = 0.0329[0m
[32m  eval_precision = 0.0139[0m
[32m  eval_recall = 0.0211[0m
[32m  ********************[0m
[32m  Best f1:0.0101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45898:  57%|█████▋    | 8/14 [00:49<00:45,  7.57s/it]epoch 0 loss 5.40999:  57%|█████▋    | 8/14 [00:50<00:45,  7.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.81it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.81it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.81it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.81it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.81it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.81it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.81it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.81it/s][A100%|██████████| 10/10 [00:03<00:00,  3.06it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.076[0m
[32m  eval_f1 = 0.0141[0m
[32m  eval_mcc = 0.0452[0m
[32m  eval_precision = 0.0192[0m
[32m  eval_recall = 0.0277[0m
[32m  ********************[0m
[32m  Best f1:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40999:  64%|██████▍   | 9/14 [00:56<00:36,  7.32s/it]epoch 0 loss 5.35415:  64%|██████▍   | 9/14 [00:57<00:36,  7.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.81it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.81it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.81it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.81it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.81it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.81it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.81it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.81it/s][A100%|██████████| 10/10 [00:03<00:00,  3.06it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0991[0m
[32m  eval_f1 = 0.0207[0m
[32m  eval_mcc = 0.066[0m
[32m  eval_precision = 0.0307[0m
[32m  eval_recall = 0.0356[0m
[32m  ********************[0m
[32m  Best f1:0.0207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35415:  71%|███████▏  | 10/14 [01:03<00:28,  7.16s/it]epoch 0 loss 5.29177:  71%|███████▏  | 10/14 [01:04<00:28,  7.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.81it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.81it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.81it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.81it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.81it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.81it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.81it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.81it/s][A100%|██████████| 10/10 [00:03<00:00,  3.06it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1317[0m
[32m  eval_f1 = 0.0343[0m
[32m  eval_mcc = 0.098[0m
[32m  eval_precision = 0.0481[0m
[32m  eval_recall = 0.0503[0m
[32m  ********************[0m
[32m  Best f1:0.0343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29177:  79%|███████▊  | 11/14 [01:09<00:20,  6.84s/it]epoch 0 loss 5.22458:  79%|███████▊  | 11/14 [01:10<00:20,  6.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.80it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.80it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.80it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.81it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.81it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.81it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.80it/s][A100%|██████████| 10/10 [00:03<00:00,  3.05it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1688[0m
[32m  eval_f1 = 0.0519[0m
[32m  eval_mcc = 0.1354[0m
[32m  eval_precision = 0.071[0m
[32m  eval_recall = 0.0651[0m
[32m  ********************[0m
[32m  Best f1:0.0519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22458:  86%|████████▌ | 12/14 [01:15<00:13,  6.59s/it]epoch 0 loss 5.15225:  86%|████████▌ | 12/14 [01:16<00:13,  6.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.81it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.81it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.80it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.80it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.80it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.81it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.81it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.81it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.80it/s][A100%|██████████| 10/10 [00:03<00:00,  3.05it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2263[0m
[32m  eval_f1 = 0.0779[0m
[32m  eval_mcc = 0.1949[0m
[32m  eval_precision = 0.1012[0m
[32m  eval_recall = 0.0873[0m
[32m  ********************[0m
[32m  Best f1:0.0779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15225:  93%|█████████▎| 13/14 [01:21<00:06,  6.41s/it]epoch 0 loss 5.07789:  93%|█████████▎| 13/14 [01:22<00:06,  6.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.80it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.80it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.80it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.80it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.80it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.80it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2873[0m
[32m  eval_f1 = 0.098[0m
[32m  eval_mcc = 0.2579[0m
[32m  eval_precision = 0.1374[0m
[32m  eval_recall = 0.1041[0m
[32m  ********************[0m
[32m  Best f1:0.098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07789: 100%|██████████| 14/14 [01:27<00:00,  6.23s/it]epoch 0 loss 5.07789: 100%|██████████| 14/14 [01:27<00:00,  6.24s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 3.88972:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.80it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.80it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.80it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.80it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.80it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.80it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.80it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.80it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3527[0m
[32m  eval_f1 = 0.1162[0m
[32m  eval_mcc = 0.325[0m
[32m  eval_precision = 0.1586[0m
[32m  eval_recall = 0.1195[0m
[32m  ********************[0m
[32m  Best f1:0.1162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88972:   7%|▋         | 1/14 [00:06<01:18,  6.03s/it]epoch 1 loss 3.80488:   7%|▋         | 1/14 [00:06<01:18,  6.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.80it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.80it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.80it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.80it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4107[0m
[32m  eval_f1 = 0.1295[0m
[32m  eval_mcc = 0.3837[0m
[32m  eval_precision = 0.18[0m
[32m  eval_recall = 0.1311[0m
[32m  ********************[0m
[32m  Best f1:0.1295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.80488:  14%|█▍        | 2/14 [00:12<01:14,  6.17s/it]epoch 1 loss 3.69839:  14%|█▍        | 2/14 [00:13<01:14,  6.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4664[0m
[32m  eval_f1 = 0.1462[0m
[32m  eval_mcc = 0.4405[0m
[32m  eval_precision = 0.1942[0m
[32m  eval_recall = 0.1457[0m
[32m  ********************[0m
[32m  Best f1:0.1462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.69839:  21%|██▏       | 3/14 [00:19<01:10,  6.42s/it]epoch 1 loss 3.59837:  21%|██▏       | 3/14 [00:19<01:10,  6.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5145[0m
[32m  eval_f1 = 0.1573[0m
[32m  eval_mcc = 0.4894[0m
[32m  eval_precision = 0.2032[0m
[32m  eval_recall = 0.1552[0m
[32m  ********************[0m
[32m  Best f1:0.1573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.59837:  29%|██▊       | 4/14 [00:25<01:06,  6.62s/it]epoch 1 loss 3.51285:  29%|██▊       | 4/14 [00:26<01:06,  6.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.558[0m
[32m  eval_f1 = 0.1677[0m
[32m  eval_mcc = 0.5339[0m
[32m  eval_precision = 0.2198[0m
[32m  eval_recall = 0.1636[0m
[32m  ********************[0m
[32m  Best f1:0.1677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.51285:  36%|███▌      | 5/14 [00:32<01:00,  6.68s/it]epoch 1 loss 3.43531:  36%|███▌      | 5/14 [00:33<01:00,  6.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5951[0m
[32m  eval_f1 = 0.1762[0m
[32m  eval_mcc = 0.5725[0m
[32m  eval_precision = 0.2265[0m
[32m  eval_recall = 0.1705[0m
[32m  ********************[0m
[32m  Best f1:0.1762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.43531:  43%|████▎     | 6/14 [00:39<00:53,  6.74s/it]epoch 1 loss 3.35306:  43%|████▎     | 6/14 [00:40<00:53,  6.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.1847[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.2232[0m
[32m  eval_recall = 0.1774[0m
[32m  ********************[0m
[32m  Best f1:0.1847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.35306:  50%|█████     | 7/14 [00:46<00:47,  6.77s/it]epoch 1 loss 3.27562:  50%|█████     | 7/14 [00:47<00:47,  6.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.1909[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.23[0m
[32m  eval_recall = 0.1822[0m
[32m  ********************[0m
[32m  Best f1:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.27562:  57%|█████▋    | 8/14 [00:56<00:46,  7.69s/it]epoch 1 loss 3.20236:  57%|█████▋    | 8/14 [00:56<00:46,  7.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.1935[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.2349[0m
[32m  eval_recall = 0.1838[0m
[32m  ********************[0m
[32m  Best f1:0.1935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.20236:  64%|██████▍   | 9/14 [01:06<00:42,  8.49s/it]epoch 1 loss 3.13059:  64%|██████▍   | 9/14 [01:07<00:42,  8.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.1939[0m
[32m  eval_mcc = 0.6531[0m
[32m  eval_precision = 0.2454[0m
[32m  eval_recall = 0.1838[0m
[32m  ********************[0m
[32m  Best f1:0.1939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.13059:  71%|███████▏  | 10/14 [01:17<00:37,  9.47s/it]epoch 1 loss 3.06907:  71%|███████▏  | 10/14 [01:18<00:37,  9.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.1947[0m
[32m  eval_mcc = 0.6611[0m
[32m  eval_precision = 0.2472[0m
[32m  eval_recall = 0.1844[0m
[32m  ********************[0m
[32m  Best f1:0.1947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.06907:  79%|███████▊  | 11/14 [01:29<00:29,  9.97s/it]epoch 1 loss 3.014:  79%|███████▊  | 11/14 [01:29<00:29,  9.97s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6823[0m
[32m  eval_f1 = 0.1943[0m
[32m  eval_mcc = 0.665[0m
[32m  eval_precision = 0.2482[0m
[32m  eval_recall = 0.1842[0m
[32m  ********************[0m
[32m  Best MCC:0.665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.014:  86%|████████▌ | 12/14 [01:37<00:18,  9.47s/it]epoch 1 loss 2.96397:  86%|████████▌ | 12/14 [01:38<00:18,  9.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.04it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6863[0m
[32m  eval_f1 = 0.1943[0m
[32m  eval_mcc = 0.6694[0m
[32m  eval_precision = 0.2488[0m
[32m  eval_recall = 0.1846[0m
[32m  ********************[0m
[32m  Best MCC:0.6694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.96397:  93%|█████████▎| 13/14 [01:45<00:09,  9.17s/it]epoch 1 loss 2.90758:  93%|█████████▎| 13/14 [01:46<00:09,  9.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6904[0m
[32m  eval_f1 = 0.1952[0m
[32m  eval_mcc = 0.6738[0m
[32m  eval_precision = 0.2497[0m
[32m  eval_recall = 0.1858[0m
[32m  ********************[0m
[32m  Best f1:0.1952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.90758: 100%|██████████| 14/14 [01:56<00:00,  9.55s/it]epoch 1 loss 2.90758: 100%|██████████| 14/14 [01:56<00:00,  8.31s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.15197:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6934[0m
[32m  eval_f1 = 0.196[0m
[32m  eval_mcc = 0.6772[0m
[32m  eval_precision = 0.2501[0m
[32m  eval_recall = 0.1869[0m
[32m  ********************[0m
[32m  Best f1:0.196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.15197:   7%|▋         | 1/14 [00:10<02:19, 10.72s/it]epoch 2 loss 2.13946:   7%|▋         | 1/14 [00:11<02:19, 10.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6979[0m
[32m  eval_f1 = 0.1992[0m
[32m  eval_mcc = 0.682[0m
[32m  eval_precision = 0.2601[0m
[32m  eval_recall = 0.1894[0m
[32m  ********************[0m
[32m  Best f1:0.1992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.13946:  14%|█▍        | 2/14 [00:21<02:11, 10.97s/it]epoch 2 loss 2.10804:  14%|█▍        | 2/14 [00:22<02:11, 10.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7039[0m
[32m  eval_f1 = 0.2034[0m
[32m  eval_mcc = 0.6882[0m
[32m  eval_precision = 0.2704[0m
[32m  eval_recall = 0.1931[0m
[32m  ********************[0m
[32m  Best f1:0.2034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.10804:  21%|██▏       | 3/14 [00:33<02:02, 11.10s/it]epoch 2 loss 2.08777:  21%|██▏       | 3/14 [00:33<02:02, 11.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7099[0m
[32m  eval_f1 = 0.207[0m
[32m  eval_mcc = 0.6946[0m
[32m  eval_precision = 0.2798[0m
[32m  eval_recall = 0.1965[0m
[32m  ********************[0m
[32m  Best f1:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.08777:  29%|██▊       | 4/14 [00:43<01:48, 10.85s/it]epoch 2 loss 2.03027:  29%|██▊       | 4/14 [00:44<01:48, 10.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7158[0m
[32m  eval_f1 = 0.2112[0m
[32m  eval_mcc = 0.7007[0m
[32m  eval_precision = 0.2808[0m
[32m  eval_recall = 0.2001[0m
[32m  ********************[0m
[32m  Best f1:0.2112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.03027:  36%|███▌      | 5/14 [00:54<01:38, 10.94s/it]epoch 2 loss 1.98307:  36%|███▌      | 5/14 [00:55<01:38, 10.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7229[0m
[32m  eval_f1 = 0.2168[0m
[32m  eval_mcc = 0.7081[0m
[32m  eval_precision = 0.2817[0m
[32m  eval_recall = 0.2051[0m
[32m  ********************[0m
[32m  Best f1:0.2168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.98307:  43%|████▎     | 6/14 [01:02<01:20, 10.03s/it]epoch 2 loss 1.95193:  43%|████▎     | 6/14 [01:03<01:20, 10.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.73[0m
[32m  eval_f1 = 0.2235[0m
[32m  eval_mcc = 0.7155[0m
[32m  eval_precision = 0.3084[0m
[32m  eval_recall = 0.2109[0m
[32m  ********************[0m
[32m  Best f1:0.2235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.95193:  50%|█████     | 7/14 [01:13<01:11, 10.26s/it]epoch 2 loss 1.9321:  50%|█████     | 7/14 [01:14<01:11, 10.26s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7374[0m
[32m  eval_f1 = 0.2306[0m
[32m  eval_mcc = 0.7232[0m
[32m  eval_precision = 0.3178[0m
[32m  eval_recall = 0.2168[0m
[32m  ********************[0m
[32m  Best f1:0.2306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.9321:  57%|█████▋    | 8/14 [01:21<00:57,  9.63s/it]epoch 2 loss 1.89426:  57%|█████▋    | 8/14 [01:22<00:57,  9.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7448[0m
[32m  eval_f1 = 0.2371[0m
[32m  eval_mcc = 0.731[0m
[32m  eval_precision = 0.3186[0m
[32m  eval_recall = 0.2225[0m
[32m  ********************[0m
[32m  Best f1:0.2371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.89426:  64%|██████▍   | 9/14 [01:32<00:49,  9.98s/it]epoch 2 loss 1.86404:  64%|██████▍   | 9/14 [01:33<00:49,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7515[0m
[32m  eval_f1 = 0.2429[0m
[32m  eval_mcc = 0.7382[0m
[32m  eval_precision = 0.3283[0m
[32m  eval_recall = 0.2277[0m
[32m  ********************[0m
[32m  Best f1:0.2429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.86404:  71%|███████▏  | 10/14 [01:41<00:37,  9.49s/it]epoch 2 loss 1.83623:  71%|███████▏  | 10/14 [01:41<00:37,  9.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7578[0m
[32m  eval_f1 = 0.249[0m
[32m  eval_mcc = 0.7447[0m
[32m  eval_precision = 0.3374[0m
[32m  eval_recall = 0.2333[0m
[32m  ********************[0m
[32m  Best f1:0.249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.83623:  79%|███████▊  | 11/14 [01:52<00:30, 10.19s/it]epoch 2 loss 1.80821:  79%|███████▊  | 11/14 [01:53<00:30, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7638[0m
[32m  eval_f1 = 0.2565[0m
[32m  eval_mcc = 0.7512[0m
[32m  eval_precision = 0.3337[0m
[32m  eval_recall = 0.2402[0m
[32m  ********************[0m
[32m  Best f1:0.2565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.80821:  86%|████████▌ | 12/14 [02:04<00:21, 10.53s/it]epoch 2 loss 1.79651:  86%|████████▌ | 12/14 [02:04<00:21, 10.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7682[0m
[32m  eval_f1 = 0.2603[0m
[32m  eval_mcc = 0.7558[0m
[32m  eval_precision = 0.3339[0m
[32m  eval_recall = 0.2441[0m
[32m  ********************[0m
[32m  Best f1:0.2603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.79651:  93%|█████████▎| 13/14 [02:16<00:11, 11.03s/it]epoch 2 loss 1.77439:  93%|█████████▎| 13/14 [02:16<00:11, 11.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.80it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7722[0m
[32m  eval_f1 = 0.2648[0m
[32m  eval_mcc = 0.76[0m
[32m  eval_precision = 0.3402[0m
[32m  eval_recall = 0.2487[0m
[32m  ********************[0m
[32m  Best f1:0.2648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.76[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.77439: 100%|██████████| 14/14 [02:28<00:00, 11.51s/it]epoch 2 loss 1.77439: 100%|██████████| 14/14 [02:28<00:00, 10.64s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.45014:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7757[0m
[32m  eval_f1 = 0.2679[0m
[32m  eval_mcc = 0.7638[0m
[32m  eval_precision = 0.3387[0m
[32m  eval_recall = 0.2517[0m
[32m  ********************[0m
[32m  Best f1:0.2679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45014:   7%|▋         | 1/14 [00:12<02:40, 12.32s/it]epoch 3 loss 1.42344:   7%|▋         | 1/14 [00:13<02:40, 12.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.779[0m
[32m  eval_f1 = 0.2713[0m
[32m  eval_mcc = 0.7673[0m
[32m  eval_precision = 0.3506[0m
[32m  eval_recall = 0.255[0m
[32m  ********************[0m
[32m  Best f1:0.2713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42344:  14%|█▍        | 2/14 [00:24<02:26, 12.23s/it]epoch 3 loss 1.4097:  14%|█▍        | 2/14 [00:25<02:26, 12.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.782[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.7704[0m
[32m  eval_precision = 0.351[0m
[32m  eval_recall = 0.2584[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4097:  21%|██▏       | 3/14 [00:36<02:12, 12.08s/it]epoch 3 loss 1.44156:  21%|██▏       | 3/14 [00:37<02:12, 12.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7848[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.7735[0m
[32m  eval_precision = 0.3511[0m
[32m  eval_recall = 0.2616[0m
[32m  ********************[0m
[32m  Best f1:0.2777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44156:  29%|██▊       | 4/14 [00:48<02:01, 12.14s/it]epoch 3 loss 1.43135:  29%|██▊       | 4/14 [00:49<02:01, 12.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7877[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.7765[0m
[32m  eval_precision = 0.369[0m
[32m  eval_recall = 0.2649[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43135:  36%|███▌      | 5/14 [01:00<01:47, 12.00s/it]epoch 3 loss 1.41692:  36%|███▌      | 5/14 [01:01<01:47, 12.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.791[0m
[32m  eval_f1 = 0.2858[0m
[32m  eval_mcc = 0.78[0m
[32m  eval_precision = 0.3709[0m
[32m  eval_recall = 0.2687[0m
[32m  ********************[0m
[32m  Best f1:0.2858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.78[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41692:  43%|████▎     | 6/14 [01:12<01:35, 11.96s/it]epoch 3 loss 1.40424:  43%|████▎     | 6/14 [01:13<01:35, 11.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7938[0m
[32m  eval_f1 = 0.2896[0m
[32m  eval_mcc = 0.783[0m
[32m  eval_precision = 0.372[0m
[32m  eval_recall = 0.2719[0m
[32m  ********************[0m
[32m  Best f1:0.2896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40424:  50%|█████     | 7/14 [01:23<01:21, 11.58s/it]epoch 3 loss 1.39107:  50%|█████     | 7/14 [01:23<01:21, 11.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7964[0m
[32m  eval_f1 = 0.2934[0m
[32m  eval_mcc = 0.7857[0m
[32m  eval_precision = 0.3814[0m
[32m  eval_recall = 0.2752[0m
[32m  ********************[0m
[32m  Best f1:0.2934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39107:  57%|█████▋    | 8/14 [01:33<01:07, 11.29s/it]epoch 3 loss 1.37957:  57%|█████▋    | 8/14 [01:34<01:07, 11.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7983[0m
[32m  eval_f1 = 0.297[0m
[32m  eval_mcc = 0.7878[0m
[32m  eval_precision = 0.3904[0m
[32m  eval_recall = 0.2782[0m
[32m  ********************[0m
[32m  Best f1:0.297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37957:  64%|██████▍   | 9/14 [01:45<00:57, 11.47s/it]epoch 3 loss 1.37135:  64%|██████▍   | 9/14 [01:46<00:57, 11.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8004[0m
[32m  eval_f1 = 0.2999[0m
[32m  eval_mcc = 0.79[0m
[32m  eval_precision = 0.3986[0m
[32m  eval_recall = 0.2811[0m
[32m  ********************[0m
[32m  Best f1:0.2999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.79[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37135:  71%|███████▏  | 10/14 [01:58<00:47, 11.81s/it]epoch 3 loss 1.36828:  71%|███████▏  | 10/14 [01:58<00:47, 11.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8024[0m
[32m  eval_f1 = 0.303[0m
[32m  eval_mcc = 0.7921[0m
[32m  eval_precision = 0.3986[0m
[32m  eval_recall = 0.2841[0m
[32m  ********************[0m
[32m  Best f1:0.303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36828:  79%|███████▊  | 11/14 [02:11<00:36, 12.14s/it]epoch 3 loss 1.35323:  79%|███████▊  | 11/14 [02:11<00:36, 12.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8039[0m
[32m  eval_f1 = 0.3061[0m
[32m  eval_mcc = 0.7936[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.2868[0m
[32m  ********************[0m
[32m  Best f1:0.3061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35323:  86%|████████▌ | 12/14 [02:24<00:25, 12.53s/it]epoch 3 loss 1.34753:  86%|████████▌ | 12/14 [02:25<00:25, 12.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8054[0m
[32m  eval_f1 = 0.3083[0m
[32m  eval_mcc = 0.7952[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.2887[0m
[32m  ********************[0m
[32m  Best f1:0.3083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34753:  93%|█████████▎| 13/14 [02:37<00:12, 12.67s/it]epoch 3 loss 1.33593:  93%|█████████▎| 13/14 [02:38<00:12, 12.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8069[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.7967[0m
[32m  eval_precision = 0.4167[0m
[32m  eval_recall = 0.2934[0m
[32m  ********************[0m
[32m  Best f1:0.3135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33593: 100%|██████████| 14/14 [02:50<00:00, 12.64s/it]epoch 3 loss 1.33593: 100%|██████████| 14/14 [02:50<00:00, 12.14s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.22615:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8081[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.7981[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22615:   7%|▋         | 1/14 [00:12<02:41, 12.42s/it]epoch 4 loss 1.24717:   7%|▋         | 1/14 [00:13<02:41, 12.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8091[0m
[32m  eval_f1 = 0.3183[0m
[32m  eval_mcc = 0.7991[0m
[32m  eval_precision = 0.4171[0m
[32m  eval_recall = 0.2985[0m
[32m  ********************[0m
[32m  Best f1:0.3183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24717:  14%|█▍        | 2/14 [00:24<02:30, 12.51s/it]epoch 4 loss 1.23514:  14%|█▍        | 2/14 [00:25<02:30, 12.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8103[0m
[32m  eval_f1 = 0.3209[0m
[32m  eval_mcc = 0.8004[0m
[32m  eval_precision = 0.4173[0m
[32m  eval_recall = 0.3013[0m
[32m  ********************[0m
[32m  Best f1:0.3209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23514:  21%|██▏       | 3/14 [00:37<02:17, 12.50s/it]epoch 4 loss 1.23022:  21%|██▏       | 3/14 [00:38<02:17, 12.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8111[0m
[32m  eval_f1 = 0.3223[0m
[32m  eval_mcc = 0.8012[0m
[32m  eval_precision = 0.4262[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.3223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23022:  29%|██▊       | 4/14 [00:49<02:02, 12.24s/it]epoch 4 loss 1.22196:  29%|██▊       | 4/14 [00:50<02:02, 12.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8118[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.8019[0m
[32m  eval_precision = 0.4259[0m
[32m  eval_recall = 0.3039[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22196:  36%|███▌      | 5/14 [01:01<01:49, 12.18s/it]epoch 4 loss 1.22124:  36%|███▌      | 5/14 [01:02<01:49, 12.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8125[0m
[32m  eval_f1 = 0.325[0m
[32m  eval_mcc = 0.8027[0m
[32m  eval_precision = 0.4258[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best f1:0.325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22124:  43%|████▎     | 6/14 [01:13<01:37, 12.14s/it]epoch 4 loss 1.20781:  43%|████▎     | 6/14 [01:14<01:37, 12.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8132[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.8034[0m
[32m  eval_precision = 0.4254[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20781:  50%|█████     | 7/14 [01:24<01:22, 11.84s/it]epoch 4 loss 1.20387:  50%|█████     | 7/14 [01:25<01:22, 11.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8138[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.8041[0m
[32m  eval_precision = 0.4255[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20387:  57%|█████▋    | 8/14 [01:35<01:09, 11.64s/it]epoch 4 loss 1.20571:  57%|█████▋    | 8/14 [01:36<01:09, 11.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8143[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.8045[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20571:  64%|██████▍   | 9/14 [01:48<01:00, 12.07s/it]epoch 4 loss 1.20252:  64%|██████▍   | 9/14 [01:49<01:00, 12.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8146[0m
[32m  eval_f1 = 0.329[0m
[32m  eval_mcc = 0.8049[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.3098[0m
[32m  ********************[0m
[32m  Best f1:0.329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20252:  71%|███████▏  | 10/14 [02:01<00:48, 12.24s/it]epoch 4 loss 1.19422:  71%|███████▏  | 10/14 [02:02<00:48, 12.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8148[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.8051[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.3105[0m
[32m  ********************[0m
[32m  Best f1:0.3295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19422:  79%|███████▊  | 11/14 [02:13<00:36, 12.30s/it]epoch 4 loss 1.19449:  79%|███████▊  | 11/14 [02:14<00:36, 12.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.815[0m
[32m  eval_f1 = 0.3298[0m
[32m  eval_mcc = 0.8053[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.3108[0m
[32m  ********************[0m
[32m  Best f1:0.3298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19449:  86%|████████▌ | 12/14 [02:25<00:23, 11.93s/it]epoch 4 loss 1.18823:  86%|████████▌ | 12/14 [02:25<00:23, 11.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8151[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.8054[0m
[32m  eval_precision = 0.4239[0m
[32m  eval_recall = 0.3113[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18823:  93%|█████████▎| 13/14 [02:37<00:12, 12.20s/it]epoch 4 loss 1.18418:  93%|█████████▎| 13/14 [02:38<00:12, 12.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8153[0m
[32m  eval_f1 = 0.3303[0m
[32m  eval_mcc = 0.8056[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18418: 100%|██████████| 14/14 [02:49<00:00, 12.12s/it]epoch 4 loss 1.18418: 100%|██████████| 14/14 [02:49<00:00, 12.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.67it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.77it/s] 60%|██████    | 6/10 [00:02<00:01,  2.77it/s] 70%|███████   | 7/10 [00:02<00:01,  2.78it/s] 80%|████████  | 8/10 [00:02<00:00,  2.78it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s]100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8153[0m
[32m  eval_f1 = 0.3303[0m
[32m  eval_mcc = 0.8056[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.3116[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.80it/s] 20%|██        | 2/10 [00:00<00:02,  2.78it/s] 30%|███       | 3/10 [00:01<00:02,  2.78it/s] 40%|████      | 4/10 [00:01<00:02,  2.77it/s] 50%|█████     | 5/10 [00:01<00:01,  2.77it/s] 60%|██████    | 6/10 [00:02<00:01,  2.77it/s] 70%|███████   | 7/10 [00:02<00:01,  2.77it/s] 80%|████████  | 8/10 [00:02<00:00,  2.77it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.7992[0m
[32m  eval_f1 = 0.2652[0m
[32m  eval_mcc = 0.7895[0m
[32m  eval_precision = 0.3305[0m
[32m  eval_recall = 0.2515[0m

