[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.layer_norm.bias', 'lm_head.bias', 'lm_head.layer_norm.weight', 'lm_head.decoder.bias', 'lm_head.dense.bias', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.52565:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0011[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0031[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0007[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52565:   7%|▋         | 1/14 [00:05<01:12,  5.59s/it]epoch 0 loss 5.52516:   7%|▋         | 1/14 [00:06<01:12,  5.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0011[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0032[0m
[32m  eval_precision = 0.0024[0m
[32m  eval_recall = 0.0007[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52516:  14%|█▍        | 2/14 [00:10<01:04,  5.36s/it]epoch 0 loss 5.5201:  14%|█▍        | 2/14 [00:11<01:04,  5.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0036[0m
[32m  eval_precision = 0.0024[0m
[32m  eval_recall = 0.0008[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.5201:  21%|██▏       | 3/14 [00:15<00:58,  5.28s/it]epoch 0 loss 5.5141:  21%|██▏       | 3/14 [00:16<00:58,  5.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0016[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0041[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0009[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.5141:  29%|██▊       | 4/14 [00:21<00:52,  5.25s/it]epoch 0 loss 5.5016:  29%|██▊       | 4/14 [00:21<00:52,  5.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0023[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0048[0m
[32m  eval_precision = 0.0035[0m
[32m  eval_recall = 0.001[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.5016:  36%|███▌      | 5/14 [00:26<00:47,  5.23s/it]epoch 0 loss 5.48601:  36%|███▌      | 5/14 [00:27<00:47,  5.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0052[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0039[0m
[32m  eval_precision = 0.0055[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.48601:  43%|████▎     | 6/14 [00:31<00:41,  5.22s/it]epoch 0 loss 5.46667:  43%|████▎     | 6/14 [00:32<00:41,  5.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0196[0m
[32m  eval_f1 = 0.0082[0m
[32m  eval_mcc = 0.0078[0m
[32m  eval_precision = 0.0144[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46667:  50%|█████     | 7/14 [00:37<00:38,  5.44s/it]epoch 0 loss 5.443:  50%|█████     | 7/14 [00:38<00:38,  5.44s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0513[0m
[32m  eval_f1 = 0.0173[0m
[32m  eval_mcc = 0.0361[0m
[32m  eval_precision = 0.0241[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.443:  57%|█████▋    | 8/14 [00:43<00:33,  5.63s/it]epoch 0 loss 5.41568:  57%|█████▋    | 8/14 [00:44<00:33,  5.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1012[0m
[32m  eval_f1 = 0.0254[0m
[32m  eval_mcc = 0.0832[0m
[32m  eval_precision = 0.0336[0m
[32m  eval_recall = 0.0337[0m
[32m  ********************[0m
[32m  Best f1:0.0254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41568:  64%|██████▍   | 9/14 [00:49<00:28,  5.75s/it]epoch 0 loss 5.3843:  64%|██████▍   | 9/14 [00:50<00:28,  5.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1743[0m
[32m  eval_f1 = 0.0405[0m
[32m  eval_mcc = 0.1545[0m
[32m  eval_precision = 0.0492[0m
[32m  eval_recall = 0.0511[0m
[32m  ********************[0m
[32m  Best f1:0.0405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3843:  71%|███████▏  | 10/14 [00:56<00:24,  6.09s/it]epoch 0 loss 5.34875:  71%|███████▏  | 10/14 [00:57<00:24,  6.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2477[0m
[32m  eval_f1 = 0.0571[0m
[32m  eval_mcc = 0.2282[0m
[32m  eval_precision = 0.0757[0m
[32m  eval_recall = 0.069[0m
[32m  ********************[0m
[32m  Best f1:0.0571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34875:  79%|███████▊  | 11/14 [01:03<00:19,  6.35s/it]epoch 0 loss 5.30994:  79%|███████▊  | 11/14 [01:04<00:19,  6.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3239[0m
[32m  eval_f1 = 0.0753[0m
[32m  eval_mcc = 0.3056[0m
[32m  eval_precision = 0.0934[0m
[32m  eval_recall = 0.0899[0m
[32m  ********************[0m
[32m  Best f1:0.0753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30994:  86%|████████▌ | 12/14 [01:10<00:12,  6.50s/it]epoch 0 loss 5.26754:  86%|████████▌ | 12/14 [01:10<00:12,  6.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3985[0m
[32m  eval_f1 = 0.0988[0m
[32m  eval_mcc = 0.3811[0m
[32m  eval_precision = 0.1274[0m
[32m  eval_recall = 0.1156[0m
[32m  ********************[0m
[32m  Best f1:0.0988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26754:  93%|█████████▎| 13/14 [01:16<00:06,  6.59s/it]epoch 0 loss 5.2218:  93%|█████████▎| 13/14 [01:17<00:06,  6.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4675[0m
[32m  eval_f1 = 0.1236[0m
[32m  eval_mcc = 0.4511[0m
[32m  eval_precision = 0.1534[0m
[32m  eval_recall = 0.1395[0m
[32m  ********************[0m
[32m  Best f1:0.1236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.2218: 100%|██████████| 14/14 [01:22<00:00,  6.40s/it]epoch 0 loss 5.2218: 100%|██████████| 14/14 [01:22<00:00,  5.92s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.47958:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5169[0m
[32m  eval_f1 = 0.1519[0m
[32m  eval_mcc = 0.5014[0m
[32m  eval_precision = 0.1833[0m
[32m  eval_recall = 0.1676[0m
[32m  ********************[0m
[32m  Best f1:0.1519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.47958:   7%|▋         | 1/14 [00:06<01:28,  6.83s/it]epoch 1 loss 4.41395:   7%|▋         | 1/14 [00:07<01:28,  6.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5471[0m
[32m  eval_f1 = 0.1793[0m
[32m  eval_mcc = 0.5318[0m
[32m  eval_precision = 0.2193[0m
[32m  eval_recall = 0.1931[0m
[32m  ********************[0m
[32m  Best f1:0.1793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.41395:  14%|█▍        | 2/14 [00:13<01:21,  6.82s/it]epoch 1 loss 4.33586:  14%|█▍        | 2/14 [00:14<01:21,  6.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5705[0m
[32m  eval_f1 = 0.1991[0m
[32m  eval_mcc = 0.5554[0m
[32m  eval_precision = 0.2375[0m
[32m  eval_recall = 0.2122[0m
[32m  ********************[0m
[32m  Best f1:0.1991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.33586:  21%|██▏       | 3/14 [00:20<01:15,  6.85s/it]epoch 1 loss 4.25873:  21%|██▏       | 3/14 [00:21<01:15,  6.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5888[0m
[32m  eval_f1 = 0.2191[0m
[32m  eval_mcc = 0.5738[0m
[32m  eval_precision = 0.2583[0m
[32m  eval_recall = 0.231[0m
[32m  ********************[0m
[32m  Best f1:0.2191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.25873:  29%|██▊       | 4/14 [00:27<01:08,  6.88s/it]epoch 1 loss 4.19088:  29%|██▊       | 4/14 [00:28<01:08,  6.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6025[0m
[32m  eval_f1 = 0.2329[0m
[32m  eval_mcc = 0.5875[0m
[32m  eval_precision = 0.2742[0m
[32m  eval_recall = 0.244[0m
[32m  ********************[0m
[32m  Best f1:0.2329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.19088:  36%|███▌      | 5/14 [00:33<00:59,  6.60s/it]epoch 1 loss 4.12379:  36%|███▌      | 5/14 [00:34<00:59,  6.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.2448[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.2848[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.2448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.12379:  43%|████▎     | 6/14 [00:40<00:53,  6.67s/it]epoch 1 loss 4.04925:  43%|████▎     | 6/14 [00:41<00:53,  6.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.2569[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.2972[0m
[32m  eval_recall = 0.2702[0m
[32m  ********************[0m
[32m  Best f1:0.2569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.04925:  50%|█████     | 7/14 [00:47<00:47,  6.72s/it]epoch 1 loss 3.9773:  50%|█████     | 7/14 [00:47<00:47,  6.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.2668[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.3077[0m
[32m  eval_recall = 0.2805[0m
[32m  ********************[0m
[32m  Best f1:0.2668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.9773:  57%|█████▋    | 8/14 [00:53<00:40,  6.74s/it]epoch 1 loss 3.90816:  57%|█████▋    | 8/14 [00:54<00:40,  6.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2759[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.3161[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.2759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.90816:  64%|██████▍   | 9/14 [01:01<00:34,  6.89s/it]epoch 1 loss 3.83975:  64%|██████▍   | 9/14 [01:01<00:34,  6.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2809[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.322[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.2809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.83975:  71%|███████▏  | 10/14 [01:08<00:27,  6.87s/it]epoch 1 loss 3.77657:  71%|███████▏  | 10/14 [01:08<00:27,  6.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.2886[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.3357[0m
[32m  eval_recall = 0.3013[0m
[32m  ********************[0m
[32m  Best f1:0.2886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.77657:  79%|███████▊  | 11/14 [01:14<00:20,  6.86s/it]epoch 1 loss 3.7202:  79%|███████▊  | 11/14 [01:15<00:20,  6.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.3395[0m
[32m  eval_recall = 0.3029[0m
[32m  ********************[0m
[32m  Best f1:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.7202:  86%|████████▌ | 12/14 [01:21<00:13,  6.81s/it]epoch 1 loss 3.66421:  86%|████████▌ | 12/14 [01:22<00:13,  6.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.3418[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.66421:  93%|█████████▎| 13/14 [01:28<00:06,  6.83s/it]epoch 1 loss 3.60739:  93%|█████████▎| 13/14 [01:29<00:06,  6.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.2934[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.3407[0m
[32m  eval_recall = 0.3053[0m
[32m  ********************[0m
[32m  Best f1:0.2934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.60739: 100%|██████████| 14/14 [01:36<00:00,  7.36s/it]epoch 1 loss 3.60739: 100%|██████████| 14/14 [01:36<00:00,  6.93s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.77963:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.3072[0m
[32m  ********************[0m
[32m  Best f1:0.2958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.77963:   7%|▋         | 1/14 [00:08<01:50,  8.52s/it]epoch 2 loss 2.75898:   7%|▋         | 1/14 [00:09<01:50,  8.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.2976[0m
[32m  eval_mcc = 0.6511[0m
[32m  eval_precision = 0.3442[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.2976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.75898:  14%|█▍        | 2/14 [00:18<01:54,  9.54s/it]epoch 2 loss 2.7113:  14%|█▍        | 2/14 [00:19<01:54,  9.54s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.3567[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.7113:  21%|██▏       | 3/14 [00:29<01:51, 10.09s/it]epoch 2 loss 2.67702:  21%|██▏       | 3/14 [00:30<01:51, 10.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6753[0m
[32m  eval_f1 = 0.3081[0m
[32m  eval_mcc = 0.6605[0m
[32m  eval_precision = 0.358[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.3081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.67702:  29%|██▊       | 4/14 [00:40<01:42, 10.29s/it]epoch 2 loss 2.62613:  29%|██▊       | 4/14 [00:40<01:42, 10.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.3123[0m
[32m  eval_mcc = 0.6656[0m
[32m  eval_precision = 0.3648[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.3123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.62613:  36%|███▌      | 5/14 [00:50<01:33, 10.41s/it]epoch 2 loss 2.57793:  36%|███▌      | 5/14 [00:51<01:33, 10.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6868[0m
[32m  eval_f1 = 0.3149[0m
[32m  eval_mcc = 0.6722[0m
[32m  eval_precision = 0.3639[0m
[32m  eval_recall = 0.3231[0m
[32m  ********************[0m
[32m  Best f1:0.3149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.57793:  43%|████▎     | 6/14 [01:00<01:22, 10.27s/it]epoch 2 loss 2.54482:  43%|████▎     | 6/14 [01:01<01:22, 10.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6916[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.677[0m
[32m  eval_precision = 0.3653[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.54482:  50%|█████     | 7/14 [01:11<01:12, 10.33s/it]epoch 2 loss 2.51505:  50%|█████     | 7/14 [01:11<01:12, 10.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6952[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6806[0m
[32m  eval_precision = 0.3676[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.51505:  57%|█████▋    | 8/14 [01:19<00:58,  9.67s/it]epoch 2 loss 2.47549:  57%|█████▋    | 8/14 [01:20<00:58,  9.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6985[0m
[32m  eval_f1 = 0.3204[0m
[32m  eval_mcc = 0.6839[0m
[32m  eval_precision = 0.3688[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.47549:  64%|██████▍   | 9/14 [01:29<00:48,  9.70s/it]epoch 2 loss 2.44008:  64%|██████▍   | 9/14 [01:29<00:48,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7025[0m
[32m  eval_f1 = 0.3222[0m
[32m  eval_mcc = 0.688[0m
[32m  eval_precision = 0.3716[0m
[32m  eval_recall = 0.3288[0m
[32m  ********************[0m
[32m  Best f1:0.3222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.44008:  71%|███████▏  | 10/14 [01:37<00:36,  9.15s/it]epoch 2 loss 2.40771:  71%|███████▏  | 10/14 [01:37<00:36,  9.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7073[0m
[32m  eval_f1 = 0.3237[0m
[32m  eval_mcc = 0.6927[0m
[32m  eval_precision = 0.3728[0m
[32m  eval_recall = 0.3298[0m
[32m  ********************[0m
[32m  Best f1:0.3237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.40771:  79%|███████▊  | 11/14 [01:47<00:28,  9.44s/it]epoch 2 loss 2.37636:  79%|███████▊  | 11/14 [01:48<00:28,  9.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7114[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.697[0m
[32m  eval_precision = 0.3694[0m
[32m  eval_recall = 0.3302[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.37636:  86%|████████▌ | 12/14 [01:55<00:18,  9.17s/it]epoch 2 loss 2.3598:  86%|████████▌ | 12/14 [01:56<00:18,  9.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7156[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.7012[0m
[32m  eval_precision = 0.3704[0m
[32m  eval_recall = 0.3308[0m
[32m  ********************[0m
[32m  Best f1:0.3257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3598:  93%|█████████▎| 13/14 [02:05<00:09,  9.34s/it]epoch 2 loss 2.33223:  93%|█████████▎| 13/14 [02:06<00:09,  9.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7186[0m
[32m  eval_f1 = 0.3266[0m
[32m  eval_mcc = 0.7042[0m
[32m  eval_precision = 0.3713[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.33223: 100%|██████████| 14/14 [02:13<00:00,  8.94s/it]epoch 2 loss 2.33223: 100%|██████████| 14/14 [02:13<00:00,  9.54s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.93799:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7212[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.7069[0m
[32m  eval_precision = 0.3723[0m
[32m  eval_recall = 0.3316[0m
[32m  ********************[0m
[32m  Best f1:0.3274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.93799:   7%|▋         | 1/14 [00:10<02:14, 10.37s/it]epoch 3 loss 1.89826:   7%|▋         | 1/14 [00:11<02:14, 10.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7238[0m
[32m  eval_f1 = 0.3297[0m
[32m  eval_mcc = 0.7096[0m
[32m  eval_precision = 0.3825[0m
[32m  eval_recall = 0.3331[0m
[32m  ********************[0m
[32m  Best f1:0.3297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.89826:  14%|█▍        | 2/14 [00:18<01:51,  9.28s/it]epoch 3 loss 1.878:  14%|█▍        | 2/14 [00:19<01:51,  9.28s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7254[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.7112[0m
[32m  eval_precision = 0.3839[0m
[32m  eval_recall = 0.3334[0m
[32m  ********************[0m
[32m  Best f1:0.3306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.878:  21%|██▏       | 3/14 [00:28<01:45,  9.61s/it]epoch 3 loss 1.88749:  21%|██▏       | 3/14 [00:29<01:45,  9.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7277[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.7136[0m
[32m  eval_precision = 0.3847[0m
[32m  eval_recall = 0.3347[0m
[32m  ********************[0m
[32m  Best f1:0.3325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.88749:  29%|██▊       | 4/14 [00:38<01:34,  9.45s/it]epoch 3 loss 1.8739:  29%|██▊       | 4/14 [00:38<01:34,  9.45s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7293[0m
[32m  eval_f1 = 0.3335[0m
[32m  eval_mcc = 0.7153[0m
[32m  eval_precision = 0.3857[0m
[32m  eval_recall = 0.3353[0m
[32m  ********************[0m
[32m  Best f1:0.3335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.8739:  36%|███▌      | 5/14 [00:46<01:22,  9.13s/it]epoch 3 loss 1.85449:  36%|███▌      | 5/14 [00:47<01:22,  9.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.731[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.717[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.3367[0m
[32m  ********************[0m
[32m  Best f1:0.3359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.85449:  43%|████▎     | 6/14 [00:53<01:06,  8.33s/it]epoch 3 loss 1.84036:  43%|████▎     | 6/14 [00:54<01:06,  8.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7328[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.7189[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.3384[0m
[32m  ********************[0m
[32m  Best f1:0.3391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.84036:  50%|█████     | 7/14 [01:00<00:55,  7.86s/it]epoch 3 loss 1.82672:  50%|█████     | 7/14 [01:01<00:55,  7.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7349[0m
[32m  eval_f1 = 0.3404[0m
[32m  eval_mcc = 0.7211[0m
[32m  eval_precision = 0.41[0m
[32m  eval_recall = 0.3394[0m
[32m  ********************[0m
[32m  Best f1:0.3404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.82672:  57%|█████▋    | 8/14 [01:06<00:44,  7.43s/it]epoch 3 loss 1.81223:  57%|█████▋    | 8/14 [01:07<00:44,  7.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7362[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.7224[0m
[32m  eval_precision = 0.4102[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.81223:  64%|██████▍   | 9/14 [01:13<00:36,  7.23s/it]epoch 3 loss 1.8022:  64%|██████▍   | 9/14 [01:14<00:36,  7.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7371[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.7233[0m
[32m  eval_precision = 0.4192[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.3441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.8022:  71%|███████▏  | 10/14 [01:20<00:28,  7.10s/it]epoch 3 loss 1.79298:  71%|███████▏  | 10/14 [01:21<00:28,  7.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7377[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.7239[0m
[32m  eval_precision = 0.4277[0m
[32m  eval_recall = 0.3425[0m
[32m  ********************[0m
[32m  Best f1:0.3453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.79298:  79%|███████▊  | 11/14 [01:27<00:20,  6.99s/it]epoch 3 loss 1.77596:  79%|███████▊  | 11/14 [01:27<00:20,  6.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7385[0m
[32m  eval_f1 = 0.3466[0m
[32m  eval_mcc = 0.7248[0m
[32m  eval_precision = 0.4272[0m
[32m  eval_recall = 0.3432[0m
[32m  ********************[0m
[32m  Best f1:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.77596:  86%|████████▌ | 12/14 [01:33<00:13,  6.94s/it]epoch 3 loss 1.76612:  86%|████████▌ | 12/14 [01:34<00:13,  6.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7392[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.7255[0m
[32m  eval_precision = 0.4274[0m
[32m  eval_recall = 0.3434[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.76612:  93%|█████████▎| 13/14 [01:40<00:06,  6.73s/it]epoch 3 loss 1.75155:  93%|█████████▎| 13/14 [01:40<00:06,  6.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7395[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.7258[0m
[32m  eval_precision = 0.4283[0m
[32m  eval_recall = 0.3433[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.75155: 100%|██████████| 14/14 [01:46<00:00,  6.67s/it]epoch 3 loss 1.75155: 100%|██████████| 14/14 [01:46<00:00,  7.63s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.59035:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7398[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.7261[0m
[32m  eval_precision = 0.4289[0m
[32m  eval_recall = 0.344[0m
[32m  ********************[0m
[32m  Best f1:0.348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.59035:   7%|▋         | 1/14 [00:06<01:27,  6.75s/it]epoch 4 loss 1.60222:   7%|▋         | 1/14 [00:07<01:27,  6.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7403[0m
[32m  eval_f1 = 0.3485[0m
[32m  eval_mcc = 0.7267[0m
[32m  eval_precision = 0.4295[0m
[32m  eval_recall = 0.3442[0m
[32m  ********************[0m
[32m  Best f1:0.3485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.60222:  14%|█▍        | 2/14 [00:12<01:16,  6.42s/it]epoch 4 loss 1.57997:  14%|█▍        | 2/14 [00:13<01:16,  6.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7414[0m
[32m  eval_f1 = 0.3491[0m
[32m  eval_mcc = 0.7278[0m
[32m  eval_precision = 0.4301[0m
[32m  eval_recall = 0.3444[0m
[32m  ********************[0m
[32m  Best f1:0.3491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.57997:  21%|██▏       | 3/14 [00:19<01:13,  6.66s/it]epoch 4 loss 1.57063:  21%|██▏       | 3/14 [00:20<01:13,  6.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7427[0m
[32m  eval_f1 = 0.3502[0m
[32m  eval_mcc = 0.7291[0m
[32m  eval_precision = 0.4266[0m
[32m  eval_recall = 0.3452[0m
[32m  ********************[0m
[32m  Best f1:0.3502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.57063:  29%|██▊       | 4/14 [00:27<01:08,  6.86s/it]epoch 4 loss 1.56404:  29%|██▊       | 4/14 [00:27<01:08,  6.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.744[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.7304[0m
[32m  eval_precision = 0.4271[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.56404:  36%|███▌      | 5/14 [00:33<01:01,  6.84s/it]epoch 4 loss 1.56501:  36%|███▌      | 5/14 [00:34<01:01,  6.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.745[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.7315[0m
[32m  eval_precision = 0.4278[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.56501:  43%|████▎     | 6/14 [00:40<00:54,  6.81s/it]epoch 4 loss 1.55196:  43%|████▎     | 6/14 [00:41<00:54,  6.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7457[0m
[32m  eval_f1 = 0.3521[0m
[32m  eval_mcc = 0.7322[0m
[32m  eval_precision = 0.4282[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.3521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.55196:  50%|█████     | 7/14 [00:49<00:52,  7.44s/it]epoch 4 loss 1.5515:  50%|█████     | 7/14 [00:50<00:52,  7.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7462[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.7327[0m
[32m  eval_precision = 0.4288[0m
[32m  eval_recall = 0.3466[0m
[32m  ********************[0m
[32m  Best f1:0.3526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.5515:  57%|█████▋    | 8/14 [00:58<00:48,  8.14s/it]epoch 4 loss 1.55257:  57%|█████▋    | 8/14 [00:59<00:48,  8.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7467[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.7332[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.347[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.55257:  64%|██████▍   | 9/14 [01:09<00:44,  8.98s/it]epoch 4 loss 1.55136:  64%|██████▍   | 9/14 [01:10<00:44,  8.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7472[0m
[32m  eval_f1 = 0.3534[0m
[32m  eval_mcc = 0.7338[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.3474[0m
[32m  ********************[0m
[32m  Best f1:0.3534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.55136:  71%|███████▏  | 10/14 [01:19<00:37,  9.31s/it]epoch 4 loss 1.5432:  71%|███████▏  | 10/14 [01:20<00:37,  9.31s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7475[0m
[32m  eval_f1 = 0.3546[0m
[32m  eval_mcc = 0.734[0m
[32m  eval_precision = 0.4315[0m
[32m  eval_recall = 0.3482[0m
[32m  ********************[0m
[32m  Best f1:0.3546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.5432:  79%|███████▊  | 11/14 [01:28<00:27,  9.21s/it]epoch 4 loss 1.54349:  79%|███████▊  | 11/14 [01:29<00:27,  9.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7476[0m
[32m  eval_f1 = 0.3549[0m
[32m  eval_mcc = 0.7342[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best f1:0.3549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.54349:  86%|████████▌ | 12/14 [01:38<00:18,  9.42s/it]epoch 4 loss 1.53651:  86%|████████▌ | 12/14 [01:39<00:18,  9.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7476[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.7342[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.53651:  93%|█████████▎| 13/14 [01:46<00:09,  9.02s/it]epoch 4 loss 1.53292:  93%|█████████▎| 13/14 [01:47<00:09,  9.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7476[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.7342[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best MCC:0.7342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.53292: 100%|██████████| 14/14 [01:54<00:00,  8.54s/it]epoch 4 loss 1.53292: 100%|██████████| 14/14 [01:54<00:00,  8.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.62it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7476[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.7342[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3483[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.7338[0m
[32m  eval_f1 = 0.2843[0m
[32m  eval_mcc = 0.7204[0m
[32m  eval_precision = 0.3452[0m
[32m  eval_recall = 0.2801[0m

