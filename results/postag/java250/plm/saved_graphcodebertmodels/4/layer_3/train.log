[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.54214:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.001[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0008[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54214:   7%|▋         | 1/14 [00:05<01:12,  5.58s/it]epoch 0 loss 5.53835:   7%|▋         | 1/14 [00:06<01:12,  5.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0011[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0008[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53835:  14%|█▍        | 2/14 [00:10<01:04,  5.35s/it]epoch 0 loss 5.53366:  14%|█▍        | 2/14 [00:11<01:04,  5.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0016[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53366:  21%|██▏       | 3/14 [00:15<00:58,  5.28s/it]epoch 0 loss 5.52789:  21%|██▏       | 3/14 [00:16<00:58,  5.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0021[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = -0.0019[0m
[32m  eval_precision = 0.0013[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52789:  29%|██▊       | 4/14 [00:21<00:52,  5.24s/it]epoch 0 loss 5.51554:  29%|██▊       | 4/14 [00:21<00:52,  5.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0038[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0077[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.51554:  36%|███▌      | 5/14 [00:26<00:46,  5.22s/it]epoch 0 loss 5.499:  36%|███▌      | 5/14 [00:27<00:46,  5.22s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0086[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0017[0m
[32m  eval_precision = 0.0089[0m
[32m  eval_recall = 0.0067[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.499:  43%|████▎     | 6/14 [00:32<00:43,  5.45s/it]epoch 0 loss 5.47939:  43%|████▎     | 6/14 [00:33<00:43,  5.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0234[0m
[32m  eval_f1 = 0.0104[0m
[32m  eval_mcc = 0.0142[0m
[32m  eval_precision = 0.0129[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47939:  50%|█████     | 7/14 [00:38<00:39,  5.66s/it]epoch 0 loss 5.4549:  50%|█████     | 7/14 [00:39<00:39,  5.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.043[0m
[32m  eval_f1 = 0.0145[0m
[32m  eval_mcc = 0.0304[0m
[32m  eval_precision = 0.0196[0m
[32m  eval_recall = 0.0208[0m
[32m  ********************[0m
[32m  Best f1:0.0145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4549:  57%|█████▋    | 8/14 [00:44<00:34,  5.80s/it]epoch 0 loss 5.4261:  57%|█████▋    | 8/14 [00:45<00:34,  5.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0787[0m
[32m  eval_f1 = 0.0214[0m
[32m  eval_mcc = 0.0625[0m
[32m  eval_precision = 0.0329[0m
[32m  eval_recall = 0.0326[0m
[32m  ********************[0m
[32m  Best f1:0.0214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4261:  64%|██████▍   | 9/14 [00:50<00:29,  5.88s/it]epoch 0 loss 5.39379:  64%|██████▍   | 9/14 [00:51<00:29,  5.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1416[0m
[32m  eval_f1 = 0.0382[0m
[32m  eval_mcc = 0.1231[0m
[32m  eval_precision = 0.0503[0m
[32m  eval_recall = 0.0513[0m
[32m  ********************[0m
[32m  Best f1:0.0382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39379:  71%|███████▏  | 10/14 [00:57<00:24,  6.16s/it]epoch 0 loss 5.35773:  71%|███████▏  | 10/14 [00:58<00:24,  6.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2077[0m
[32m  eval_f1 = 0.0544[0m
[32m  eval_mcc = 0.1883[0m
[32m  eval_precision = 0.0757[0m
[32m  eval_recall = 0.0703[0m
[32m  ********************[0m
[32m  Best f1:0.0544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35773:  79%|███████▊  | 11/14 [01:04<00:19,  6.38s/it]epoch 0 loss 5.31804:  79%|███████▊  | 11/14 [01:04<00:19,  6.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2741[0m
[32m  eval_f1 = 0.0741[0m
[32m  eval_mcc = 0.2558[0m
[32m  eval_precision = 0.1056[0m
[32m  eval_recall = 0.0915[0m
[32m  ********************[0m
[32m  Best f1:0.0741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.31804:  86%|████████▌ | 12/14 [01:11<00:13,  6.53s/it]epoch 0 loss 5.27435:  86%|████████▌ | 12/14 [01:11<00:13,  6.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3454[0m
[32m  eval_f1 = 0.0996[0m
[32m  eval_mcc = 0.3292[0m
[32m  eval_precision = 0.1377[0m
[32m  eval_recall = 0.1148[0m
[32m  ********************[0m
[32m  Best f1:0.0996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27435:  93%|█████████▎| 13/14 [01:17<00:06,  6.65s/it]epoch 0 loss 5.22744:  93%|█████████▎| 13/14 [01:18<00:06,  6.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4195[0m
[32m  eval_f1 = 0.1345[0m
[32m  eval_mcc = 0.4048[0m
[32m  eval_precision = 0.1879[0m
[32m  eval_recall = 0.1466[0m
[32m  ********************[0m
[32m  Best f1:0.1345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22744: 100%|██████████| 14/14 [01:24<00:00,  6.47s/it]epoch 0 loss 5.22744: 100%|██████████| 14/14 [01:24<00:00,  6.00s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.4668:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4792[0m
[32m  eval_f1 = 0.1667[0m
[32m  eval_mcc = 0.4651[0m
[32m  eval_precision = 0.2166[0m
[32m  eval_recall = 0.1794[0m
[32m  ********************[0m
[32m  Best f1:0.1667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.4668:   7%|▋         | 1/14 [00:07<01:31,  7.06s/it]epoch 1 loss 4.4011:   7%|▋         | 1/14 [00:07<01:31,  7.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5278[0m
[32m  eval_f1 = 0.1979[0m
[32m  eval_mcc = 0.5137[0m
[32m  eval_precision = 0.2474[0m
[32m  eval_recall = 0.2096[0m
[32m  ********************[0m
[32m  Best f1:0.1979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.4011:  14%|█▍        | 2/14 [00:18<01:54,  9.53s/it]epoch 1 loss 4.32295:  14%|█▍        | 2/14 [00:19<01:54,  9.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.572[0m
[32m  eval_f1 = 0.2161[0m
[32m  eval_mcc = 0.558[0m
[32m  eval_precision = 0.2602[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.32295:  21%|██▏       | 3/14 [00:29<01:51, 10.09s/it]epoch 1 loss 4.24256:  21%|██▏       | 3/14 [00:29<01:51, 10.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6104[0m
[32m  eval_f1 = 0.2382[0m
[32m  eval_mcc = 0.5963[0m
[32m  eval_precision = 0.2811[0m
[32m  eval_recall = 0.2478[0m
[32m  ********************[0m
[32m  Best f1:0.2382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.24256:  29%|██▊       | 4/14 [00:40<01:44, 10.49s/it]epoch 1 loss 4.17151:  29%|██▊       | 4/14 [00:40<01:44, 10.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.2507[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.2909[0m
[32m  eval_recall = 0.2582[0m
[32m  ********************[0m
[32m  Best f1:0.2507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.17151:  36%|███▌      | 5/14 [00:50<01:35, 10.57s/it]epoch 1 loss 4.1027:  36%|███▌      | 5/14 [00:51<01:35, 10.57s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.2625[0m
[32m  eval_mcc = 0.6619[0m
[32m  eval_precision = 0.3251[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.1027:  43%|████▎     | 6/14 [01:01<01:24, 10.59s/it]epoch 1 loss 4.02824:  43%|████▎     | 6/14 [01:02<01:24, 10.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6971[0m
[32m  eval_f1 = 0.2776[0m
[32m  eval_mcc = 0.6837[0m
[32m  eval_precision = 0.3505[0m
[32m  eval_recall = 0.2814[0m
[32m  ********************[0m
[32m  Best f1:0.2776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.02824:  50%|█████     | 7/14 [01:12<01:14, 10.69s/it]epoch 1 loss 3.95481:  50%|█████     | 7/14 [01:13<01:14, 10.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7163[0m
[32m  eval_f1 = 0.2887[0m
[32m  eval_mcc = 0.7033[0m
[32m  eval_precision = 0.3585[0m
[32m  eval_recall = 0.2911[0m
[32m  ********************[0m
[32m  Best f1:0.2887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.95481:  57%|█████▋    | 8/14 [01:20<00:59,  9.98s/it]epoch 1 loss 3.8845:  57%|█████▋    | 8/14 [01:21<00:59,  9.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7307[0m
[32m  eval_f1 = 0.2974[0m
[32m  eval_mcc = 0.718[0m
[32m  eval_precision = 0.3639[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.2974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.8845:  64%|██████▍   | 9/14 [01:30<00:50, 10.00s/it]epoch 1 loss 3.81581:  64%|██████▍   | 9/14 [01:31<00:50, 10.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7428[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.7303[0m
[32m  eval_precision = 0.3701[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.81581:  71%|███████▏  | 10/14 [01:39<00:38,  9.54s/it]epoch 1 loss 3.7517:  71%|███████▏  | 10/14 [01:40<00:38,  9.54s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7515[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.7392[0m
[32m  eval_precision = 0.3725[0m
[32m  eval_recall = 0.3086[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.7517:  79%|███████▊  | 11/14 [01:49<00:29,  9.77s/it]epoch 1 loss 3.69386:  79%|███████▊  | 11/14 [01:50<00:29,  9.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7594[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.7474[0m
[32m  eval_precision = 0.3848[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.69386:  86%|████████▌ | 12/14 [01:58<00:18,  9.38s/it]epoch 1 loss 3.63687:  86%|████████▌ | 12/14 [01:59<00:18,  9.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.766[0m
[32m  eval_f1 = 0.3168[0m
[32m  eval_mcc = 0.7542[0m
[32m  eval_precision = 0.3855[0m
[32m  eval_recall = 0.3161[0m
[32m  ********************[0m
[32m  Best f1:0.3168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.63687:  93%|█████████▎| 13/14 [02:08<00:09,  9.70s/it]epoch 1 loss 3.57868:  93%|█████████▎| 13/14 [02:09<00:09,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7715[0m
[32m  eval_f1 = 0.3204[0m
[32m  eval_mcc = 0.7598[0m
[32m  eval_precision = 0.3862[0m
[32m  eval_recall = 0.3191[0m
[32m  ********************[0m
[32m  Best f1:0.3204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.57868: 100%|██████████| 14/14 [02:16<00:00,  9.28s/it]epoch 1 loss 3.57868: 100%|██████████| 14/14 [02:16<00:00,  9.78s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.73668:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7772[0m
[32m  eval_f1 = 0.3243[0m
[32m  eval_mcc = 0.7658[0m
[32m  eval_precision = 0.3881[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.3243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.73668:   7%|▋         | 1/14 [00:10<02:18, 10.67s/it]epoch 2 loss 2.71656:   7%|▋         | 1/14 [00:11<02:18, 10.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7812[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.7699[0m
[32m  eval_precision = 0.3906[0m
[32m  eval_recall = 0.3245[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.71656:  14%|█▍        | 2/14 [00:17<01:43,  8.66s/it]epoch 2 loss 2.6653:  14%|█▍        | 2/14 [00:18<01:43,  8.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7856[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.7745[0m
[32m  eval_precision = 0.3974[0m
[32m  eval_recall = 0.3269[0m
[32m  ********************[0m
[32m  Best f1:0.3315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.6653:  21%|██▏       | 3/14 [00:26<01:36,  8.76s/it]epoch 2 loss 2.63064:  21%|██▏       | 3/14 [00:27<01:36,  8.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.789[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.778[0m
[32m  eval_precision = 0.3987[0m
[32m  eval_recall = 0.3299[0m
[32m  ********************[0m
[32m  Best f1:0.3339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.63064:  29%|██▊       | 4/14 [00:33<01:17,  7.80s/it]epoch 2 loss 2.57512:  29%|██▊       | 4/14 [00:33<01:17,  7.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7927[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.7819[0m
[32m  eval_precision = 0.4003[0m
[32m  eval_recall = 0.3324[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.57512:  36%|███▌      | 5/14 [00:43<01:18,  8.75s/it]epoch 2 loss 2.52622:  36%|███▌      | 5/14 [00:44<01:18,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7955[0m
[32m  eval_f1 = 0.3406[0m
[32m  eval_mcc = 0.7848[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.52622:  43%|████▎     | 6/14 [00:54<01:15,  9.39s/it]epoch 2 loss 2.49017:  43%|████▎     | 6/14 [00:54<01:15,  9.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7976[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.787[0m
[32m  eval_precision = 0.4188[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.49017:  50%|█████     | 7/14 [01:04<01:08,  9.77s/it]epoch 2 loss 2.45866:  50%|█████     | 7/14 [01:05<01:08,  9.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7998[0m
[32m  eval_f1 = 0.3459[0m
[32m  eval_mcc = 0.7893[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.45866:  57%|█████▋    | 8/14 [01:15<01:00, 10.05s/it]epoch 2 loss 2.41624:  57%|█████▋    | 8/14 [01:16<01:00, 10.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8019[0m
[32m  eval_f1 = 0.3483[0m
[32m  eval_mcc = 0.7916[0m
[32m  eval_precision = 0.4293[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.41624:  64%|██████▍   | 9/14 [01:25<00:50, 10.18s/it]epoch 2 loss 2.37942:  64%|██████▍   | 9/14 [01:26<00:50, 10.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8042[0m
[32m  eval_f1 = 0.3501[0m
[32m  eval_mcc = 0.794[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.3416[0m
[32m  ********************[0m
[32m  Best f1:0.3501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.37942:  71%|███████▏  | 10/14 [01:36<00:41, 10.35s/it]epoch 2 loss 2.3456:  71%|███████▏  | 10/14 [01:37<00:41, 10.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8058[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.7957[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3461[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3456:  79%|███████▊  | 11/14 [01:46<00:30, 10.19s/it]epoch 2 loss 2.31324:  79%|███████▊  | 11/14 [01:47<00:30, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.807[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.797[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.31324:  86%|████████▌ | 12/14 [01:57<00:20, 10.32s/it]epoch 2 loss 2.29426:  86%|████████▌ | 12/14 [01:57<00:20, 10.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8083[0m
[32m  eval_f1 = 0.3563[0m
[32m  eval_mcc = 0.7983[0m
[32m  eval_precision = 0.4345[0m
[32m  eval_recall = 0.3472[0m
[32m  ********************[0m
[32m  Best f1:0.3563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.29426:  93%|█████████▎| 13/14 [02:05<00:09,  9.70s/it]epoch 2 loss 2.26394:  93%|█████████▎| 13/14 [02:05<00:09,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8093[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.7994[0m
[32m  eval_precision = 0.4341[0m
[32m  eval_recall = 0.3472[0m
[32m  ********************[0m
[32m  Best MCC:0.7994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.26394: 100%|██████████| 14/14 [02:12<00:00,  9.04s/it]epoch 2 loss 2.26394: 100%|██████████| 14/14 [02:12<00:00,  9.49s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.86136:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8106[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.8007[0m
[32m  eval_precision = 0.4433[0m
[32m  eval_recall = 0.3489[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.86136:   7%|▋         | 1/14 [00:09<02:05,  9.66s/it]epoch 3 loss 1.81344:   7%|▋         | 1/14 [00:10<02:05,  9.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8112[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.8013[0m
[32m  eval_precision = 0.4434[0m
[32m  eval_recall = 0.3504[0m
[32m  ********************[0m
[32m  Best f1:0.3602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.81344:  14%|█▍        | 2/14 [00:19<01:58,  9.84s/it]epoch 3 loss 1.78801:  14%|█▍        | 2/14 [00:20<01:58,  9.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8119[0m
[32m  eval_f1 = 0.3616[0m
[32m  eval_mcc = 0.8021[0m
[32m  eval_precision = 0.4441[0m
[32m  eval_recall = 0.3513[0m
[32m  ********************[0m
[32m  Best f1:0.3616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.78801:  21%|██▏       | 3/14 [00:28<01:45,  9.60s/it]epoch 3 loss 1.7958:  21%|██▏       | 3/14 [00:29<01:45,  9.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8128[0m
[32m  eval_f1 = 0.3628[0m
[32m  eval_mcc = 0.803[0m
[32m  eval_precision = 0.4447[0m
[32m  eval_recall = 0.3522[0m
[32m  ********************[0m
[32m  Best f1:0.3628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.7958:  29%|██▊       | 4/14 [00:39<01:38,  9.83s/it]epoch 3 loss 1.7803:  29%|██▊       | 4/14 [00:39<01:38,  9.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8135[0m
[32m  eval_f1 = 0.3645[0m
[32m  eval_mcc = 0.8038[0m
[32m  eval_precision = 0.4449[0m
[32m  eval_recall = 0.3535[0m
[32m  ********************[0m
[32m  Best f1:0.3645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.7803:  36%|███▌      | 5/14 [00:49<01:29,  9.98s/it]epoch 3 loss 1.76122:  36%|███▌      | 5/14 [00:50<01:29,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8143[0m
[32m  eval_f1 = 0.3656[0m
[32m  eval_mcc = 0.8046[0m
[32m  eval_precision = 0.4456[0m
[32m  eval_recall = 0.3541[0m
[32m  ********************[0m
[32m  Best f1:0.3656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.76122:  43%|████▎     | 6/14 [00:58<01:17,  9.65s/it]epoch 3 loss 1.74501:  43%|████▎     | 6/14 [00:59<01:17,  9.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8153[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.8057[0m
[32m  eval_precision = 0.4456[0m
[32m  eval_recall = 0.3549[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.74501:  50%|█████     | 7/14 [01:08<01:07,  9.71s/it]epoch 3 loss 1.72897:  50%|█████     | 7/14 [01:09<01:07,  9.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8161[0m
[32m  eval_f1 = 0.3684[0m
[32m  eval_mcc = 0.8065[0m
[32m  eval_precision = 0.4462[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best f1:0.3684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.72897:  57%|█████▋    | 8/14 [01:16<00:56,  9.37s/it]epoch 3 loss 1.71129:  57%|█████▋    | 8/14 [01:17<00:56,  9.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8168[0m
[32m  eval_f1 = 0.3696[0m
[32m  eval_mcc = 0.8073[0m
[32m  eval_precision = 0.4463[0m
[32m  eval_recall = 0.3571[0m
[32m  ********************[0m
[32m  Best f1:0.3696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.71129:  64%|██████▍   | 9/14 [01:26<00:47,  9.57s/it]epoch 3 loss 1.69976:  64%|██████▍   | 9/14 [01:27<00:47,  9.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8175[0m
[32m  eval_f1 = 0.3704[0m
[32m  eval_mcc = 0.808[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.3576[0m
[32m  ********************[0m
[32m  Best f1:0.3704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.69976:  71%|███████▏  | 10/14 [01:33<00:34,  8.58s/it]epoch 3 loss 1.69007:  71%|███████▏  | 10/14 [01:34<00:34,  8.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8188[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.8093[0m
[32m  eval_precision = 0.4469[0m
[32m  eval_recall = 0.3582[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.69007:  79%|███████▊  | 11/14 [01:40<00:24,  8.03s/it]epoch 3 loss 1.67112:  79%|███████▊  | 11/14 [01:40<00:24,  8.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8198[0m
[32m  eval_f1 = 0.3728[0m
[32m  eval_mcc = 0.8104[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3595[0m
[32m  ********************[0m
[32m  Best f1:0.3728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.67112:  86%|████████▌ | 12/14 [01:46<00:15,  7.63s/it]epoch 3 loss 1.66055:  86%|████████▌ | 12/14 [01:47<00:15,  7.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8211[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.8118[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.66055:  93%|█████████▎| 13/14 [01:53<00:07,  7.31s/it]epoch 3 loss 1.64566:  93%|█████████▎| 13/14 [01:53<00:07,  7.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8225[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.8132[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.363[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.64566: 100%|██████████| 14/14 [02:00<00:00,  7.14s/it]epoch 3 loss 1.64566: 100%|██████████| 14/14 [02:00<00:00,  8.57s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.47174:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8236[0m
[32m  eval_f1 = 0.3777[0m
[32m  eval_mcc = 0.8144[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3634[0m
[32m  ********************[0m
[32m  Best f1:0.3777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47174:   7%|▋         | 1/14 [00:06<01:20,  6.17s/it]epoch 4 loss 1.4802:   7%|▋         | 1/14 [00:06<01:20,  6.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8247[0m
[32m  eval_f1 = 0.3796[0m
[32m  eval_mcc = 0.8155[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.3651[0m
[32m  ********************[0m
[32m  Best f1:0.3796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4802:  14%|█▍        | 2/14 [00:12<01:18,  6.55s/it]epoch 4 loss 1.46135:  14%|█▍        | 2/14 [00:13<01:18,  6.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8256[0m
[32m  eval_f1 = 0.3807[0m
[32m  eval_mcc = 0.8165[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3663[0m
[32m  ********************[0m
[32m  Best f1:0.3807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.46135:  21%|██▏       | 3/14 [00:19<01:13,  6.66s/it]epoch 4 loss 1.44944:  21%|██▏       | 3/14 [00:20<01:13,  6.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8262[0m
[32m  eval_f1 = 0.3812[0m
[32m  eval_mcc = 0.8171[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.3668[0m
[32m  ********************[0m
[32m  Best f1:0.3812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44944:  29%|██▊       | 4/14 [00:26<01:07,  6.80s/it]epoch 4 loss 1.43955:  29%|██▊       | 4/14 [00:27<01:07,  6.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8273[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.8182[0m
[32m  eval_precision = 0.4536[0m
[32m  eval_recall = 0.3675[0m
[32m  ********************[0m
[32m  Best f1:0.382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43955:  36%|███▌      | 5/14 [00:35<01:06,  7.38s/it]epoch 4 loss 1.43878:  36%|███▌      | 5/14 [00:35<01:06,  7.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8279[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.8189[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3681[0m
[32m  ********************[0m
[32m  Best f1:0.3827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43878:  43%|████▎     | 6/14 [00:46<01:08,  8.56s/it]epoch 4 loss 1.42604:  43%|████▎     | 6/14 [00:46<01:08,  8.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8286[0m
[32m  eval_f1 = 0.3831[0m
[32m  eval_mcc = 0.8196[0m
[32m  eval_precision = 0.4539[0m
[32m  eval_recall = 0.3684[0m
[32m  ********************[0m
[32m  Best f1:0.3831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42604:  50%|█████     | 7/14 [00:57<01:05,  9.37s/it]epoch 4 loss 1.4222:  50%|█████     | 7/14 [00:57<01:05,  9.37s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8293[0m
[32m  eval_f1 = 0.3833[0m
[32m  eval_mcc = 0.8203[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.3686[0m
[32m  ********************[0m
[32m  Best f1:0.3833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4222:  57%|█████▋    | 8/14 [01:08<00:59,  9.90s/it]epoch 4 loss 1.42423:  57%|█████▋    | 8/14 [01:08<00:59,  9.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8298[0m
[32m  eval_f1 = 0.3839[0m
[32m  eval_mcc = 0.8209[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3692[0m
[32m  ********************[0m
[32m  Best f1:0.3839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42423:  64%|██████▍   | 9/14 [01:18<00:50, 10.15s/it]epoch 4 loss 1.4206:  64%|██████▍   | 9/14 [01:19<00:50, 10.15s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8303[0m
[32m  eval_f1 = 0.3844[0m
[32m  eval_mcc = 0.8214[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3698[0m
[32m  ********************[0m
[32m  Best f1:0.3844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4206:  71%|███████▏  | 10/14 [01:29<00:41, 10.36s/it]epoch 4 loss 1.41097:  71%|███████▏  | 10/14 [01:30<00:41, 10.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8307[0m
[32m  eval_f1 = 0.3845[0m
[32m  eval_mcc = 0.8218[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3699[0m
[32m  ********************[0m
[32m  Best f1:0.3845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41097:  79%|███████▊  | 11/14 [01:40<00:31, 10.47s/it]epoch 4 loss 1.41043:  79%|███████▊  | 11/14 [01:41<00:31, 10.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8308[0m
[32m  eval_f1 = 0.3846[0m
[32m  eval_mcc = 0.822[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.37[0m
[32m  ********************[0m
[32m  Best f1:0.3846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41043:  86%|████████▌ | 12/14 [01:51<00:21, 10.55s/it]epoch 4 loss 1.40367:  86%|████████▌ | 12/14 [01:51<00:21, 10.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8309[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.8221[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.3701[0m
[32m  ********************[0m
[32m  Best f1:0.3847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40367:  93%|█████████▎| 13/14 [02:02<00:10, 10.77s/it]epoch 4 loss 1.39903:  93%|█████████▎| 13/14 [02:02<00:10, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.831[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.8222[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3702[0m
[32m  ********************[0m
[32m  Best f1:0.3847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39903: 100%|██████████| 14/14 [02:10<00:00,  9.97s/it]epoch 4 loss 1.39903: 100%|██████████| 14/14 [02:10<00:00,  9.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.67it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.831[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.8222[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3702[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8163[0m
[32m  eval_f1 = 0.3133[0m
[32m  eval_mcc = 0.8072[0m
[32m  eval_precision = 0.377[0m
[32m  eval_recall = 0.3022[0m

