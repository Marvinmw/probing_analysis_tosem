[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.layer_norm.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.weight', 'lm_head.decoder.weight', 'lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.54219:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0057[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54219:   7%|▋         | 1/14 [00:05<01:12,  5.58s/it]epoch 0 loss 5.54284:   7%|▋         | 1/14 [00:06<01:12,  5.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0049[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54284:  14%|█▍        | 2/14 [00:11<01:07,  5.59s/it]epoch 0 loss 5.54165:  14%|█▍        | 2/14 [00:11<01:07,  5.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0019[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0051[0m
[32m  eval_recall = 0.0029[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54165:  21%|██▏       | 3/14 [00:16<00:59,  5.41s/it]epoch 0 loss 5.53521:  21%|██▏       | 3/14 [00:17<00:59,  5.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0032[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0074[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53521:  29%|██▊       | 4/14 [00:21<00:53,  5.32s/it]epoch 0 loss 5.52354:  29%|██▊       | 4/14 [00:22<00:53,  5.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.0051[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.52354:  36%|███▌      | 5/14 [00:27<00:49,  5.52s/it]epoch 0 loss 5.50393:  36%|███▌      | 5/14 [00:28<00:49,  5.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0109[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.0039[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50393:  43%|████▎     | 6/14 [00:33<00:45,  5.73s/it]epoch 0 loss 5.47994:  43%|████▎     | 6/14 [00:34<00:45,  5.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0232[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0131[0m
[32m  eval_precision = 0.0143[0m
[32m  eval_recall = 0.0077[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47994:  50%|█████     | 7/14 [00:39<00:41,  5.87s/it]epoch 0 loss 5.45138:  50%|█████     | 7/14 [00:40<00:41,  5.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0525[0m
[32m  eval_f1 = 0.0135[0m
[32m  eval_mcc = 0.0385[0m
[32m  eval_precision = 0.0202[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45138:  57%|█████▋    | 8/14 [00:46<00:37,  6.20s/it]epoch 0 loss 5.41775:  57%|█████▋    | 8/14 [00:47<00:37,  6.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1013[0m
[32m  eval_f1 = 0.0276[0m
[32m  eval_mcc = 0.0833[0m
[32m  eval_precision = 0.0355[0m
[32m  eval_recall = 0.0336[0m
[32m  ********************[0m
[32m  Best f1:0.0276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41775:  64%|██████▍   | 9/14 [00:53<00:32,  6.43s/it]epoch 0 loss 5.38046:  64%|██████▍   | 9/14 [00:54<00:32,  6.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1581[0m
[32m  eval_f1 = 0.0404[0m
[32m  eval_mcc = 0.1366[0m
[32m  eval_precision = 0.0555[0m
[32m  eval_recall = 0.0489[0m
[32m  ********************[0m
[32m  Best f1:0.0404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38046:  71%|███████▏  | 10/14 [01:00<00:26,  6.58s/it]epoch 0 loss 5.33878:  71%|███████▏  | 10/14 [01:01<00:26,  6.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2217[0m
[32m  eval_f1 = 0.0553[0m
[32m  eval_mcc = 0.1983[0m
[32m  eval_precision = 0.0715[0m
[32m  eval_recall = 0.0672[0m
[32m  ********************[0m
[32m  Best f1:0.0553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.33878:  79%|███████▊  | 11/14 [01:07<00:20,  6.68s/it]epoch 0 loss 5.29202:  79%|███████▊  | 11/14 [01:08<00:20,  6.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2931[0m
[32m  eval_f1 = 0.075[0m
[32m  eval_mcc = 0.2698[0m
[32m  eval_precision = 0.0938[0m
[32m  eval_recall = 0.0894[0m
[32m  ********************[0m
[32m  Best f1:0.075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29202:  86%|████████▌ | 12/14 [01:13<00:13,  6.57s/it]epoch 0 loss 5.24177:  86%|████████▌ | 12/14 [01:14<00:13,  6.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3547[0m
[32m  eval_f1 = 0.0955[0m
[32m  eval_mcc = 0.3323[0m
[32m  eval_precision = 0.1219[0m
[32m  eval_recall = 0.1103[0m
[32m  ********************[0m
[32m  Best f1:0.0955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24177:  93%|█████████▎| 13/14 [01:19<00:06,  6.44s/it]epoch 0 loss 5.18838:  93%|█████████▎| 13/14 [01:20<00:06,  6.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4071[0m
[32m  eval_f1 = 0.1148[0m
[32m  eval_mcc = 0.3858[0m
[32m  eval_precision = 0.1666[0m
[32m  eval_recall = 0.1284[0m
[32m  ********************[0m
[32m  Best f1:0.1148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18838: 100%|██████████| 14/14 [01:26<00:00,  6.52s/it]epoch 0 loss 5.18838: 100%|██████████| 14/14 [01:26<00:00,  6.18s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.3256:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4579[0m
[32m  eval_f1 = 0.1393[0m
[32m  eval_mcc = 0.4377[0m
[32m  eval_precision = 0.1931[0m
[32m  eval_recall = 0.1507[0m
[32m  ********************[0m
[32m  Best f1:0.1393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.3256:   7%|▋         | 1/14 [00:07<01:31,  7.01s/it]epoch 1 loss 4.25333:   7%|▋         | 1/14 [00:07<01:31,  7.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5008[0m
[32m  eval_f1 = 0.1685[0m
[32m  eval_mcc = 0.4817[0m
[32m  eval_precision = 0.2373[0m
[32m  eval_recall = 0.1768[0m
[32m  ********************[0m
[32m  Best f1:0.1685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.25333:  14%|█▍        | 2/14 [00:14<01:24,  7.04s/it]epoch 1 loss 4.15957:  14%|█▍        | 2/14 [00:14<01:24,  7.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5388[0m
[32m  eval_f1 = 0.1909[0m
[32m  eval_mcc = 0.5208[0m
[32m  eval_precision = 0.2584[0m
[32m  eval_recall = 0.1982[0m
[32m  ********************[0m
[32m  Best f1:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.15957:  21%|██▏       | 3/14 [00:21<01:17,  7.01s/it]epoch 1 loss 4.06846:  21%|██▏       | 3/14 [00:21<01:17,  7.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5756[0m
[32m  eval_f1 = 0.2088[0m
[32m  eval_mcc = 0.5587[0m
[32m  eval_precision = 0.2854[0m
[32m  eval_recall = 0.2152[0m
[32m  ********************[0m
[32m  Best f1:0.2088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.06846:  29%|██▊       | 4/14 [00:27<01:06,  6.69s/it]epoch 1 loss 3.98904:  29%|██▊       | 4/14 [00:28<01:06,  6.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6022[0m
[32m  eval_f1 = 0.2198[0m
[32m  eval_mcc = 0.5858[0m
[32m  eval_precision = 0.3036[0m
[32m  eval_recall = 0.2252[0m
[32m  ********************[0m
[32m  Best f1:0.2198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.98904:  36%|███▌      | 5/14 [00:34<01:01,  6.78s/it]epoch 1 loss 3.91323:  36%|███▌      | 5/14 [00:34<01:01,  6.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2278[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.3131[0m
[32m  eval_recall = 0.2324[0m
[32m  ********************[0m
[32m  Best f1:0.2278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.91323:  43%|████▎     | 6/14 [00:43<01:02,  7.78s/it]epoch 1 loss 3.8305:  43%|████▎     | 6/14 [00:44<01:02,  7.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.2352[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.317[0m
[32m  eval_recall = 0.238[0m
[32m  ********************[0m
[32m  Best f1:0.2352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.8305:  50%|█████     | 7/14 [00:54<01:01,  8.82s/it]epoch 1 loss 3.75024:  50%|█████     | 7/14 [00:55<01:01,  8.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.2417[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.3248[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.2417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.75024:  57%|█████▋    | 8/14 [01:05<00:57,  9.52s/it]epoch 1 loss 3.67256:  57%|█████▋    | 8/14 [01:06<00:57,  9.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6786[0m
[32m  eval_f1 = 0.2479[0m
[32m  eval_mcc = 0.6633[0m
[32m  eval_precision = 0.3295[0m
[32m  eval_recall = 0.2474[0m
[32m  ********************[0m
[32m  Best f1:0.2479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.67256:  64%|██████▍   | 9/14 [01:16<00:50, 10.00s/it]epoch 1 loss 3.59793:  64%|██████▍   | 9/14 [01:17<00:50, 10.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6905[0m
[32m  eval_f1 = 0.2533[0m
[32m  eval_mcc = 0.6754[0m
[32m  eval_precision = 0.3405[0m
[32m  eval_recall = 0.2515[0m
[32m  ********************[0m
[32m  Best f1:0.2533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.59793:  71%|███████▏  | 10/14 [01:27<00:40, 10.24s/it]epoch 1 loss 3.53065:  71%|███████▏  | 10/14 [01:28<00:40, 10.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7025[0m
[32m  eval_f1 = 0.258[0m
[32m  eval_mcc = 0.6877[0m
[32m  eval_precision = 0.3396[0m
[32m  eval_recall = 0.2551[0m
[32m  ********************[0m
[32m  Best f1:0.258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.53065:  79%|███████▊  | 11/14 [01:37<00:30, 10.08s/it]epoch 1 loss 3.468:  79%|███████▊  | 11/14 [01:38<00:30, 10.08s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7135[0m
[32m  eval_f1 = 0.2622[0m
[32m  eval_mcc = 0.6989[0m
[32m  eval_precision = 0.3425[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.468:  86%|████████▌ | 12/14 [01:49<00:21, 10.66s/it]epoch 1 loss 3.40791:  86%|████████▌ | 12/14 [01:50<00:21, 10.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7236[0m
[32m  eval_f1 = 0.268[0m
[32m  eval_mcc = 0.7094[0m
[32m  eval_precision = 0.3455[0m
[32m  eval_recall = 0.2628[0m
[32m  ********************[0m
[32m  Best f1:0.268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.40791:  93%|█████████▎| 13/14 [01:58<00:10, 10.28s/it]epoch 1 loss 3.34779:  93%|█████████▎| 13/14 [01:59<00:10, 10.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7342[0m
[32m  eval_f1 = 0.2735[0m
[32m  eval_mcc = 0.7202[0m
[32m  eval_precision = 0.3497[0m
[32m  eval_recall = 0.2665[0m
[32m  ********************[0m
[32m  Best f1:0.2735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.34779: 100%|██████████| 14/14 [02:08<00:00, 10.21s/it]epoch 1 loss 3.34779: 100%|██████████| 14/14 [02:08<00:00,  9.21s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.45191:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7416[0m
[32m  eval_f1 = 0.2784[0m
[32m  eval_mcc = 0.7279[0m
[32m  eval_precision = 0.362[0m
[32m  eval_recall = 0.2693[0m
[32m  ********************[0m
[32m  Best f1:0.2784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.45191:   7%|▋         | 1/14 [00:08<01:47,  8.24s/it]epoch 2 loss 2.43984:   7%|▋         | 1/14 [00:09<01:47,  8.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7485[0m
[32m  eval_f1 = 0.2831[0m
[32m  eval_mcc = 0.7351[0m
[32m  eval_precision = 0.3666[0m
[32m  eval_recall = 0.2725[0m
[32m  ********************[0m
[32m  Best f1:0.2831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.43984:  14%|█▍        | 2/14 [00:18<01:53,  9.47s/it]epoch 2 loss 2.39207:  14%|█▍        | 2/14 [00:19<01:53,  9.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7552[0m
[32m  eval_f1 = 0.2898[0m
[32m  eval_mcc = 0.742[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.2898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.39207:  21%|██▏       | 3/14 [00:28<01:44,  9.48s/it]epoch 2 loss 2.36858:  21%|██▏       | 3/14 [00:28<01:44,  9.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7608[0m
[32m  eval_f1 = 0.2951[0m
[32m  eval_mcc = 0.7479[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.2804[0m
[32m  ********************[0m
[32m  Best f1:0.2951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.36858:  29%|██▊       | 4/14 [00:38<01:38,  9.83s/it]epoch 2 loss 2.31266:  29%|██▊       | 4/14 [00:39<01:38,  9.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7669[0m
[32m  eval_f1 = 0.3005[0m
[32m  eval_mcc = 0.7542[0m
[32m  eval_precision = 0.4022[0m
[32m  eval_recall = 0.2849[0m
[32m  ********************[0m
[32m  Best f1:0.3005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.31266:  36%|███▌      | 5/14 [00:49<01:32, 10.23s/it]epoch 2 loss 2.26382:  36%|███▌      | 5/14 [00:50<01:32, 10.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.772[0m
[32m  eval_f1 = 0.3038[0m
[32m  eval_mcc = 0.7596[0m
[32m  eval_precision = 0.4041[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best f1:0.3038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.26382:  43%|████▎     | 6/14 [00:57<01:17,  9.64s/it]epoch 2 loss 2.22579:  43%|████▎     | 6/14 [00:58<01:17,  9.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7766[0m
[32m  eval_f1 = 0.3078[0m
[32m  eval_mcc = 0.7644[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2918[0m
[32m  ********************[0m
[32m  Best f1:0.3078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.22579:  50%|█████     | 7/14 [01:08<01:08,  9.85s/it]epoch 2 loss 2.1978:  50%|█████     | 7/14 [01:08<01:08,  9.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7807[0m
[32m  eval_f1 = 0.3115[0m
[32m  eval_mcc = 0.7687[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.1978:  57%|█████▋    | 8/14 [01:17<00:58,  9.72s/it]epoch 2 loss 2.15731:  57%|█████▋    | 8/14 [01:18<00:58,  9.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7842[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.7724[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.2981[0m
[32m  ********************[0m
[32m  Best f1:0.3153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.15731:  64%|██████▍   | 9/14 [01:27<00:49,  9.88s/it]epoch 2 loss 2.1209:  64%|██████▍   | 9/14 [01:28<00:49,  9.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7871[0m
[32m  eval_f1 = 0.3199[0m
[32m  eval_mcc = 0.7754[0m
[32m  eval_precision = 0.4311[0m
[32m  eval_recall = 0.3015[0m
[32m  ********************[0m
[32m  Best f1:0.3199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.1209:  71%|███████▏  | 10/14 [01:38<00:39,  9.98s/it]epoch 2 loss 2.08738:  71%|███████▏  | 10/14 [01:38<00:39,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7895[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.778[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3041[0m
[32m  ********************[0m
[32m  Best f1:0.3234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.08738:  79%|███████▊  | 11/14 [01:46<00:28,  9.52s/it]epoch 2 loss 2.05488:  79%|███████▊  | 11/14 [01:47<00:28,  9.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7919[0m
[32m  eval_f1 = 0.3255[0m
[32m  eval_mcc = 0.7804[0m
[32m  eval_precision = 0.4313[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.05488:  86%|████████▌ | 12/14 [01:53<00:17,  8.68s/it]epoch 2 loss 2.03844:  86%|████████▌ | 12/14 [01:54<00:17,  8.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7945[0m
[32m  eval_f1 = 0.3298[0m
[32m  eval_mcc = 0.7832[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3095[0m
[32m  ********************[0m
[32m  Best f1:0.3298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.03844:  93%|█████████▎| 13/14 [02:00<00:08,  8.12s/it]epoch 2 loss 2.00819:  93%|█████████▎| 13/14 [02:00<00:08,  8.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7966[0m
[32m  eval_f1 = 0.3323[0m
[32m  eval_mcc = 0.7854[0m
[32m  eval_precision = 0.4344[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.00819: 100%|██████████| 14/14 [02:06<00:00,  7.69s/it]epoch 2 loss 2.00819: 100%|██████████| 14/14 [02:06<00:00,  9.05s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.6065:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7984[0m
[32m  eval_f1 = 0.3344[0m
[32m  eval_mcc = 0.7873[0m
[32m  eval_precision = 0.4352[0m
[32m  eval_recall = 0.3134[0m
[32m  ********************[0m
[32m  Best f1:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.6065:   7%|▋         | 1/14 [00:06<01:28,  6.82s/it]epoch 3 loss 1.57297:   7%|▋         | 1/14 [00:07<01:28,  6.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8001[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.7891[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.57297:  14%|█▍        | 2/14 [00:13<01:22,  6.86s/it]epoch 3 loss 1.54847:  14%|█▍        | 2/14 [00:14<01:22,  6.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8022[0m
[32m  eval_f1 = 0.337[0m
[32m  eval_mcc = 0.7913[0m
[32m  eval_precision = 0.4352[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best f1:0.337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54847:  21%|██▏       | 3/14 [00:20<01:15,  6.85s/it]epoch 3 loss 1.56505:  21%|██▏       | 3/14 [00:21<01:15,  6.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8041[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.7933[0m
[32m  eval_precision = 0.4355[0m
[32m  eval_recall = 0.3185[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.56505:  29%|██▊       | 4/14 [00:29<01:15,  7.59s/it]epoch 3 loss 1.55528:  29%|██▊       | 4/14 [00:30<01:15,  7.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.806[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.7953[0m
[32m  eval_precision = 0.4367[0m
[32m  eval_recall = 0.3208[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55528:  36%|███▌      | 5/14 [00:40<01:18,  8.77s/it]epoch 3 loss 1.53851:  36%|███▌      | 5/14 [00:40<01:18,  8.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8082[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.7976[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best f1:0.3441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53851:  43%|████▎     | 6/14 [00:50<01:15,  9.43s/it]epoch 3 loss 1.52115:  43%|████▎     | 6/14 [00:51<01:15,  9.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.81[0m
[32m  eval_f1 = 0.3478[0m
[32m  eval_mcc = 0.7996[0m
[32m  eval_precision = 0.438[0m
[32m  eval_recall = 0.3267[0m
[32m  ********************[0m
[32m  Best f1:0.3478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.52115:  50%|█████     | 7/14 [00:59<01:04,  9.27s/it]epoch 3 loss 1.50893:  50%|█████     | 7/14 [01:00<01:04,  9.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8115[0m
[32m  eval_f1 = 0.3492[0m
[32m  eval_mcc = 0.8012[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50893:  57%|█████▋    | 8/14 [01:09<00:57,  9.53s/it]epoch 3 loss 1.49217:  57%|█████▋    | 8/14 [01:10<00:57,  9.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8132[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.803[0m
[32m  eval_precision = 0.4391[0m
[32m  eval_recall = 0.3306[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49217:  64%|██████▍   | 9/14 [01:17<00:44,  9.00s/it]epoch 3 loss 1.48037:  64%|██████▍   | 9/14 [01:18<00:44,  9.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8147[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.8046[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.333[0m
[32m  ********************[0m
[32m  Best f1:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48037:  71%|███████▏  | 10/14 [01:25<00:33,  8.48s/it]epoch 3 loss 1.47227:  71%|███████▏  | 10/14 [01:25<00:33,  8.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8162[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.8061[0m
[32m  eval_precision = 0.4398[0m
[32m  eval_recall = 0.3344[0m
[32m  ********************[0m
[32m  Best f1:0.3555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47227:  79%|███████▊  | 11/14 [01:34<00:26,  8.91s/it]epoch 3 loss 1.4543:  79%|███████▊  | 11/14 [01:35<00:26,  8.91s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8174[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.8074[0m
[32m  eval_precision = 0.4491[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4543:  86%|████████▌ | 12/14 [01:43<00:17,  8.79s/it]epoch 3 loss 1.44449:  86%|████████▌ | 12/14 [01:44<00:17,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8185[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.8085[0m
[32m  eval_precision = 0.449[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best f1:0.3589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44449:  93%|█████████▎| 13/14 [01:53<00:09,  9.18s/it]epoch 3 loss 1.43054:  93%|█████████▎| 13/14 [01:54<00:09,  9.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8196[0m
[32m  eval_f1 = 0.3601[0m
[32m  eval_mcc = 0.8097[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3394[0m
[32m  ********************[0m
[32m  Best f1:0.3601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43054: 100%|██████████| 14/14 [02:01<00:00,  8.85s/it]epoch 3 loss 1.43054: 100%|██████████| 14/14 [02:01<00:00,  8.69s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.28266:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8207[0m
[32m  eval_f1 = 0.3611[0m
[32m  eval_mcc = 0.811[0m
[32m  eval_precision = 0.4496[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.3611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28266:   7%|▋         | 1/14 [00:10<02:12, 10.20s/it]epoch 4 loss 1.2916:   7%|▋         | 1/14 [00:10<02:12, 10.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8219[0m
[32m  eval_f1 = 0.3619[0m
[32m  eval_mcc = 0.8121[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.3619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2916:  14%|█▍        | 2/14 [00:18<01:48,  9.01s/it]epoch 4 loss 1.27182:  14%|█▍        | 2/14 [00:19<01:48,  9.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8229[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.8132[0m
[32m  eval_precision = 0.4503[0m
[32m  eval_recall = 0.3423[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27182:  21%|██▏       | 3/14 [00:28<01:45,  9.55s/it]epoch 4 loss 1.25906:  21%|██▏       | 3/14 [00:29<01:45,  9.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8239[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.8143[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3437[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25906:  29%|██▊       | 4/14 [00:36<01:30,  9.06s/it]epoch 4 loss 1.25239:  29%|██▊       | 4/14 [00:37<01:30,  9.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8246[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.8151[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3446[0m
[32m  ********************[0m
[32m  Best f1:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25239:  36%|███▌      | 5/14 [00:46<01:24,  9.43s/it]epoch 4 loss 1.25003:  36%|███▌      | 5/14 [00:47<01:24,  9.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8254[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.8159[0m
[32m  eval_precision = 0.4595[0m
[32m  eval_recall = 0.3451[0m
[32m  ********************[0m
[32m  Best f1:0.3655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25003:  43%|████▎     | 6/14 [00:55<01:11,  8.98s/it]epoch 4 loss 1.24013:  43%|████▎     | 6/14 [00:55<01:11,  8.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8259[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.8164[0m
[32m  eval_precision = 0.4594[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.3658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24013:  50%|█████     | 7/14 [01:05<01:06,  9.49s/it]epoch 4 loss 1.23511:  50%|█████     | 7/14 [01:06<01:06,  9.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8263[0m
[32m  eval_f1 = 0.366[0m
[32m  eval_mcc = 0.8168[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23511:  57%|█████▋    | 8/14 [01:12<00:52,  8.75s/it]epoch 4 loss 1.23775:  57%|█████▋    | 8/14 [01:13<00:52,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8266[0m
[32m  eval_f1 = 0.3669[0m
[32m  eval_mcc = 0.8171[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3469[0m
[32m  ********************[0m
[32m  Best f1:0.3669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23775:  64%|██████▍   | 9/14 [01:19<00:41,  8.20s/it]epoch 4 loss 1.23395:  64%|██████▍   | 9/14 [01:20<00:41,  8.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8271[0m
[32m  eval_f1 = 0.3676[0m
[32m  eval_mcc = 0.8177[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3479[0m
[32m  ********************[0m
[32m  Best f1:0.3676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23395:  71%|███████▏  | 10/14 [01:27<00:32,  8.16s/it]epoch 4 loss 1.22454:  71%|███████▏  | 10/14 [01:28<00:32,  8.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8274[0m
[32m  eval_f1 = 0.3677[0m
[32m  eval_mcc = 0.818[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.348[0m
[32m  ********************[0m
[32m  Best f1:0.3677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22454:  79%|███████▊  | 11/14 [01:35<00:24,  8.12s/it]epoch 4 loss 1.22408:  79%|███████▊  | 11/14 [01:36<00:24,  8.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8276[0m
[32m  eval_f1 = 0.3678[0m
[32m  eval_mcc = 0.8182[0m
[32m  eval_precision = 0.4552[0m
[32m  eval_recall = 0.3481[0m
[32m  ********************[0m
[32m  Best f1:0.3678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22408:  86%|████████▌ | 12/14 [01:44<00:16,  8.15s/it]epoch 4 loss 1.21585:  86%|████████▌ | 12/14 [01:44<00:16,  8.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8277[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.8183[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21585:  93%|█████████▎| 13/14 [01:52<00:08,  8.35s/it]epoch 4 loss 1.2107:  93%|█████████▎| 13/14 [01:53<00:08,  8.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8277[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.8184[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2107: 100%|██████████| 14/14 [01:59<00:00,  7.95s/it]epoch 4 loss 1.2107: 100%|██████████| 14/14 [01:59<00:00,  8.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.66it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8277[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.8184[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3483[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8125[0m
[32m  eval_f1 = 0.2975[0m
[32m  eval_mcc = 0.8029[0m
[32m  eval_precision = 0.3756[0m
[32m  eval_recall = 0.2811[0m

