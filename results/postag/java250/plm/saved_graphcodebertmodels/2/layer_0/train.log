[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.bias', 'lm_head.layer_norm.weight', 'lm_head.decoder.weight', 'lm_head.dense.bias', 'lm_head.dense.weight', 'lm_head.decoder.bias', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.46938:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = -0.0029[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0041[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.46938:   7%|▋         | 1/14 [00:05<01:12,  5.57s/it]epoch 0 loss 5.4699:   7%|▋         | 1/14 [00:06<01:12,  5.57s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0015[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = -0.003[0m
[32m  eval_precision = 0.0065[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.4699:  14%|█▍        | 2/14 [00:10<01:04,  5.33s/it]epoch 0 loss 5.46696:  14%|█▍        | 2/14 [00:11<01:04,  5.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0019[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = -0.0031[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.46696:  21%|██▏       | 3/14 [00:15<00:57,  5.26s/it]epoch 0 loss 5.46097:  21%|██▏       | 3/14 [00:16<00:57,  5.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0026[0m
[32m  eval_f1 = 0.0034[0m
[32m  eval_mcc = -0.0033[0m
[32m  eval_precision = 0.0085[0m
[32m  eval_recall = 0.0047[0m
[32m  ********************[0m
[32m  Best f1:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.46097:  29%|██▊       | 4/14 [00:21<00:52,  5.23s/it]epoch 0 loss 5.45279:  29%|██▊       | 4/14 [00:21<00:52,  5.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0034[0m
[32m  eval_f1 = 0.0038[0m
[32m  eval_mcc = -0.0037[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0052[0m
[32m  ********************[0m
[32m  Best f1:0.0038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.45279:  36%|███▌      | 5/14 [00:26<00:46,  5.21s/it]epoch 0 loss 5.44271:  36%|███▌      | 5/14 [00:27<00:46,  5.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0113[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0019[0m
[32m  eval_precision = 0.0125[0m
[32m  eval_recall = 0.008[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44271:  43%|████▎     | 6/14 [00:32<00:43,  5.42s/it]epoch 0 loss 5.43049:  43%|████▎     | 6/14 [00:32<00:43,  5.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0358[0m
[32m  eval_f1 = 0.012[0m
[32m  eval_mcc = 0.023[0m
[32m  eval_precision = 0.0197[0m
[32m  eval_recall = 0.016[0m
[32m  ********************[0m
[32m  Best f1:0.012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43049:  50%|█████     | 7/14 [00:38<00:39,  5.64s/it]epoch 0 loss 5.41495:  50%|█████     | 7/14 [00:39<00:39,  5.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0728[0m
[32m  eval_f1 = 0.0187[0m
[32m  eval_mcc = 0.0559[0m
[32m  eval_precision = 0.0291[0m
[32m  eval_recall = 0.0282[0m
[32m  ********************[0m
[32m  Best f1:0.0187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41495:  57%|█████▋    | 8/14 [00:44<00:34,  5.79s/it]epoch 0 loss 5.39835:  57%|█████▋    | 8/14 [00:45<00:34,  5.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1548[0m
[32m  eval_f1 = 0.0336[0m
[32m  eval_mcc = 0.1355[0m
[32m  eval_precision = 0.0415[0m
[32m  eval_recall = 0.0478[0m
[32m  ********************[0m
[32m  Best f1:0.0336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39835:  64%|██████▍   | 9/14 [00:50<00:29,  5.89s/it]epoch 0 loss 5.37773:  64%|██████▍   | 9/14 [00:51<00:29,  5.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.228[0m
[32m  eval_f1 = 0.044[0m
[32m  eval_mcc = 0.2063[0m
[32m  eval_precision = 0.0525[0m
[32m  eval_recall = 0.0584[0m
[32m  ********************[0m
[32m  Best f1:0.044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37773:  71%|███████▏  | 10/14 [00:57<00:24,  6.18s/it]epoch 0 loss 5.35405:  71%|███████▏  | 10/14 [00:58<00:24,  6.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3131[0m
[32m  eval_f1 = 0.0615[0m
[32m  eval_mcc = 0.2907[0m
[32m  eval_precision = 0.0682[0m
[32m  eval_recall = 0.0757[0m
[32m  ********************[0m
[32m  Best f1:0.0615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35405:  79%|███████▊  | 11/14 [01:04<00:19,  6.43s/it]epoch 0 loss 5.32913:  79%|███████▊  | 11/14 [01:05<00:19,  6.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3747[0m
[32m  eval_f1 = 0.0734[0m
[32m  eval_mcc = 0.3527[0m
[32m  eval_precision = 0.0797[0m
[32m  eval_recall = 0.0892[0m
[32m  ********************[0m
[32m  Best f1:0.0734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.32913:  86%|████████▌ | 12/14 [01:11<00:13,  6.59s/it]epoch 0 loss 5.30194:  86%|████████▌ | 12/14 [01:12<00:13,  6.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4433[0m
[32m  eval_f1 = 0.0891[0m
[32m  eval_mcc = 0.4216[0m
[32m  eval_precision = 0.096[0m
[32m  eval_recall = 0.1052[0m
[32m  ********************[0m
[32m  Best f1:0.0891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30194:  93%|█████████▎| 13/14 [01:18<00:06,  6.66s/it]epoch 0 loss 5.27132:  93%|█████████▎| 13/14 [01:18<00:06,  6.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4992[0m
[32m  eval_f1 = 0.1043[0m
[32m  eval_mcc = 0.4786[0m
[32m  eval_precision = 0.1104[0m
[32m  eval_recall = 0.1212[0m
[32m  ********************[0m
[32m  Best f1:0.1043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27132: 100%|██████████| 14/14 [01:24<00:00,  6.69s/it]epoch 0 loss 5.27132: 100%|██████████| 14/14 [01:24<00:00,  6.06s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.80268:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5206[0m
[32m  eval_f1 = 0.1119[0m
[32m  eval_mcc = 0.5005[0m
[32m  eval_precision = 0.1197[0m
[32m  eval_recall = 0.1275[0m
[32m  ********************[0m
[32m  Best f1:0.1119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.80268:   7%|▋         | 1/14 [00:09<02:06,  9.70s/it]epoch 1 loss 4.73054:   7%|▋         | 1/14 [00:10<02:06,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5365[0m
[32m  eval_f1 = 0.116[0m
[32m  eval_mcc = 0.5168[0m
[32m  eval_precision = 0.1256[0m
[32m  eval_recall = 0.1317[0m
[32m  ********************[0m
[32m  Best f1:0.116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.73054:  14%|█▍        | 2/14 [00:16<01:37,  8.11s/it]epoch 1 loss 4.68243:  14%|█▍        | 2/14 [00:17<01:37,  8.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5446[0m
[32m  eval_f1 = 0.1257[0m
[32m  eval_mcc = 0.5251[0m
[32m  eval_precision = 0.1331[0m
[32m  eval_recall = 0.1406[0m
[32m  ********************[0m
[32m  Best f1:0.1257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.68243:  21%|██▏       | 3/14 [00:26<01:39,  9.08s/it]epoch 1 loss 4.63339:  21%|██▏       | 3/14 [00:27<01:39,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5494[0m
[32m  eval_f1 = 0.1279[0m
[32m  eval_mcc = 0.5299[0m
[32m  eval_precision = 0.1355[0m
[32m  eval_recall = 0.1435[0m
[32m  ********************[0m
[32m  Best f1:0.1279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.63339:  29%|██▊       | 4/14 [00:33<01:22,  8.21s/it]epoch 1 loss 4.58527:  29%|██▊       | 4/14 [00:34<01:22,  8.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5535[0m
[32m  eval_f1 = 0.131[0m
[32m  eval_mcc = 0.5343[0m
[32m  eval_precision = 0.1391[0m
[32m  eval_recall = 0.1471[0m
[32m  ********************[0m
[32m  Best f1:0.131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.58527:  36%|███▌      | 5/14 [00:43<01:19,  8.79s/it]epoch 1 loss 4.53885:  36%|███▌      | 5/14 [00:44<01:19,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5576[0m
[32m  eval_f1 = 0.1341[0m
[32m  eval_mcc = 0.5385[0m
[32m  eval_precision = 0.143[0m
[32m  eval_recall = 0.1503[0m
[32m  ********************[0m
[32m  Best f1:0.1341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.53885:  43%|████▎     | 6/14 [00:50<01:05,  8.17s/it]epoch 1 loss 4.4922:  43%|████▎     | 6/14 [00:51<01:05,  8.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5615[0m
[32m  eval_f1 = 0.1373[0m
[32m  eval_mcc = 0.5426[0m
[32m  eval_precision = 0.1465[0m
[32m  eval_recall = 0.1533[0m
[32m  ********************[0m
[32m  Best f1:0.1373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.4922:  50%|█████     | 7/14 [00:59<00:58,  8.36s/it]epoch 1 loss 4.44646:  50%|█████     | 7/14 [01:00<00:58,  8.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5651[0m
[32m  eval_f1 = 0.1415[0m
[32m  eval_mcc = 0.5465[0m
[32m  eval_precision = 0.1519[0m
[32m  eval_recall = 0.1578[0m
[32m  ********************[0m
[32m  Best f1:0.1415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.44646:  57%|█████▋    | 8/14 [01:07<00:50,  8.36s/it]epoch 1 loss 4.39919:  57%|█████▋    | 8/14 [01:08<00:50,  8.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5686[0m
[32m  eval_f1 = 0.1436[0m
[32m  eval_mcc = 0.55[0m
[32m  eval_precision = 0.1539[0m
[32m  eval_recall = 0.16[0m
[32m  ********************[0m
[32m  Best f1:0.1436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.55[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.39919:  64%|██████▍   | 9/14 [01:15<00:40,  8.13s/it]epoch 1 loss 4.35479:  64%|██████▍   | 9/14 [01:16<00:40,  8.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5746[0m
[32m  eval_f1 = 0.1457[0m
[32m  eval_mcc = 0.5566[0m
[32m  eval_precision = 0.1561[0m
[32m  eval_recall = 0.1622[0m
[32m  ********************[0m
[32m  Best f1:0.1457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.35479:  71%|███████▏  | 10/14 [01:23<00:32,  8.21s/it]epoch 1 loss 4.31068:  71%|███████▏  | 10/14 [01:24<00:32,  8.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5786[0m
[32m  eval_f1 = 0.1514[0m
[32m  eval_mcc = 0.5608[0m
[32m  eval_precision = 0.1622[0m
[32m  eval_recall = 0.1685[0m
[32m  ********************[0m
[32m  Best f1:0.1514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.31068:  79%|███████▊  | 11/14 [01:33<00:25,  8.55s/it]epoch 1 loss 4.269:  79%|███████▊  | 11/14 [01:33<00:25,  8.55s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5805[0m
[32m  eval_f1 = 0.1544[0m
[32m  eval_mcc = 0.5626[0m
[32m  eval_precision = 0.1655[0m
[32m  eval_recall = 0.1719[0m
[32m  ********************[0m
[32m  Best f1:0.1544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.269:  86%|████████▌ | 12/14 [01:42<00:17,  8.79s/it]epoch 1 loss 4.22775:  86%|████████▌ | 12/14 [01:43<00:17,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5835[0m
[32m  eval_f1 = 0.1562[0m
[32m  eval_mcc = 0.5657[0m
[32m  eval_precision = 0.1664[0m
[32m  eval_recall = 0.174[0m
[32m  ********************[0m
[32m  Best f1:0.1562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.22775:  93%|█████████▎| 13/14 [01:53<00:09,  9.37s/it]epoch 1 loss 4.18538:  93%|█████████▎| 13/14 [01:53<00:09,  9.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5849[0m
[32m  eval_f1 = 0.1608[0m
[32m  eval_mcc = 0.5672[0m
[32m  eval_precision = 0.1723[0m
[32m  eval_recall = 0.179[0m
[32m  ********************[0m
[32m  Best f1:0.1608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.18538: 100%|██████████| 14/14 [02:04<00:00,  9.88s/it]epoch 1 loss 4.18538: 100%|██████████| 14/14 [02:04<00:00,  8.87s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 3.6049:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5866[0m
[32m  eval_f1 = 0.1669[0m
[32m  eval_mcc = 0.5688[0m
[32m  eval_precision = 0.1785[0m
[32m  eval_recall = 0.1858[0m
[32m  ********************[0m
[32m  Best f1:0.1669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.6049:   7%|▋         | 1/14 [00:08<01:56,  8.99s/it]epoch 2 loss 3.56242:   7%|▋         | 1/14 [00:09<01:56,  8.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5879[0m
[32m  eval_f1 = 0.1705[0m
[32m  eval_mcc = 0.5702[0m
[32m  eval_precision = 0.1821[0m
[32m  eval_recall = 0.1898[0m
[32m  ********************[0m
[32m  Best f1:0.1705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.56242:  14%|█▍        | 2/14 [00:18<01:49,  9.14s/it]epoch 2 loss 3.53763:  14%|█▍        | 2/14 [00:19<01:49,  9.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5891[0m
[32m  eval_f1 = 0.1702[0m
[32m  eval_mcc = 0.5713[0m
[32m  eval_precision = 0.1794[0m
[32m  eval_recall = 0.1904[0m
[32m  ********************[0m
[32m  Best MCC:0.5713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.53763:  21%|██▏       | 3/14 [00:23<01:21,  7.42s/it]epoch 2 loss 3.51075:  21%|██▏       | 3/14 [00:24<01:21,  7.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5907[0m
[32m  eval_f1 = 0.1711[0m
[32m  eval_mcc = 0.5729[0m
[32m  eval_precision = 0.1809[0m
[32m  eval_recall = 0.1907[0m
[32m  ********************[0m
[32m  Best f1:0.1711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.51075:  29%|██▊       | 4/14 [00:32<01:19,  7.94s/it]epoch 2 loss 3.47901:  29%|██▊       | 4/14 [00:33<01:19,  7.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5917[0m
[32m  eval_f1 = 0.1744[0m
[32m  eval_mcc = 0.5737[0m
[32m  eval_precision = 0.1845[0m
[32m  eval_recall = 0.1941[0m
[32m  ********************[0m
[32m  Best f1:0.1744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.47901:  36%|███▌      | 5/14 [00:40<01:13,  8.20s/it]epoch 2 loss 3.44784:  36%|███▌      | 5/14 [00:41<01:13,  8.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5933[0m
[32m  eval_f1 = 0.1768[0m
[32m  eval_mcc = 0.5754[0m
[32m  eval_precision = 0.1872[0m
[32m  eval_recall = 0.1965[0m
[32m  ********************[0m
[32m  Best f1:0.1768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.44784:  43%|████▎     | 6/14 [00:50<01:08,  8.52s/it]epoch 2 loss 3.41724:  43%|████▎     | 6/14 [00:50<01:08,  8.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5946[0m
[32m  eval_f1 = 0.1769[0m
[32m  eval_mcc = 0.5767[0m
[32m  eval_precision = 0.1879[0m
[32m  eval_recall = 0.1967[0m
[32m  ********************[0m
[32m  Best f1:0.1769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.41724:  50%|█████     | 7/14 [00:59<01:02,  8.94s/it]epoch 2 loss 3.39045:  50%|█████     | 7/14 [01:00<01:02,  8.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5961[0m
[32m  eval_f1 = 0.178[0m
[32m  eval_mcc = 0.5781[0m
[32m  eval_precision = 0.1892[0m
[32m  eval_recall = 0.198[0m
[32m  ********************[0m
[32m  Best f1:0.178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.39045:  57%|█████▋    | 8/14 [01:07<00:50,  8.46s/it]epoch 2 loss 3.35855:  57%|█████▋    | 8/14 [01:08<00:50,  8.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.1814[0m
[32m  eval_mcc = 0.5836[0m
[32m  eval_precision = 0.1929[0m
[32m  eval_recall = 0.201[0m
[32m  ********************[0m
[32m  Best f1:0.1814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.35855:  64%|██████▍   | 9/14 [01:14<00:40,  8.11s/it]epoch 2 loss 3.33216:  64%|██████▍   | 9/14 [01:15<00:40,  8.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6026[0m
[32m  eval_f1 = 0.1815[0m
[32m  eval_mcc = 0.5845[0m
[32m  eval_precision = 0.1932[0m
[32m  eval_recall = 0.201[0m
[32m  ********************[0m
[32m  Best f1:0.1815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.33216:  71%|███████▏  | 10/14 [01:23<00:33,  8.37s/it]epoch 2 loss 3.31398:  71%|███████▏  | 10/14 [01:24<00:33,  8.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.1816[0m
[32m  eval_mcc = 0.5858[0m
[32m  eval_precision = 0.1933[0m
[32m  eval_recall = 0.201[0m
[32m  ********************[0m
[32m  Best f1:0.1816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.31398:  79%|███████▊  | 11/14 [01:31<00:24,  8.11s/it]epoch 2 loss 3.2889:  79%|███████▊  | 11/14 [01:31<00:24,  8.11s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.1821[0m
[32m  eval_mcc = 0.5877[0m
[32m  eval_precision = 0.1938[0m
[32m  eval_recall = 0.2016[0m
[32m  ********************[0m
[32m  Best f1:0.1821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.2889:  86%|████████▌ | 12/14 [01:40<00:16,  8.42s/it]epoch 2 loss 3.26198:  86%|████████▌ | 12/14 [01:41<00:16,  8.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6072[0m
[32m  eval_f1 = 0.1825[0m
[32m  eval_mcc = 0.5889[0m
[32m  eval_precision = 0.1942[0m
[32m  eval_recall = 0.2017[0m
[32m  ********************[0m
[32m  Best f1:0.1825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.26198:  93%|█████████▎| 13/14 [01:49<00:08,  8.63s/it]epoch 2 loss 3.23219:  93%|█████████▎| 13/14 [01:50<00:08,  8.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6088[0m
[32m  eval_f1 = 0.1831[0m
[32m  eval_mcc = 0.5905[0m
[32m  eval_precision = 0.1952[0m
[32m  eval_recall = 0.202[0m
[32m  ********************[0m
[32m  Best f1:0.1831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.23219: 100%|██████████| 14/14 [01:59<00:00,  9.15s/it]epoch 2 loss 3.23219: 100%|██████████| 14/14 [01:59<00:00,  8.56s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 2.94595:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6101[0m
[32m  eval_f1 = 0.1842[0m
[32m  eval_mcc = 0.5919[0m
[32m  eval_precision = 0.1964[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.1842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.94595:   7%|▋         | 1/14 [00:07<01:34,  7.27s/it]epoch 3 loss 2.915:   7%|▋         | 1/14 [00:08<01:34,  7.27s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6106[0m
[32m  eval_f1 = 0.1852[0m
[32m  eval_mcc = 0.5923[0m
[32m  eval_precision = 0.1976[0m
[32m  eval_recall = 0.2043[0m
[32m  ********************[0m
[32m  Best f1:0.1852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.915:  14%|█▍        | 2/14 [00:14<01:24,  7.06s/it]epoch 3 loss 2.88035:  14%|█▍        | 2/14 [00:14<01:24,  7.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6114[0m
[32m  eval_f1 = 0.1869[0m
[32m  eval_mcc = 0.5931[0m
[32m  eval_precision = 0.1995[0m
[32m  eval_recall = 0.2058[0m
[32m  ********************[0m
[32m  Best f1:0.1869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.88035:  21%|██▏       | 3/14 [00:21<01:16,  7.00s/it]epoch 3 loss 2.85529:  21%|██▏       | 3/14 [00:21<01:16,  7.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6125[0m
[32m  eval_f1 = 0.1875[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.2004[0m
[32m  eval_recall = 0.2062[0m
[32m  ********************[0m
[32m  Best f1:0.1875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.85529:  29%|██▊       | 4/14 [00:27<01:08,  6.89s/it]epoch 3 loss 2.8436:  29%|██▊       | 4/14 [00:28<01:08,  6.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6133[0m
[32m  eval_f1 = 0.1877[0m
[32m  eval_mcc = 0.5949[0m
[32m  eval_precision = 0.2006[0m
[32m  eval_recall = 0.2063[0m
[32m  ********************[0m
[32m  Best f1:0.1877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.8436:  36%|███▌      | 5/14 [00:34<01:02,  6.94s/it]epoch 3 loss 2.83294:  36%|███▌      | 5/14 [00:35<01:02,  6.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6141[0m
[32m  eval_f1 = 0.1903[0m
[32m  eval_mcc = 0.5957[0m
[32m  eval_precision = 0.2032[0m
[32m  eval_recall = 0.2089[0m
[32m  ********************[0m
[32m  Best f1:0.1903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.83294:  43%|████▎     | 6/14 [00:40<00:53,  6.65s/it]epoch 3 loss 2.80719:  43%|████▎     | 6/14 [00:41<00:53,  6.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.615[0m
[32m  eval_f1 = 0.1904[0m
[32m  eval_mcc = 0.5966[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.2088[0m
[32m  ********************[0m
[32m  Best f1:0.1904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.80719:  50%|█████     | 7/14 [00:47<00:47,  6.77s/it]epoch 3 loss 2.80162:  50%|█████     | 7/14 [00:48<00:47,  6.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6162[0m
[32m  eval_f1 = 0.1906[0m
[32m  eval_mcc = 0.5977[0m
[32m  eval_precision = 0.2037[0m
[32m  eval_recall = 0.2089[0m
[32m  ********************[0m
[32m  Best f1:0.1906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.80162:  57%|█████▋    | 8/14 [00:54<00:40,  6.83s/it]epoch 3 loss 2.79557:  57%|█████▋    | 8/14 [00:55<00:40,  6.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6178[0m
[32m  eval_f1 = 0.1909[0m
[32m  eval_mcc = 0.5993[0m
[32m  eval_precision = 0.2041[0m
[32m  eval_recall = 0.2091[0m
[32m  ********************[0m
[32m  Best f1:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.79557:  64%|██████▍   | 9/14 [01:01<00:34,  6.85s/it]epoch 3 loss 2.77568:  64%|██████▍   | 9/14 [01:02<00:34,  6.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6189[0m
[32m  eval_f1 = 0.1933[0m
[32m  eval_mcc = 0.6004[0m
[32m  eval_precision = 0.2067[0m
[32m  eval_recall = 0.2116[0m
[32m  ********************[0m
[32m  Best f1:0.1933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.77568:  71%|███████▏  | 10/14 [01:08<00:27,  6.90s/it]epoch 3 loss 2.77052:  71%|███████▏  | 10/14 [01:09<00:27,  6.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.1945[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.2084[0m
[32m  eval_recall = 0.2128[0m
[32m  ********************[0m
[32m  Best f1:0.1945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.77052:  79%|███████▊  | 11/14 [01:15<00:20,  6.91s/it]epoch 3 loss 2.75332:  79%|███████▊  | 11/14 [01:16<00:20,  6.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6213[0m
[32m  eval_f1 = 0.1955[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.2094[0m
[32m  eval_recall = 0.2139[0m
[32m  ********************[0m
[32m  Best f1:0.1955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.75332:  86%|████████▌ | 12/14 [01:22<00:13,  6.93s/it]epoch 3 loss 2.74099:  86%|████████▌ | 12/14 [01:23<00:13,  6.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.622[0m
[32m  eval_f1 = 0.1956[0m
[32m  eval_mcc = 0.6034[0m
[32m  eval_precision = 0.2097[0m
[32m  eval_recall = 0.2139[0m
[32m  ********************[0m
[32m  Best f1:0.1956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.74099:  93%|█████████▎| 13/14 [01:29<00:06,  6.92s/it]epoch 3 loss 2.73444:  93%|█████████▎| 13/14 [01:30<00:06,  6.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.1957[0m
[32m  eval_mcc = 0.6041[0m
[32m  eval_precision = 0.21[0m
[32m  eval_recall = 0.2138[0m
[32m  ********************[0m
[32m  Best f1:0.1957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.73444: 100%|██████████| 14/14 [01:36<00:00,  6.85s/it]epoch 3 loss 2.73444: 100%|██████████| 14/14 [01:36<00:00,  6.88s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 2.56169:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6233[0m
[32m  eval_f1 = 0.1958[0m
[32m  eval_mcc = 0.6047[0m
[32m  eval_precision = 0.21[0m
[32m  eval_recall = 0.2139[0m
[32m  ********************[0m
[32m  Best f1:0.1958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56169:   7%|▋         | 1/14 [00:06<01:24,  6.49s/it]epoch 4 loss 2.60488:   7%|▋         | 1/14 [00:07<01:24,  6.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6242[0m
[32m  eval_f1 = 0.1968[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.211[0m
[32m  eval_recall = 0.2151[0m
[32m  ********************[0m
[32m  Best f1:0.1968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.60488:  14%|█▍        | 2/14 [00:13<01:21,  6.81s/it]epoch 4 loss 2.5859:  14%|█▍        | 2/14 [00:14<01:21,  6.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.198[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.2123[0m
[32m  eval_recall = 0.2164[0m
[32m  ********************[0m
[32m  Best f1:0.198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.5859:  21%|██▏       | 3/14 [00:20<01:15,  6.88s/it]epoch 4 loss 2.58725:  21%|██▏       | 3/14 [00:21<01:15,  6.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.1993[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.2136[0m
[32m  eval_recall = 0.2178[0m
[32m  ********************[0m
[32m  Best f1:0.1993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.58725:  29%|██▊       | 4/14 [00:30<01:19,  7.98s/it]epoch 4 loss 2.5718:  29%|██▊       | 4/14 [00:30<01:19,  7.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.1993[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.2136[0m
[32m  eval_recall = 0.2178[0m
[32m  ********************[0m
[32m  Best f1:0.1993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 2.5718:  36%|███▌      | 5/14 [00:37<01:09,  7.68s/it]epoch 4 loss 2.56705:  36%|███▌      | 5/14 [00:38<01:09,  7.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2005[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.2148[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best f1:0.2005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 2.56705:  43%|████▎     | 6/14 [00:42<00:55,  6.96s/it]epoch 4 loss 2.56717:  43%|████▎     | 6/14 [00:43<00:55,  6.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.2005[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.215[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best f1:0.2005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56717:  50%|█████     | 7/14 [00:54<01:00,  8.65s/it]epoch 4 loss 2.56148:  50%|█████     | 7/14 [00:55<01:00,  8.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2008[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.2153[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best f1:0.2008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56148:  57%|█████▋    | 8/14 [01:04<00:52,  8.78s/it]epoch 4 loss 2.5521:  57%|█████▋    | 8/14 [01:04<00:52,  8.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.2009[0m
[32m  eval_mcc = 0.6096[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best f1:0.2009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.5521:  64%|██████▍   | 9/14 [01:11<00:41,  8.29s/it]epoch 4 loss 2.54346:  64%|██████▍   | 9/14 [01:12<00:41,  8.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.2009[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.54346:  71%|███████▏  | 10/14 [01:16<00:29,  7.45s/it]epoch 4 loss 2.53201:  71%|███████▏  | 10/14 [01:17<00:29,  7.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.2009[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best f1:0.2009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53201:  79%|███████▊  | 11/14 [01:25<00:23,  7.87s/it]epoch 4 loss 2.53114:  79%|███████▊  | 11/14 [01:26<00:23,  7.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6287[0m
[32m  eval_f1 = 0.2008[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.216[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53114:  86%|████████▌ | 12/14 [01:31<00:14,  7.16s/it]epoch 4 loss 2.5277:  86%|████████▌ | 12/14 [01:31<00:14,  7.16s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2009[0m
[32m  eval_mcc = 0.6101[0m
[32m  eval_precision = 0.2162[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best MCC:0.6101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.5277:  93%|█████████▎| 13/14 [01:38<00:07,  7.30s/it]epoch 4 loss 2.5255:  93%|█████████▎| 13/14 [01:39<00:07,  7.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.629[0m
[32m  eval_f1 = 0.2008[0m
[32m  eval_mcc = 0.6104[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.219[0m
[32m  ********************[0m
[32m  Best MCC:0.6104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.5255: 100%|██████████| 14/14 [01:44<00:00,  6.68s/it]epoch 4 loss 2.5255: 100%|██████████| 14/14 [01:44<00:00,  7.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.2009[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.2191[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.1772[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.1879[0m
[32m  eval_recall = 0.1919[0m

