[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.dense.bias', 'lm_head.decoder.bias', 'lm_head.layer_norm.bias', 'lm_head.layer_norm.weight', 'lm_head.bias', 'lm_head.dense.weight', 'lm_head.decoder.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.62606:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0029[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.62606:   7%|▋         | 1/14 [00:05<01:11,  5.50s/it]epoch 0 loss 5.62632:   7%|▋         | 1/14 [00:06<01:11,  5.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.004[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0012[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.62632:  14%|█▍        | 2/14 [00:10<01:05,  5.48s/it]epoch 0 loss 5.62229:  14%|█▍        | 2/14 [00:11<01:05,  5.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0068[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0017[0m
[32m  eval_precision = 0.0015[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.62229:  21%|██▏       | 3/14 [00:16<01:02,  5.72s/it]epoch 0 loss 5.61139:  21%|██▏       | 3/14 [00:17<01:02,  5.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0118[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0055[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.61139:  29%|██▊       | 4/14 [00:23<01:02,  6.21s/it]epoch 0 loss 5.59681:  29%|██▊       | 4/14 [00:24<01:02,  6.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0192[0m
[32m  eval_f1 = 0.0046[0m
[32m  eval_mcc = 0.0111[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0065[0m
[32m  ********************[0m
[32m  Best f1:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59681:  36%|███▌      | 5/14 [00:30<00:55,  6.17s/it]epoch 0 loss 5.57772:  36%|███▌      | 5/14 [00:30<00:55,  6.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0283[0m
[32m  eval_f1 = 0.0065[0m
[32m  eval_mcc = 0.0176[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.57772:  43%|████▎     | 6/14 [00:36<00:49,  6.15s/it]epoch 0 loss 5.55471:  43%|████▎     | 6/14 [00:36<00:49,  6.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0418[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0279[0m
[32m  eval_precision = 0.0106[0m
[32m  eval_recall = 0.0113[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55471:  50%|█████     | 7/14 [00:43<00:44,  6.40s/it]epoch 0 loss 5.5264:  50%|█████     | 7/14 [00:43<00:44,  6.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.065[0m
[32m  eval_f1 = 0.0137[0m
[32m  eval_mcc = 0.0485[0m
[32m  eval_precision = 0.0162[0m
[32m  eval_recall = 0.0187[0m
[32m  ********************[0m
[32m  Best f1:0.0137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.5264:  57%|█████▋    | 8/14 [00:50<00:39,  6.59s/it]epoch 0 loss 5.49229:  57%|█████▋    | 8/14 [00:50<00:39,  6.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1009[0m
[32m  eval_f1 = 0.0217[0m
[32m  eval_mcc = 0.0834[0m
[32m  eval_precision = 0.0244[0m
[32m  eval_recall = 0.0311[0m
[32m  ********************[0m
[32m  Best f1:0.0217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49229:  64%|██████▍   | 9/14 [00:57<00:33,  6.70s/it]epoch 0 loss 5.45329:  64%|██████▍   | 9/14 [00:57<00:33,  6.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1409[0m
[32m  eval_f1 = 0.0325[0m
[32m  eval_mcc = 0.1243[0m
[32m  eval_precision = 0.0437[0m
[32m  eval_recall = 0.044[0m
[32m  ********************[0m
[32m  Best f1:0.0325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45329:  71%|███████▏  | 10/14 [01:03<00:26,  6.74s/it]epoch 0 loss 5.40794:  71%|███████▏  | 10/14 [01:04<00:26,  6.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1976[0m
[32m  eval_f1 = 0.0518[0m
[32m  eval_mcc = 0.1836[0m
[32m  eval_precision = 0.0693[0m
[32m  eval_recall = 0.0641[0m
[32m  ********************[0m
[32m  Best f1:0.0518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40794:  79%|███████▊  | 11/14 [01:09<00:19,  6.54s/it]epoch 0 loss 5.35975:  79%|███████▊  | 11/14 [01:10<00:19,  6.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2557[0m
[32m  eval_f1 = 0.0743[0m
[32m  eval_mcc = 0.2442[0m
[32m  eval_precision = 0.1018[0m
[32m  eval_recall = 0.0864[0m
[32m  ********************[0m
[32m  Best f1:0.0743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35975:  86%|████████▌ | 12/14 [01:16<00:12,  6.41s/it]epoch 0 loss 5.30723:  86%|████████▌ | 12/14 [01:16<00:12,  6.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3213[0m
[32m  eval_f1 = 0.1048[0m
[32m  eval_mcc = 0.3121[0m
[32m  eval_precision = 0.1487[0m
[32m  eval_recall = 0.115[0m
[32m  ********************[0m
[32m  Best f1:0.1048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30723:  93%|█████████▎| 13/14 [01:23<00:06,  6.58s/it]epoch 0 loss 5.24772:  93%|█████████▎| 13/14 [01:23<00:06,  6.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3809[0m
[32m  eval_f1 = 0.1399[0m
[32m  eval_mcc = 0.3728[0m
[32m  eval_precision = 0.1979[0m
[32m  eval_recall = 0.1495[0m
[32m  ********************[0m
[32m  Best f1:0.1399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24772: 100%|██████████| 14/14 [01:29<00:00,  6.60s/it]epoch 0 loss 5.24772: 100%|██████████| 14/14 [01:29<00:00,  6.40s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.3377:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4324[0m
[32m  eval_f1 = 0.1633[0m
[32m  eval_mcc = 0.424[0m
[32m  eval_precision = 0.2203[0m
[32m  eval_recall = 0.1726[0m
[32m  ********************[0m
[32m  Best f1:0.1633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.3377:   7%|▋         | 1/14 [00:06<01:30,  6.93s/it]epoch 1 loss 4.21247:   7%|▋         | 1/14 [00:07<01:30,  6.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4774[0m
[32m  eval_f1 = 0.1921[0m
[32m  eval_mcc = 0.4681[0m
[32m  eval_precision = 0.2659[0m
[32m  eval_recall = 0.2[0m
[32m  ********************[0m
[32m  Best f1:0.1921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.21247:  14%|█▍        | 2/14 [00:13<01:23,  6.98s/it]epoch 1 loss 4.13084:  14%|█▍        | 2/14 [00:14<01:23,  6.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5233[0m
[32m  eval_f1 = 0.2106[0m
[32m  eval_mcc = 0.513[0m
[32m  eval_precision = 0.2863[0m
[32m  eval_recall = 0.2172[0m
[32m  ********************[0m
[32m  Best f1:0.2106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.13084:  21%|██▏       | 3/14 [00:20<01:13,  6.64s/it]epoch 1 loss 4.03952:  21%|██▏       | 3/14 [00:20<01:13,  6.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5578[0m
[32m  eval_f1 = 0.2255[0m
[32m  eval_mcc = 0.5468[0m
[32m  eval_precision = 0.3006[0m
[32m  eval_recall = 0.232[0m
[32m  ********************[0m
[32m  Best f1:0.2255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.03952:  29%|██▊       | 4/14 [00:27<01:08,  6.81s/it]epoch 1 loss 3.95926:  29%|██▊       | 4/14 [00:28<01:08,  6.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.2406[0m
[32m  eval_mcc = 0.5766[0m
[32m  eval_precision = 0.31[0m
[32m  eval_recall = 0.2453[0m
[32m  ********************[0m
[32m  Best f1:0.2406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.95926:  36%|███▌      | 5/14 [00:37<01:11,  7.91s/it]epoch 1 loss 3.87443:  36%|███▌      | 5/14 [00:37<01:11,  7.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.49it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6152[0m
[32m  eval_f1 = 0.2494[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3232[0m
[32m  eval_recall = 0.2527[0m
[32m  ********************[0m
[32m  Best f1:0.2494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.87443:  43%|████▎     | 6/14 [00:49<01:14,  9.31s/it]epoch 1 loss 3.79106:  43%|████▎     | 6/14 [00:49<01:14,  9.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.2602[0m
[32m  eval_mcc = 0.6307[0m
[32m  eval_precision = 0.3295[0m
[32m  eval_recall = 0.2614[0m
[32m  ********************[0m
[32m  Best f1:0.2602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.79106:  50%|█████     | 7/14 [00:58<01:05,  9.35s/it]epoch 1 loss 3.71362:  50%|█████     | 7/14 [00:59<01:05,  9.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.2673[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.3428[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.71362:  57%|█████▋    | 8/14 [01:10<01:00, 10.06s/it]epoch 1 loss 3.63462:  57%|█████▋    | 8/14 [01:10<01:00, 10.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6814[0m
[32m  eval_f1 = 0.2725[0m
[32m  eval_mcc = 0.6692[0m
[32m  eval_precision = 0.3466[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best f1:0.2725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.63462:  64%|██████▍   | 9/14 [01:19<00:48,  9.79s/it]epoch 1 loss 3.55974:  64%|██████▍   | 9/14 [01:20<00:48,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.50it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6955[0m
[32m  eval_f1 = 0.2778[0m
[32m  eval_mcc = 0.6833[0m
[32m  eval_precision = 0.3506[0m
[32m  eval_recall = 0.2749[0m
[32m  ********************[0m
[32m  Best f1:0.2778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.55974:  71%|███████▏  | 10/14 [01:30<00:41, 10.31s/it]epoch 1 loss 3.48673:  71%|███████▏  | 10/14 [01:31<00:41, 10.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7089[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6968[0m
[32m  eval_precision = 0.3544[0m
[32m  eval_recall = 0.2777[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.48673:  79%|███████▊  | 11/14 [01:40<00:29,  9.98s/it]epoch 1 loss 3.42143:  79%|███████▊  | 11/14 [01:40<00:29,  9.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7219[0m
[32m  eval_f1 = 0.2868[0m
[32m  eval_mcc = 0.7098[0m
[32m  eval_precision = 0.3586[0m
[32m  eval_recall = 0.2804[0m
[32m  ********************[0m
[32m  Best f1:0.2868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.42143:  86%|████████▌ | 12/14 [01:49<00:19,  9.76s/it]epoch 1 loss 3.35297:  86%|████████▌ | 12/14 [01:50<00:19,  9.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7331[0m
[32m  eval_f1 = 0.2915[0m
[32m  eval_mcc = 0.721[0m
[32m  eval_precision = 0.3708[0m
[32m  eval_recall = 0.2836[0m
[32m  ********************[0m
[32m  Best f1:0.2915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.35297:  93%|█████████▎| 13/14 [01:58<00:09,  9.54s/it]epoch 1 loss 3.28451:  93%|█████████▎| 13/14 [01:58<00:09,  9.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7413[0m
[32m  eval_f1 = 0.2953[0m
[32m  eval_mcc = 0.7293[0m
[32m  eval_precision = 0.3725[0m
[32m  eval_recall = 0.2867[0m
[32m  ********************[0m
[32m  Best f1:0.2953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.28451: 100%|██████████| 14/14 [02:06<00:00,  9.14s/it]epoch 1 loss 3.28451: 100%|██████████| 14/14 [02:06<00:00,  9.04s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.4017:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7496[0m
[32m  eval_f1 = 0.2998[0m
[32m  eval_mcc = 0.7377[0m
[32m  eval_precision = 0.3746[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.2998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.4017:   7%|▋         | 1/14 [00:09<01:58,  9.13s/it]epoch 2 loss 2.32948:   7%|▋         | 1/14 [00:09<01:58,  9.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7555[0m
[32m  eval_f1 = 0.3023[0m
[32m  eval_mcc = 0.7436[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2921[0m
[32m  ********************[0m
[32m  Best f1:0.3023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.32948:  14%|█▍        | 2/14 [00:17<01:43,  8.58s/it]epoch 2 loss 2.28994:  14%|█▍        | 2/14 [00:18<01:43,  8.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7617[0m
[32m  eval_f1 = 0.3055[0m
[32m  eval_mcc = 0.75[0m
[32m  eval_precision = 0.3769[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.75[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.28994:  21%|██▏       | 3/14 [00:26<01:37,  8.85s/it]epoch 2 loss 2.25716:  21%|██▏       | 3/14 [00:27<01:37,  8.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7671[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.7555[0m
[32m  eval_precision = 0.3777[0m
[32m  eval_recall = 0.2968[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.25716:  29%|██▊       | 4/14 [00:35<01:27,  8.78s/it]epoch 2 loss 2.21081:  29%|██▊       | 4/14 [00:35<01:27,  8.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7722[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.7606[0m
[32m  eval_precision = 0.3788[0m
[32m  eval_recall = 0.2987[0m
[32m  ********************[0m
[32m  Best f1:0.3107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.21081:  36%|███▌      | 5/14 [00:44<01:21,  9.04s/it]epoch 2 loss 2.17121:  36%|███▌      | 5/14 [00:45<01:21,  9.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.777[0m
[32m  eval_f1 = 0.3121[0m
[32m  eval_mcc = 0.7656[0m
[32m  eval_precision = 0.3799[0m
[32m  eval_recall = 0.2999[0m
[32m  ********************[0m
[32m  Best f1:0.3121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.17121:  43%|████▎     | 6/14 [00:55<01:18,  9.77s/it]epoch 2 loss 2.13056:  43%|████▎     | 6/14 [00:56<01:18,  9.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7817[0m
[32m  eval_f1 = 0.314[0m
[32m  eval_mcc = 0.7704[0m
[32m  eval_precision = 0.3815[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best f1:0.314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.13056:  50%|█████     | 7/14 [01:05<01:08,  9.73s/it]epoch 2 loss 2.09553:  50%|█████     | 7/14 [01:06<01:08,  9.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7859[0m
[32m  eval_f1 = 0.3169[0m
[32m  eval_mcc = 0.7747[0m
[32m  eval_precision = 0.3907[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.09553:  57%|█████▋    | 8/14 [01:16<01:01, 10.25s/it]epoch 2 loss 2.05695:  57%|█████▋    | 8/14 [01:17<01:01, 10.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7896[0m
[32m  eval_f1 = 0.3198[0m
[32m  eval_mcc = 0.7785[0m
[32m  eval_precision = 0.3882[0m
[32m  eval_recall = 0.3053[0m
[32m  ********************[0m
[32m  Best f1:0.3198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.05695:  64%|██████▍   | 9/14 [01:26<00:49,  9.97s/it]epoch 2 loss 2.02386:  64%|██████▍   | 9/14 [01:27<00:49,  9.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.793[0m
[32m  eval_f1 = 0.3223[0m
[32m  eval_mcc = 0.7821[0m
[32m  eval_precision = 0.39[0m
[32m  eval_recall = 0.3073[0m
[32m  ********************[0m
[32m  Best f1:0.3223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.02386:  71%|███████▏  | 10/14 [01:36<00:39,  9.97s/it]epoch 2 loss 2.00108:  71%|███████▏  | 10/14 [01:36<00:39,  9.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7962[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.7854[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.3269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.00108:  79%|███████▊  | 11/14 [01:45<00:29,  9.78s/it]epoch 2 loss 1.97067:  79%|███████▊  | 11/14 [01:46<00:29,  9.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7991[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.7884[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.3169[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.97067:  86%|████████▌ | 12/14 [01:54<00:19,  9.60s/it]epoch 2 loss 1.93731:  86%|████████▌ | 12/14 [01:55<00:19,  9.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8014[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.7908[0m
[32m  eval_precision = 0.4014[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.93731:  93%|█████████▎| 13/14 [02:05<00:09,  9.88s/it]epoch 2 loss 1.90169:  93%|█████████▎| 13/14 [02:05<00:09,  9.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8039[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.7933[0m
[32m  eval_precision = 0.4096[0m
[32m  eval_recall = 0.3226[0m
[32m  ********************[0m
[32m  Best f1:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.90169: 100%|██████████| 14/14 [02:15<00:00,  9.86s/it]epoch 2 loss 1.90169: 100%|██████████| 14/14 [02:15<00:00,  9.65s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.5441:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8057[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.7952[0m
[32m  eval_precision = 0.4095[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5441:   7%|▋         | 1/14 [00:08<01:48,  8.36s/it]epoch 3 loss 1.51554:   7%|▋         | 1/14 [00:09<01:48,  8.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8081[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.7977[0m
[32m  eval_precision = 0.4099[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51554:  14%|█▍        | 2/14 [00:17<01:45,  8.75s/it]epoch 3 loss 1.47529:  14%|█▍        | 2/14 [00:18<01:45,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8105[0m
[32m  eval_f1 = 0.3414[0m
[32m  eval_mcc = 0.8003[0m
[32m  eval_precision = 0.4105[0m
[32m  eval_recall = 0.327[0m
[32m  ********************[0m
[32m  Best f1:0.3414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47529:  21%|██▏       | 3/14 [00:25<01:32,  8.37s/it]epoch 3 loss 1.45394:  21%|██▏       | 3/14 [00:26<01:32,  8.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8136[0m
[32m  eval_f1 = 0.345[0m
[32m  eval_mcc = 0.8035[0m
[32m  eval_precision = 0.4065[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45394:  29%|██▊       | 4/14 [00:34<01:25,  8.57s/it]epoch 3 loss 1.44329:  29%|██▊       | 4/14 [00:34<01:25,  8.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8162[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.8063[0m
[32m  eval_precision = 0.4159[0m
[32m  eval_recall = 0.3315[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44329:  36%|███▌      | 5/14 [00:42<01:17,  8.59s/it]epoch 3 loss 1.43813:  36%|███▌      | 5/14 [00:43<01:17,  8.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8189[0m
[32m  eval_f1 = 0.3488[0m
[32m  eval_mcc = 0.8091[0m
[32m  eval_precision = 0.4247[0m
[32m  eval_recall = 0.3332[0m
[32m  ********************[0m
[32m  Best f1:0.3488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43813:  43%|████▎     | 6/14 [00:51<01:10,  8.79s/it]epoch 3 loss 1.40722:  43%|████▎     | 6/14 [00:52<01:10,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8209[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.8112[0m
[32m  eval_precision = 0.4252[0m
[32m  eval_recall = 0.3342[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40722:  50%|█████     | 7/14 [01:00<01:01,  8.75s/it]epoch 3 loss 1.40548:  50%|█████     | 7/14 [01:01<01:01,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8226[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.813[0m
[32m  eval_precision = 0.4254[0m
[32m  eval_recall = 0.3364[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40548:  57%|█████▋    | 8/14 [01:09<00:53,  8.89s/it]epoch 3 loss 1.40333:  57%|█████▋    | 8/14 [01:10<00:53,  8.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8238[0m
[32m  eval_f1 = 0.3537[0m
[32m  eval_mcc = 0.8143[0m
[32m  eval_precision = 0.4273[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best f1:0.3537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40333:  64%|██████▍   | 9/14 [01:18<00:43,  8.77s/it]epoch 3 loss 1.37823:  64%|██████▍   | 9/14 [01:19<00:43,  8.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8251[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.8157[0m
[32m  eval_precision = 0.4285[0m
[32m  eval_recall = 0.3397[0m
[32m  ********************[0m
[32m  Best f1:0.356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37823:  71%|███████▏  | 10/14 [01:27<00:35,  9.00s/it]epoch 3 loss 1.37231:  71%|███████▏  | 10/14 [01:28<00:35,  9.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.826[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.8166[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37231:  79%|███████▊  | 11/14 [01:35<00:25,  8.59s/it]epoch 3 loss 1.35391:  79%|███████▊  | 11/14 [01:36<00:25,  8.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8268[0m
[32m  eval_f1 = 0.36[0m
[32m  eval_mcc = 0.8175[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.3431[0m
[32m  ********************[0m
[32m  Best f1:0.36[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35391:  86%|████████▌ | 12/14 [01:42<00:16,  8.06s/it]epoch 3 loss 1.34334:  86%|████████▌ | 12/14 [01:43<00:16,  8.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8277[0m
[32m  eval_f1 = 0.3627[0m
[32m  eval_mcc = 0.8184[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.3627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34334:  93%|█████████▎| 13/14 [01:51<00:08,  8.26s/it]epoch 3 loss 1.33782:  93%|█████████▎| 13/14 [01:51<00:08,  8.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8287[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.8195[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33782: 100%|██████████| 14/14 [01:57<00:00,  7.80s/it]epoch 3 loss 1.33782: 100%|██████████| 14/14 [01:57<00:00,  8.42s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.13536:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8294[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.8203[0m
[32m  eval_precision = 0.4518[0m
[32m  eval_recall = 0.3476[0m
[32m  ********************[0m
[32m  Best f1:0.3657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13536:   7%|▋         | 1/14 [00:10<02:13, 10.24s/it]epoch 4 loss 1.19872:   7%|▋         | 1/14 [00:11<02:13, 10.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8302[0m
[32m  eval_f1 = 0.3667[0m
[32m  eval_mcc = 0.8211[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3487[0m
[32m  ********************[0m
[32m  Best f1:0.3667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19872:  14%|█▍        | 2/14 [00:22<02:18, 11.52s/it]epoch 4 loss 1.1793:  14%|█▍        | 2/14 [00:23<02:18, 11.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.831[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.8219[0m
[32m  eval_precision = 0.4509[0m
[32m  eval_recall = 0.3509[0m
[32m  ********************[0m
[32m  Best f1:0.369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1793:  21%|██▏       | 3/14 [00:32<01:58, 10.78s/it]epoch 4 loss 1.18901:  21%|██▏       | 3/14 [00:33<01:58, 10.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8314[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.8223[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3519[0m
[32m  ********************[0m
[32m  Best f1:0.3705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18901:  29%|██▊       | 4/14 [00:44<01:51, 11.18s/it]epoch 4 loss 1.16807:  29%|██▊       | 4/14 [00:45<01:51, 11.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8323[0m
[32m  eval_f1 = 0.3758[0m
[32m  eval_mcc = 0.8233[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3558[0m
[32m  ********************[0m
[32m  Best f1:0.3758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16807:  36%|███▌      | 5/14 [00:56<01:44, 11.65s/it]epoch 4 loss 1.16151:  36%|███▌      | 5/14 [00:57<01:44, 11.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8327[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.8238[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3571[0m
[32m  ********************[0m
[32m  Best f1:0.3768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16151:  43%|████▎     | 6/14 [01:06<01:27, 11.00s/it]epoch 4 loss 1.16706:  43%|████▎     | 6/14 [01:07<01:27, 11.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8331[0m
[32m  eval_f1 = 0.3788[0m
[32m  eval_mcc = 0.8242[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3593[0m
[32m  ********************[0m
[32m  Best f1:0.3788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16706:  50%|█████     | 7/14 [01:18<01:19, 11.37s/it]epoch 4 loss 1.16215:  50%|█████     | 7/14 [01:19<01:19, 11.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8338[0m
[32m  eval_f1 = 0.3802[0m
[32m  eval_mcc = 0.8249[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.361[0m
[32m  ********************[0m
[32m  Best f1:0.3802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16215:  57%|█████▋    | 8/14 [01:32<01:12, 12.14s/it]epoch 4 loss 1.15245:  57%|█████▋    | 8/14 [01:33<01:12, 12.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8341[0m
[32m  eval_f1 = 0.3806[0m
[32m  eval_mcc = 0.8253[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3615[0m
[32m  ********************[0m
[32m  Best f1:0.3806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15245:  64%|██████▍   | 9/14 [01:41<00:56, 11.25s/it]epoch 4 loss 1.14403:  64%|██████▍   | 9/14 [01:42<00:56, 11.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8344[0m
[32m  eval_f1 = 0.3814[0m
[32m  eval_mcc = 0.8256[0m
[32m  eval_precision = 0.4738[0m
[32m  eval_recall = 0.3624[0m
[32m  ********************[0m
[32m  Best f1:0.3814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14403:  71%|███████▏  | 10/14 [01:53<00:45, 11.47s/it]epoch 4 loss 1.13238:  71%|███████▏  | 10/14 [01:54<00:45, 11.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8347[0m
[32m  eval_f1 = 0.3817[0m
[32m  eval_mcc = 0.8258[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3628[0m
[32m  ********************[0m
[32m  Best f1:0.3817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13238:  79%|███████▊  | 11/14 [02:03<00:32, 10.83s/it]epoch 4 loss 1.13243:  79%|███████▊  | 11/14 [02:03<00:32, 10.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.835[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.8262[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3634[0m
[32m  ********************[0m
[32m  Best f1:0.3821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13243:  86%|████████▌ | 12/14 [02:18<00:24, 12.09s/it]epoch 4 loss 1.13:  86%|████████▌ | 12/14 [02:18<00:24, 12.09s/it]   [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8352[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.8264[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3636[0m
[32m  ********************[0m
[32m  Best f1:0.3823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13:  93%|█████████▎| 13/14 [02:31<00:12, 12.37s/it]epoch 4 loss 1.12686:  93%|█████████▎| 13/14 [02:31<00:12, 12.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8352[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.8264[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3636[0m
[32m  ********************[0m
[32m  Best f1:0.3823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12686: 100%|██████████| 14/14 [02:40<00:00, 11.39s/it]epoch 4 loss 1.12686: 100%|██████████| 14/14 [02:40<00:00, 11.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.72it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8352[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.8264[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3636[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8205[0m
[32m  eval_f1 = 0.3078[0m
[32m  eval_mcc = 0.8116[0m
[32m  eval_precision = 0.3822[0m
[32m  eval_recall = 0.2926[0m

