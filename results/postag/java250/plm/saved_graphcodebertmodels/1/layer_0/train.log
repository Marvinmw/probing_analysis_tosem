[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.weight', 'lm_head.dense.bias', 'lm_head.bias', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.47917:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0012[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.47917:   7%|▋         | 1/14 [00:05<01:12,  5.56s/it]epoch 0 loss 5.47837:   7%|▋         | 1/14 [00:06<01:12,  5.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0024[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0004[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.47837:  14%|█▍        | 2/14 [00:11<01:06,  5.51s/it]epoch 0 loss 5.47621:  14%|█▍        | 2/14 [00:11<01:06,  5.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0031[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0[0m
[32m  eval_precision = 0.0057[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.47621:  21%|██▏       | 3/14 [00:16<00:58,  5.36s/it]epoch 0 loss 5.4697:  21%|██▏       | 3/14 [00:17<00:58,  5.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0045[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0064[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4697:  29%|██▊       | 4/14 [00:22<00:55,  5.56s/it]epoch 0 loss 5.46107:  29%|██▊       | 4/14 [00:22<00:55,  5.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0117[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0068[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46107:  36%|███▌      | 5/14 [00:29<00:54,  6.10s/it]epoch 0 loss 5.45048:  36%|███▌      | 5/14 [00:29<00:54,  6.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0268[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.0201[0m
[32m  eval_precision = 0.0122[0m
[32m  eval_recall = 0.0055[0m
[32m  ********************[0m
[32m  Best f1:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45048:  43%|████▎     | 6/14 [00:36<00:51,  6.41s/it]epoch 0 loss 5.43778:  43%|████▎     | 6/14 [00:36<00:51,  6.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0663[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0571[0m
[32m  eval_precision = 0.0156[0m
[32m  eval_recall = 0.0133[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43778:  50%|█████     | 7/14 [00:43<00:46,  6.59s/it]epoch 0 loss 5.4224:  50%|█████     | 7/14 [00:43<00:46,  6.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1182[0m
[32m  eval_f1 = 0.0243[0m
[32m  eval_mcc = 0.1061[0m
[32m  eval_precision = 0.0257[0m
[32m  eval_recall = 0.0324[0m
[32m  ********************[0m
[32m  Best f1:0.0243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4224:  57%|█████▋    | 8/14 [00:50<00:40,  6.71s/it]epoch 0 loss 5.40418:  57%|█████▋    | 8/14 [00:50<00:40,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1633[0m
[32m  eval_f1 = 0.0373[0m
[32m  eval_mcc = 0.1487[0m
[32m  eval_precision = 0.0387[0m
[32m  eval_recall = 0.0483[0m
[32m  ********************[0m
[32m  Best f1:0.0373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40418:  64%|██████▍   | 9/14 [00:57<00:33,  6.79s/it]epoch 0 loss 5.38396:  64%|██████▍   | 9/14 [00:57<00:33,  6.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2192[0m
[32m  eval_f1 = 0.0482[0m
[32m  eval_mcc = 0.2041[0m
[32m  eval_precision = 0.0489[0m
[32m  eval_recall = 0.0635[0m
[32m  ********************[0m
[32m  Best f1:0.0482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38396:  71%|███████▏  | 10/14 [01:04<00:27,  6.88s/it]epoch 0 loss 5.36009:  71%|███████▏  | 10/14 [01:04<00:27,  6.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2773[0m
[32m  eval_f1 = 0.059[0m
[32m  eval_mcc = 0.2624[0m
[32m  eval_precision = 0.0636[0m
[32m  eval_recall = 0.0769[0m
[32m  ********************[0m
[32m  Best f1:0.059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.36009:  79%|███████▊  | 11/14 [01:15<00:24,  8.20s/it]epoch 0 loss 5.33483:  79%|███████▊  | 11/14 [01:16<00:24,  8.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3304[0m
[32m  eval_f1 = 0.0733[0m
[32m  eval_mcc = 0.3164[0m
[32m  eval_precision = 0.0807[0m
[32m  eval_recall = 0.0899[0m
[32m  ********************[0m
[32m  Best f1:0.0733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.33483:  86%|████████▌ | 12/14 [01:27<00:18,  9.39s/it]epoch 0 loss 5.30757:  86%|████████▌ | 12/14 [01:28<00:18,  9.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3652[0m
[32m  eval_f1 = 0.087[0m
[32m  eval_mcc = 0.3518[0m
[32m  eval_precision = 0.0948[0m
[32m  eval_recall = 0.108[0m
[32m  ********************[0m
[32m  Best f1:0.087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30757:  93%|█████████▎| 13/14 [01:37<00:09,  9.57s/it]epoch 0 loss 5.27832:  93%|█████████▎| 13/14 [01:37<00:09,  9.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3906[0m
[32m  eval_f1 = 0.0967[0m
[32m  eval_mcc = 0.3776[0m
[32m  eval_precision = 0.1052[0m
[32m  eval_recall = 0.1166[0m
[32m  ********************[0m
[32m  Best f1:0.0967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27832: 100%|██████████| 14/14 [01:48<00:00, 10.13s/it]epoch 0 loss 5.27832: 100%|██████████| 14/14 [01:48<00:00,  7.77s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.78546:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4265[0m
[32m  eval_f1 = 0.1069[0m
[32m  eval_mcc = 0.414[0m
[32m  eval_precision = 0.1155[0m
[32m  eval_recall = 0.1277[0m
[32m  ********************[0m
[32m  Best f1:0.1069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.78546:   7%|▋         | 1/14 [00:09<02:03,  9.52s/it]epoch 1 loss 4.72827:   7%|▋         | 1/14 [00:10<02:03,  9.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4507[0m
[32m  eval_f1 = 0.1126[0m
[32m  eval_mcc = 0.4383[0m
[32m  eval_precision = 0.1253[0m
[32m  eval_recall = 0.1327[0m
[32m  ********************[0m
[32m  Best f1:0.1126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.72827:  14%|█▍        | 2/14 [00:19<01:58,  9.91s/it]epoch 1 loss 4.68698:  14%|█▍        | 2/14 [00:20<01:58,  9.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4658[0m
[32m  eval_f1 = 0.1192[0m
[32m  eval_mcc = 0.4536[0m
[32m  eval_precision = 0.1363[0m
[32m  eval_recall = 0.1391[0m
[32m  ********************[0m
[32m  Best f1:0.1192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.68698:  21%|██▏       | 3/14 [00:30<01:51, 10.17s/it]epoch 1 loss 4.63329:  21%|██▏       | 3/14 [00:30<01:51, 10.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4798[0m
[32m  eval_f1 = 0.1263[0m
[32m  eval_mcc = 0.4676[0m
[32m  eval_precision = 0.1434[0m
[32m  eval_recall = 0.1461[0m
[32m  ********************[0m
[32m  Best f1:0.1263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.63329:  29%|██▊       | 4/14 [00:39<01:37,  9.71s/it]epoch 1 loss 4.58933:  29%|██▊       | 4/14 [00:39<01:37,  9.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4913[0m
[32m  eval_f1 = 0.1292[0m
[32m  eval_mcc = 0.4792[0m
[32m  eval_precision = 0.1456[0m
[32m  eval_recall = 0.1489[0m
[32m  ********************[0m
[32m  Best f1:0.1292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.58933:  36%|███▌      | 5/14 [00:48<01:25,  9.53s/it]epoch 1 loss 4.53944:  36%|███▌      | 5/14 [00:49<01:25,  9.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4999[0m
[32m  eval_f1 = 0.1352[0m
[32m  eval_mcc = 0.4877[0m
[32m  eval_precision = 0.1511[0m
[32m  eval_recall = 0.1551[0m
[32m  ********************[0m
[32m  Best f1:0.1352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.53944:  43%|████▎     | 6/14 [00:56<01:12,  9.08s/it]epoch 1 loss 4.49673:  43%|████▎     | 6/14 [00:57<01:12,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5059[0m
[32m  eval_f1 = 0.1419[0m
[32m  eval_mcc = 0.4937[0m
[32m  eval_precision = 0.1575[0m
[32m  eval_recall = 0.1618[0m
[32m  ********************[0m
[32m  Best f1:0.1419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.49673:  50%|█████     | 7/14 [01:05<01:03,  9.13s/it]epoch 1 loss 4.44529:  50%|█████     | 7/14 [01:06<01:03,  9.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5103[0m
[32m  eval_f1 = 0.1457[0m
[32m  eval_mcc = 0.498[0m
[32m  eval_precision = 0.1621[0m
[32m  eval_recall = 0.1649[0m
[32m  ********************[0m
[32m  Best f1:0.1457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.44529:  57%|█████▋    | 8/14 [01:14<00:53,  8.86s/it]epoch 1 loss 4.39959:  57%|█████▋    | 8/14 [01:14<00:53,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5183[0m
[32m  eval_f1 = 0.1482[0m
[32m  eval_mcc = 0.5057[0m
[32m  eval_precision = 0.1636[0m
[32m  eval_recall = 0.1667[0m
[32m  ********************[0m
[32m  Best f1:0.1482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.39959:  64%|██████▍   | 9/14 [01:23<00:44,  8.99s/it]epoch 1 loss 4.35511:  64%|██████▍   | 9/14 [01:24<00:44,  8.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5223[0m
[32m  eval_f1 = 0.1505[0m
[32m  eval_mcc = 0.5098[0m
[32m  eval_precision = 0.1656[0m
[32m  eval_recall = 0.1693[0m
[32m  ********************[0m
[32m  Best f1:0.1505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.35511:  71%|███████▏  | 10/14 [01:31<00:35,  8.84s/it]epoch 1 loss 4.31317:  71%|███████▏  | 10/14 [01:32<00:35,  8.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5272[0m
[32m  eval_f1 = 0.1519[0m
[32m  eval_mcc = 0.5145[0m
[32m  eval_precision = 0.1667[0m
[32m  eval_recall = 0.1707[0m
[32m  ********************[0m
[32m  Best f1:0.1519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.31317:  79%|███████▊  | 11/14 [01:41<00:27,  9.06s/it]epoch 1 loss 4.27223:  79%|███████▊  | 11/14 [01:42<00:27,  9.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5306[0m
[32m  eval_f1 = 0.1543[0m
[32m  eval_mcc = 0.5179[0m
[32m  eval_precision = 0.1691[0m
[32m  eval_recall = 0.173[0m
[32m  ********************[0m
[32m  Best f1:0.1543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.27223:  86%|████████▌ | 12/14 [01:49<00:17,  8.87s/it]epoch 1 loss 4.23258:  86%|████████▌ | 12/14 [01:50<00:17,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5342[0m
[32m  eval_f1 = 0.1549[0m
[32m  eval_mcc = 0.5215[0m
[32m  eval_precision = 0.169[0m
[32m  eval_recall = 0.1737[0m
[32m  ********************[0m
[32m  Best f1:0.1549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.23258:  93%|█████████▎| 13/14 [01:59<00:09,  9.08s/it]epoch 1 loss 4.19353:  93%|█████████▎| 13/14 [02:00<00:09,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5385[0m
[32m  eval_f1 = 0.1588[0m
[32m  eval_mcc = 0.5255[0m
[32m  eval_precision = 0.1732[0m
[32m  eval_recall = 0.1774[0m
[32m  ********************[0m
[32m  Best f1:0.1588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.19353: 100%|██████████| 14/14 [02:08<00:00,  8.97s/it]epoch 1 loss 4.19353: 100%|██████████| 14/14 [02:08<00:00,  9.16s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 3.6298:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5438[0m
[32m  eval_f1 = 0.1593[0m
[32m  eval_mcc = 0.5305[0m
[32m  eval_precision = 0.1732[0m
[32m  eval_recall = 0.1775[0m
[32m  ********************[0m
[32m  Best f1:0.1593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.6298:   7%|▋         | 1/14 [00:06<01:30,  6.96s/it]epoch 2 loss 3.609:   7%|▋         | 1/14 [00:07<01:30,  6.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5502[0m
[32m  eval_f1 = 0.1627[0m
[32m  eval_mcc = 0.5365[0m
[32m  eval_precision = 0.177[0m
[32m  eval_recall = 0.1806[0m
[32m  ********************[0m
[32m  Best f1:0.1627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.609:  14%|█▍        | 2/14 [00:16<01:40,  8.34s/it]epoch 2 loss 3.56591:  14%|█▍        | 2/14 [00:17<01:40,  8.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5542[0m
[32m  eval_f1 = 0.1642[0m
[32m  eval_mcc = 0.5404[0m
[32m  eval_precision = 0.1779[0m
[32m  eval_recall = 0.1822[0m
[32m  ********************[0m
[32m  Best f1:0.1642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.56591:  21%|██▏       | 3/14 [00:26<01:42,  9.32s/it]epoch 2 loss 3.53366:  21%|██▏       | 3/14 [00:27<01:42,  9.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5586[0m
[32m  eval_f1 = 0.1636[0m
[32m  eval_mcc = 0.5444[0m
[32m  eval_precision = 0.1769[0m
[32m  eval_recall = 0.1816[0m
[32m  ********************[0m
[32m  Best MCC:0.5444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.53366:  29%|██▊       | 4/14 [00:34<01:25,  8.55s/it]epoch 2 loss 3.50007:  29%|██▊       | 4/14 [00:34<01:25,  8.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.565[0m
[32m  eval_f1 = 0.1653[0m
[32m  eval_mcc = 0.5506[0m
[32m  eval_precision = 0.1787[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.1653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.50007:  36%|███▌      | 5/14 [00:46<01:28,  9.86s/it]epoch 2 loss 3.45441:  36%|███▌      | 5/14 [00:47<01:28,  9.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5692[0m
[32m  eval_f1 = 0.1669[0m
[32m  eval_mcc = 0.5543[0m
[32m  eval_precision = 0.1803[0m
[32m  eval_recall = 0.1845[0m
[32m  ********************[0m
[32m  Best f1:0.1669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.45441:  43%|████▎     | 6/14 [00:55<01:17,  9.71s/it]epoch 2 loss 3.41565:  43%|████▎     | 6/14 [00:56<01:17,  9.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5726[0m
[32m  eval_f1 = 0.1679[0m
[32m  eval_mcc = 0.5574[0m
[32m  eval_precision = 0.1811[0m
[32m  eval_recall = 0.1855[0m
[32m  ********************[0m
[32m  Best f1:0.1679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.41565:  50%|█████     | 7/14 [01:05<01:08,  9.78s/it]epoch 2 loss 3.38718:  50%|█████     | 7/14 [01:06<01:08,  9.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5752[0m
[32m  eval_f1 = 0.1702[0m
[32m  eval_mcc = 0.56[0m
[32m  eval_precision = 0.1835[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.56[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.38718:  57%|█████▋    | 8/14 [01:15<00:58,  9.69s/it]epoch 2 loss 3.36154:  57%|█████▋    | 8/14 [01:15<00:58,  9.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.578[0m
[32m  eval_f1 = 0.1731[0m
[32m  eval_mcc = 0.5626[0m
[32m  eval_precision = 0.1858[0m
[32m  eval_recall = 0.1909[0m
[32m  ********************[0m
[32m  Best f1:0.1731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.36154:  64%|██████▍   | 9/14 [01:24<00:47,  9.58s/it]epoch 2 loss 3.33519:  64%|██████▍   | 9/14 [01:25<00:47,  9.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5815[0m
[32m  eval_f1 = 0.1743[0m
[32m  eval_mcc = 0.5659[0m
[32m  eval_precision = 0.1869[0m
[32m  eval_recall = 0.1919[0m
[32m  ********************[0m
[32m  Best f1:0.1743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.33519:  71%|███████▏  | 10/14 [01:32<00:36,  9.16s/it]epoch 2 loss 3.30612:  71%|███████▏  | 10/14 [01:33<00:36,  9.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5839[0m
[32m  eval_f1 = 0.1754[0m
[32m  eval_mcc = 0.5681[0m
[32m  eval_precision = 0.1878[0m
[32m  eval_recall = 0.193[0m
[32m  ********************[0m
[32m  Best f1:0.1754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.30612:  79%|███████▊  | 11/14 [01:41<00:27,  9.11s/it]epoch 2 loss 3.2881:  79%|███████▊  | 11/14 [01:42<00:27,  9.11s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5878[0m
[32m  eval_f1 = 0.1754[0m
[32m  eval_mcc = 0.5717[0m
[32m  eval_precision = 0.1875[0m
[32m  eval_recall = 0.1931[0m
[32m  ********************[0m
[32m  Best f1:0.1754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.2881:  86%|████████▌ | 12/14 [01:49<00:17,  8.83s/it]epoch 2 loss 3.26367:  86%|████████▌ | 12/14 [01:50<00:17,  8.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5894[0m
[32m  eval_f1 = 0.1786[0m
[32m  eval_mcc = 0.5732[0m
[32m  eval_precision = 0.191[0m
[32m  eval_recall = 0.1965[0m
[32m  ********************[0m
[32m  Best f1:0.1786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.26367:  93%|█████████▎| 13/14 [01:59<00:08,  8.93s/it]epoch 2 loss 3.24322:  93%|█████████▎| 13/14 [01:59<00:08,  8.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.591[0m
[32m  eval_f1 = 0.1789[0m
[32m  eval_mcc = 0.5748[0m
[32m  eval_precision = 0.1911[0m
[32m  eval_recall = 0.1968[0m
[32m  ********************[0m
[32m  Best f1:0.1789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 3.24322: 100%|██████████| 14/14 [02:08<00:00,  9.14s/it]epoch 2 loss 3.24322: 100%|██████████| 14/14 [02:08<00:00,  9.19s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 2.89775:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5956[0m
[32m  eval_f1 = 0.1805[0m
[32m  eval_mcc = 0.5791[0m
[32m  eval_precision = 0.193[0m
[32m  eval_recall = 0.1982[0m
[32m  ********************[0m
[32m  Best f1:0.1805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.89775:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it]epoch 3 loss 2.86248:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.597[0m
[32m  eval_f1 = 0.182[0m
[32m  eval_mcc = 0.5803[0m
[32m  eval_precision = 0.1944[0m
[32m  eval_recall = 0.1999[0m
[32m  ********************[0m
[32m  Best f1:0.182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.86248:  14%|█▍        | 2/14 [00:17<01:41,  8.43s/it]epoch 3 loss 2.87571:  14%|█▍        | 2/14 [00:17<01:41,  8.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6007[0m
[32m  eval_f1 = 0.1843[0m
[32m  eval_mcc = 0.5838[0m
[32m  eval_precision = 0.1968[0m
[32m  eval_recall = 0.2022[0m
[32m  ********************[0m
[32m  Best f1:0.1843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.87571:  21%|██▏       | 3/14 [00:26<01:37,  8.83s/it]epoch 3 loss 2.85662:  21%|██▏       | 3/14 [00:27<01:37,  8.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6016[0m
[32m  eval_f1 = 0.1843[0m
[32m  eval_mcc = 0.5847[0m
[32m  eval_precision = 0.1967[0m
[32m  eval_recall = 0.2023[0m
[32m  ********************[0m
[32m  Best MCC:0.5847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.85662:  29%|██▊       | 4/14 [00:32<01:19,  7.92s/it]epoch 3 loss 2.84116:  29%|██▊       | 4/14 [00:33<01:19,  7.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6033[0m
[32m  eval_f1 = 0.1849[0m
[32m  eval_mcc = 0.5862[0m
[32m  eval_precision = 0.1964[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.1849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.84116:  36%|███▌      | 5/14 [00:44<01:22,  9.14s/it]epoch 3 loss 2.83807:  36%|███▌      | 5/14 [00:44<01:22,  9.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6038[0m
[32m  eval_f1 = 0.1859[0m
[32m  eval_mcc = 0.5867[0m
[32m  eval_precision = 0.1974[0m
[32m  eval_recall = 0.2042[0m
[32m  ********************[0m
[32m  Best f1:0.1859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.83807:  43%|████▎     | 6/14 [00:50<01:06,  8.28s/it]epoch 3 loss 2.82474:  43%|████▎     | 6/14 [00:51<01:06,  8.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6065[0m
[32m  eval_f1 = 0.1875[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.1992[0m
[32m  eval_recall = 0.2054[0m
[32m  ********************[0m
[32m  Best f1:0.1875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.82474:  50%|█████     | 7/14 [00:57<00:54,  7.84s/it]epoch 3 loss 2.80417:  50%|█████     | 7/14 [00:58<00:54,  7.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6078[0m
[32m  eval_f1 = 0.1878[0m
[32m  eval_mcc = 0.5905[0m
[32m  eval_precision = 0.1997[0m
[32m  eval_recall = 0.2058[0m
[32m  ********************[0m
[32m  Best f1:0.1878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.80417:  57%|█████▋    | 8/14 [01:07<00:51,  8.58s/it]epoch 3 loss 2.79475:  57%|█████▋    | 8/14 [01:08<00:51,  8.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6099[0m
[32m  eval_f1 = 0.188[0m
[32m  eval_mcc = 0.5924[0m
[32m  eval_precision = 0.1997[0m
[32m  eval_recall = 0.2058[0m
[32m  ********************[0m
[32m  Best f1:0.188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.79475:  64%|██████▍   | 9/14 [01:20<00:48,  9.72s/it]epoch 3 loss 2.78073:  64%|██████▍   | 9/14 [01:20<00:48,  9.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6116[0m
[32m  eval_f1 = 0.1902[0m
[32m  eval_mcc = 0.5941[0m
[32m  eval_precision = 0.202[0m
[32m  eval_recall = 0.2081[0m
[32m  ********************[0m
[32m  Best f1:0.1902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.78073:  71%|███████▏  | 10/14 [01:30<00:40, 10.06s/it]epoch 3 loss 2.76857:  71%|███████▏  | 10/14 [01:31<00:40, 10.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.1925[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.2046[0m
[32m  eval_recall = 0.2105[0m
[32m  ********************[0m
[32m  Best f1:0.1925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.76857:  79%|███████▊  | 11/14 [01:49<00:38, 12.69s/it]epoch 3 loss 2.75825:  79%|███████▊  | 11/14 [01:50<00:38, 12.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6142[0m
[32m  eval_f1 = 0.1926[0m
[32m  eval_mcc = 0.5965[0m
[32m  eval_precision = 0.2049[0m
[32m  eval_recall = 0.2106[0m
[32m  ********************[0m
[32m  Best f1:0.1926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.75825:  86%|████████▌ | 12/14 [01:59<00:23, 11.87s/it]epoch 3 loss 2.7538:  86%|████████▌ | 12/14 [02:00<00:23, 11.87s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6161[0m
[32m  eval_f1 = 0.1928[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.2049[0m
[32m  eval_recall = 0.2105[0m
[32m  ********************[0m
[32m  Best f1:0.1928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.7538:  93%|█████████▎| 13/14 [02:13<00:12, 12.54s/it]epoch 3 loss 2.74355:  93%|█████████▎| 13/14 [02:14<00:12, 12.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6167[0m
[32m  eval_f1 = 0.1939[0m
[32m  eval_mcc = 0.5988[0m
[32m  eval_precision = 0.2059[0m
[32m  eval_recall = 0.2117[0m
[32m  ********************[0m
[32m  Best f1:0.1939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 2.74355: 100%|██████████| 14/14 [02:22<00:00, 11.40s/it]epoch 3 loss 2.74355: 100%|██████████| 14/14 [02:22<00:00, 10.18s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 2.52784:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6178[0m
[32m  eval_f1 = 0.1953[0m
[32m  eval_mcc = 0.5999[0m
[32m  eval_precision = 0.2074[0m
[32m  eval_recall = 0.2131[0m
[32m  ********************[0m
[32m  Best f1:0.1953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.52784:   7%|▋         | 1/14 [00:09<02:02,  9.46s/it]epoch 4 loss 2.53787:   7%|▋         | 1/14 [00:10<02:02,  9.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.1952[0m
[32m  eval_mcc = 0.6002[0m
[32m  eval_precision = 0.2072[0m
[32m  eval_recall = 0.213[0m
[32m  ********************[0m
[32m  Best MCC:0.6002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53787:  14%|█▍        | 2/14 [00:14<01:25,  7.13s/it]epoch 4 loss 2.56365:  14%|█▍        | 2/14 [00:15<01:25,  7.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.622[0m
[32m  eval_f1 = 0.1955[0m
[32m  eval_mcc = 0.604[0m
[32m  eval_precision = 0.2075[0m
[32m  eval_recall = 0.2131[0m
[32m  ********************[0m
[32m  Best f1:0.1955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56365:  21%|██▏       | 3/14 [00:26<01:42,  9.29s/it]epoch 4 loss 2.56709:  21%|██▏       | 3/14 [00:27<01:42,  9.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6225[0m
[32m  eval_f1 = 0.1956[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.2077[0m
[32m  eval_recall = 0.2131[0m
[32m  ********************[0m
[32m  Best f1:0.1956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56709:  29%|██▊       | 4/14 [00:34<01:27,  8.79s/it]epoch 4 loss 2.56687:  29%|██▊       | 4/14 [00:35<01:27,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.1966[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.2088[0m
[32m  eval_recall = 0.2142[0m
[32m  ********************[0m
[32m  Best f1:0.1966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56687:  36%|███▌      | 5/14 [00:47<01:31, 10.13s/it]epoch 4 loss 2.56008:  36%|███▌      | 5/14 [00:48<01:31, 10.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.623[0m
[32m  eval_f1 = 0.1978[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.2101[0m
[32m  eval_recall = 0.2155[0m
[32m  ********************[0m
[32m  Best f1:0.1978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56008:  43%|████▎     | 6/14 [00:58<01:25, 10.65s/it]epoch 4 loss 2.56466:  43%|████▎     | 6/14 [00:59<01:25, 10.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.1979[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.2099[0m
[32m  eval_recall = 0.2155[0m
[32m  ********************[0m
[32m  Best f1:0.1979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.56466:  50%|█████     | 7/14 [01:07<01:08,  9.81s/it]epoch 4 loss 2.55338:  50%|█████     | 7/14 [01:07<01:08,  9.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6245[0m
[32m  eval_f1 = 0.1982[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.2108[0m
[32m  eval_recall = 0.2156[0m
[32m  ********************[0m
[32m  Best f1:0.1982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.55338:  57%|█████▋    | 8/14 [01:16<00:58,  9.68s/it]epoch 4 loss 2.54891:  57%|█████▋    | 8/14 [01:17<00:58,  9.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.1982[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.2109[0m
[32m  eval_recall = 0.2156[0m
[32m  ********************[0m
[32m  Best f1:0.1982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.54891:  64%|██████▍   | 9/14 [01:25<00:46,  9.38s/it]epoch 4 loss 2.5436:  64%|██████▍   | 9/14 [01:25<00:46,  9.38s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.1982[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.211[0m
[32m  eval_recall = 0.2156[0m
[32m  ********************[0m
[32m  Best f1:0.1982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.5436:  71%|███████▏  | 10/14 [01:32<00:34,  8.60s/it]epoch 4 loss 2.54138:  71%|███████▏  | 10/14 [01:32<00:34,  8.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.1983[0m
[32m  eval_mcc = 0.6077[0m
[32m  eval_precision = 0.2113[0m
[32m  eval_recall = 0.2157[0m
[32m  ********************[0m
[32m  Best f1:0.1983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.54138:  79%|███████▊  | 11/14 [01:38<00:24,  8.08s/it]epoch 4 loss 2.53945:  79%|███████▊  | 11/14 [01:39<00:24,  8.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.1984[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.2113[0m
[32m  eval_recall = 0.2157[0m
[32m  ********************[0m
[32m  Best f1:0.1984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53945:  86%|████████▌ | 12/14 [01:45<00:15,  7.72s/it]epoch 4 loss 2.53734:  86%|████████▌ | 12/14 [01:46<00:15,  7.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.1984[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.2113[0m
[32m  eval_recall = 0.2157[0m
[32m  ********************[0m
[32m  Best f1:0.1984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53734:  93%|█████████▎| 13/14 [01:52<00:07,  7.45s/it]epoch 4 loss 2.53614:  93%|█████████▎| 13/14 [01:53<00:07,  7.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.1996[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.2126[0m
[32m  eval_recall = 0.217[0m
[32m  ********************[0m
[32m  Best f1:0.1996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 2.53614: 100%|██████████| 14/14 [01:58<00:00,  7.11s/it]epoch 4 loss 2.53614: 100%|██████████| 14/14 [01:58<00:00,  8.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.67it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.1996[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.2126[0m
[32m  eval_recall = 0.217[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6116[0m
[32m  eval_f1 = 0.1732[0m
[32m  eval_mcc = 0.5939[0m
[32m  eval_precision = 0.1801[0m
[32m  eval_recall = 0.1884[0m

