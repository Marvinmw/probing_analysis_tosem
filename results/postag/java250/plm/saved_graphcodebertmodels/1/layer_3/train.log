[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.bias', 'lm_head.dense.bias', 'lm_head.decoder.bias', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.54419:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0041[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0006[0m
[32m  eval_precision = 0.0018[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54419:   7%|▋         | 1/14 [00:06<01:23,  6.39s/it]epoch 0 loss 5.54438:   7%|▋         | 1/14 [00:07<01:23,  6.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0044[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0018[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54438:  14%|█▍        | 2/14 [00:16<01:45,  8.75s/it]epoch 0 loss 5.54137:  14%|█▍        | 2/14 [00:17<01:45,  8.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0053[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = 0.0013[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54137:  21%|██▏       | 3/14 [00:24<01:32,  8.40s/it]epoch 0 loss 5.53364:  21%|██▏       | 3/14 [00:25<01:32,  8.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0068[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0021[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53364:  29%|██▊       | 4/14 [00:31<01:19,  7.93s/it]epoch 0 loss 5.51923:  29%|██▊       | 4/14 [00:32<01:19,  7.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0092[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0034[0m
[32m  eval_precision = 0.0078[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51923:  36%|███▌      | 5/14 [00:38<01:06,  7.35s/it]epoch 0 loss 5.50461:  36%|███▌      | 5/14 [00:39<01:06,  7.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0174[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0101[0m
[32m  eval_precision = 0.0115[0m
[32m  eval_recall = 0.0069[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50461:  43%|████▎     | 6/14 [00:44<00:56,  7.01s/it]epoch 0 loss 5.48369:  43%|████▎     | 6/14 [00:45<00:56,  7.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0255[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.016[0m
[32m  eval_precision = 0.0182[0m
[32m  eval_recall = 0.01[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48369:  50%|█████     | 7/14 [00:51<00:47,  6.80s/it]epoch 0 loss 5.459:  50%|█████     | 7/14 [00:51<00:47,  6.80s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0425[0m
[32m  eval_f1 = 0.0119[0m
[32m  eval_mcc = 0.0305[0m
[32m  eval_precision = 0.0281[0m
[32m  eval_recall = 0.0172[0m
[32m  ********************[0m
[32m  Best f1:0.0119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.459:  57%|█████▋    | 8/14 [01:01<00:48,  8.07s/it]epoch 0 loss 5.42967:  57%|█████▋    | 8/14 [01:02<00:48,  8.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0755[0m
[32m  eval_f1 = 0.019[0m
[32m  eval_mcc = 0.0614[0m
[32m  eval_precision = 0.0411[0m
[32m  eval_recall = 0.0268[0m
[32m  ********************[0m
[32m  Best f1:0.019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.42967:  64%|██████▍   | 9/14 [01:14<00:47,  9.51s/it]epoch 0 loss 5.39769:  64%|██████▍   | 9/14 [01:15<00:47,  9.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1227[0m
[32m  eval_f1 = 0.0281[0m
[32m  eval_mcc = 0.1076[0m
[32m  eval_precision = 0.056[0m
[32m  eval_recall = 0.0375[0m
[32m  ********************[0m
[32m  Best f1:0.0281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39769:  71%|███████▏  | 10/14 [01:24<00:39,  9.81s/it]epoch 0 loss 5.3607:  71%|███████▏  | 10/14 [01:25<00:39,  9.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2097[0m
[32m  eval_f1 = 0.0536[0m
[32m  eval_mcc = 0.1974[0m
[32m  eval_precision = 0.081[0m
[32m  eval_recall = 0.0648[0m
[32m  ********************[0m
[32m  Best f1:0.0536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3607:  79%|███████▊  | 11/14 [01:33<00:28,  9.42s/it]epoch 0 loss 5.32102:  79%|███████▊  | 11/14 [01:34<00:28,  9.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2886[0m
[32m  eval_f1 = 0.0765[0m
[32m  eval_mcc = 0.2787[0m
[32m  eval_precision = 0.1159[0m
[32m  eval_recall = 0.0885[0m
[32m  ********************[0m
[32m  Best f1:0.0765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.32102:  86%|████████▌ | 12/14 [01:43<00:19,  9.70s/it]epoch 0 loss 5.27737:  86%|████████▌ | 12/14 [01:44<00:19,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3708[0m
[32m  eval_f1 = 0.1027[0m
[32m  eval_mcc = 0.3627[0m
[32m  eval_precision = 0.154[0m
[32m  eval_recall = 0.1125[0m
[32m  ********************[0m
[32m  Best f1:0.1027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27737:  93%|█████████▎| 13/14 [01:56<00:10, 10.52s/it]epoch 0 loss 5.22963:  93%|█████████▎| 13/14 [01:56<00:10, 10.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.447[0m
[32m  eval_f1 = 0.136[0m
[32m  eval_mcc = 0.4395[0m
[32m  eval_precision = 0.1899[0m
[32m  eval_recall = 0.145[0m
[32m  ********************[0m
[32m  Best f1:0.136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22963: 100%|██████████| 14/14 [02:09<00:00, 11.28s/it]epoch 0 loss 5.22963: 100%|██████████| 14/14 [02:09<00:00,  9.24s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.45585:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5077[0m
[32m  eval_f1 = 0.1724[0m
[32m  eval_mcc = 0.5[0m
[32m  eval_precision = 0.2341[0m
[32m  eval_recall = 0.1792[0m
[32m  ********************[0m
[32m  Best f1:0.1724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.45585:   7%|▋         | 1/14 [00:08<01:55,  8.90s/it]epoch 1 loss 4.37745:   7%|▋         | 1/14 [00:09<01:55,  8.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5584[0m
[32m  eval_f1 = 0.2028[0m
[32m  eval_mcc = 0.5504[0m
[32m  eval_precision = 0.2696[0m
[32m  eval_recall = 0.2082[0m
[32m  ********************[0m
[32m  Best f1:0.2028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.37745:  14%|█▍        | 2/14 [00:19<01:58,  9.85s/it]epoch 1 loss 4.30924:  14%|█▍        | 2/14 [00:20<01:58,  9.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5965[0m
[32m  eval_f1 = 0.2256[0m
[32m  eval_mcc = 0.5878[0m
[32m  eval_precision = 0.2982[0m
[32m  eval_recall = 0.2288[0m
[32m  ********************[0m
[32m  Best f1:0.2256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.30924:  21%|██▏       | 3/14 [00:30<01:55, 10.47s/it]epoch 1 loss 4.22875:  21%|██▏       | 3/14 [00:31<01:55, 10.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.2399[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.3199[0m
[32m  eval_recall = 0.2428[0m
[32m  ********************[0m
[32m  Best f1:0.2399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.22875:  29%|██▊       | 4/14 [00:40<01:42, 10.27s/it]epoch 1 loss 4.16106:  29%|██▊       | 4/14 [00:41<01:42, 10.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.2595[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.343[0m
[32m  eval_recall = 0.2621[0m
[32m  ********************[0m
[32m  Best f1:0.2595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.16106:  36%|███▌      | 5/14 [00:54<01:43, 11.50s/it]epoch 1 loss 4.08671:  36%|███▌      | 5/14 [00:55<01:43, 11.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.67[0m
[32m  eval_f1 = 0.2685[0m
[32m  eval_mcc = 0.66[0m
[32m  eval_precision = 0.3494[0m
[32m  eval_recall = 0.2699[0m
[32m  ********************[0m
[32m  Best f1:0.2685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.66[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.08671:  43%|████▎     | 6/14 [01:03<01:26, 10.81s/it]epoch 1 loss 4.01901:  43%|████▎     | 6/14 [01:04<01:26, 10.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6826[0m
[32m  eval_f1 = 0.2771[0m
[32m  eval_mcc = 0.6723[0m
[32m  eval_precision = 0.3577[0m
[32m  eval_recall = 0.2772[0m
[32m  ********************[0m
[32m  Best f1:0.2771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.01901:  50%|█████     | 7/14 [01:15<01:16, 10.98s/it]epoch 1 loss 3.9449:  50%|█████     | 7/14 [01:15<01:16, 10.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6954[0m
[32m  eval_f1 = 0.2837[0m
[32m  eval_mcc = 0.6851[0m
[32m  eval_precision = 0.3617[0m
[32m  eval_recall = 0.2826[0m
[32m  ********************[0m
[32m  Best f1:0.2837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.9449:  57%|█████▋    | 8/14 [01:24<01:02, 10.35s/it]epoch 1 loss 3.87683:  57%|█████▋    | 8/14 [01:25<01:02, 10.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7085[0m
[32m  eval_f1 = 0.2905[0m
[32m  eval_mcc = 0.698[0m
[32m  eval_precision = 0.3745[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.2905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.87683:  64%|██████▍   | 9/14 [01:35<00:53, 10.77s/it]epoch 1 loss 3.81124:  64%|██████▍   | 9/14 [01:36<00:53, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7203[0m
[32m  eval_f1 = 0.3008[0m
[32m  eval_mcc = 0.7099[0m
[32m  eval_precision = 0.3818[0m
[32m  eval_recall = 0.2991[0m
[32m  ********************[0m
[32m  Best f1:0.3008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.81124:  71%|███████▏  | 10/14 [01:46<00:42, 10.71s/it]epoch 1 loss 3.75034:  71%|███████▏  | 10/14 [01:47<00:42, 10.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7292[0m
[32m  eval_f1 = 0.3057[0m
[32m  eval_mcc = 0.7187[0m
[32m  eval_precision = 0.3746[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.75034:  79%|███████▊  | 11/14 [01:58<00:33, 11.10s/it]epoch 1 loss 3.69054:  79%|███████▊  | 11/14 [01:59<00:33, 11.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7363[0m
[32m  eval_f1 = 0.3103[0m
[32m  eval_mcc = 0.726[0m
[32m  eval_precision = 0.3855[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.69054:  86%|████████▌ | 12/14 [02:04<00:19,  9.66s/it]epoch 1 loss 3.6325:  86%|████████▌ | 12/14 [02:05<00:19,  9.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7434[0m
[32m  eval_f1 = 0.315[0m
[32m  eval_mcc = 0.7332[0m
[32m  eval_precision = 0.388[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.6325:  93%|█████████▎| 13/14 [02:15<00:09,  9.95s/it]epoch 1 loss 3.57548:  93%|█████████▎| 13/14 [02:15<00:09,  9.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7492[0m
[32m  eval_f1 = 0.32[0m
[32m  eval_mcc = 0.739[0m
[32m  eval_precision = 0.3926[0m
[32m  eval_recall = 0.3141[0m
[32m  ********************[0m
[32m  Best f1:0.32[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.57548: 100%|██████████| 14/14 [02:27<00:00, 10.48s/it]epoch 1 loss 3.57548: 100%|██████████| 14/14 [02:27<00:00, 10.50s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.75842:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7547[0m
[32m  eval_f1 = 0.323[0m
[32m  eval_mcc = 0.7446[0m
[32m  eval_precision = 0.395[0m
[32m  eval_recall = 0.3161[0m
[32m  ********************[0m
[32m  Best f1:0.323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.75842:   7%|▋         | 1/14 [00:10<02:12, 10.19s/it]epoch 2 loss 2.72648:   7%|▋         | 1/14 [00:10<02:12, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7595[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.7495[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.3204[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.72648:  14%|█▍        | 2/14 [00:18<01:50,  9.17s/it]epoch 2 loss 2.67341:  14%|█▍        | 2/14 [00:19<01:50,  9.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7643[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.7544[0m
[32m  eval_precision = 0.4023[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best f1:0.3324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.67341:  21%|██▏       | 3/14 [00:27<01:38,  8.92s/it]epoch 2 loss 2.63087:  21%|██▏       | 3/14 [00:28<01:38,  8.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7687[0m
[32m  eval_f1 = 0.3346[0m
[32m  eval_mcc = 0.7589[0m
[32m  eval_precision = 0.403[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.63087:  29%|██▊       | 4/14 [00:39<01:42, 10.26s/it]epoch 2 loss 2.58164:  29%|██▊       | 4/14 [00:40<01:42, 10.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7737[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.764[0m
[32m  eval_precision = 0.413[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.58164:  36%|███▌      | 5/14 [00:52<01:40, 11.13s/it]epoch 2 loss 2.52625:  36%|███▌      | 5/14 [00:53<01:40, 11.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7784[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.7688[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.3356[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.52625:  43%|████▎     | 6/14 [01:01<01:22, 10.34s/it]epoch 2 loss 2.47688:  43%|████▎     | 6/14 [01:01<01:22, 10.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7811[0m
[32m  eval_f1 = 0.3495[0m
[32m  eval_mcc = 0.7716[0m
[32m  eval_precision = 0.4143[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.47688:  50%|█████     | 7/14 [01:08<01:06,  9.55s/it]epoch 2 loss 2.43671:  50%|█████     | 7/14 [01:09<01:06,  9.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7841[0m
[32m  eval_f1 = 0.3515[0m
[32m  eval_mcc = 0.7746[0m
[32m  eval_precision = 0.415[0m
[32m  eval_recall = 0.3412[0m
[32m  ********************[0m
[32m  Best f1:0.3515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.43671:  57%|█████▋    | 8/14 [01:20<01:01, 10.26s/it]epoch 2 loss 2.40383:  57%|█████▋    | 8/14 [01:21<01:01, 10.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7864[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.777[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.40383:  64%|██████▍   | 9/14 [01:31<00:52, 10.43s/it]epoch 2 loss 2.3699:  64%|██████▍   | 9/14 [01:32<00:52, 10.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7891[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.7797[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.3435[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3699:  71%|███████▏  | 10/14 [01:44<00:45, 11.29s/it]epoch 2 loss 2.33105:  71%|███████▏  | 10/14 [01:45<00:45, 11.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7915[0m
[32m  eval_f1 = 0.3539[0m
[32m  eval_mcc = 0.7823[0m
[32m  eval_precision = 0.4158[0m
[32m  eval_recall = 0.3446[0m
[32m  ********************[0m
[32m  Best f1:0.3539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.33105:  79%|███████▊  | 11/14 [01:53<00:31, 10.37s/it]epoch 2 loss 2.30699:  79%|███████▊  | 11/14 [01:53<00:31, 10.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7937[0m
[32m  eval_f1 = 0.3538[0m
[32m  eval_mcc = 0.7845[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.3452[0m
[32m  ********************[0m
[32m  Best MCC:0.7845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.30699:  86%|████████▌ | 12/14 [01:59<00:18,  9.11s/it]epoch 2 loss 2.27458:  86%|████████▌ | 12/14 [02:00<00:18,  9.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7959[0m
[32m  eval_f1 = 0.3544[0m
[32m  eval_mcc = 0.7867[0m
[32m  eval_precision = 0.4158[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.27458:  93%|█████████▎| 13/14 [02:07<00:08,  8.87s/it]epoch 2 loss 2.24895:  93%|█████████▎| 13/14 [02:08<00:08,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7977[0m
[32m  eval_f1 = 0.3549[0m
[32m  eval_mcc = 0.7885[0m
[32m  eval_precision = 0.4159[0m
[32m  eval_recall = 0.3467[0m
[32m  ********************[0m
[32m  Best f1:0.3549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.24895: 100%|██████████| 14/14 [02:17<00:00,  9.23s/it]epoch 2 loss 2.24895: 100%|██████████| 14/14 [02:17<00:00,  9.83s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.80707:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7992[0m
[32m  eval_f1 = 0.3558[0m
[32m  eval_mcc = 0.7901[0m
[32m  eval_precision = 0.4165[0m
[32m  eval_recall = 0.3475[0m
[32m  ********************[0m
[32m  Best f1:0.3558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.80707:   7%|▋         | 1/14 [00:10<02:11, 10.13s/it]epoch 3 loss 1.77434:   7%|▋         | 1/14 [00:11<02:11, 10.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.47it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8009[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.7918[0m
[32m  eval_precision = 0.4171[0m
[32m  eval_recall = 0.3481[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.77434:  14%|█▍        | 2/14 [00:21<02:12, 11.02s/it]epoch 3 loss 1.78645:  14%|█▍        | 2/14 [00:22<02:12, 11.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.803[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.794[0m
[32m  eval_precision = 0.4178[0m
[32m  eval_recall = 0.3488[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.78645:  21%|██▏       | 3/14 [00:31<01:52, 10.23s/it]epoch 3 loss 1.76544:  21%|██▏       | 3/14 [00:31<01:52, 10.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.806[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.7971[0m
[32m  eval_precision = 0.4193[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.3589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.76544:  29%|██▊       | 4/14 [00:43<01:49, 10.94s/it]epoch 3 loss 1.74279:  29%|██▊       | 4/14 [00:44<01:49, 10.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.809[0m
[32m  eval_f1 = 0.3604[0m
[32m  eval_mcc = 0.8002[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.74279:  36%|███▌      | 5/14 [00:54<01:40, 11.21s/it]epoch 3 loss 1.73684:  36%|███▌      | 5/14 [00:55<01:40, 11.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.811[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.8023[0m
[32m  eval_precision = 0.4221[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best f1:0.3618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.73684:  43%|████▎     | 6/14 [01:05<01:27, 10.88s/it]epoch 3 loss 1.72312:  43%|████▎     | 6/14 [01:05<01:27, 10.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8125[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.8039[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.3517[0m
[32m  ********************[0m
[32m  Best f1:0.362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.72312:  50%|█████     | 7/14 [01:17<01:19, 11.40s/it]epoch 3 loss 1.70104:  50%|█████     | 7/14 [01:18<01:19, 11.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8134[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.8047[0m
[32m  eval_precision = 0.422[0m
[32m  eval_recall = 0.3518[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.70104:  57%|█████▋    | 8/14 [01:25<01:02, 10.46s/it]epoch 3 loss 1.68949:  57%|█████▋    | 8/14 [01:26<01:02, 10.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8142[0m
[32m  eval_f1 = 0.3625[0m
[32m  eval_mcc = 0.8055[0m
[32m  eval_precision = 0.4305[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.3625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.68949:  64%|██████▍   | 9/14 [01:33<00:47,  9.45s/it]epoch 3 loss 1.67086:  64%|██████▍   | 9/14 [01:33<00:47,  9.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8157[0m
[32m  eval_f1 = 0.3643[0m
[32m  eval_mcc = 0.8071[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3536[0m
[32m  ********************[0m
[32m  Best f1:0.3643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.67086:  71%|███████▏  | 10/14 [01:40<00:35,  8.86s/it]epoch 3 loss 1.65576:  71%|███████▏  | 10/14 [01:41<00:35,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8165[0m
[32m  eval_f1 = 0.3644[0m
[32m  eval_mcc = 0.8079[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.354[0m
[32m  ********************[0m
[32m  Best f1:0.3644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.65576:  79%|███████▊  | 11/14 [01:53<00:30, 10.11s/it]epoch 3 loss 1.64314:  79%|███████▊  | 11/14 [01:54<00:30, 10.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8177[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.8091[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3547[0m
[32m  ********************[0m
[32m  Best f1:0.3655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.64314:  86%|████████▌ | 12/14 [02:07<00:22, 11.17s/it]epoch 3 loss 1.63711:  86%|████████▌ | 12/14 [02:08<00:22, 11.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8183[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.8097[0m
[32m  eval_precision = 0.4483[0m
[32m  eval_recall = 0.3555[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.63711:  93%|█████████▎| 13/14 [02:20<00:11, 11.86s/it]epoch 3 loss 1.62511:  93%|█████████▎| 13/14 [02:21<00:11, 11.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8193[0m
[32m  eval_f1 = 0.368[0m
[32m  eval_mcc = 0.8107[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3566[0m
[32m  ********************[0m
[32m  Best f1:0.368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.62511: 100%|██████████| 14/14 [02:33<00:00, 12.15s/it]epoch 3 loss 1.62511: 100%|██████████| 14/14 [02:33<00:00, 10.96s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.38819:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8204[0m
[32m  eval_f1 = 0.3703[0m
[32m  eval_mcc = 0.8119[0m
[32m  eval_precision = 0.4487[0m
[32m  eval_recall = 0.3582[0m
[32m  ********************[0m
[32m  Best f1:0.3703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38819:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it]epoch 4 loss 1.3989:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.821[0m
[32m  eval_f1 = 0.3708[0m
[32m  eval_mcc = 0.8125[0m
[32m  eval_precision = 0.4488[0m
[32m  eval_recall = 0.3587[0m
[32m  ********************[0m
[32m  Best f1:0.3708[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3989:  14%|█▍        | 2/14 [00:18<01:48,  9.01s/it]epoch 4 loss 1.43359:  14%|█▍        | 2/14 [00:18<01:48,  9.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8219[0m
[32m  eval_f1 = 0.374[0m
[32m  eval_mcc = 0.8133[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.3608[0m
[32m  ********************[0m
[32m  Best f1:0.374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43359:  21%|██▏       | 3/14 [00:30<01:54, 10.41s/it]epoch 4 loss 1.43514:  21%|██▏       | 3/14 [00:30<01:54, 10.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8227[0m
[32m  eval_f1 = 0.3744[0m
[32m  eval_mcc = 0.8142[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.3612[0m
[32m  ********************[0m
[32m  Best f1:0.3744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43514:  29%|██▊       | 4/14 [00:43<01:55, 11.51s/it]epoch 4 loss 1.43278:  29%|██▊       | 4/14 [00:44<01:55, 11.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8233[0m
[32m  eval_f1 = 0.3749[0m
[32m  eval_mcc = 0.8148[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.3617[0m
[32m  ********************[0m
[32m  Best f1:0.3749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43278:  36%|███▌      | 5/14 [00:54<01:42, 11.41s/it]epoch 4 loss 1.42146:  36%|███▌      | 5/14 [00:55<01:42, 11.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.824[0m
[32m  eval_f1 = 0.3758[0m
[32m  eval_mcc = 0.8155[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.3625[0m
[32m  ********************[0m
[32m  Best f1:0.3758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42146:  43%|████▎     | 6/14 [01:03<01:24, 10.51s/it]epoch 4 loss 1.42162:  43%|████▎     | 6/14 [01:04<01:24, 10.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8245[0m
[32m  eval_f1 = 0.3765[0m
[32m  eval_mcc = 0.816[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.363[0m
[32m  ********************[0m
[32m  Best f1:0.3765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42162:  50%|█████     | 7/14 [01:14<01:15, 10.83s/it]epoch 4 loss 1.40291:  50%|█████     | 7/14 [01:15<01:15, 10.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8251[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.8167[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3635[0m
[32m  ********************[0m
[32m  Best f1:0.377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40291:  57%|█████▋    | 8/14 [01:26<01:07, 11.21s/it]epoch 4 loss 1.39894:  57%|█████▋    | 8/14 [01:27<01:07, 11.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8257[0m
[32m  eval_f1 = 0.378[0m
[32m  eval_mcc = 0.8173[0m
[32m  eval_precision = 0.4623[0m
[32m  eval_recall = 0.3642[0m
[32m  ********************[0m
[32m  Best f1:0.378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39894:  64%|██████▍   | 9/14 [01:40<00:59, 11.92s/it]epoch 4 loss 1.39475:  64%|██████▍   | 9/14 [01:41<00:59, 11.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8261[0m
[32m  eval_f1 = 0.3781[0m
[32m  eval_mcc = 0.8177[0m
[32m  eval_precision = 0.4609[0m
[32m  eval_recall = 0.3644[0m
[32m  ********************[0m
[32m  Best f1:0.3781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39475:  71%|███████▏  | 10/14 [01:48<00:43, 10.90s/it]epoch 4 loss 1.3929:  71%|███████▏  | 10/14 [01:49<00:43, 10.90s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8264[0m
[32m  eval_f1 = 0.3784[0m
[32m  eval_mcc = 0.818[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3929:  79%|███████▊  | 11/14 [01:59<00:32, 10.67s/it]epoch 4 loss 1.39007:  79%|███████▊  | 11/14 [01:59<00:32, 10.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8265[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.8182[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3647[0m
[32m  ********************[0m
[32m  Best f1:0.3785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39007:  86%|████████▌ | 12/14 [02:09<00:21, 10.51s/it]epoch 4 loss 1.38559:  86%|████████▌ | 12/14 [02:10<00:21, 10.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8267[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.8183[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3648[0m
[32m  ********************[0m
[32m  Best f1:0.3786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38559:  93%|█████████▎| 13/14 [02:21<00:11, 11.01s/it]epoch 4 loss 1.38291:  93%|█████████▎| 13/14 [02:22<00:11, 11.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8268[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.8185[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3648[0m
[32m  ********************[0m
[32m  Best f1:0.3786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38291: 100%|██████████| 14/14 [02:34<00:00, 11.56s/it]epoch 4 loss 1.38291: 100%|██████████| 14/14 [02:34<00:00, 11.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.72it/s] 20%|██        | 2/10 [00:00<00:03,  2.52it/s] 30%|███       | 3/10 [00:01<00:02,  2.48it/s] 40%|████      | 4/10 [00:01<00:02,  2.46it/s] 50%|█████     | 5/10 [00:02<00:02,  2.44it/s] 60%|██████    | 6/10 [00:02<00:01,  2.44it/s] 70%|███████   | 7/10 [00:02<00:01,  2.43it/s] 80%|████████  | 8/10 [00:03<00:00,  2.43it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s]100%|██████████| 10/10 [00:03<00:00,  2.65it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8268[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.8185[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3648[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.43it/s] 20%|██        | 2/10 [00:00<00:03,  2.42it/s] 30%|███       | 3/10 [00:01<00:02,  2.42it/s] 40%|████      | 4/10 [00:01<00:02,  2.42it/s] 50%|█████     | 5/10 [00:02<00:02,  2.42it/s] 60%|██████    | 6/10 [00:02<00:01,  2.42it/s] 70%|███████   | 7/10 [00:02<00:01,  2.42it/s] 80%|████████  | 8/10 [00:03<00:00,  2.42it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s]100%|██████████| 10/10 [00:03<00:00,  3.06it/s]100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8112[0m
[32m  eval_f1 = 0.3112[0m
[32m  eval_mcc = 0.8027[0m
[32m  eval_precision = 0.3863[0m
[32m  eval_recall = 0.2982[0m

