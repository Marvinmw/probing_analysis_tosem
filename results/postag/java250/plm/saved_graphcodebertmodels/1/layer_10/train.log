[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.decoder.bias', 'lm_head.dense.bias', 'lm_head.bias', 'lm_head.layer_norm.bias', 'lm_head.dense.weight', 'lm_head.decoder.weight', 'lm_head.layer_norm.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.52961:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0041[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0001[0m
[32m  eval_precision = 0.0034[0m
[32m  eval_recall = 0.0007[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52961:   7%|▋         | 1/14 [00:05<01:13,  5.64s/it]epoch 0 loss 5.52555:   7%|▋         | 1/14 [00:06<01:13,  5.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0045[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0001[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0008[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52555:  14%|█▍        | 2/14 [00:11<01:11,  5.97s/it]epoch 0 loss 5.51991:  14%|█▍        | 2/14 [00:12<01:11,  5.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0052[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0[0m
[32m  eval_precision = 0.0034[0m
[32m  eval_recall = 0.001[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.51991:  21%|██▏       | 3/14 [00:17<01:06,  6.02s/it]epoch 0 loss 5.50982:  21%|██▏       | 3/14 [00:18<01:06,  6.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0072[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50982:  29%|██▊       | 4/14 [00:25<01:06,  6.69s/it]epoch 0 loss 5.49255:  29%|██▊       | 4/14 [00:26<01:06,  6.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0119[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0035[0m
[32m  eval_precision = 0.0048[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49255:  36%|███▌      | 5/14 [00:38<01:19,  8.86s/it]epoch 0 loss 5.47208:  36%|███▌      | 5/14 [00:39<01:19,  8.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.02[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0084[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0046[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47208:  43%|████▎     | 6/14 [00:49<01:16,  9.56s/it]epoch 0 loss 5.44732:  43%|████▎     | 6/14 [00:50<01:16,  9.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0353[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0191[0m
[32m  eval_precision = 0.0135[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44732:  50%|█████     | 7/14 [00:59<01:08,  9.72s/it]epoch 0 loss 5.41658:  50%|█████     | 7/14 [01:00<01:08,  9.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0666[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.046[0m
[32m  eval_precision = 0.0307[0m
[32m  eval_recall = 0.0153[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41658:  57%|█████▋    | 8/14 [01:12<01:04, 10.73s/it]epoch 0 loss 5.38086:  57%|█████▋    | 8/14 [01:12<01:04, 10.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1242[0m
[32m  eval_f1 = 0.0266[0m
[32m  eval_mcc = 0.1[0m
[32m  eval_precision = 0.0477[0m
[32m  eval_recall = 0.032[0m
[32m  ********************[0m
[32m  Best f1:0.0266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38086:  64%|██████▍   | 9/14 [01:25<00:57, 11.55s/it]epoch 0 loss 5.3409:  64%|██████▍   | 9/14 [01:26<00:57, 11.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2001[0m
[32m  eval_f1 = 0.0438[0m
[32m  eval_mcc = 0.1749[0m
[32m  eval_precision = 0.0677[0m
[32m  eval_recall = 0.0515[0m
[32m  ********************[0m
[32m  Best f1:0.0438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3409:  71%|███████▏  | 10/14 [01:39<00:48, 12.16s/it]epoch 0 loss 5.29404:  71%|███████▏  | 10/14 [01:39<00:48, 12.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2741[0m
[32m  eval_f1 = 0.0637[0m
[32m  eval_mcc = 0.2503[0m
[32m  eval_precision = 0.0887[0m
[32m  eval_recall = 0.0713[0m
[32m  ********************[0m
[32m  Best f1:0.0637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29404:  79%|███████▊  | 11/14 [01:52<00:37, 12.47s/it]epoch 0 loss 5.24434:  79%|███████▊  | 11/14 [01:53<00:37, 12.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3545[0m
[32m  eval_f1 = 0.0945[0m
[32m  eval_mcc = 0.3334[0m
[32m  eval_precision = 0.1245[0m
[32m  eval_recall = 0.1024[0m
[32m  ********************[0m
[32m  Best f1:0.0945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24434:  86%|████████▌ | 12/14 [02:05<00:25, 12.70s/it]epoch 0 loss 5.1896:  86%|████████▌ | 12/14 [02:06<00:25, 12.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.416[0m
[32m  eval_f1 = 0.1168[0m
[32m  eval_mcc = 0.3969[0m
[32m  eval_precision = 0.1542[0m
[32m  eval_recall = 0.124[0m
[32m  ********************[0m
[32m  Best f1:0.1168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1896:  93%|█████████▎| 13/14 [02:18<00:12, 12.74s/it]epoch 0 loss 5.13064:  93%|█████████▎| 13/14 [02:18<00:12, 12.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4673[0m
[32m  eval_f1 = 0.1405[0m
[32m  eval_mcc = 0.4497[0m
[32m  eval_precision = 0.1828[0m
[32m  eval_recall = 0.1466[0m
[32m  ********************[0m
[32m  Best f1:0.1405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13064: 100%|██████████| 14/14 [02:30<00:00, 12.62s/it]epoch 0 loss 5.13064: 100%|██████████| 14/14 [02:30<00:00, 10.76s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.1637:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5163[0m
[32m  eval_f1 = 0.173[0m
[32m  eval_mcc = 0.5[0m
[32m  eval_precision = 0.2137[0m
[32m  eval_recall = 0.1786[0m
[32m  ********************[0m
[32m  Best f1:0.173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.1637:   7%|▋         | 1/14 [00:12<02:38, 12.16s/it]epoch 1 loss 4.06092:   7%|▋         | 1/14 [00:12<02:38, 12.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.562[0m
[32m  eval_f1 = 0.1948[0m
[32m  eval_mcc = 0.5469[0m
[32m  eval_precision = 0.2322[0m
[32m  eval_recall = 0.2[0m
[32m  ********************[0m
[32m  Best f1:0.1948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.06092:  14%|█▍        | 2/14 [00:25<02:36, 13.01s/it]epoch 1 loss 3.97871:  14%|█▍        | 2/14 [00:26<02:36, 13.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5987[0m
[32m  eval_f1 = 0.2183[0m
[32m  eval_mcc = 0.5844[0m
[32m  eval_precision = 0.2607[0m
[32m  eval_recall = 0.2225[0m
[32m  ********************[0m
[32m  Best f1:0.2183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.97871:  21%|██▏       | 3/14 [00:39<02:29, 13.57s/it]epoch 1 loss 3.88078:  21%|██▏       | 3/14 [00:40<02:29, 13.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2464[0m
[32m  eval_mcc = 0.6123[0m
[32m  eval_precision = 0.2971[0m
[32m  eval_recall = 0.2501[0m
[32m  ********************[0m
[32m  Best f1:0.2464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88078:  29%|██▊       | 4/14 [00:49<01:59, 11.93s/it]epoch 1 loss 3.80255:  29%|██▊       | 4/14 [00:50<01:59, 11.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.2591[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.3175[0m
[32m  eval_recall = 0.2619[0m
[32m  ********************[0m
[32m  Best f1:0.2591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.80255:  36%|███▌      | 5/14 [00:58<01:38, 10.99s/it]epoch 1 loss 3.71454:  36%|███▌      | 5/14 [00:59<01:38, 10.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.2722[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.338[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.2722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.71454:  43%|████▎     | 6/14 [01:09<01:27, 10.90s/it]epoch 1 loss 3.63719:  43%|████▎     | 6/14 [01:10<01:27, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6841[0m
[32m  eval_f1 = 0.2831[0m
[32m  eval_mcc = 0.6713[0m
[32m  eval_precision = 0.3517[0m
[32m  eval_recall = 0.2823[0m
[32m  ********************[0m
[32m  Best f1:0.2831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.63719:  50%|█████     | 7/14 [01:20<01:17, 11.09s/it]epoch 1 loss 3.5502:  50%|█████     | 7/14 [01:21<01:17, 11.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6987[0m
[32m  eval_f1 = 0.289[0m
[32m  eval_mcc = 0.6861[0m
[32m  eval_precision = 0.3548[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.5502:  57%|█████▋    | 8/14 [01:31<01:05, 10.96s/it]epoch 1 loss 3.47249:  57%|█████▋    | 8/14 [01:32<01:05, 10.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.49it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.45it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7125[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.7002[0m
[32m  eval_precision = 0.3567[0m
[32m  eval_recall = 0.292[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.47249:  64%|██████▍   | 9/14 [01:42<00:55, 11.03s/it]epoch 1 loss 3.39884:  64%|██████▍   | 9/14 [01:43<00:55, 11.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.61it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.58it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.59it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.53it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.49it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.46it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.45it/s][A100%|██████████| 10/10 [00:03<00:00,  2.72it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7248[0m
[32m  eval_f1 = 0.3023[0m
[32m  eval_mcc = 0.7127[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2985[0m
[32m  ********************[0m
[32m  Best f1:0.3023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.39884:  71%|███████▏  | 10/14 [01:55<00:46, 11.59s/it]epoch 1 loss 3.32983:  71%|███████▏  | 10/14 [01:56<00:46, 11.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7366[0m
[32m  eval_f1 = 0.3061[0m
[32m  eval_mcc = 0.7248[0m
[32m  eval_precision = 0.3653[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.32983:  79%|███████▊  | 11/14 [02:08<00:36, 12.09s/it]epoch 1 loss 3.26199:  79%|███████▊  | 11/14 [02:09<00:36, 12.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7483[0m
[32m  eval_f1 = 0.3124[0m
[32m  eval_mcc = 0.7369[0m
[32m  eval_precision = 0.37[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best f1:0.3124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.26199:  86%|████████▌ | 12/14 [02:20<00:23, 11.93s/it]epoch 1 loss 3.19917:  86%|████████▌ | 12/14 [02:21<00:23, 11.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.69it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.59it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.53it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.49it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.47it/s][A100%|██████████| 10/10 [00:03<00:00,  2.78it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7578[0m
[32m  eval_f1 = 0.318[0m
[32m  eval_mcc = 0.7466[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.19917:  93%|█████████▎| 13/14 [02:32<00:12, 12.01s/it]epoch 1 loss 3.13588:  93%|█████████▎| 13/14 [02:33<00:12, 12.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.766[0m
[32m  eval_f1 = 0.3217[0m
[32m  eval_mcc = 0.7551[0m
[32m  eval_precision = 0.3755[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best f1:0.3217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.13588: 100%|██████████| 14/14 [02:45<00:00, 12.38s/it]epoch 1 loss 3.13588: 100%|██████████| 14/14 [02:45<00:00, 11.85s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.23899:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7732[0m
[32m  eval_f1 = 0.3255[0m
[32m  eval_mcc = 0.7625[0m
[32m  eval_precision = 0.3776[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.23899:   7%|▋         | 1/14 [00:12<02:37, 12.14s/it]epoch 2 loss 2.21218:   7%|▋         | 1/14 [00:12<02:37, 12.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7796[0m
[32m  eval_f1 = 0.329[0m
[32m  eval_mcc = 0.7691[0m
[32m  eval_precision = 0.38[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.21218:  14%|█▍        | 2/14 [00:18<01:44,  8.74s/it]epoch 2 loss 2.16211:  14%|█▍        | 2/14 [00:19<01:44,  8.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7851[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.7748[0m
[32m  eval_precision = 0.3813[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.16211:  21%|██▏       | 3/14 [00:25<01:28,  8.05s/it]epoch 2 loss 2.11924:  21%|██▏       | 3/14 [00:26<01:28,  8.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7893[0m
[32m  eval_f1 = 0.333[0m
[32m  eval_mcc = 0.7791[0m
[32m  eval_precision = 0.3824[0m
[32m  eval_recall = 0.3252[0m
[32m  ********************[0m
[32m  Best f1:0.333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.11924:  29%|██▊       | 4/14 [00:38<01:39,  9.96s/it]epoch 2 loss 2.06904:  29%|██▊       | 4/14 [00:39<01:39,  9.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7938[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.7837[0m
[32m  eval_precision = 0.3839[0m
[32m  eval_recall = 0.3275[0m
[32m  ********************[0m
[32m  Best f1:0.3358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.06904:  36%|███▌      | 5/14 [00:51<01:38, 10.89s/it]epoch 2 loss 2.0117:  36%|███▌      | 5/14 [00:51<01:38, 10.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7975[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.7875[0m
[32m  eval_precision = 0.3852[0m
[32m  eval_recall = 0.3291[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.0117:  43%|████▎     | 6/14 [01:04<01:32, 11.56s/it]epoch 2 loss 1.964:  43%|████▎     | 6/14 [01:04<01:32, 11.56s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8011[0m
[32m  eval_f1 = 0.3388[0m
[32m  eval_mcc = 0.7912[0m
[32m  eval_precision = 0.3857[0m
[32m  eval_recall = 0.3301[0m
[32m  ********************[0m
[32m  Best f1:0.3388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.964:  50%|█████     | 7/14 [01:16<01:23, 11.91s/it]epoch 2 loss 1.92495:  50%|█████     | 7/14 [01:17<01:23, 11.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.804[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.7942[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.92495:  57%|█████▋    | 8/14 [01:28<01:11, 11.88s/it]epoch 2 loss 1.89402:  57%|█████▋    | 8/14 [01:29<01:11, 11.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8065[0m
[32m  eval_f1 = 0.3411[0m
[32m  eval_mcc = 0.7968[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.3327[0m
[32m  ********************[0m
[32m  Best f1:0.3411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.89402:  64%|██████▍   | 9/14 [01:40<01:00, 12.04s/it]epoch 2 loss 1.86332:  64%|██████▍   | 9/14 [01:41<01:00, 12.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8091[0m
[32m  eval_f1 = 0.344[0m
[32m  eval_mcc = 0.7995[0m
[32m  eval_precision = 0.4052[0m
[32m  eval_recall = 0.3349[0m
[32m  ********************[0m
[32m  Best f1:0.344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.86332:  71%|███████▏  | 10/14 [01:48<00:43, 10.75s/it]epoch 2 loss 1.82735:  71%|███████▏  | 10/14 [01:49<00:43, 10.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8117[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.8022[0m
[32m  eval_precision = 0.406[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best f1:0.3453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.82735:  79%|███████▊  | 11/14 [01:57<00:30, 10.03s/it]epoch 2 loss 1.80795:  79%|███████▊  | 11/14 [01:57<00:30, 10.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8143[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.8049[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.3375[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.80795:  86%|████████▌ | 12/14 [02:05<00:19,  9.62s/it]epoch 2 loss 1.77819:  86%|████████▌ | 12/14 [02:06<00:19,  9.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8172[0m
[32m  eval_f1 = 0.3497[0m
[32m  eval_mcc = 0.8079[0m
[32m  eval_precision = 0.416[0m
[32m  eval_recall = 0.3396[0m
[32m  ********************[0m
[32m  Best f1:0.3497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.77819:  93%|█████████▎| 13/14 [02:16<00:09,  9.90s/it]epoch 2 loss 1.75645:  93%|█████████▎| 13/14 [02:16<00:09,  9.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8194[0m
[32m  eval_f1 = 0.351[0m
[32m  eval_mcc = 0.8102[0m
[32m  eval_precision = 0.4336[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.75645: 100%|██████████| 14/14 [02:28<00:00, 10.46s/it]epoch 2 loss 1.75645: 100%|██████████| 14/14 [02:28<00:00, 10.58s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.35398:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8215[0m
[32m  eval_f1 = 0.3512[0m
[32m  eval_mcc = 0.8123[0m
[32m  eval_precision = 0.4334[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best f1:0.3512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35398:   7%|▋         | 1/14 [00:13<02:51, 13.21s/it]epoch 3 loss 1.33164:   7%|▋         | 1/14 [00:14<02:51, 13.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.824[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.8149[0m
[32m  eval_precision = 0.4343[0m
[32m  eval_recall = 0.3421[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33164:  14%|█▍        | 2/14 [00:27<02:47, 14.00s/it]epoch 3 loss 1.34968:  14%|█▍        | 2/14 [00:28<02:47, 14.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8256[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.8166[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.3431[0m
[32m  ********************[0m
[32m  Best f1:0.3548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34968:  21%|██▏       | 3/14 [00:42<02:39, 14.47s/it]epoch 3 loss 1.32947:  21%|██▏       | 3/14 [00:43<02:39, 14.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8276[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.8186[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.3584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32947:  29%|██▊       | 4/14 [00:57<02:23, 14.39s/it]epoch 3 loss 1.31141:  29%|██▊       | 4/14 [00:57<02:23, 14.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8288[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.8199[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31141:  36%|███▌      | 5/14 [01:06<01:54, 12.70s/it]epoch 3 loss 1.30844:  36%|███▌      | 5/14 [01:07<01:54, 12.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8305[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.8217[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3517[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30844:  43%|████▎     | 6/14 [01:17<01:35, 12.00s/it]epoch 3 loss 1.29787:  43%|████▎     | 6/14 [01:18<01:35, 12.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8316[0m
[32m  eval_f1 = 0.3704[0m
[32m  eval_mcc = 0.8229[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.3558[0m
[32m  ********************[0m
[32m  Best f1:0.3704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29787:  50%|█████     | 7/14 [01:29<01:24, 12.10s/it]epoch 3 loss 1.27949:  50%|█████     | 7/14 [01:30<01:24, 12.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.833[0m
[32m  eval_f1 = 0.3735[0m
[32m  eval_mcc = 0.8243[0m
[32m  eval_precision = 0.4597[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best f1:0.3735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27949:  57%|█████▋    | 8/14 [01:41<01:12, 12.02s/it]epoch 3 loss 1.27071:  57%|█████▋    | 8/14 [01:42<01:12, 12.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8343[0m
[32m  eval_f1 = 0.3769[0m
[32m  eval_mcc = 0.8256[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3634[0m
[32m  ********************[0m
[32m  Best f1:0.3769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27071:  64%|██████▍   | 9/14 [01:53<00:59, 11.89s/it]epoch 3 loss 1.25484:  64%|██████▍   | 9/14 [01:53<00:59, 11.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8354[0m
[32m  eval_f1 = 0.3776[0m
[32m  eval_mcc = 0.8267[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25484:  71%|███████▏  | 10/14 [02:03<00:45, 11.47s/it]epoch 3 loss 1.24213:  71%|███████▏  | 10/14 [02:04<00:45, 11.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.28it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.36it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.38it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8358[0m
[32m  eval_f1 = 0.3783[0m
[32m  eval_mcc = 0.8272[0m
[32m  eval_precision = 0.4651[0m
[32m  eval_recall = 0.3651[0m
[32m  ********************[0m
[32m  Best f1:0.3783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24213:  79%|███████▊  | 11/14 [02:18<00:37, 12.57s/it]epoch 3 loss 1.23246:  79%|███████▊  | 11/14 [02:19<00:37, 12.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8368[0m
[32m  eval_f1 = 0.3791[0m
[32m  eval_mcc = 0.8282[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3663[0m
[32m  ********************[0m
[32m  Best f1:0.3791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23246:  86%|████████▌ | 12/14 [02:31<00:25, 12.61s/it]epoch 3 loss 1.22963:  86%|████████▌ | 12/14 [02:32<00:25, 12.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8377[0m
[32m  eval_f1 = 0.3802[0m
[32m  eval_mcc = 0.8292[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3674[0m
[32m  ********************[0m
[32m  Best f1:0.3802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22963:  93%|█████████▎| 13/14 [02:43<00:12, 12.51s/it]epoch 3 loss 1.21965:  93%|█████████▎| 13/14 [02:44<00:12, 12.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8383[0m
[32m  eval_f1 = 0.3802[0m
[32m  eval_mcc = 0.8297[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3675[0m
[32m  ********************[0m
[32m  Best MCC:0.8297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21965: 100%|██████████| 14/14 [02:52<00:00, 11.29s/it]epoch 3 loss 1.21965: 100%|██████████| 14/14 [02:52<00:00, 12.30s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.04002:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8392[0m
[32m  eval_f1 = 0.3807[0m
[32m  eval_mcc = 0.8307[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3681[0m
[32m  ********************[0m
[32m  Best f1:0.3807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.04002:   7%|▋         | 1/14 [00:09<02:09,  9.94s/it]epoch 4 loss 1.0349:   7%|▋         | 1/14 [00:10<02:09,  9.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.52it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.59it/s][A100%|██████████| 10/10 [00:03<00:00,  2.71it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8402[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.8317[0m
[32m  eval_precision = 0.468[0m
[32m  eval_recall = 0.3696[0m
[32m  ********************[0m
[32m  Best f1:0.3827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.0349:  14%|█▍        | 2/14 [00:22<02:20, 11.71s/it]epoch 4 loss 1.0742:  14%|█▍        | 2/14 [00:23<02:20, 11.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.841[0m
[32m  eval_f1 = 0.3836[0m
[32m  eval_mcc = 0.8326[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3705[0m
[32m  ********************[0m
[32m  Best f1:0.3836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.0742:  21%|██▏       | 3/14 [00:29<01:41,  9.26s/it]epoch 4 loss 1.07424:  21%|██▏       | 3/14 [00:30<01:41,  9.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8416[0m
[32m  eval_f1 = 0.3841[0m
[32m  eval_mcc = 0.8332[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.371[0m
[32m  ********************[0m
[32m  Best f1:0.3841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07424:  29%|██▊       | 4/14 [00:35<01:21,  8.10s/it]epoch 4 loss 1.07551:  29%|██▊       | 4/14 [00:36<01:21,  8.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8423[0m
[32m  eval_f1 = 0.3852[0m
[32m  eval_mcc = 0.8339[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.372[0m
[32m  ********************[0m
[32m  Best f1:0.3852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07551:  36%|███▌      | 5/14 [00:41<01:07,  7.45s/it]epoch 4 loss 1.06716:  36%|███▌      | 5/14 [00:42<01:07,  7.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8428[0m
[32m  eval_f1 = 0.3873[0m
[32m  eval_mcc = 0.8345[0m
[32m  eval_precision = 0.4782[0m
[32m  eval_recall = 0.3735[0m
[32m  ********************[0m
[32m  Best f1:0.3873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.06716:  43%|████▎     | 6/14 [00:52<01:07,  8.47s/it]epoch 4 loss 1.07021:  43%|████▎     | 6/14 [00:53<01:07,  8.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8433[0m
[32m  eval_f1 = 0.3878[0m
[32m  eval_mcc = 0.835[0m
[32m  eval_precision = 0.4783[0m
[32m  eval_recall = 0.3739[0m
[32m  ********************[0m
[32m  Best f1:0.3878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.07021:  50%|█████     | 7/14 [01:03<01:06,  9.45s/it]epoch 4 loss 1.05315:  50%|█████     | 7/14 [01:04<01:06,  9.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8437[0m
[32m  eval_f1 = 0.3885[0m
[32m  eval_mcc = 0.8354[0m
[32m  eval_precision = 0.4794[0m
[32m  eval_recall = 0.3744[0m
[32m  ********************[0m
[32m  Best f1:0.3885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.05315:  57%|█████▋    | 8/14 [01:17<01:04, 10.78s/it]epoch 4 loss 1.05149:  57%|█████▋    | 8/14 [01:18<01:04, 10.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.844[0m
[32m  eval_f1 = 0.3887[0m
[32m  eval_mcc = 0.8357[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3746[0m
[32m  ********************[0m
[32m  Best f1:0.3887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.05149:  64%|██████▍   | 9/14 [01:31<00:58, 11.77s/it]epoch 4 loss 1.05035:  64%|██████▍   | 9/14 [01:32<00:58, 11.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8442[0m
[32m  eval_f1 = 0.3889[0m
[32m  eval_mcc = 0.8359[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.3747[0m
[32m  ********************[0m
[32m  Best f1:0.3889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.05035:  71%|███████▏  | 10/14 [01:45<00:49, 12.40s/it]epoch 4 loss 1.04866:  71%|███████▏  | 10/14 [01:45<00:49, 12.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8443[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.836[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.3749[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.04866:  79%|███████▊  | 11/14 [01:57<00:37, 12.52s/it]epoch 4 loss 1.04708:  79%|███████▊  | 11/14 [01:58<00:37, 12.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8445[0m
[32m  eval_f1 = 0.3891[0m
[32m  eval_mcc = 0.8362[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.375[0m
[32m  ********************[0m
[32m  Best f1:0.3891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.04708:  86%|████████▌ | 12/14 [02:07<00:22, 11.47s/it]epoch 4 loss 1.04278:  86%|████████▌ | 12/14 [02:07<00:22, 11.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8446[0m
[32m  eval_f1 = 0.3892[0m
[32m  eval_mcc = 0.8363[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.3751[0m
[32m  ********************[0m
[32m  Best f1:0.3892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.04278:  93%|█████████▎| 13/14 [02:16<00:10, 10.88s/it]epoch 4 loss 1.03986:  93%|█████████▎| 13/14 [02:17<00:10, 10.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8446[0m
[32m  eval_f1 = 0.3894[0m
[32m  eval_mcc = 0.8364[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3752[0m
[32m  ********************[0m
[32m  Best f1:0.3894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.03986: 100%|██████████| 14/14 [02:27<00:00, 10.91s/it]epoch 4 loss 1.03986: 100%|██████████| 14/14 [02:27<00:00, 10.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.67it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8446[0m
[32m  eval_f1 = 0.3894[0m
[32m  eval_mcc = 0.8364[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3752[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8303[0m
[32m  eval_f1 = 0.3124[0m
[32m  eval_mcc = 0.822[0m
[32m  eval_precision = 0.3775[0m
[32m  eval_recall = 0.3009[0m

