[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.layer_norm.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.bias', 'lm_head.bias', 'lm_head.dense.weight', 'lm_head.decoder.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.55171:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0021[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0015[0m
[32m  eval_precision = 0.001[0m
[32m  eval_recall = 0.0037[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.55171:   7%|▋         | 1/14 [00:05<01:12,  5.56s/it]epoch 0 loss 5.552:   7%|▋         | 1/14 [00:06<01:12,  5.56s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0022[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0016[0m
[32m  eval_precision = 0.001[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.552:  14%|█▍        | 2/14 [00:10<01:04,  5.38s/it]epoch 0 loss 5.54937:  14%|█▍        | 2/14 [00:11<01:04,  5.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.003[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0012[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54937:  21%|██▏       | 3/14 [00:16<00:59,  5.42s/it]epoch 0 loss 5.54109:  21%|██▏       | 3/14 [00:17<00:59,  5.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0042[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = -0.0007[0m
[32m  eval_precision = 0.0014[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54109:  29%|██▊       | 4/14 [00:21<00:53,  5.38s/it]epoch 0 loss 5.52651:  29%|██▊       | 4/14 [00:22<00:53,  5.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0066[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0007[0m
[32m  eval_precision = 0.0021[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.52651:  36%|███▌      | 5/14 [00:27<00:49,  5.55s/it]epoch 0 loss 5.51128:  36%|███▌      | 5/14 [00:28<00:49,  5.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0105[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0031[0m
[32m  eval_precision = 0.0136[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51128:  43%|████▎     | 6/14 [00:34<00:48,  6.08s/it]epoch 0 loss 5.49011:  43%|████▎     | 6/14 [00:35<00:48,  6.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0221[0m
[32m  eval_f1 = 0.0059[0m
[32m  eval_mcc = 0.0125[0m
[32m  eval_precision = 0.0264[0m
[32m  eval_recall = 0.0093[0m
[32m  ********************[0m
[32m  Best f1:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49011:  50%|█████     | 7/14 [00:41<00:44,  6.38s/it]epoch 0 loss 5.46406:  50%|█████     | 7/14 [00:42<00:44,  6.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0498[0m
[32m  eval_f1 = 0.0132[0m
[32m  eval_mcc = 0.038[0m
[32m  eval_precision = 0.0343[0m
[32m  eval_recall = 0.0184[0m
[32m  ********************[0m
[32m  Best f1:0.0132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46406:  57%|█████▋    | 8/14 [00:48<00:39,  6.56s/it]epoch 0 loss 5.4331:  57%|█████▋    | 8/14 [00:49<00:39,  6.56s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0824[0m
[32m  eval_f1 = 0.0185[0m
[32m  eval_mcc = 0.0684[0m
[32m  eval_precision = 0.0387[0m
[32m  eval_recall = 0.026[0m
[32m  ********************[0m
[32m  Best f1:0.0185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4331:  64%|██████▍   | 9/14 [00:55<00:33,  6.68s/it]epoch 0 loss 5.39945:  64%|██████▍   | 9/14 [00:56<00:33,  6.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1508[0m
[32m  eval_f1 = 0.0369[0m
[32m  eval_mcc = 0.1368[0m
[32m  eval_precision = 0.0593[0m
[32m  eval_recall = 0.0443[0m
[32m  ********************[0m
[32m  Best f1:0.0369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39945:  71%|███████▏  | 10/14 [01:02<00:27,  6.78s/it]epoch 0 loss 5.3609:  71%|███████▏  | 10/14 [01:03<00:27,  6.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2338[0m
[32m  eval_f1 = 0.0586[0m
[32m  eval_mcc = 0.2214[0m
[32m  eval_precision = 0.0837[0m
[32m  eval_recall = 0.0666[0m
[32m  ********************[0m
[32m  Best f1:0.0586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3609:  79%|███████▊  | 11/14 [01:09<00:20,  6.85s/it]epoch 0 loss 5.31921:  79%|███████▊  | 11/14 [01:10<00:20,  6.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3144[0m
[32m  eval_f1 = 0.0759[0m
[32m  eval_mcc = 0.3038[0m
[32m  eval_precision = 0.1001[0m
[32m  eval_recall = 0.087[0m
[32m  ********************[0m
[32m  Best f1:0.0759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.31921:  86%|████████▌ | 12/14 [01:15<00:13,  6.61s/it]epoch 0 loss 5.27397:  86%|████████▌ | 12/14 [01:16<00:13,  6.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3917[0m
[32m  eval_f1 = 0.0978[0m
[32m  eval_mcc = 0.3824[0m
[32m  eval_precision = 0.1292[0m
[32m  eval_recall = 0.1111[0m
[32m  ********************[0m
[32m  Best f1:0.0978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27397:  93%|█████████▎| 13/14 [01:22<00:06,  6.73s/it]epoch 0 loss 5.22426:  93%|█████████▎| 13/14 [01:23<00:06,  6.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4546[0m
[32m  eval_f1 = 0.1231[0m
[32m  eval_mcc = 0.4457[0m
[32m  eval_precision = 0.1612[0m
[32m  eval_recall = 0.1354[0m
[32m  ********************[0m
[32m  Best f1:0.1231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22426: 100%|██████████| 14/14 [01:31<00:00,  7.28s/it]epoch 0 loss 5.22426: 100%|██████████| 14/14 [01:31<00:00,  6.51s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.41553:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5115[0m
[32m  eval_f1 = 0.161[0m
[32m  eval_mcc = 0.5025[0m
[32m  eval_precision = 0.2162[0m
[32m  eval_recall = 0.1694[0m
[32m  ********************[0m
[32m  Best f1:0.161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.41553:   7%|▋         | 1/14 [00:06<01:30,  6.94s/it]epoch 1 loss 4.33153:   7%|▋         | 1/14 [00:07<01:30,  6.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5488[0m
[32m  eval_f1 = 0.1852[0m
[32m  eval_mcc = 0.539[0m
[32m  eval_precision = 0.2351[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.1852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.33153:  14%|█▍        | 2/14 [00:16<01:38,  8.22s/it]epoch 1 loss 4.26267:  14%|█▍        | 2/14 [00:16<01:38,  8.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5808[0m
[32m  eval_f1 = 0.2033[0m
[32m  eval_mcc = 0.5709[0m
[32m  eval_precision = 0.2491[0m
[32m  eval_recall = 0.2091[0m
[32m  ********************[0m
[32m  Best f1:0.2033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.26267:  21%|██▏       | 3/14 [00:23<01:24,  7.67s/it]epoch 1 loss 4.17882:  21%|██▏       | 3/14 [00:23<01:24,  7.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6048[0m
[32m  eval_f1 = 0.2207[0m
[32m  eval_mcc = 0.5948[0m
[32m  eval_precision = 0.2786[0m
[32m  eval_recall = 0.227[0m
[32m  ********************[0m
[32m  Best f1:0.2207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.17882:  29%|██▊       | 4/14 [00:32<01:23,  8.32s/it]epoch 1 loss 4.10916:  29%|██▊       | 4/14 [00:33<01:23,  8.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6237[0m
[32m  eval_f1 = 0.2371[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.2915[0m
[32m  eval_recall = 0.2445[0m
[32m  ********************[0m
[32m  Best f1:0.2371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.10916:  36%|███▌      | 5/14 [00:39<01:10,  7.87s/it]epoch 1 loss 4.03153:  36%|███▌      | 5/14 [00:40<01:10,  7.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.2472[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.3019[0m
[32m  eval_recall = 0.2542[0m
[32m  ********************[0m
[32m  Best f1:0.2472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.03153:  43%|████▎     | 6/14 [00:47<01:04,  8.07s/it]epoch 1 loss 3.96191:  43%|████▎     | 6/14 [00:48<01:04,  8.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.2612[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.3103[0m
[32m  eval_recall = 0.2665[0m
[32m  ********************[0m
[32m  Best f1:0.2612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.96191:  50%|█████     | 7/14 [00:58<01:01,  8.73s/it]epoch 1 loss 3.88484:  50%|█████     | 7/14 [00:58<01:01,  8.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.27[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.3163[0m
[32m  eval_recall = 0.2745[0m
[32m  ********************[0m
[32m  Best f1:0.27[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88484:  57%|█████▋    | 8/14 [01:10<00:59,  9.96s/it]epoch 1 loss 3.81369:  57%|█████▋    | 8/14 [01:11<00:59,  9.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.2842[0m
[32m  eval_mcc = 0.6645[0m
[32m  eval_precision = 0.3339[0m
[32m  eval_recall = 0.2872[0m
[32m  ********************[0m
[32m  Best f1:0.2842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.81369:  64%|██████▍   | 9/14 [01:23<00:53, 10.74s/it]epoch 1 loss 3.74557:  64%|██████▍   | 9/14 [01:23<00:53, 10.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6844[0m
[32m  eval_f1 = 0.2925[0m
[32m  eval_mcc = 0.6742[0m
[32m  eval_precision = 0.3401[0m
[32m  eval_recall = 0.2947[0m
[32m  ********************[0m
[32m  Best f1:0.2925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.74557:  71%|███████▏  | 10/14 [01:35<00:45, 11.25s/it]epoch 1 loss 3.68272:  71%|███████▏  | 10/14 [01:36<00:45, 11.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6927[0m
[32m  eval_f1 = 0.2967[0m
[32m  eval_mcc = 0.6824[0m
[32m  eval_precision = 0.3441[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best f1:0.2967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.68272:  79%|███████▊  | 11/14 [01:46<00:33, 11.32s/it]epoch 1 loss 3.62115:  79%|███████▊  | 11/14 [01:47<00:33, 11.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7012[0m
[32m  eval_f1 = 0.3021[0m
[32m  eval_mcc = 0.6909[0m
[32m  eval_precision = 0.3484[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.62115:  86%|████████▌ | 12/14 [01:58<00:22, 11.38s/it]epoch 1 loss 3.56147:  86%|████████▌ | 12/14 [01:59<00:22, 11.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7086[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6982[0m
[32m  eval_precision = 0.3568[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.56147:  93%|█████████▎| 13/14 [02:07<00:10, 10.68s/it]epoch 1 loss 3.50371:  93%|█████████▎| 13/14 [02:08<00:10, 10.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7151[0m
[32m  eval_f1 = 0.309[0m
[32m  eval_mcc = 0.7047[0m
[32m  eval_precision = 0.359[0m
[32m  eval_recall = 0.3088[0m
[32m  ********************[0m
[32m  Best f1:0.309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.50371: 100%|██████████| 14/14 [02:16<00:00, 10.23s/it]epoch 1 loss 3.50371: 100%|██████████| 14/14 [02:16<00:00,  9.77s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.66677:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7209[0m
[32m  eval_f1 = 0.3128[0m
[32m  eval_mcc = 0.7104[0m
[32m  eval_precision = 0.3657[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.66677:   7%|▋         | 1/14 [00:13<02:49, 13.06s/it]epoch 2 loss 2.63589:   7%|▋         | 1/14 [00:13<02:49, 13.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7258[0m
[32m  eval_f1 = 0.3198[0m
[32m  eval_mcc = 0.7153[0m
[32m  eval_precision = 0.3711[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.63589:  14%|█▍        | 2/14 [00:20<02:00, 10.04s/it]epoch 2 loss 2.58102:  14%|█▍        | 2/14 [00:21<02:00, 10.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7307[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.7202[0m
[32m  eval_precision = 0.3765[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.3212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.58102:  21%|██▏       | 3/14 [00:32<02:00, 10.92s/it]epoch 2 loss 2.53856:  21%|██▏       | 3/14 [00:33<02:00, 10.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7348[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.7243[0m
[32m  eval_precision = 0.3689[0m
[32m  eval_recall = 0.3221[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.53856:  29%|██▊       | 4/14 [00:45<01:55, 11.55s/it]epoch 2 loss 2.4919:  29%|██▊       | 4/14 [00:46<01:55, 11.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7386[0m
[32m  eval_f1 = 0.3237[0m
[32m  eval_mcc = 0.7281[0m
[32m  eval_precision = 0.3702[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.4919:  36%|███▌      | 5/14 [00:56<01:42, 11.41s/it]epoch 2 loss 2.43622:  36%|███▌      | 5/14 [00:57<01:42, 11.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7418[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.7313[0m
[32m  eval_precision = 0.3803[0m
[32m  eval_recall = 0.3233[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.43622:  43%|████▎     | 6/14 [01:08<01:31, 11.44s/it]epoch 2 loss 2.38609:  43%|████▎     | 6/14 [01:08<01:31, 11.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7444[0m
[32m  eval_f1 = 0.3264[0m
[32m  eval_mcc = 0.734[0m
[32m  eval_precision = 0.3908[0m
[32m  eval_recall = 0.3243[0m
[32m  ********************[0m
[32m  Best f1:0.3264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.38609:  50%|█████     | 7/14 [01:19<01:20, 11.54s/it]epoch 2 loss 2.34625:  50%|█████     | 7/14 [01:20<01:20, 11.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7475[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.7371[0m
[32m  eval_precision = 0.3921[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.3281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.34625:  57%|█████▋    | 8/14 [01:31<01:09, 11.54s/it]epoch 2 loss 2.3152:  57%|█████▋    | 8/14 [01:32<01:09, 11.54s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7522[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.7419[0m
[32m  eval_precision = 0.3934[0m
[32m  eval_recall = 0.3272[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3152:  64%|██████▍   | 9/14 [01:40<00:54, 10.92s/it]epoch 2 loss 2.28143:  64%|██████▍   | 9/14 [01:41<00:54, 10.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7575[0m
[32m  eval_f1 = 0.3331[0m
[32m  eval_mcc = 0.7474[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.329[0m
[32m  ********************[0m
[32m  Best f1:0.3331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.28143:  71%|███████▏  | 10/14 [01:52<00:44, 11.14s/it]epoch 2 loss 2.24396:  71%|███████▏  | 10/14 [01:53<00:44, 11.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7606[0m
[32m  eval_f1 = 0.336[0m
[32m  eval_mcc = 0.7506[0m
[32m  eval_precision = 0.4062[0m
[32m  eval_recall = 0.3306[0m
[32m  ********************[0m
[32m  Best f1:0.336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.24396:  79%|███████▊  | 11/14 [02:03<00:33, 11.19s/it]epoch 2 loss 2.22115:  79%|███████▊  | 11/14 [02:04<00:33, 11.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7634[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.7535[0m
[32m  eval_precision = 0.4068[0m
[32m  eval_recall = 0.3317[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.22115:  86%|████████▌ | 12/14 [02:14<00:22, 11.03s/it]epoch 2 loss 2.18934:  86%|████████▌ | 12/14 [02:15<00:22, 11.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.766[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.7561[0m
[32m  eval_precision = 0.4074[0m
[32m  eval_recall = 0.3328[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.18934:  93%|█████████▎| 13/14 [02:26<00:11, 11.19s/it]epoch 2 loss 2.16474:  93%|█████████▎| 13/14 [02:26<00:11, 11.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7684[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.7585[0m
[32m  eval_precision = 0.407[0m
[32m  eval_recall = 0.3333[0m
[32m  ********************[0m
[32m  Best f1:0.34[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.16474: 100%|██████████| 14/14 [02:33<00:00, 10.04s/it]epoch 2 loss 2.16474: 100%|██████████| 14/14 [02:33<00:00, 10.96s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.74016:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.771[0m
[32m  eval_f1 = 0.3423[0m
[32m  eval_mcc = 0.7612[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best f1:0.3423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.74016:   7%|▋         | 1/14 [00:07<01:38,  7.55s/it]epoch 3 loss 1.70277:   7%|▋         | 1/14 [00:08<01:38,  7.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.773[0m
[32m  eval_f1 = 0.3451[0m
[32m  eval_mcc = 0.7632[0m
[32m  eval_precision = 0.4176[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.70277:  14%|█▍        | 2/14 [00:15<01:36,  8.01s/it]epoch 3 loss 1.71859:  14%|█▍        | 2/14 [00:16<01:36,  8.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7751[0m
[32m  eval_f1 = 0.3473[0m
[32m  eval_mcc = 0.7653[0m
[32m  eval_precision = 0.4183[0m
[32m  eval_recall = 0.3383[0m
[32m  ********************[0m
[32m  Best f1:0.3473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.71859:  21%|██▏       | 3/14 [00:22<01:23,  7.55s/it]epoch 3 loss 1.69703:  21%|██▏       | 3/14 [00:23<01:23,  7.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7769[0m
[32m  eval_f1 = 0.3488[0m
[32m  eval_mcc = 0.7671[0m
[32m  eval_precision = 0.4184[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.69703:  29%|██▊       | 4/14 [00:29<01:13,  7.31s/it]epoch 3 loss 1.67656:  29%|██▊       | 4/14 [00:30<01:13,  7.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7792[0m
[32m  eval_f1 = 0.3499[0m
[32m  eval_mcc = 0.7694[0m
[32m  eval_precision = 0.4278[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.3499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.67656:  36%|███▌      | 5/14 [00:36<01:04,  7.19s/it]epoch 3 loss 1.67215:  36%|███▌      | 5/14 [00:37<01:04,  7.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7815[0m
[32m  eval_f1 = 0.3521[0m
[32m  eval_mcc = 0.7718[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.342[0m
[32m  ********************[0m
[32m  Best f1:0.3521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.67215:  43%|████▎     | 6/14 [00:43<00:55,  6.89s/it]epoch 3 loss 1.65839:  43%|████▎     | 6/14 [00:43<00:55,  6.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7835[0m
[32m  eval_f1 = 0.3537[0m
[32m  eval_mcc = 0.7738[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.3433[0m
[32m  ********************[0m
[32m  Best f1:0.3537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.65839:  50%|█████     | 7/14 [00:50<00:48,  6.89s/it]epoch 3 loss 1.63635:  50%|█████     | 7/14 [00:50<00:48,  6.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7851[0m
[32m  eval_f1 = 0.3541[0m
[32m  eval_mcc = 0.7754[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.3437[0m
[32m  ********************[0m
[32m  Best f1:0.3541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.63635:  57%|█████▋    | 8/14 [00:58<00:45,  7.55s/it]epoch 3 loss 1.62515:  57%|█████▋    | 8/14 [00:59<00:45,  7.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7865[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.7768[0m
[32m  eval_precision = 0.4342[0m
[32m  eval_recall = 0.3444[0m
[32m  ********************[0m
[32m  Best f1:0.3547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.62515:  64%|██████▍   | 9/14 [01:10<00:43,  8.79s/it]epoch 3 loss 1.60722:  64%|██████▍   | 9/14 [01:11<00:43,  8.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7878[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.778[0m
[32m  eval_precision = 0.4343[0m
[32m  eval_recall = 0.3445[0m
[32m  ********************[0m
[32m  Best MCC:0.778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.60722:  71%|███████▏  | 10/14 [01:16<00:31,  7.79s/it]epoch 3 loss 1.59331:  71%|███████▏  | 10/14 [01:16<00:31,  7.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7898[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.7801[0m
[32m  eval_precision = 0.4335[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.59331:  79%|███████▊  | 11/14 [01:28<00:27,  9.16s/it]epoch 3 loss 1.58179:  79%|███████▊  | 11/14 [01:29<00:27,  9.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7919[0m
[32m  eval_f1 = 0.3558[0m
[32m  eval_mcc = 0.7821[0m
[32m  eval_precision = 0.4337[0m
[32m  eval_recall = 0.3462[0m
[32m  ********************[0m
[32m  Best f1:0.3558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.58179:  86%|████████▌ | 12/14 [01:40<00:20, 10.06s/it]epoch 3 loss 1.57647:  86%|████████▌ | 12/14 [01:41<00:20, 10.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7935[0m
[32m  eval_f1 = 0.3564[0m
[32m  eval_mcc = 0.7838[0m
[32m  eval_precision = 0.4342[0m
[32m  eval_recall = 0.3468[0m
[32m  ********************[0m
[32m  Best f1:0.3564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.57647:  93%|█████████▎| 13/14 [01:52<00:10, 10.71s/it]epoch 3 loss 1.56593:  93%|█████████▎| 13/14 [01:53<00:10, 10.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.795[0m
[32m  eval_f1 = 0.3568[0m
[32m  eval_mcc = 0.7853[0m
[32m  eval_precision = 0.4345[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.3568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.56593: 100%|██████████| 14/14 [02:04<00:00, 11.07s/it]epoch 3 loss 1.56593: 100%|██████████| 14/14 [02:04<00:00,  8.89s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.33755:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7967[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.787[0m
[32m  eval_precision = 0.4347[0m
[32m  eval_recall = 0.3474[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33755:   7%|▋         | 1/14 [00:11<02:24, 11.15s/it]epoch 4 loss 1.34824:   7%|▋         | 1/14 [00:11<02:24, 11.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7982[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.7885[0m
[32m  eval_precision = 0.4349[0m
[32m  eval_recall = 0.3486[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34824:  14%|█▍        | 2/14 [00:22<02:15, 11.33s/it]epoch 4 loss 1.3825:  14%|█▍        | 2/14 [00:23<02:15, 11.33s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7995[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.7899[0m
[32m  eval_precision = 0.4351[0m
[32m  eval_recall = 0.3494[0m
[32m  ********************[0m
[32m  Best f1:0.3596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3825:  21%|██▏       | 3/14 [00:33<02:04, 11.30s/it]epoch 4 loss 1.38384:  21%|██▏       | 3/14 [00:34<02:04, 11.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8005[0m
[32m  eval_f1 = 0.3604[0m
[32m  eval_mcc = 0.7909[0m
[32m  eval_precision = 0.4353[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38384:  29%|██▊       | 4/14 [00:44<01:51, 11.16s/it]epoch 4 loss 1.38159:  29%|██▊       | 4/14 [00:45<01:51, 11.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8013[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.7917[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.3502[0m
[32m  ********************[0m
[32m  Best f1:0.3605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38159:  36%|███▌      | 5/14 [00:54<01:35, 10.64s/it]epoch 4 loss 1.372:  36%|███▌      | 5/14 [00:55<01:35, 10.64s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.802[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.7924[0m
[32m  eval_precision = 0.4358[0m
[32m  eval_recall = 0.3509[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.372:  43%|████▎     | 6/14 [01:01<01:16,  9.54s/it]epoch 4 loss 1.37229:  43%|████▎     | 6/14 [01:02<01:16,  9.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8025[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.7928[0m
[32m  eval_precision = 0.4355[0m
[32m  eval_recall = 0.3509[0m
[32m  ********************[0m
[32m  Best MCC:0.7928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37229:  50%|█████     | 7/14 [01:07<00:57,  8.20s/it]epoch 4 loss 1.35484:  50%|█████     | 7/14 [01:08<00:57,  8.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8032[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.7936[0m
[32m  eval_precision = 0.4441[0m
[32m  eval_recall = 0.3518[0m
[32m  ********************[0m
[32m  Best f1:0.3624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35484:  57%|█████▋    | 8/14 [01:14<00:47,  7.94s/it]epoch 4 loss 1.3514:  57%|█████▋    | 8/14 [01:15<00:47,  7.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8036[0m
[32m  eval_f1 = 0.3625[0m
[32m  eval_mcc = 0.794[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3519[0m
[32m  ********************[0m
[32m  Best f1:0.3625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3514:  64%|██████▍   | 9/14 [01:22<00:38,  7.80s/it]epoch 4 loss 1.347:  64%|██████▍   | 9/14 [01:23<00:38,  7.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8042[0m
[32m  eval_f1 = 0.3629[0m
[32m  eval_mcc = 0.7946[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.3629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.347:  71%|███████▏  | 10/14 [01:33<00:35,  8.87s/it]epoch 4 loss 1.34503:  71%|███████▏  | 10/14 [01:34<00:35,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8045[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.7949[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34503:  79%|███████▊  | 11/14 [01:41<00:25,  8.50s/it]epoch 4 loss 1.34356:  79%|███████▊  | 11/14 [01:41<00:25,  8.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8047[0m
[32m  eval_f1 = 0.3631[0m
[32m  eval_mcc = 0.7952[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.3524[0m
[32m  ********************[0m
[32m  Best f1:0.3631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34356:  86%|████████▌ | 12/14 [01:52<00:18,  9.40s/it]epoch 4 loss 1.33948:  86%|████████▌ | 12/14 [01:53<00:18,  9.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8049[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.7954[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3525[0m
[32m  ********************[0m
[32m  Best f1:0.3632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33948:  93%|█████████▎| 13/14 [02:00<00:08,  8.91s/it]epoch 4 loss 1.33726:  93%|█████████▎| 13/14 [02:01<00:08,  8.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8051[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.7955[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3525[0m
[32m  ********************[0m
[32m  Best f1:0.3632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33726: 100%|██████████| 14/14 [02:12<00:00,  9.78s/it]epoch 4 loss 1.33726: 100%|██████████| 14/14 [02:12<00:00,  9.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.77it/s] 70%|███████   | 7/10 [00:02<00:01,  2.77it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8051[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.7955[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3525[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.7881[0m
[32m  eval_f1 = 0.2983[0m
[32m  eval_mcc = 0.7784[0m
[32m  eval_precision = 0.3609[0m
[32m  eval_recall = 0.2876[0m

