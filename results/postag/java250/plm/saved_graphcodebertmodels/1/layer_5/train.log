[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'lm_head.decoder.bias', 'lm_head.dense.bias', 'lm_head.bias', 'lm_head.dense.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.53264:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0033[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0026[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53264:   7%|▋         | 1/14 [00:05<01:16,  5.89s/it]epoch 0 loss 5.53257:   7%|▋         | 1/14 [00:06<01:16,  5.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0035[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0027[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53257:  14%|█▍        | 2/14 [00:11<01:09,  5.75s/it]epoch 0 loss 5.52814:  14%|█▍        | 2/14 [00:12<01:09,  5.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0042[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0026[0m
[32m  eval_precision = 0.0023[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52814:  21%|██▏       | 3/14 [00:17<01:05,  5.95s/it]epoch 0 loss 5.5201:  21%|██▏       | 3/14 [00:18<01:05,  5.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0031[0m
[32m  eval_recall = 0.002[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.5201:  29%|██▊       | 4/14 [00:23<01:00,  6.05s/it]epoch 0 loss 5.50381:  29%|██▊       | 4/14 [00:24<01:00,  6.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0081[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.50381:  36%|███▌      | 5/14 [00:29<00:52,  5.85s/it]epoch 0 loss 5.4874:  36%|███▌      | 5/14 [00:30<00:52,  5.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0124[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.0001[0m
[32m  eval_precision = 0.017[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4874:  43%|████▎     | 6/14 [00:37<00:51,  6.47s/it]epoch 0 loss 5.46542:  43%|████▎     | 6/14 [00:37<00:51,  6.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0243[0m
[32m  eval_f1 = 0.006[0m
[32m  eval_mcc = 0.0089[0m
[32m  eval_precision = 0.0214[0m
[32m  eval_recall = 0.0077[0m
[32m  ********************[0m
[32m  Best f1:0.006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46542:  50%|█████     | 7/14 [00:45<00:49,  7.13s/it]epoch 0 loss 5.439:  50%|█████     | 7/14 [00:46<00:49,  7.13s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0446[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0256[0m
[32m  eval_precision = 0.0283[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.439:  57%|█████▋    | 8/14 [00:53<00:43,  7.32s/it]epoch 0 loss 5.40799:  57%|█████▋    | 8/14 [00:54<00:43,  7.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.39it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.39it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.12it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0771[0m
[32m  eval_f1 = 0.021[0m
[32m  eval_mcc = 0.0551[0m
[32m  eval_precision = 0.039[0m
[32m  eval_recall = 0.0243[0m
[32m  ********************[0m
[32m  Best f1:0.021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40799:  64%|██████▍   | 9/14 [01:00<00:36,  7.27s/it]epoch 0 loss 5.37305:  64%|██████▍   | 9/14 [01:01<00:36,  7.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.39it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.39it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.39it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.39it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.11it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1191[0m
[32m  eval_f1 = 0.0288[0m
[32m  eval_mcc = 0.0956[0m
[32m  eval_precision = 0.0545[0m
[32m  eval_recall = 0.0344[0m
[32m  ********************[0m
[32m  Best f1:0.0288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37305:  71%|███████▏  | 10/14 [01:08<00:29,  7.46s/it]epoch 0 loss 5.33298:  71%|███████▏  | 10/14 [01:09<00:29,  7.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.37it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.39it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.12it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1837[0m
[32m  eval_f1 = 0.0459[0m
[32m  eval_mcc = 0.1617[0m
[32m  eval_precision = 0.0691[0m
[32m  eval_recall = 0.054[0m
[32m  ********************[0m
[32m  Best f1:0.0459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.33298:  79%|███████▊  | 11/14 [01:15<00:22,  7.51s/it]epoch 0 loss 5.29035:  79%|███████▊  | 11/14 [01:16<00:22,  7.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.39it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.39it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2641[0m
[32m  eval_f1 = 0.073[0m
[32m  eval_mcc = 0.2452[0m
[32m  eval_precision = 0.1108[0m
[32m  eval_recall = 0.0819[0m
[32m  ********************[0m
[32m  Best f1:0.073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29035:  86%|████████▌ | 12/14 [01:23<00:15,  7.51s/it]epoch 0 loss 5.24317:  86%|████████▌ | 12/14 [01:24<00:15,  7.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3569[0m
[32m  eval_f1 = 0.1109[0m
[32m  eval_mcc = 0.3412[0m
[32m  eval_precision = 0.1468[0m
[32m  eval_recall = 0.1202[0m
[32m  ********************[0m
[32m  Best f1:0.1109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24317:  93%|█████████▎| 13/14 [01:30<00:07,  7.44s/it]epoch 0 loss 5.19221:  93%|█████████▎| 13/14 [01:31<00:07,  7.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4319[0m
[32m  eval_f1 = 0.1419[0m
[32m  eval_mcc = 0.4172[0m
[32m  eval_precision = 0.1853[0m
[32m  eval_recall = 0.1506[0m
[32m  ********************[0m
[32m  Best f1:0.1419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19221: 100%|██████████| 14/14 [01:37<00:00,  7.32s/it]epoch 0 loss 5.19221: 100%|██████████| 14/14 [01:37<00:00,  6.99s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.35511:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4996[0m
[32m  eval_f1 = 0.1792[0m
[32m  eval_mcc = 0.4859[0m
[32m  eval_precision = 0.225[0m
[32m  eval_recall = 0.1867[0m
[32m  ********************[0m
[32m  Best f1:0.1792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.35511:   7%|▋         | 1/14 [00:13<02:50, 13.10s/it]epoch 1 loss 4.26729:   7%|▋         | 1/14 [00:13<02:50, 13.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5548[0m
[32m  eval_f1 = 0.2061[0m
[32m  eval_mcc = 0.5413[0m
[32m  eval_precision = 0.2519[0m
[32m  eval_recall = 0.2133[0m
[32m  ********************[0m
[32m  Best f1:0.2061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.26729:  14%|█▍        | 2/14 [00:26<02:40, 13.38s/it]epoch 1 loss 4.1938:  14%|█▍        | 2/14 [00:27<02:40, 13.38s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5983[0m
[32m  eval_f1 = 0.2261[0m
[32m  eval_mcc = 0.5851[0m
[32m  eval_precision = 0.2944[0m
[32m  eval_recall = 0.2323[0m
[32m  ********************[0m
[32m  Best f1:0.2261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.1938:  21%|██▏       | 3/14 [00:39<02:26, 13.30s/it]epoch 1 loss 4.10816:  21%|██▏       | 3/14 [00:40<02:26, 13.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.2447[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.3172[0m
[32m  eval_recall = 0.2493[0m
[32m  ********************[0m
[32m  Best f1:0.2447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.10816:  29%|██▊       | 4/14 [00:52<02:11, 13.17s/it]epoch 1 loss 4.03773:  29%|██▊       | 4/14 [00:53<02:11, 13.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6645[0m
[32m  eval_f1 = 0.2608[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.3188[0m
[32m  eval_recall = 0.2646[0m
[32m  ********************[0m
[32m  Best f1:0.2608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.03773:  36%|███▌      | 5/14 [01:04<01:54, 12.73s/it]epoch 1 loss 3.95816:  36%|███▌      | 5/14 [01:05<01:54, 12.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.265[0m
[32m  eval_mcc = 0.672[0m
[32m  eval_precision = 0.321[0m
[32m  eval_recall = 0.2675[0m
[32m  ********************[0m
[32m  Best f1:0.265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.95816:  43%|████▎     | 6/14 [01:15<01:36, 12.11s/it]epoch 1 loss 3.88721:  43%|████▎     | 6/14 [01:16<01:36, 12.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7028[0m
[32m  eval_f1 = 0.2741[0m
[32m  eval_mcc = 0.6907[0m
[32m  eval_precision = 0.3313[0m
[32m  eval_recall = 0.2759[0m
[32m  ********************[0m
[32m  Best f1:0.2741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88721:  50%|█████     | 7/14 [01:24<01:16, 10.99s/it]epoch 1 loss 3.80845:  50%|█████     | 7/14 [01:25<01:16, 10.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7179[0m
[32m  eval_f1 = 0.283[0m
[32m  eval_mcc = 0.7059[0m
[32m  eval_precision = 0.3401[0m
[32m  eval_recall = 0.2839[0m
[32m  ********************[0m
[32m  Best f1:0.283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.80845:  57%|█████▋    | 8/14 [01:33<01:01, 10.30s/it]epoch 1 loss 3.73655:  57%|█████▋    | 8/14 [01:34<01:01, 10.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7308[0m
[32m  eval_f1 = 0.2898[0m
[32m  eval_mcc = 0.7189[0m
[32m  eval_precision = 0.3554[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.2898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.73655:  64%|██████▍   | 9/14 [01:42<00:49,  9.85s/it]epoch 1 loss 3.66904:  64%|██████▍   | 9/14 [01:42<00:49,  9.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7395[0m
[32m  eval_f1 = 0.2926[0m
[32m  eval_mcc = 0.7278[0m
[32m  eval_precision = 0.3558[0m
[32m  eval_recall = 0.2916[0m
[32m  ********************[0m
[32m  Best f1:0.2926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.66904:  71%|███████▏  | 10/14 [01:54<00:43, 10.80s/it]epoch 1 loss 3.60439:  71%|███████▏  | 10/14 [01:55<00:43, 10.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7475[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.7359[0m
[32m  eval_precision = 0.3559[0m
[32m  eval_recall = 0.294[0m
[32m  ********************[0m
[32m  Best f1:0.2958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.60439:  79%|███████▊  | 11/14 [02:08<00:34, 11.48s/it]epoch 1 loss 3.54143:  79%|███████▊  | 11/14 [02:08<00:34, 11.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7547[0m
[32m  eval_f1 = 0.2997[0m
[32m  eval_mcc = 0.7432[0m
[32m  eval_precision = 0.3578[0m
[32m  eval_recall = 0.2966[0m
[32m  ********************[0m
[32m  Best f1:0.2997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.54143:  86%|████████▌ | 12/14 [02:17<00:21, 10.79s/it]epoch 1 loss 3.48126:  86%|████████▌ | 12/14 [02:18<00:21, 10.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7618[0m
[32m  eval_f1 = 0.3037[0m
[32m  eval_mcc = 0.7505[0m
[32m  eval_precision = 0.3597[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.48126:  93%|█████████▎| 13/14 [02:28<00:10, 10.79s/it]epoch 1 loss 3.42163:  93%|█████████▎| 13/14 [02:28<00:10, 10.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7681[0m
[32m  eval_f1 = 0.3079[0m
[32m  eval_mcc = 0.757[0m
[32m  eval_precision = 0.3621[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.42163: 100%|██████████| 14/14 [02:39<00:00, 10.98s/it]epoch 1 loss 3.42163: 100%|██████████| 14/14 [02:39<00:00, 11.39s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.56275:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.773[0m
[32m  eval_f1 = 0.3115[0m
[32m  eval_mcc = 0.762[0m
[32m  eval_precision = 0.3646[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.56275:   7%|▋         | 1/14 [00:13<02:55, 13.50s/it]epoch 2 loss 2.54003:   7%|▋         | 1/14 [00:14<02:55, 13.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7773[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.7664[0m
[32m  eval_precision = 0.3665[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.54003:  14%|█▍        | 2/14 [00:22<02:10, 10.84s/it]epoch 2 loss 2.48497:  14%|█▍        | 2/14 [00:23<02:10, 10.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7817[0m
[32m  eval_f1 = 0.3181[0m
[32m  eval_mcc = 0.7709[0m
[32m  eval_precision = 0.3712[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.3181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.48497:  21%|██▏       | 3/14 [00:31<01:47,  9.79s/it]epoch 2 loss 2.44129:  21%|██▏       | 3/14 [00:31<01:47,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7853[0m
[32m  eval_f1 = 0.3217[0m
[32m  eval_mcc = 0.7746[0m
[32m  eval_precision = 0.383[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.44129:  29%|██▊       | 4/14 [00:41<01:39,  9.94s/it]epoch 2 loss 2.39158:  29%|██▊       | 4/14 [00:41<01:39,  9.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7894[0m
[32m  eval_f1 = 0.3253[0m
[32m  eval_mcc = 0.7788[0m
[32m  eval_precision = 0.3844[0m
[32m  eval_recall = 0.3154[0m
[32m  ********************[0m
[32m  Best f1:0.3253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.39158:  36%|███▌      | 5/14 [00:52<01:34, 10.51s/it]epoch 2 loss 2.33337:  36%|███▌      | 5/14 [00:53<01:34, 10.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.44it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.793[0m
[32m  eval_f1 = 0.3288[0m
[32m  eval_mcc = 0.7826[0m
[32m  eval_precision = 0.3947[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.3288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.33337:  43%|████▎     | 6/14 [01:05<01:30, 11.35s/it]epoch 2 loss 2.28367:  43%|████▎     | 6/14 [01:06<01:30, 11.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7962[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.7859[0m
[32m  eval_precision = 0.3969[0m
[32m  eval_recall = 0.3199[0m
[32m  ********************[0m
[32m  Best f1:0.3312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.28367:  50%|█████     | 7/14 [01:18<01:22, 11.73s/it]epoch 2 loss 2.24212:  50%|█████     | 7/14 [01:19<01:22, 11.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7997[0m
[32m  eval_f1 = 0.3335[0m
[32m  eval_mcc = 0.7895[0m
[32m  eval_precision = 0.3972[0m
[32m  eval_recall = 0.3225[0m
[32m  ********************[0m
[32m  Best f1:0.3335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.24212:  57%|█████▋    | 8/14 [01:27<01:05, 10.92s/it]epoch 2 loss 2.20895:  57%|█████▋    | 8/14 [01:28<01:05, 10.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8027[0m
[32m  eval_f1 = 0.3364[0m
[32m  eval_mcc = 0.7926[0m
[32m  eval_precision = 0.3991[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best f1:0.3364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.20895:  64%|██████▍   | 9/14 [01:39<00:56, 11.28s/it]epoch 2 loss 2.17492:  64%|██████▍   | 9/14 [01:40<00:56, 11.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8058[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.7958[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.3279[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.17492:  71%|███████▏  | 10/14 [01:50<00:44, 11.20s/it]epoch 2 loss 2.13548:  71%|███████▏  | 10/14 [01:51<00:44, 11.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8086[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.7987[0m
[32m  eval_precision = 0.4016[0m
[32m  eval_recall = 0.3302[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.13548:  79%|███████▊  | 11/14 [02:02<00:34, 11.55s/it]epoch 2 loss 2.11297:  79%|███████▊  | 11/14 [02:03<00:34, 11.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8118[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.802[0m
[32m  eval_precision = 0.4024[0m
[32m  eval_recall = 0.3328[0m
[32m  ********************[0m
[32m  Best f1:0.3429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.11297:  86%|████████▌ | 12/14 [02:13<00:22, 11.20s/it]epoch 2 loss 2.0806:  86%|████████▌ | 12/14 [02:14<00:22, 11.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8147[0m
[32m  eval_f1 = 0.345[0m
[32m  eval_mcc = 0.805[0m
[32m  eval_precision = 0.404[0m
[32m  eval_recall = 0.3347[0m
[32m  ********************[0m
[32m  Best f1:0.345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.0806:  93%|█████████▎| 13/14 [02:25<00:11, 11.49s/it]epoch 2 loss 2.05628:  93%|█████████▎| 13/14 [02:25<00:11, 11.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8183[0m
[32m  eval_f1 = 0.3467[0m
[32m  eval_mcc = 0.8088[0m
[32m  eval_precision = 0.4052[0m
[32m  eval_recall = 0.3359[0m
[32m  ********************[0m
[32m  Best f1:0.3467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.05628: 100%|██████████| 14/14 [02:38<00:00, 11.93s/it]epoch 2 loss 2.05628: 100%|██████████| 14/14 [02:38<00:00, 11.31s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.61099:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8216[0m
[32m  eval_f1 = 0.3494[0m
[32m  eval_mcc = 0.8122[0m
[32m  eval_precision = 0.4068[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best f1:0.3494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.61099:   7%|▋         | 1/14 [00:13<02:50, 13.08s/it]epoch 3 loss 1.58477:   7%|▋         | 1/14 [00:13<02:50, 13.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8241[0m
[32m  eval_f1 = 0.351[0m
[32m  eval_mcc = 0.8149[0m
[32m  eval_precision = 0.4079[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.58477:  14%|█▍        | 2/14 [00:26<02:36, 13.01s/it]epoch 3 loss 1.60073:  14%|█▍        | 2/14 [00:26<02:36, 13.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8258[0m
[32m  eval_f1 = 0.3513[0m
[32m  eval_mcc = 0.8167[0m
[32m  eval_precision = 0.4079[0m
[32m  eval_recall = 0.3404[0m
[32m  ********************[0m
[32m  Best f1:0.3513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.60073:  21%|██▏       | 3/14 [00:38<02:20, 12.80s/it]epoch 3 loss 1.57898:  21%|██▏       | 3/14 [00:39<02:20, 12.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8272[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.8182[0m
[32m  eval_precision = 0.4084[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.57898:  29%|██▊       | 4/14 [00:49<01:59, 12.00s/it]epoch 3 loss 1.55723:  29%|██▊       | 4/14 [00:50<01:59, 12.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8285[0m
[32m  eval_f1 = 0.3536[0m
[32m  eval_mcc = 0.8195[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.3425[0m
[32m  ********************[0m
[32m  Best f1:0.3536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55723:  36%|███▌      | 5/14 [00:57<01:35, 10.58s/it]epoch 3 loss 1.55216:  36%|███▌      | 5/14 [00:58<01:35, 10.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8291[0m
[32m  eval_f1 = 0.3539[0m
[32m  eval_mcc = 0.8201[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.3539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55216:  43%|████▎     | 6/14 [01:06<01:19,  9.95s/it]epoch 3 loss 1.53896:  43%|████▎     | 6/14 [01:06<01:19,  9.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8301[0m
[32m  eval_f1 = 0.3549[0m
[32m  eval_mcc = 0.8212[0m
[32m  eval_precision = 0.4176[0m
[32m  eval_recall = 0.3439[0m
[32m  ********************[0m
[32m  Best f1:0.3549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53896:  50%|█████     | 7/14 [01:16<01:11, 10.19s/it]epoch 3 loss 1.5168:  50%|█████     | 7/14 [01:17<01:11, 10.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8312[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.8223[0m
[32m  eval_precision = 0.415[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.3561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5168:  57%|█████▋    | 8/14 [01:28<01:03, 10.56s/it]epoch 3 loss 1.50679:  57%|█████▋    | 8/14 [01:28<01:03, 10.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8321[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.8233[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50679:  64%|██████▍   | 9/14 [01:41<00:57, 11.43s/it]epoch 3 loss 1.48874:  64%|██████▍   | 9/14 [01:42<00:57, 11.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8332[0m
[32m  eval_f1 = 0.3568[0m
[32m  eval_mcc = 0.8244[0m
[32m  eval_precision = 0.415[0m
[32m  eval_recall = 0.3458[0m
[32m  ********************[0m
[32m  Best f1:0.3568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48874:  71%|███████▏  | 10/14 [01:50<00:42, 10.70s/it]epoch 3 loss 1.47355:  71%|███████▏  | 10/14 [01:51<00:42, 10.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.834[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.8253[0m
[32m  eval_precision = 0.4241[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.3585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47355:  79%|███████▊  | 11/14 [02:00<00:31, 10.56s/it]epoch 3 loss 1.46145:  79%|███████▊  | 11/14 [02:01<00:31, 10.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8348[0m
[32m  eval_f1 = 0.3595[0m
[32m  eval_mcc = 0.8261[0m
[32m  eval_precision = 0.4287[0m
[32m  eval_recall = 0.348[0m
[32m  ********************[0m
[32m  Best f1:0.3595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46145:  86%|████████▌ | 12/14 [02:13<00:22, 11.14s/it]epoch 3 loss 1.45661:  86%|████████▌ | 12/14 [02:14<00:22, 11.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8358[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.8271[0m
[32m  eval_precision = 0.4292[0m
[32m  eval_recall = 0.3492[0m
[32m  ********************[0m
[32m  Best f1:0.361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45661:  93%|█████████▎| 13/14 [02:26<00:11, 11.80s/it]epoch 3 loss 1.44515:  93%|█████████▎| 13/14 [02:27<00:11, 11.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8363[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.8277[0m
[32m  eval_precision = 0.4294[0m
[32m  eval_recall = 0.3509[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44515: 100%|██████████| 14/14 [02:35<00:00, 10.93s/it]epoch 3 loss 1.44515: 100%|██████████| 14/14 [02:35<00:00, 11.11s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.23134:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.837[0m
[32m  eval_f1 = 0.3634[0m
[32m  eval_mcc = 0.8283[0m
[32m  eval_precision = 0.4292[0m
[32m  eval_recall = 0.3513[0m
[32m  ********************[0m
[32m  Best f1:0.3634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23134:   7%|▋         | 1/14 [00:09<02:01,  9.38s/it]epoch 4 loss 1.22821:   7%|▋         | 1/14 [00:10<02:01,  9.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8375[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.8289[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3529[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22821:  14%|█▍        | 2/14 [00:18<01:50,  9.23s/it]epoch 4 loss 1.26411:  14%|█▍        | 2/14 [00:19<01:50,  9.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8382[0m
[32m  eval_f1 = 0.3707[0m
[32m  eval_mcc = 0.8297[0m
[32m  eval_precision = 0.4438[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best f1:0.3707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26411:  21%|██▏       | 3/14 [00:28<01:47,  9.79s/it]epoch 4 loss 1.26676:  21%|██▏       | 3/14 [00:29<01:47,  9.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.37it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.56it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.50it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.47it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.45it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.44it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.65it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8388[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.8303[0m
[32m  eval_precision = 0.444[0m
[32m  eval_recall = 0.3578[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26676:  29%|██▊       | 4/14 [00:41<01:47, 10.79s/it]epoch 4 loss 1.26422:  29%|██▊       | 4/14 [00:42<01:47, 10.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8395[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.831[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.3602[0m
[32m  ********************[0m
[32m  Best f1:0.3746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26422:  36%|███▌      | 5/14 [00:53<01:41, 11.25s/it]epoch 4 loss 1.25207:  36%|███▌      | 5/14 [00:54<01:41, 11.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8399[0m
[32m  eval_f1 = 0.3753[0m
[32m  eval_mcc = 0.8314[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25207:  43%|████▎     | 6/14 [01:05<01:33, 11.66s/it]epoch 4 loss 1.25269:  43%|████▎     | 6/14 [01:06<01:33, 11.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8402[0m
[32m  eval_f1 = 0.3772[0m
[32m  eval_mcc = 0.8317[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.363[0m
[32m  ********************[0m
[32m  Best f1:0.3772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25269:  50%|█████     | 7/14 [01:17<01:22, 11.79s/it]epoch 4 loss 1.23475:  50%|█████     | 7/14 [01:18<01:22, 11.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8404[0m
[32m  eval_f1 = 0.3775[0m
[32m  eval_mcc = 0.832[0m
[32m  eval_precision = 0.444[0m
[32m  eval_recall = 0.3635[0m
[32m  ********************[0m
[32m  Best f1:0.3775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23475:  57%|█████▋    | 8/14 [01:29<01:09, 11.67s/it]epoch 4 loss 1.23118:  57%|█████▋    | 8/14 [01:30<01:09, 11.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8405[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.8321[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3636[0m
[32m  ********************[0m
[32m  Best MCC:0.8321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23118:  64%|██████▍   | 9/14 [01:36<00:52, 10.41s/it]epoch 4 loss 1.22799:  64%|██████▍   | 9/14 [01:37<00:52, 10.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8408[0m
[32m  eval_f1 = 0.3781[0m
[32m  eval_mcc = 0.8324[0m
[32m  eval_precision = 0.4432[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22799:  71%|███████▏  | 10/14 [01:45<00:38,  9.73s/it]epoch 4 loss 1.22601:  71%|███████▏  | 10/14 [01:45<00:38,  9.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8409[0m
[32m  eval_f1 = 0.3782[0m
[32m  eval_mcc = 0.8325[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.3647[0m
[32m  ********************[0m
[32m  Best f1:0.3782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22601:  79%|███████▊  | 11/14 [01:52<00:27,  9.10s/it]epoch 4 loss 1.22332:  79%|███████▊  | 11/14 [01:53<00:27,  9.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.841[0m
[32m  eval_f1 = 0.3782[0m
[32m  eval_mcc = 0.8326[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.3649[0m
[32m  ********************[0m
[32m  Best f1:0.3782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22332:  86%|████████▌ | 12/14 [02:01<00:17,  8.87s/it]epoch 4 loss 1.21939:  86%|████████▌ | 12/14 [02:01<00:17,  8.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.841[0m
[32m  eval_f1 = 0.3782[0m
[32m  eval_mcc = 0.8326[0m
[32m  eval_precision = 0.4428[0m
[32m  eval_recall = 0.365[0m

epoch 4 loss 1.21939:  93%|█████████▎| 13/14 [02:05<00:07,  7.46s/it]epoch 4 loss 1.21592:  93%|█████████▎| 13/14 [02:05<00:07,  7.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8411[0m
[32m  eval_f1 = 0.3783[0m
[32m  eval_mcc = 0.8327[0m
[32m  eval_precision = 0.4428[0m
[32m  eval_recall = 0.3651[0m
[32m  ********************[0m
[32m  Best f1:0.3783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21592: 100%|██████████| 14/14 [02:13<00:00,  7.77s/it]epoch 4 loss 1.21592: 100%|██████████| 14/14 [02:13<00:00,  9.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.62it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8411[0m
[32m  eval_f1 = 0.3783[0m
[32m  eval_mcc = 0.8327[0m
[32m  eval_precision = 0.4428[0m
[32m  eval_recall = 0.3651[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8251[0m
[32m  eval_f1 = 0.3074[0m
[32m  eval_mcc = 0.8165[0m
[32m  eval_precision = 0.3653[0m
[32m  eval_recall = 0.2962[0m

