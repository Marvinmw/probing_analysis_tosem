[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mpretrained the encoder[0m
Some weights of the model checkpoint at microsoft/graphcodebert-base were not used when initializing RobertaModel: ['lm_head.layer_norm.bias', 'lm_head.layer_norm.weight', 'lm_head.bias', 'lm_head.decoder.weight', 'lm_head.decoder.bias', 'lm_head.dense.weight', 'lm_head.dense.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at microsoft/graphcodebert-base and are newly initialized: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=False, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 1[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 64[0m
[32m  Total train batch size = 64[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 70[0m
  0%|          | 0/14 [00:00<?, ?it/s]epoch 0 loss 5.53029:   0%|          | 0/14 [00:01<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0044[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0001[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.53029:   7%|▋         | 1/14 [00:06<01:22,  6.32s/it]epoch 0 loss 5.53018:   7%|▋         | 1/14 [00:07<01:22,  6.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.12it/s][A100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0049[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0001[0m
[32m  eval_precision = 0.0073[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53018:  14%|█▍        | 2/14 [00:13<01:19,  6.60s/it]epoch 0 loss 5.52515:  14%|█▍        | 2/14 [00:13<01:19,  6.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.006[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = 0.0006[0m
[32m  eval_precision = 0.0061[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.52515:  21%|██▏       | 3/14 [00:24<01:35,  8.65s/it]epoch 0 loss 5.51789:  21%|██▏       | 3/14 [00:25<01:35,  8.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.008[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0016[0m
[32m  eval_precision = 0.0051[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51789:  29%|██▊       | 4/14 [00:32<01:24,  8.43s/it]epoch 0 loss 5.50292:  29%|██▊       | 4/14 [00:33<01:24,  8.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0109[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0032[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50292:  36%|███▌      | 5/14 [00:40<01:15,  8.41s/it]epoch 0 loss 5.48874:  36%|███▌      | 5/14 [00:41<01:15,  8.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0204[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = 0.0108[0m
[32m  eval_precision = 0.013[0m
[32m  eval_recall = 0.0066[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48874:  43%|████▎     | 6/14 [00:49<01:07,  8.40s/it]epoch 0 loss 5.46813:  43%|████▎     | 6/14 [00:49<01:07,  8.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.029[0m
[32m  eval_f1 = 0.006[0m
[32m  eval_mcc = 0.0163[0m
[32m  eval_precision = 0.0186[0m
[32m  eval_recall = 0.0088[0m
[32m  ********************[0m
[32m  Best f1:0.006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46813:  50%|█████     | 7/14 [00:57<00:58,  8.38s/it]epoch 0 loss 5.44389:  50%|█████     | 7/14 [00:58<00:58,  8.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0453[0m
[32m  eval_f1 = 0.0111[0m
[32m  eval_mcc = 0.0293[0m
[32m  eval_precision = 0.0295[0m
[32m  eval_recall = 0.0154[0m
[32m  ********************[0m
[32m  Best f1:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44389:  57%|█████▋    | 8/14 [01:08<00:55,  9.29s/it]epoch 0 loss 5.41508:  57%|█████▋    | 8/14 [01:09<00:55,  9.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0775[0m
[32m  eval_f1 = 0.0205[0m
[32m  eval_mcc = 0.0588[0m
[32m  eval_precision = 0.0428[0m
[32m  eval_recall = 0.0264[0m
[32m  ********************[0m
[32m  Best f1:0.0205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41508:  64%|██████▍   | 9/14 [01:20<00:50, 10.04s/it]epoch 0 loss 5.38335:  64%|██████▍   | 9/14 [01:21<00:50, 10.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1269[0m
[32m  eval_f1 = 0.0353[0m
[32m  eval_mcc = 0.1079[0m
[32m  eval_precision = 0.0608[0m
[32m  eval_recall = 0.0426[0m
[32m  ********************[0m
[32m  Best f1:0.0353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38335:  71%|███████▏  | 10/14 [01:33<00:43, 10.98s/it]epoch 0 loss 5.3468:  71%|███████▏  | 10/14 [01:34<00:43, 10.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1878[0m
[32m  eval_f1 = 0.0513[0m
[32m  eval_mcc = 0.1708[0m
[32m  eval_precision = 0.0811[0m
[32m  eval_recall = 0.0614[0m
[32m  ********************[0m
[32m  Best f1:0.0513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1708[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3468:  79%|███████▊  | 11/14 [01:42<00:30, 10.29s/it]epoch 0 loss 5.30758:  79%|███████▊  | 11/14 [01:42<00:30, 10.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2675[0m
[32m  eval_f1 = 0.0783[0m
[32m  eval_mcc = 0.2541[0m
[32m  eval_precision = 0.1114[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.0783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30758:  86%|████████▌ | 12/14 [01:52<00:20, 10.37s/it]epoch 0 loss 5.26431:  86%|████████▌ | 12/14 [01:53<00:20, 10.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3413[0m
[32m  eval_f1 = 0.1013[0m
[32m  eval_mcc = 0.3292[0m
[32m  eval_precision = 0.1411[0m
[32m  eval_recall = 0.1126[0m
[32m  ********************[0m
[32m  Best f1:0.1013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26431:  93%|█████████▎| 13/14 [02:04<00:10, 10.71s/it]epoch 0 loss 5.21731:  93%|█████████▎| 13/14 [02:04<00:10, 10.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.423[0m
[32m  eval_f1 = 0.1319[0m
[32m  eval_mcc = 0.4123[0m
[32m  eval_precision = 0.1733[0m
[32m  eval_recall = 0.1414[0m
[32m  ********************[0m
[32m  Best f1:0.1319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21731: 100%|██████████| 14/14 [02:17<00:00, 11.41s/it]epoch 0 loss 5.21731: 100%|██████████| 14/14 [02:17<00:00,  9.80s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 1 loss 4.45096:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4931[0m
[32m  eval_f1 = 0.1688[0m
[32m  eval_mcc = 0.4829[0m
[32m  eval_precision = 0.2291[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.45096:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it]epoch 1 loss 4.37344:   7%|▋         | 1/14 [00:09<01:58,  9.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5571[0m
[32m  eval_f1 = 0.2053[0m
[32m  eval_mcc = 0.547[0m
[32m  eval_precision = 0.2699[0m
[32m  eval_recall = 0.2108[0m
[32m  ********************[0m
[32m  Best f1:0.2053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.37344:  14%|█▍        | 2/14 [00:19<01:55,  9.64s/it]epoch 1 loss 4.30625:  14%|█▍        | 2/14 [00:19<01:55,  9.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6002[0m
[32m  eval_f1 = 0.2249[0m
[32m  eval_mcc = 0.59[0m
[32m  eval_precision = 0.2936[0m
[32m  eval_recall = 0.2288[0m
[32m  ********************[0m
[32m  Best f1:0.2249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.59[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.30625:  21%|██▏       | 3/14 [00:31<02:00, 10.99s/it]epoch 1 loss 4.22651:  21%|██▏       | 3/14 [00:32<02:00, 10.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6311[0m
[32m  eval_f1 = 0.2397[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.3036[0m
[32m  eval_recall = 0.2427[0m
[32m  ********************[0m
[32m  Best f1:0.2397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.22651:  29%|██▊       | 4/14 [00:44<01:58, 11.83s/it]epoch 1 loss 4.16033:  29%|██▊       | 4/14 [00:45<01:58, 11.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.2489[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.3103[0m
[32m  eval_recall = 0.2512[0m
[32m  ********************[0m
[32m  Best f1:0.2489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.16033:  36%|███▌      | 5/14 [00:53<01:36, 10.77s/it]epoch 1 loss 4.08706:  36%|███▌      | 5/14 [00:54<01:36, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.261[0m
[32m  eval_mcc = 0.663[0m
[32m  eval_precision = 0.3279[0m
[32m  eval_recall = 0.2627[0m
[32m  ********************[0m
[32m  Best f1:0.261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.08706:  43%|████▎     | 6/14 [01:04<01:27, 10.90s/it]epoch 1 loss 4.02107:  43%|████▎     | 6/14 [01:05<01:27, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.47it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.44it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6912[0m
[32m  eval_f1 = 0.2695[0m
[32m  eval_mcc = 0.6799[0m
[32m  eval_precision = 0.3342[0m
[32m  eval_recall = 0.2697[0m
[32m  ********************[0m
[32m  Best f1:0.2695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 4.02107:  50%|█████     | 7/14 [01:14<01:12, 10.38s/it]epoch 1 loss 3.94722:  50%|█████     | 7/14 [01:15<01:12, 10.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7073[0m
[32m  eval_f1 = 0.2751[0m
[32m  eval_mcc = 0.6959[0m
[32m  eval_precision = 0.3382[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.94722:  57%|█████▋    | 8/14 [01:26<01:05, 10.86s/it]epoch 1 loss 3.88009:  57%|█████▋    | 8/14 [01:26<01:05, 10.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7199[0m
[32m  eval_f1 = 0.279[0m
[32m  eval_mcc = 0.7086[0m
[32m  eval_precision = 0.3489[0m
[32m  eval_recall = 0.2763[0m
[32m  ********************[0m
[32m  Best f1:0.279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.88009:  64%|██████▍   | 9/14 [01:35<00:51, 10.37s/it]epoch 1 loss 3.81608:  64%|██████▍   | 9/14 [01:36<00:51, 10.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7295[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.7183[0m
[32m  eval_precision = 0.3507[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.81608:  71%|███████▏  | 10/14 [01:47<00:43, 10.87s/it]epoch 1 loss 3.75527:  71%|███████▏  | 10/14 [01:48<00:43, 10.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7375[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.7264[0m
[32m  eval_precision = 0.3584[0m
[32m  eval_recall = 0.2879[0m
[32m  ********************[0m
[32m  Best f1:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.75527:  79%|███████▊  | 11/14 [01:58<00:32, 10.90s/it]epoch 1 loss 3.69588:  79%|███████▊  | 11/14 [01:59<00:32, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.746[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.7351[0m
[32m  eval_precision = 0.3637[0m
[32m  eval_recall = 0.292[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.69588:  86%|████████▌ | 12/14 [02:10<00:22, 11.27s/it]epoch 1 loss 3.63857:  86%|████████▌ | 12/14 [02:11<00:22, 11.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7527[0m
[32m  eval_f1 = 0.302[0m
[32m  eval_mcc = 0.7419[0m
[32m  eval_precision = 0.3769[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.63857:  93%|█████████▎| 13/14 [02:18<00:10, 10.44s/it]epoch 1 loss 3.58214:  93%|█████████▎| 13/14 [02:19<00:10, 10.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7598[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.7491[0m
[32m  eval_precision = 0.3828[0m
[32m  eval_recall = 0.3039[0m
[32m  ********************[0m
[32m  Best f1:0.3101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 3.58214: 100%|██████████| 14/14 [02:31<00:00, 11.07s/it]epoch 1 loss 3.58214: 100%|██████████| 14/14 [02:31<00:00, 10.82s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 2 loss 2.77661:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7663[0m
[32m  eval_f1 = 0.3141[0m
[32m  eval_mcc = 0.7558[0m
[32m  eval_precision = 0.3851[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.77661:   7%|▋         | 1/14 [00:12<02:47, 12.87s/it]epoch 2 loss 2.74625:   7%|▋         | 1/14 [00:13<02:47, 12.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.772[0m
[32m  eval_f1 = 0.3188[0m
[32m  eval_mcc = 0.7617[0m
[32m  eval_precision = 0.3885[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.74625:  14%|█▍        | 2/14 [00:25<02:35, 12.98s/it]epoch 2 loss 2.69272:  14%|█▍        | 2/14 [00:26<02:35, 12.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7755[0m
[32m  eval_f1 = 0.3219[0m
[32m  eval_mcc = 0.7653[0m
[32m  eval_precision = 0.3899[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.69272:  21%|██▏       | 3/14 [00:38<02:22, 12.92s/it]epoch 2 loss 2.65173:  21%|██▏       | 3/14 [00:39<02:22, 12.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7791[0m
[32m  eval_f1 = 0.3259[0m
[32m  eval_mcc = 0.7689[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.3157[0m
[32m  ********************[0m
[32m  Best f1:0.3259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.65173:  29%|██▊       | 4/14 [00:50<02:05, 12.59s/it]epoch 2 loss 2.60251:  29%|██▊       | 4/14 [00:51<02:05, 12.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7828[0m
[32m  eval_f1 = 0.3304[0m
[32m  eval_mcc = 0.7727[0m
[32m  eval_precision = 0.399[0m
[32m  eval_recall = 0.319[0m
[32m  ********************[0m
[32m  Best f1:0.3304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.60251:  36%|███▌      | 5/14 [01:02<01:48, 12.10s/it]epoch 2 loss 2.54576:  36%|███▌      | 5/14 [01:02<01:48, 12.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7866[0m
[32m  eval_f1 = 0.3333[0m
[32m  eval_mcc = 0.7767[0m
[32m  eval_precision = 0.4014[0m
[32m  eval_recall = 0.3208[0m
[32m  ********************[0m
[32m  Best f1:0.3333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.54576:  43%|████▎     | 6/14 [01:10<01:27, 10.90s/it]epoch 2 loss 2.49653:  43%|████▎     | 6/14 [01:11<01:27, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7902[0m
[32m  eval_f1 = 0.336[0m
[32m  eval_mcc = 0.7804[0m
[32m  eval_precision = 0.4022[0m
[32m  eval_recall = 0.3226[0m
[32m  ********************[0m
[32m  Best f1:0.336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.49653:  50%|█████     | 7/14 [01:19<01:11, 10.21s/it]epoch 2 loss 2.45558:  50%|█████     | 7/14 [01:20<01:11, 10.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7942[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.7845[0m
[32m  eval_precision = 0.4032[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.45558:  57%|█████▋    | 8/14 [01:31<01:04, 10.73s/it]epoch 2 loss 2.42191:  57%|█████▋    | 8/14 [01:32<01:04, 10.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.7974[0m
[32m  eval_f1 = 0.3405[0m
[32m  eval_mcc = 0.7877[0m
[32m  eval_precision = 0.4043[0m
[32m  eval_recall = 0.3263[0m
[32m  ********************[0m
[32m  Best f1:0.3405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.42191:  64%|██████▍   | 9/14 [01:44<00:56, 11.40s/it]epoch 2 loss 2.38843:  64%|██████▍   | 9/14 [01:44<00:56, 11.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8003[0m
[32m  eval_f1 = 0.3442[0m
[32m  eval_mcc = 0.7907[0m
[32m  eval_precision = 0.4058[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.3442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.38843:  71%|███████▏  | 10/14 [01:56<00:46, 11.58s/it]epoch 2 loss 2.34956:  71%|███████▏  | 10/14 [01:56<00:46, 11.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.803[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.7935[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.3321[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.34956:  79%|███████▊  | 11/14 [02:04<00:32, 10.73s/it]epoch 2 loss 2.3262:  79%|███████▊  | 11/14 [02:05<00:32, 10.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8051[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.7956[0m
[32m  eval_precision = 0.4089[0m
[32m  eval_recall = 0.3358[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.3262:  86%|████████▌ | 12/14 [02:13<00:20, 10.01s/it]epoch 2 loss 2.29431:  86%|████████▌ | 12/14 [02:14<00:20, 10.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8071[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.7977[0m
[32m  eval_precision = 0.4097[0m
[32m  eval_recall = 0.3382[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.29431:  93%|█████████▎| 13/14 [02:26<00:10, 10.83s/it]epoch 2 loss 2.2687:  93%|█████████▎| 13/14 [02:26<00:10, 10.83s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8087[0m
[32m  eval_f1 = 0.3527[0m
[32m  eval_mcc = 0.7994[0m
[32m  eval_precision = 0.4095[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.7994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 2.2687: 100%|██████████| 14/14 [02:38<00:00, 11.44s/it]epoch 2 loss 2.2687: 100%|██████████| 14/14 [02:38<00:00, 11.35s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 3 loss 1.82558:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.81[0m
[32m  eval_f1 = 0.3536[0m
[32m  eval_mcc = 0.8008[0m
[32m  eval_precision = 0.4095[0m
[32m  eval_recall = 0.3411[0m
[32m  ********************[0m
[32m  Best f1:0.3536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.82558:   7%|▋         | 1/14 [00:09<02:01,  9.36s/it]epoch 3 loss 1.79584:   7%|▋         | 1/14 [00:10<02:01,  9.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8112[0m
[32m  eval_f1 = 0.3539[0m
[32m  eval_mcc = 0.8019[0m
[32m  eval_precision = 0.41[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.3539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.79584:  14%|█▍        | 2/14 [00:17<01:47,  8.92s/it]epoch 3 loss 1.81024:  14%|█▍        | 2/14 [00:18<01:47,  8.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8124[0m
[32m  eval_f1 = 0.3545[0m
[32m  eval_mcc = 0.8032[0m
[32m  eval_precision = 0.4104[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.3545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.81024:  21%|██▏       | 3/14 [00:27<01:38,  8.99s/it]epoch 3 loss 1.78765:  21%|██▏       | 3/14 [00:27<01:38,  8.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8139[0m
[32m  eval_f1 = 0.3557[0m
[32m  eval_mcc = 0.8047[0m
[32m  eval_precision = 0.411[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.3557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.78765:  29%|██▊       | 4/14 [00:39<01:41, 10.18s/it]epoch 3 loss 1.76447:  29%|██▊       | 4/14 [00:39<01:41, 10.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.815[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.8059[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.3441[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.76447:  36%|███▌      | 5/14 [00:51<01:38, 10.97s/it]epoch 3 loss 1.75912:  36%|███▌      | 5/14 [00:52<01:38, 10.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8165[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.8074[0m
[32m  eval_precision = 0.4204[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.75912:  43%|████▎     | 6/14 [01:03<01:32, 11.50s/it]epoch 3 loss 1.7446:  43%|████▎     | 6/14 [01:04<01:32, 11.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8175[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.8085[0m
[32m  eval_precision = 0.4205[0m
[32m  eval_recall = 0.3464[0m
[32m  ********************[0m
[32m  Best f1:0.3592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.7446:  50%|█████     | 7/14 [01:13<01:16, 10.90s/it]epoch 3 loss 1.72213:  50%|█████     | 7/14 [01:14<01:16, 10.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8187[0m
[32m  eval_f1 = 0.3604[0m
[32m  eval_mcc = 0.8097[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.3604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.72213:  57%|█████▋    | 8/14 [01:25<01:07, 11.24s/it]epoch 3 loss 1.7109:  57%|█████▋    | 8/14 [01:26<01:07, 11.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8198[0m
[32m  eval_f1 = 0.3614[0m
[32m  eval_mcc = 0.8108[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.349[0m
[32m  ********************[0m
[32m  Best f1:0.3614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.7109:  64%|██████▍   | 9/14 [01:36<00:55, 11.04s/it]epoch 3 loss 1.69212:  64%|██████▍   | 9/14 [01:36<00:55, 11.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.821[0m
[32m  eval_f1 = 0.3636[0m
[32m  eval_mcc = 0.8121[0m
[32m  eval_precision = 0.4301[0m
[32m  eval_recall = 0.3505[0m
[32m  ********************[0m
[32m  Best f1:0.3636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.69212:  71%|███████▏  | 10/14 [01:48<00:45, 11.35s/it]epoch 3 loss 1.67653:  71%|███████▏  | 10/14 [01:49<00:45, 11.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8221[0m
[32m  eval_f1 = 0.3665[0m
[32m  eval_mcc = 0.8132[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.3533[0m
[32m  ********************[0m
[32m  Best f1:0.3665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.67653:  79%|███████▊  | 11/14 [01:56<00:31, 10.40s/it]epoch 3 loss 1.66353:  79%|███████▊  | 11/14 [01:57<00:31, 10.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8229[0m
[32m  eval_f1 = 0.3671[0m
[32m  eval_mcc = 0.8141[0m
[32m  eval_precision = 0.4307[0m
[32m  eval_recall = 0.3541[0m
[32m  ********************[0m
[32m  Best f1:0.3671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.66353:  86%|████████▌ | 12/14 [02:04<00:19,  9.80s/it]epoch 3 loss 1.65735:  86%|████████▌ | 12/14 [02:05<00:19,  9.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8239[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.8151[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3555[0m
[32m  ********************[0m
[32m  Best f1:0.369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.65735:  93%|█████████▎| 13/14 [02:16<00:10, 10.39s/it]epoch 3 loss 1.64482:  93%|█████████▎| 13/14 [02:17<00:10, 10.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8252[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.8164[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.3568[0m
[32m  ********************[0m
[32m  Best f1:0.3705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.64482: 100%|██████████| 14/14 [02:28<00:00, 10.88s/it]epoch 3 loss 1.64482: 100%|██████████| 14/14 [02:28<00:00, 10.62s/it]
  0%|          | 0/14 [00:00<?, ?it/s]epoch 4 loss 1.41599:   0%|          | 0/14 [00:00<?, ?it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8258[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.8171[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3572[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41599:   7%|▋         | 1/14 [00:13<02:51, 13.17s/it]epoch 4 loss 1.4186:   7%|▋         | 1/14 [00:13<02:51, 13.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8265[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.8177[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3577[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4186:  14%|█▍        | 2/14 [00:26<02:36, 13.02s/it]epoch 4 loss 1.45525:  14%|█▍        | 2/14 [00:26<02:36, 13.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.827[0m
[32m  eval_f1 = 0.3715[0m
[32m  eval_mcc = 0.8182[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.3715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45525:  21%|██▏       | 3/14 [00:38<02:22, 12.92s/it]epoch 4 loss 1.45629:  21%|██▏       | 3/14 [00:39<02:22, 12.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8278[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.8191[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3588[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45629:  29%|██▊       | 4/14 [00:51<02:07, 12.73s/it]epoch 4 loss 1.45417:  29%|██▊       | 4/14 [00:52<02:07, 12.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8284[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.8198[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.3591[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45417:  36%|███▌      | 5/14 [01:00<01:41, 11.31s/it]epoch 4 loss 1.44153:  36%|███▌      | 5/14 [01:00<01:41, 11.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.829[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.8204[0m
[32m  eval_precision = 0.44[0m
[32m  eval_recall = 0.3599[0m
[32m  ********************[0m
[32m  Best f1:0.3732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44153:  43%|████▎     | 6/14 [01:08<01:23, 10.44s/it]epoch 4 loss 1.44138:  43%|████▎     | 6/14 [01:09<01:23, 10.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8295[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.8208[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3603[0m
[32m  ********************[0m
[32m  Best f1:0.3737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44138:  50%|█████     | 7/14 [01:17<01:09,  9.90s/it]epoch 4 loss 1.42313:  50%|█████     | 7/14 [01:18<01:09,  9.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8296[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.8209[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.3603[0m
[32m  ********************[0m
[32m  Best f1:0.3737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42313:  57%|█████▋    | 8/14 [01:29<01:04, 10.67s/it]epoch 4 loss 1.41845:  57%|█████▋    | 8/14 [01:30<01:04, 10.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.83[0m
[32m  eval_f1 = 0.3743[0m
[32m  eval_mcc = 0.8214[0m
[32m  eval_precision = 0.4489[0m
[32m  eval_recall = 0.3611[0m
[32m  ********************[0m
[32m  Best f1:0.3743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41845:  64%|██████▍   | 9/14 [01:41<00:55, 11.06s/it]epoch 4 loss 1.41393:  64%|██████▍   | 9/14 [01:42<00:55, 11.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8301[0m
[32m  eval_f1 = 0.3752[0m
[32m  eval_mcc = 0.8215[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3616[0m
[32m  ********************[0m
[32m  Best f1:0.3752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41393:  71%|███████▏  | 10/14 [01:55<00:46, 11.75s/it]epoch 4 loss 1.41164:  71%|███████▏  | 10/14 [01:55<00:46, 11.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8303[0m
[32m  eval_f1 = 0.3753[0m
[32m  eval_mcc = 0.8217[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.3617[0m
[32m  ********************[0m
[32m  Best f1:0.3753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41164:  79%|███████▊  | 11/14 [02:03<00:32, 10.81s/it]epoch 4 loss 1.40825:  79%|███████▊  | 11/14 [02:04<00:32, 10.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8304[0m
[32m  eval_f1 = 0.3754[0m
[32m  eval_mcc = 0.8218[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.3618[0m
[32m  ********************[0m
[32m  Best f1:0.3754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40825:  86%|████████▌ | 12/14 [02:12<00:20, 10.12s/it]epoch 4 loss 1.40327:  86%|████████▌ | 12/14 [02:13<00:20, 10.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8305[0m
[32m  eval_f1 = 0.3755[0m
[32m  eval_mcc = 0.8219[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.3619[0m
[32m  ********************[0m
[32m  Best f1:0.3755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.8219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40327:  93%|█████████▎| 13/14 [02:21<00:09,  9.80s/it]epoch 4 loss 1.40007:  93%|█████████▎| 13/14 [02:22<00:09,  9.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8306[0m
[32m  eval_f1 = 0.3755[0m
[32m  eval_mcc = 0.822[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.362[0m
[32m  ********************[0m
[32m  Best f1:0.3755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/plm/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40007: 100%|██████████| 14/14 [02:31<00:00,  9.83s/it]epoch 4 loss 1.40007: 100%|██████████| 14/14 [02:31<00:00, 10.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:03,  2.61it/s] 30%|███       | 3/10 [00:01<00:02,  2.52it/s] 40%|████      | 4/10 [00:01<00:02,  2.48it/s] 50%|█████     | 5/10 [00:01<00:02,  2.46it/s] 60%|██████    | 6/10 [00:02<00:01,  2.45it/s] 70%|███████   | 7/10 [00:02<00:01,  2.44it/s] 80%|████████  | 8/10 [00:03<00:00,  2.43it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s]100%|██████████| 10/10 [00:03<00:00,  3.16it/s]100%|██████████| 10/10 [00:03<00:00,  2.66it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.8306[0m
[32m  eval_f1 = 0.3755[0m
[32m  eval_mcc = 0.822[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.362[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.43it/s] 20%|██        | 2/10 [00:00<00:03,  2.42it/s] 30%|███       | 3/10 [00:01<00:02,  2.42it/s] 40%|████      | 4/10 [00:01<00:02,  2.42it/s] 50%|█████     | 5/10 [00:02<00:02,  2.41it/s] 60%|██████    | 6/10 [00:02<00:01,  2.42it/s] 70%|███████   | 7/10 [00:02<00:01,  2.42it/s] 80%|████████  | 8/10 [00:03<00:00,  2.41it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s]100%|██████████| 10/10 [00:03<00:00,  3.10it/s]100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.8136[0m
[32m  eval_f1 = 0.3033[0m
[32m  eval_mcc = 0.8049[0m
[32m  eval_precision = 0.3801[0m
[32m  eval_recall = 0.2921[0m

