2023-06-05 04:57:15.707 917:isIngraph              DEBUG  main message
2023-06-05 04:57:15.707 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 04:57:16.450 938:isIngraph              INFO   Load Dataset
2023-06-05 04:57:46.137 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 04:57:47.179 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 04:57:50.649 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 04:57:50.652 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 04:57:51.703 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 04:57:53.419 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 04:57:53.420 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 04:57:54.372 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 04:57:56.323 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 04:57:56.324 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.324 307:isInGraph              INFO   idx: 42984
2023-06-05 04:57:56.324 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.324 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 04:57:56.324 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 04:57:56.325 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 04:57:56.325 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 04:57:56.325 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 04:57:56.325 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 04:57:56.325 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.325 307:isInGraph              INFO   idx: 40257
2023-06-05 04:57:56.326 308:isInGraph              INFO   label: 0
2023-06-05 04:57:56.326 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 04:57:56.326 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 04:57:56.326 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 04:57:56.326 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 04:57:56.327 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 04:57:56.327 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 04:57:56.327 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.327 307:isInGraph              INFO   idx: 43203
2023-06-05 04:57:56.327 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.327 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 04:57:56.327 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 04:57:56.328 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 04:57:56.328 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 04:57:56.328 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 04:57:56.328 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 04:57:56.328 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.329 307:isInGraph              INFO   idx: 48598
2023-06-05 04:57:56.329 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.332 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 04:57:56.332 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 04:57:56.333 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 04:57:56.333 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 04:57:56.333 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 04:57:56.333 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 04:57:56.333 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.333 307:isInGraph              INFO   idx: 49875
2023-06-05 04:57:56.334 308:isInGraph              INFO   label: 0
2023-06-05 04:57:56.334 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 04:57:56.334 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 04:57:56.334 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 04:57:56.334 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 04:57:56.335 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 04:57:56.335 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 04:57:56.335 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.335 307:isInGraph              INFO   idx: 48859
2023-06-05 04:57:56.335 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.335 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 04:57:56.335 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 04:57:56.336 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 04:57:56.336 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 04:57:56.336 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 04:57:56.336 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 04:57:56.336 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.336 307:isInGraph              INFO   idx: 46604
2023-06-05 04:57:56.337 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.337 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 04:57:56.337 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 04:57:56.337 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 04:57:56.337 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 04:57:56.338 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 04:57:56.338 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 04:57:56.338 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.338 307:isInGraph              INFO   idx: 47009
2023-06-05 04:57:56.338 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.338 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 04:57:56.339 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 04:57:56.339 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 04:57:56.339 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 04:57:56.339 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 04:57:56.339 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 04:57:56.339 306:isInGraph              INFO   *** Example ***
2023-06-05 04:57:56.340 307:isInGraph              INFO   idx: 50281
2023-06-05 04:57:56.340 308:isInGraph              INFO   label: 1
2023-06-05 04:57:56.340 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 04:57:56.340 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 04:57:56.340 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 04:57:56.341 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 04:57:56.341 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 04:57:56.341 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 04:57:56.341 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 04:57:56.364 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 04:57:56.364 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7', posratio=0.5, seed=644, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 04:57:58.041 451:isIngraph              INFO   ***** Running training *****
2023-06-05 04:57:58.042 452:isIngraph              INFO     Num examples = 87838
2023-06-05 04:57:58.042 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 04:57:58.042 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 04:57:58.042 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 04:57:58.042 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 04:57:58.042 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 04:58:08.697 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 04:58:08.697 581:isIngraph              INFO     Num examples = 29244
2023-06-05 04:58:08.698 582:isIngraph              INFO     Batch size = 32
2023-06-05 04:58:42.032 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_acc = 0.9138
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_f1 = 0.9162
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_mcc = 0.829
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_precision = 0.8909
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_recall = 0.943
2023-06-05 04:58:42.033 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 04:58:42.037 522:isIngraph              INFO     ********************
2023-06-05 04:58:42.038 523:isIngraph              INFO     Best f1:0.9162
2023-06-05 04:58:42.038 524:isIngraph              INFO     ********************
2023-06-05 04:58:42.044 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 04:58:42.044 544:isIngraph              INFO     ********************
2023-06-05 04:58:42.044 545:isIngraph              INFO     Best MCC:0.829
2023-06-05 04:58:42.045 546:isIngraph              INFO     ********************
2023-06-05 04:58:42.047 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 04:58:52.666 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 04:58:52.667 581:isIngraph              INFO     Num examples = 29244
2023-06-05 04:58:52.667 582:isIngraph              INFO     Batch size = 32
2023-06-05 04:59:26.858 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_acc = 0.9378
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_f1 = 0.9397
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_mcc = 0.8773
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_precision = 0.9126
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_recall = 0.9684
2023-06-05 04:59:26.859 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 04:59:26.865 522:isIngraph              INFO     ********************
2023-06-05 04:59:26.865 523:isIngraph              INFO     Best f1:0.9397
2023-06-05 04:59:26.866 524:isIngraph              INFO     ********************
2023-06-05 04:59:26.869 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 04:59:26.870 544:isIngraph              INFO     ********************
2023-06-05 04:59:26.870 545:isIngraph              INFO     Best MCC:0.8773
2023-06-05 04:59:26.870 546:isIngraph              INFO     ********************
2023-06-05 04:59:26.872 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 04:59:36.652 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 04:59:36.652 581:isIngraph              INFO     Num examples = 29244
2023-06-05 04:59:36.652 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:00:11.693 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:00:11.693 629:isIngraph              INFO     eval_acc = 0.9483
2023-06-05 05:00:11.693 629:isIngraph              INFO     eval_f1 = 0.9494
2023-06-05 05:00:11.694 629:isIngraph              INFO     eval_mcc = 0.8975
2023-06-05 05:00:11.694 629:isIngraph              INFO     eval_precision = 0.9285
2023-06-05 05:00:11.694 629:isIngraph              INFO     eval_recall = 0.9713
2023-06-05 05:00:11.694 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:00:11.698 522:isIngraph              INFO     ********************
2023-06-05 05:00:11.698 523:isIngraph              INFO     Best f1:0.9494
2023-06-05 05:00:11.698 524:isIngraph              INFO     ********************
2023-06-05 05:00:11.702 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:00:11.702 544:isIngraph              INFO     ********************
2023-06-05 05:00:11.702 545:isIngraph              INFO     Best MCC:0.8975
2023-06-05 05:00:11.702 546:isIngraph              INFO     ********************
2023-06-05 05:00:11.704 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:00:22.283 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:00:22.283 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:00:22.283 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:00:55.688 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:00:55.688 629:isIngraph              INFO     eval_acc = 0.9535
2023-06-05 05:00:55.689 629:isIngraph              INFO     eval_f1 = 0.9546
2023-06-05 05:00:55.689 629:isIngraph              INFO     eval_mcc = 0.908
2023-06-05 05:00:55.689 629:isIngraph              INFO     eval_precision = 0.9323
2023-06-05 05:00:55.689 629:isIngraph              INFO     eval_recall = 0.9779
2023-06-05 05:00:55.689 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:00:55.694 522:isIngraph              INFO     ********************
2023-06-05 05:00:55.694 523:isIngraph              INFO     Best f1:0.9546
2023-06-05 05:00:55.694 524:isIngraph              INFO     ********************
2023-06-05 05:00:55.698 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:00:55.698 544:isIngraph              INFO     ********************
2023-06-05 05:00:55.699 545:isIngraph              INFO     Best MCC:0.908
2023-06-05 05:00:55.699 546:isIngraph              INFO     ********************
2023-06-05 05:00:55.701 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:01:05.371 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:01:05.371 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:01:05.371 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:01:40.757 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_acc = 0.9566
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_f1 = 0.9574
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_mcc = 0.9138
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_precision = 0.9411
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_recall = 0.9742
2023-06-05 05:01:40.758 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:01:40.761 522:isIngraph              INFO     ********************
2023-06-05 05:01:40.761 523:isIngraph              INFO     Best f1:0.9574
2023-06-05 05:01:40.761 524:isIngraph              INFO     ********************
2023-06-05 05:01:40.764 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:01:40.765 544:isIngraph              INFO     ********************
2023-06-05 05:01:40.765 545:isIngraph              INFO     Best MCC:0.9138
2023-06-05 05:01:40.765 546:isIngraph              INFO     ********************
2023-06-05 05:01:40.766 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:01:50.244 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:01:50.244 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:01:50.244 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:02:28.170 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:02:28.170 629:isIngraph              INFO     eval_acc = 0.9585
2023-06-05 05:02:28.171 629:isIngraph              INFO     eval_f1 = 0.9594
2023-06-05 05:02:28.171 629:isIngraph              INFO     eval_mcc = 0.918
2023-06-05 05:02:28.171 629:isIngraph              INFO     eval_precision = 0.9367
2023-06-05 05:02:28.171 629:isIngraph              INFO     eval_recall = 0.9833
2023-06-05 05:02:28.171 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:02:28.175 522:isIngraph              INFO     ********************
2023-06-05 05:02:28.175 523:isIngraph              INFO     Best f1:0.9594
2023-06-05 05:02:28.175 524:isIngraph              INFO     ********************
2023-06-05 05:02:28.178 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:02:28.178 544:isIngraph              INFO     ********************
2023-06-05 05:02:28.178 545:isIngraph              INFO     Best MCC:0.918
2023-06-05 05:02:28.179 546:isIngraph              INFO     ********************
2023-06-05 05:02:28.180 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:02:37.419 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:02:37.419 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:02:37.420 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:03:18.551 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_acc = 0.9606
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_f1 = 0.9615
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_mcc = 0.9222
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_precision = 0.9406
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_recall = 0.9832
2023-06-05 05:03:18.552 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:03:18.556 522:isIngraph              INFO     ********************
2023-06-05 05:03:18.556 523:isIngraph              INFO     Best f1:0.9615
2023-06-05 05:03:18.556 524:isIngraph              INFO     ********************
2023-06-05 05:03:18.559 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:03:18.560 544:isIngraph              INFO     ********************
2023-06-05 05:03:18.560 545:isIngraph              INFO     Best MCC:0.9222
2023-06-05 05:03:18.560 546:isIngraph              INFO     ********************
2023-06-05 05:03:18.562 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:03:28.958 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:03:28.958 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:03:28.958 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:04:10.956 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:04:10.957 629:isIngraph              INFO     eval_acc = 0.9614
2023-06-05 05:04:10.957 629:isIngraph              INFO     eval_f1 = 0.9623
2023-06-05 05:04:10.957 629:isIngraph              INFO     eval_mcc = 0.9238
2023-06-05 05:04:10.957 629:isIngraph              INFO     eval_precision = 0.9402
2023-06-05 05:04:10.958 629:isIngraph              INFO     eval_recall = 0.9854
2023-06-05 05:04:10.958 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:04:10.961 522:isIngraph              INFO     ********************
2023-06-05 05:04:10.961 523:isIngraph              INFO     Best f1:0.9623
2023-06-05 05:04:10.961 524:isIngraph              INFO     ********************
2023-06-05 05:04:10.964 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-f1/model.bin
2023-06-05 05:04:10.965 544:isIngraph              INFO     ********************
2023-06-05 05:04:10.965 545:isIngraph              INFO     Best MCC:0.9238
2023-06-05 05:04:10.965 546:isIngraph              INFO     ********************
2023-06-05 05:04:10.967 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/2/cdg_7/checkpoint-best-mcc/model.bin
2023-06-05 05:04:22.965 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:04:22.966 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:04:22.966 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:05:04.080 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:05:04.081 629:isIngraph              INFO     eval_acc = 0.9612
2023-06-05 05:05:04.081 629:isIngraph              INFO     eval_f1 = 0.962
2023-06-05 05:05:04.081 629:isIngraph              INFO     eval_mcc = 0.9232
2023-06-05 05:05:04.081 629:isIngraph              INFO     eval_precision = 0.9428
2023-06-05 05:05:04.081 629:isIngraph              INFO     eval_recall = 0.982
2023-06-05 05:05:04.082 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:05:17.314 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 05:05:17.314 581:isIngraph              INFO     Num examples = 29244
2023-06-05 05:05:17.315 582:isIngraph              INFO     Batch size = 32
2023-06-05 05:06:03.034 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 05:06:03.035 629:isIngraph              INFO     eval_acc = 0.9614
2023-06-05 05:06:03.035 629:isIngraph              INFO     eval_f1 = 0.962
2023-06-05 05:06:03.035 629:isIngraph              INFO     eval_mcc = 0.9233
2023-06-05 05:06:03.035 629:isIngraph              INFO     eval_precision = 0.9449
2023-06-05 05:06:03.035 629:isIngraph              INFO     eval_recall = 0.9798
2023-06-05 05:06:03.036 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 05:06:04.101 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 05:06:04.101 651:isIngraph              INFO     Num examples = 30316
2023-06-05 05:06:04.101 652:isIngraph              INFO     Batch size = 32
2023-06-05 05:06:54.092 693:isIngraph              INFO   ***** Test results *****
2023-06-05 05:06:54.092 695:isIngraph              INFO     eval_acc = 0.9558
2023-06-05 05:06:54.093 695:isIngraph              INFO     eval_f1 = 0.9566
2023-06-05 05:06:54.093 695:isIngraph              INFO     eval_mcc = 0.9123
2023-06-05 05:06:54.093 695:isIngraph              INFO     eval_precision = 0.939
2023-06-05 05:06:54.093 695:isIngraph              INFO     eval_recall = 0.9749
2023-06-05 05:06:54.093 695:isIngraph              INFO     eval_threshold = 0.5
