2023-06-05 16:11:19.823 917:isIngraph              DEBUG  main message
2023-06-05 16:11:19.823 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 16:11:20.514 938:isIngraph              INFO   Load Dataset
2023-06-05 16:11:49.428 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:11:50.315 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 16:11:53.267 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 16:11:53.270 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:11:54.172 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 16:11:55.440 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 16:11:55.441 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:11:56.297 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 16:11:57.956 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 16:11:57.957 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.957 307:isInGraph              INFO   idx: 42984
2023-06-05 16:11:57.957 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.958 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 16:11:57.958 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 16:11:57.958 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 16:11:57.958 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 16:11:57.958 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 16:11:57.959 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 16:11:57.959 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.959 307:isInGraph              INFO   idx: 40257
2023-06-05 16:11:57.959 308:isInGraph              INFO   label: 0
2023-06-05 16:11:57.959 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 16:11:57.959 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 16:11:57.959 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 16:11:57.959 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 16:11:57.960 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 16:11:57.960 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 16:11:57.960 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.960 307:isInGraph              INFO   idx: 43203
2023-06-05 16:11:57.960 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.960 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 16:11:57.960 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 16:11:57.960 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 16:11:57.961 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 16:11:57.961 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 16:11:57.961 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 16:11:57.961 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.961 307:isInGraph              INFO   idx: 48598
2023-06-05 16:11:57.961 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.961 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 16:11:57.962 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 16:11:57.962 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 16:11:57.962 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 16:11:57.962 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 16:11:57.962 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 16:11:57.962 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.962 307:isInGraph              INFO   idx: 49875
2023-06-05 16:11:57.962 308:isInGraph              INFO   label: 0
2023-06-05 16:11:57.963 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 16:11:57.963 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 16:11:57.963 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 16:11:57.963 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 16:11:57.963 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 16:11:57.963 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 16:11:57.963 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.963 307:isInGraph              INFO   idx: 48859
2023-06-05 16:11:57.964 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.964 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 16:11:57.964 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 16:11:57.964 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 16:11:57.964 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 16:11:57.964 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 16:11:57.964 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 16:11:57.965 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.965 307:isInGraph              INFO   idx: 46604
2023-06-05 16:11:57.965 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.965 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 16:11:57.965 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 16:11:57.965 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 16:11:57.965 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 16:11:57.966 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 16:11:57.966 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 16:11:57.966 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.966 307:isInGraph              INFO   idx: 47009
2023-06-05 16:11:57.966 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.966 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 16:11:57.966 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 16:11:57.966 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 16:11:57.967 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 16:11:57.967 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 16:11:57.967 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 16:11:57.967 306:isInGraph              INFO   *** Example ***
2023-06-05 16:11:57.967 307:isInGraph              INFO   idx: 50281
2023-06-05 16:11:57.967 308:isInGraph              INFO   label: 1
2023-06-05 16:11:57.967 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 16:11:57.967 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 16:11:57.968 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 16:11:57.968 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 16:11:57.968 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 16:11:57.968 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 16:11:57.968 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 16:11:57.993 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 16:11:57.993 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 16:11:59.596 451:isIngraph              INFO   ***** Running training *****
2023-06-05 16:11:59.596 452:isIngraph              INFO     Num examples = 87838
2023-06-05 16:11:59.596 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 16:11:59.596 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 16:11:59.596 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 16:11:59.597 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 16:11:59.597 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 16:12:10.343 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:12:10.344 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:12:10.344 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:12:48.456 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_acc = 0.917
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_f1 = 0.9208
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_mcc = 0.838
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_precision = 0.8799
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_recall = 0.9657
2023-06-05 16:12:48.457 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:12:48.460 522:isIngraph              INFO     ********************
2023-06-05 16:12:48.460 523:isIngraph              INFO     Best f1:0.9208
2023-06-05 16:12:48.461 524:isIngraph              INFO     ********************
2023-06-05 16:12:48.467 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:12:48.468 544:isIngraph              INFO     ********************
2023-06-05 16:12:48.468 545:isIngraph              INFO     Best MCC:0.838
2023-06-05 16:12:48.468 546:isIngraph              INFO     ********************
2023-06-05 16:12:48.470 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:12:58.920 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:12:58.921 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:12:58.921 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:13:32.414 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:13:32.415 629:isIngraph              INFO     eval_acc = 0.9415
2023-06-05 16:13:32.416 629:isIngraph              INFO     eval_f1 = 0.9425
2023-06-05 16:13:32.416 629:isIngraph              INFO     eval_mcc = 0.8835
2023-06-05 16:13:32.416 629:isIngraph              INFO     eval_precision = 0.9255
2023-06-05 16:13:32.416 629:isIngraph              INFO     eval_recall = 0.9601
2023-06-05 16:13:32.417 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:13:32.422 522:isIngraph              INFO     ********************
2023-06-05 16:13:32.422 523:isIngraph              INFO     Best f1:0.9425
2023-06-05 16:13:32.422 524:isIngraph              INFO     ********************
2023-06-05 16:13:32.427 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:13:32.427 544:isIngraph              INFO     ********************
2023-06-05 16:13:32.427 545:isIngraph              INFO     Best MCC:0.8835
2023-06-05 16:13:32.427 546:isIngraph              INFO     ********************
2023-06-05 16:13:32.430 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:13:42.519 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:13:42.519 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:13:42.520 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:14:15.310 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:14:15.311 629:isIngraph              INFO     eval_acc = 0.9501
2023-06-05 16:14:15.311 629:isIngraph              INFO     eval_f1 = 0.9518
2023-06-05 16:14:15.311 629:isIngraph              INFO     eval_mcc = 0.9024
2023-06-05 16:14:15.311 629:isIngraph              INFO     eval_precision = 0.9206
2023-06-05 16:14:15.311 629:isIngraph              INFO     eval_recall = 0.9851
2023-06-05 16:14:15.312 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:14:15.316 522:isIngraph              INFO     ********************
2023-06-05 16:14:15.316 523:isIngraph              INFO     Best f1:0.9518
2023-06-05 16:14:15.316 524:isIngraph              INFO     ********************
2023-06-05 16:14:15.320 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:14:15.320 544:isIngraph              INFO     ********************
2023-06-05 16:14:15.320 545:isIngraph              INFO     Best MCC:0.9024
2023-06-05 16:14:15.321 546:isIngraph              INFO     ********************
2023-06-05 16:14:15.323 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:14:25.105 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:14:25.106 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:14:25.106 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:14:58.568 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:14:58.568 629:isIngraph              INFO     eval_acc = 0.9529
2023-06-05 16:14:58.568 629:isIngraph              INFO     eval_f1 = 0.9541
2023-06-05 16:14:58.568 629:isIngraph              INFO     eval_mcc = 0.907
2023-06-05 16:14:58.569 629:isIngraph              INFO     eval_precision = 0.9307
2023-06-05 16:14:58.569 629:isIngraph              INFO     eval_recall = 0.9787
2023-06-05 16:14:58.569 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:14:58.573 522:isIngraph              INFO     ********************
2023-06-05 16:14:58.573 523:isIngraph              INFO     Best f1:0.9541
2023-06-05 16:14:58.573 524:isIngraph              INFO     ********************
2023-06-05 16:14:58.605 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:14:58.605 544:isIngraph              INFO     ********************
2023-06-05 16:14:58.605 545:isIngraph              INFO     Best MCC:0.907
2023-06-05 16:14:58.606 546:isIngraph              INFO     ********************
2023-06-05 16:14:58.622 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:15:08.866 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:15:08.866 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:15:08.867 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:15:41.842 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:15:41.842 629:isIngraph              INFO     eval_acc = 0.9551
2023-06-05 16:15:41.843 629:isIngraph              INFO     eval_f1 = 0.9565
2023-06-05 16:15:41.843 629:isIngraph              INFO     eval_mcc = 0.912
2023-06-05 16:15:41.843 629:isIngraph              INFO     eval_precision = 0.9275
2023-06-05 16:15:41.843 629:isIngraph              INFO     eval_recall = 0.9873
2023-06-05 16:15:41.843 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:15:41.847 522:isIngraph              INFO     ********************
2023-06-05 16:15:41.848 523:isIngraph              INFO     Best f1:0.9565
2023-06-05 16:15:41.848 524:isIngraph              INFO     ********************
2023-06-05 16:15:41.852 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:15:41.852 544:isIngraph              INFO     ********************
2023-06-05 16:15:41.853 545:isIngraph              INFO     Best MCC:0.912
2023-06-05 16:15:41.853 546:isIngraph              INFO     ********************
2023-06-05 16:15:41.855 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:15:51.568 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:15:51.569 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:15:51.569 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:16:25.240 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:16:25.241 629:isIngraph              INFO     eval_acc = 0.9559
2023-06-05 16:16:25.241 629:isIngraph              INFO     eval_f1 = 0.9571
2023-06-05 16:16:25.241 629:isIngraph              INFO     eval_mcc = 0.9134
2023-06-05 16:16:25.241 629:isIngraph              INFO     eval_precision = 0.93
2023-06-05 16:16:25.242 629:isIngraph              INFO     eval_recall = 0.9859
2023-06-05 16:16:25.242 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:16:25.246 522:isIngraph              INFO     ********************
2023-06-05 16:16:25.247 523:isIngraph              INFO     Best f1:0.9571
2023-06-05 16:16:25.247 524:isIngraph              INFO     ********************
2023-06-05 16:16:25.251 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:16:25.251 544:isIngraph              INFO     ********************
2023-06-05 16:16:25.251 545:isIngraph              INFO     Best MCC:0.9134
2023-06-05 16:16:25.251 546:isIngraph              INFO     ********************
2023-06-05 16:16:25.253 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:16:36.366 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:16:36.366 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:16:36.367 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:17:08.201 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_acc = 0.956
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_f1 = 0.9572
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_mcc = 0.9134
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_precision = 0.9327
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_recall = 0.9829
2023-06-05 16:17:08.202 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:17:08.206 522:isIngraph              INFO     ********************
2023-06-05 16:17:08.206 523:isIngraph              INFO     Best f1:0.9572
2023-06-05 16:17:08.206 524:isIngraph              INFO     ********************
2023-06-05 16:17:08.210 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:17:08.210 544:isIngraph              INFO     ********************
2023-06-05 16:17:08.210 545:isIngraph              INFO     Best MCC:0.9134
2023-06-05 16:17:08.210 546:isIngraph              INFO     ********************
2023-06-05 16:17:08.212 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:17:17.751 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:17:17.751 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:17:17.751 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:17:49.847 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:17:49.848 629:isIngraph              INFO     eval_acc = 0.9577
2023-06-05 16:17:49.848 629:isIngraph              INFO     eval_f1 = 0.9587
2023-06-05 16:17:49.848 629:isIngraph              INFO     eval_mcc = 0.9166
2023-06-05 16:17:49.849 629:isIngraph              INFO     eval_precision = 0.9353
2023-06-05 16:17:49.849 629:isIngraph              INFO     eval_recall = 0.9834
2023-06-05 16:17:49.849 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:17:49.854 522:isIngraph              INFO     ********************
2023-06-05 16:17:49.854 523:isIngraph              INFO     Best f1:0.9587
2023-06-05 16:17:49.854 524:isIngraph              INFO     ********************
2023-06-05 16:17:49.858 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:17:49.858 544:isIngraph              INFO     ********************
2023-06-05 16:17:49.858 545:isIngraph              INFO     Best MCC:0.9166
2023-06-05 16:17:49.858 546:isIngraph              INFO     ********************
2023-06-05 16:17:49.860 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:18:00.383 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:18:00.384 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:18:00.384 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:18:23.919 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:18:23.919 629:isIngraph              INFO     eval_acc = 0.9575
2023-06-05 16:18:23.919 629:isIngraph              INFO     eval_f1 = 0.9586
2023-06-05 16:18:23.919 629:isIngraph              INFO     eval_mcc = 0.9163
2023-06-05 16:18:23.920 629:isIngraph              INFO     eval_precision = 0.934
2023-06-05 16:18:23.920 629:isIngraph              INFO     eval_recall = 0.9845
2023-06-05 16:18:23.920 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:18:31.174 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:18:31.174 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:18:31.174 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:18:52.975 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_acc = 0.9577
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_f1 = 0.9588
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_mcc = 0.9168
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_precision = 0.934
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_recall = 0.985
2023-06-05 16:18:52.976 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:18:52.979 522:isIngraph              INFO     ********************
2023-06-05 16:18:52.979 523:isIngraph              INFO     Best f1:0.9588
2023-06-05 16:18:52.979 524:isIngraph              INFO     ********************
2023-06-05 16:18:52.984 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 16:18:52.984 544:isIngraph              INFO     ********************
2023-06-05 16:18:52.984 545:isIngraph              INFO     Best MCC:0.9168
2023-06-05 16:18:52.984 546:isIngraph              INFO     ********************
2023-06-05 16:18:52.986 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 16:18:53.184 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 16:18:53.184 651:isIngraph              INFO     Num examples = 30316
2023-06-05 16:18:53.184 652:isIngraph              INFO     Batch size = 32
2023-06-05 16:19:22.122 693:isIngraph              INFO   ***** Test results *****
2023-06-05 16:19:22.122 695:isIngraph              INFO     eval_acc = 0.9525
2023-06-05 16:19:22.123 695:isIngraph              INFO     eval_f1 = 0.9534
2023-06-05 16:19:22.123 695:isIngraph              INFO     eval_mcc = 0.9058
2023-06-05 16:19:22.123 695:isIngraph              INFO     eval_precision = 0.9347
2023-06-05 16:19:22.123 695:isIngraph              INFO     eval_recall = 0.9729
2023-06-05 16:19:22.123 695:isIngraph              INFO     eval_threshold = 0.5
