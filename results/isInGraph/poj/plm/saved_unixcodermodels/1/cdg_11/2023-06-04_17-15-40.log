2023-06-04 17:15:40.971 917:isIngraph              DEBUG  main message
2023-06-04 17:15:40.972 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 17:15:41.650 938:isIngraph              INFO   Load Dataset
2023-06-04 17:16:08.626 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:16:09.512 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 17:16:12.259 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 17:16:12.262 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:16:13.133 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 17:16:14.358 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 17:16:14.359 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:16:15.199 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 17:16:16.779 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 17:16:16.780 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.780 307:isInGraph              INFO   idx: 42984
2023-06-04 17:16:16.780 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.780 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 17:16:16.781 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 17:16:16.781 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 17:16:16.781 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 17:16:16.781 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 17:16:16.781 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 17:16:16.781 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.781 307:isInGraph              INFO   idx: 40257
2023-06-04 17:16:16.781 308:isInGraph              INFO   label: 0
2023-06-04 17:16:16.782 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 17:16:16.782 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 17:16:16.782 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 17:16:16.782 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 17:16:16.782 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 17:16:16.782 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 17:16:16.782 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.782 307:isInGraph              INFO   idx: 43203
2023-06-04 17:16:16.783 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.783 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 17:16:16.783 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 17:16:16.783 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 17:16:16.783 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 17:16:16.783 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 17:16:16.784 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 17:16:16.784 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.784 307:isInGraph              INFO   idx: 48598
2023-06-04 17:16:16.784 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.784 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 17:16:16.784 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 17:16:16.784 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 17:16:16.785 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 17:16:16.785 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 17:16:16.785 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 17:16:16.785 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.785 307:isInGraph              INFO   idx: 49875
2023-06-04 17:16:16.785 308:isInGraph              INFO   label: 0
2023-06-04 17:16:16.785 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 17:16:16.785 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 17:16:16.786 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 17:16:16.786 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 17:16:16.786 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 17:16:16.786 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 17:16:16.786 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.786 307:isInGraph              INFO   idx: 48859
2023-06-04 17:16:16.786 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.787 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 17:16:16.787 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 17:16:16.787 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 17:16:16.787 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 17:16:16.787 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 17:16:16.787 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 17:16:16.787 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.787 307:isInGraph              INFO   idx: 46604
2023-06-04 17:16:16.788 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.788 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 17:16:16.788 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 17:16:16.788 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 17:16:16.788 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 17:16:16.788 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 17:16:16.788 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 17:16:16.789 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.789 307:isInGraph              INFO   idx: 47009
2023-06-04 17:16:16.789 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.789 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 17:16:16.789 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 17:16:16.789 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 17:16:16.789 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 17:16:16.790 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 17:16:16.790 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 17:16:16.790 306:isInGraph              INFO   *** Example ***
2023-06-04 17:16:16.790 307:isInGraph              INFO   idx: 50281
2023-06-04 17:16:16.790 308:isInGraph              INFO   label: 1
2023-06-04 17:16:16.790 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 17:16:16.790 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 17:16:16.791 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 17:16:16.791 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 17:16:16.791 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 17:16:16.791 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 17:16:16.791 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 17:16:16.812 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 17:16:16.812 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 17:16:18.289 451:isIngraph              INFO   ***** Running training *****
2023-06-04 17:16:18.289 452:isIngraph              INFO     Num examples = 87838
2023-06-04 17:16:18.289 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 17:16:18.289 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 17:16:18.289 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 17:16:18.290 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 17:16:18.290 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 17:16:28.079 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:16:28.080 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:16:28.080 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:16:53.442 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:16:53.442 629:isIngraph              INFO     eval_acc = 0.894
2023-06-04 17:16:53.443 629:isIngraph              INFO     eval_f1 = 0.9006
2023-06-04 17:16:53.443 629:isIngraph              INFO     eval_mcc = 0.795
2023-06-04 17:16:53.443 629:isIngraph              INFO     eval_precision = 0.8476
2023-06-04 17:16:53.443 629:isIngraph              INFO     eval_recall = 0.9606
2023-06-04 17:16:53.443 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:16:53.446 522:isIngraph              INFO     ********************
2023-06-04 17:16:53.446 523:isIngraph              INFO     Best f1:0.9006
2023-06-04 17:16:53.447 524:isIngraph              INFO     ********************
2023-06-04 17:16:53.452 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:16:53.452 544:isIngraph              INFO     ********************
2023-06-04 17:16:53.453 545:isIngraph              INFO     Best MCC:0.795
2023-06-04 17:16:53.453 546:isIngraph              INFO     ********************
2023-06-04 17:16:53.455 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:17:01.220 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:17:01.220 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:17:01.220 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:17:28.300 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_acc = 0.9168
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_f1 = 0.9218
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_mcc = 0.8406
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_precision = 0.8691
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_recall = 0.9813
2023-06-04 17:17:28.301 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:17:28.304 522:isIngraph              INFO     ********************
2023-06-04 17:17:28.304 523:isIngraph              INFO     Best f1:0.9218
2023-06-04 17:17:28.304 524:isIngraph              INFO     ********************
2023-06-04 17:17:28.308 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:17:28.308 544:isIngraph              INFO     ********************
2023-06-04 17:17:28.308 545:isIngraph              INFO     Best MCC:0.8406
2023-06-04 17:17:28.308 546:isIngraph              INFO     ********************
2023-06-04 17:17:28.310 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:17:35.850 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:17:35.850 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:17:35.851 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:18:02.320 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_acc = 0.9244
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_f1 = 0.9282
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_mcc = 0.8535
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_precision = 0.8842
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_recall = 0.9767
2023-06-04 17:18:02.321 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:18:02.324 522:isIngraph              INFO     ********************
2023-06-04 17:18:02.325 523:isIngraph              INFO     Best f1:0.9282
2023-06-04 17:18:02.325 524:isIngraph              INFO     ********************
2023-06-04 17:18:02.328 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:18:02.328 544:isIngraph              INFO     ********************
2023-06-04 17:18:02.328 545:isIngraph              INFO     Best MCC:0.8535
2023-06-04 17:18:02.328 546:isIngraph              INFO     ********************
2023-06-04 17:18:02.330 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:18:10.351 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:18:10.351 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:18:10.351 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:18:37.752 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:18:37.752 629:isIngraph              INFO     eval_acc = 0.9333
2023-06-04 17:18:37.752 629:isIngraph              INFO     eval_f1 = 0.9351
2023-06-04 17:18:37.752 629:isIngraph              INFO     eval_mcc = 0.868
2023-06-04 17:18:37.753 629:isIngraph              INFO     eval_precision = 0.9101
2023-06-04 17:18:37.753 629:isIngraph              INFO     eval_recall = 0.9616
2023-06-04 17:18:37.753 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:18:37.756 522:isIngraph              INFO     ********************
2023-06-04 17:18:37.757 523:isIngraph              INFO     Best f1:0.9351
2023-06-04 17:18:37.757 524:isIngraph              INFO     ********************
2023-06-04 17:18:37.779 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:18:37.779 544:isIngraph              INFO     ********************
2023-06-04 17:18:37.780 545:isIngraph              INFO     Best MCC:0.868
2023-06-04 17:18:37.780 546:isIngraph              INFO     ********************
2023-06-04 17:18:37.795 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:18:45.204 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:18:45.205 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:18:45.205 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:19:12.123 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:19:12.124 629:isIngraph              INFO     eval_acc = 0.9308
2023-06-04 17:19:12.124 629:isIngraph              INFO     eval_f1 = 0.9343
2023-06-04 17:19:12.124 629:isIngraph              INFO     eval_mcc = 0.8666
2023-06-04 17:19:12.124 629:isIngraph              INFO     eval_precision = 0.8891
2023-06-04 17:19:12.124 629:isIngraph              INFO     eval_recall = 0.9843
2023-06-04 17:19:12.125 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:19:19.699 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:19:19.699 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:19:19.699 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:19:45.333 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_acc = 0.9361
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_f1 = 0.9382
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_mcc = 0.8744
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_precision = 0.9069
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_recall = 0.9718
2023-06-04 17:19:45.334 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:19:45.337 522:isIngraph              INFO     ********************
2023-06-04 17:19:45.337 523:isIngraph              INFO     Best f1:0.9382
2023-06-04 17:19:45.338 524:isIngraph              INFO     ********************
2023-06-04 17:19:45.341 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:19:45.341 544:isIngraph              INFO     ********************
2023-06-04 17:19:45.341 545:isIngraph              INFO     Best MCC:0.8744
2023-06-04 17:19:45.341 546:isIngraph              INFO     ********************
2023-06-04 17:19:45.344 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:19:52.986 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:19:52.986 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:19:52.986 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:20:19.382 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:20:19.382 629:isIngraph              INFO     eval_acc = 0.9392
2023-06-04 17:20:19.382 629:isIngraph              INFO     eval_f1 = 0.9412
2023-06-04 17:20:19.382 629:isIngraph              INFO     eval_mcc = 0.8805
2023-06-04 17:20:19.382 629:isIngraph              INFO     eval_precision = 0.9114
2023-06-04 17:20:19.383 629:isIngraph              INFO     eval_recall = 0.973
2023-06-04 17:20:19.383 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:20:19.386 522:isIngraph              INFO     ********************
2023-06-04 17:20:19.386 523:isIngraph              INFO     Best f1:0.9412
2023-06-04 17:20:19.386 524:isIngraph              INFO     ********************
2023-06-04 17:20:19.388 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:20:19.388 544:isIngraph              INFO     ********************
2023-06-04 17:20:19.389 545:isIngraph              INFO     Best MCC:0.8805
2023-06-04 17:20:19.389 546:isIngraph              INFO     ********************
2023-06-04 17:20:19.390 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:20:28.377 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:20:28.377 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:20:28.378 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:20:55.157 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_acc = 0.9425
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_f1 = 0.9433
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_mcc = 0.8854
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_precision = 0.9307
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_recall = 0.9562
2023-06-04 17:20:55.158 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:20:55.161 522:isIngraph              INFO     ********************
2023-06-04 17:20:55.161 523:isIngraph              INFO     Best f1:0.9433
2023-06-04 17:20:55.162 524:isIngraph              INFO     ********************
2023-06-04 17:20:55.165 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:20:55.165 544:isIngraph              INFO     ********************
2023-06-04 17:20:55.165 545:isIngraph              INFO     Best MCC:0.8854
2023-06-04 17:20:55.165 546:isIngraph              INFO     ********************
2023-06-04 17:20:55.167 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-mcc/model.bin
2023-06-04 17:21:02.704 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:21:02.705 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:21:02.705 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:21:34.642 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_acc = 0.9419
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_f1 = 0.9435
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_mcc = 0.8852
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_precision = 0.9177
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_recall = 0.9708
2023-06-04 17:21:34.643 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:21:34.646 522:isIngraph              INFO     ********************
2023-06-04 17:21:34.646 523:isIngraph              INFO     Best f1:0.9435
2023-06-04 17:21:34.646 524:isIngraph              INFO     ********************
2023-06-04 17:21:34.649 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_11/checkpoint-best-f1/model.bin
2023-06-04 17:21:42.257 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:21:42.258 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:21:42.258 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:22:08.577 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_acc = 0.9413
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_f1 = 0.9431
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_mcc = 0.8844
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_precision = 0.915
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_recall = 0.973
2023-06-04 17:22:08.578 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:22:08.775 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 17:22:08.775 651:isIngraph              INFO     Num examples = 30316
2023-06-04 17:22:08.775 652:isIngraph              INFO     Batch size = 32
2023-06-04 17:22:37.560 693:isIngraph              INFO   ***** Test results *****
2023-06-04 17:22:37.561 695:isIngraph              INFO     eval_acc = 0.9384
2023-06-04 17:22:37.561 695:isIngraph              INFO     eval_f1 = 0.9384
2023-06-04 17:22:37.561 695:isIngraph              INFO     eval_mcc = 0.8769
2023-06-04 17:22:37.561 695:isIngraph              INFO     eval_precision = 0.9388
2023-06-04 17:22:37.562 695:isIngraph              INFO     eval_recall = 0.938
2023-06-04 17:22:37.562 695:isIngraph              INFO     eval_threshold = 0.5
