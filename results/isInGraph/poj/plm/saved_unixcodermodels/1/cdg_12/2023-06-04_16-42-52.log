2023-06-04 16:42:52.554 917:isIngraph              DEBUG  main message
2023-06-04 16:42:52.554 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 16:42:57.164 938:isIngraph              INFO   Load Dataset
2023-06-04 16:43:51.548 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:43:52.378 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 16:43:52.379 251:isInGraph              INFO   Preprocessing Span file and Graph data
2023-06-04 16:43:57.345 258:isInGraph              INFO   ../datasets/poj-104/isINGraphs/exp1/train_cdg_cleaned.pt
2023-06-04 16:44:03.797 271:isInGraph              INFO   save preprocessed data
2023-06-04 16:44:10.312 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 16:44:10.638 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:44:11.524 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 16:44:13.245 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 16:44:13.245 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:44:14.123 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 16:44:14.617 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 16:44:14.618 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.618 307:isInGraph              INFO   idx: 42984
2023-06-04 16:44:14.619 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.619 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 16:44:14.619 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 16:44:14.619 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 16:44:14.619 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 16:44:14.620 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 16:44:14.620 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 16:44:14.620 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.620 307:isInGraph              INFO   idx: 40257
2023-06-04 16:44:14.620 308:isInGraph              INFO   label: 0
2023-06-04 16:44:14.620 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 16:44:14.621 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 16:44:14.621 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 16:44:14.621 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 16:44:14.621 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 16:44:14.621 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 16:44:14.621 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.621 307:isInGraph              INFO   idx: 43203
2023-06-04 16:44:14.622 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.622 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 16:44:14.622 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 16:44:14.622 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 16:44:14.623 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 16:44:14.623 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 16:44:14.623 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 16:44:14.623 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.623 307:isInGraph              INFO   idx: 48598
2023-06-04 16:44:14.623 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.624 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 16:44:14.624 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 16:44:14.624 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 16:44:14.624 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 16:44:14.624 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 16:44:14.625 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 16:44:14.625 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.625 307:isInGraph              INFO   idx: 49875
2023-06-04 16:44:14.625 308:isInGraph              INFO   label: 0
2023-06-04 16:44:14.625 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 16:44:14.625 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 16:44:14.625 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 16:44:14.626 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 16:44:14.626 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 16:44:14.626 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 16:44:14.626 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.626 307:isInGraph              INFO   idx: 48859
2023-06-04 16:44:14.626 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.627 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 16:44:14.627 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 16:44:14.627 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 16:44:14.627 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 16:44:14.627 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 16:44:14.627 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 16:44:14.628 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.628 307:isInGraph              INFO   idx: 46604
2023-06-04 16:44:14.628 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.628 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 16:44:14.628 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 16:44:14.628 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 16:44:14.629 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 16:44:14.629 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 16:44:14.629 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 16:44:14.629 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.629 307:isInGraph              INFO   idx: 47009
2023-06-04 16:44:14.630 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.630 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 16:44:14.630 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 16:44:14.630 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 16:44:14.630 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 16:44:14.630 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 16:44:14.631 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 16:44:14.631 306:isInGraph              INFO   *** Example ***
2023-06-04 16:44:14.631 307:isInGraph              INFO   idx: 50281
2023-06-04 16:44:14.631 308:isInGraph              INFO   label: 1
2023-06-04 16:44:14.631 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 16:44:14.631 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 16:44:14.632 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 16:44:14.633 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 16:44:14.633 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 16:44:14.633 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 16:44:14.633 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 16:44:14.662 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 16:44:14.662 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 16:44:17.527 451:isIngraph              INFO   ***** Running training *****
2023-06-04 16:44:17.527 452:isIngraph              INFO     Num examples = 87838
2023-06-04 16:44:17.528 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 16:44:17.528 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 16:44:17.528 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 16:44:17.529 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 16:44:17.529 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 16:44:27.520 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:44:27.520 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:44:27.521 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:44:55.862 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:44:55.862 629:isIngraph              INFO     eval_acc = 0.8831
2023-06-04 16:44:55.862 629:isIngraph              INFO     eval_f1 = 0.8877
2023-06-04 16:44:55.863 629:isIngraph              INFO     eval_mcc = 0.7688
2023-06-04 16:44:55.863 629:isIngraph              INFO     eval_precision = 0.8541
2023-06-04 16:44:55.863 629:isIngraph              INFO     eval_recall = 0.9241
2023-06-04 16:44:55.863 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:44:55.866 522:isIngraph              INFO     ********************
2023-06-04 16:44:55.866 523:isIngraph              INFO     Best f1:0.8877
2023-06-04 16:44:55.866 524:isIngraph              INFO     ********************
2023-06-04 16:44:55.872 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:44:55.872 544:isIngraph              INFO     ********************
2023-06-04 16:44:55.872 545:isIngraph              INFO     Best MCC:0.7688
2023-06-04 16:44:55.872 546:isIngraph              INFO     ********************
2023-06-04 16:44:55.875 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:45:03.611 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:45:03.611 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:45:03.611 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:45:31.420 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:45:31.421 629:isIngraph              INFO     eval_acc = 0.8817
2023-06-04 16:45:31.421 629:isIngraph              INFO     eval_f1 = 0.8934
2023-06-04 16:45:31.421 629:isIngraph              INFO     eval_mcc = 0.7825
2023-06-04 16:45:31.422 629:isIngraph              INFO     eval_precision = 0.8129
2023-06-04 16:45:31.422 629:isIngraph              INFO     eval_recall = 0.9915
2023-06-04 16:45:31.422 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:45:31.425 522:isIngraph              INFO     ********************
2023-06-04 16:45:31.425 523:isIngraph              INFO     Best f1:0.8934
2023-06-04 16:45:31.425 524:isIngraph              INFO     ********************
2023-06-04 16:45:31.428 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:45:31.428 544:isIngraph              INFO     ********************
2023-06-04 16:45:31.428 545:isIngraph              INFO     Best MCC:0.7825
2023-06-04 16:45:31.428 546:isIngraph              INFO     ********************
2023-06-04 16:45:31.430 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:45:38.918 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:45:38.918 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:45:38.918 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:46:07.401 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:46:07.401 629:isIngraph              INFO     eval_acc = 0.9163
2023-06-04 16:46:07.401 629:isIngraph              INFO     eval_f1 = 0.9198
2023-06-04 16:46:07.401 629:isIngraph              INFO     eval_mcc = 0.8359
2023-06-04 16:46:07.402 629:isIngraph              INFO     eval_precision = 0.8828
2023-06-04 16:46:07.402 629:isIngraph              INFO     eval_recall = 0.96
2023-06-04 16:46:07.402 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:46:07.405 522:isIngraph              INFO     ********************
2023-06-04 16:46:07.405 523:isIngraph              INFO     Best f1:0.9198
2023-06-04 16:46:07.406 524:isIngraph              INFO     ********************
2023-06-04 16:46:07.408 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:46:07.408 544:isIngraph              INFO     ********************
2023-06-04 16:46:07.408 545:isIngraph              INFO     Best MCC:0.8359
2023-06-04 16:46:07.409 546:isIngraph              INFO     ********************
2023-06-04 16:46:07.410 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:46:15.958 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:46:15.959 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:46:15.959 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:46:43.704 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:46:43.704 629:isIngraph              INFO     eval_acc = 0.9231
2023-06-04 16:46:43.704 629:isIngraph              INFO     eval_f1 = 0.9254
2023-06-04 16:46:43.705 629:isIngraph              INFO     eval_mcc = 0.8478
2023-06-04 16:46:43.705 629:isIngraph              INFO     eval_precision = 0.8978
2023-06-04 16:46:43.705 629:isIngraph              INFO     eval_recall = 0.9547
2023-06-04 16:46:43.705 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:46:43.708 522:isIngraph              INFO     ********************
2023-06-04 16:46:43.708 523:isIngraph              INFO     Best f1:0.9254
2023-06-04 16:46:43.709 524:isIngraph              INFO     ********************
2023-06-04 16:46:43.711 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:46:43.711 544:isIngraph              INFO     ********************
2023-06-04 16:46:43.712 545:isIngraph              INFO     Best MCC:0.8478
2023-06-04 16:46:43.712 546:isIngraph              INFO     ********************
2023-06-04 16:46:43.714 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:46:51.770 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:46:51.770 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:46:51.770 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:47:18.067 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_acc = 0.9254
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_f1 = 0.9288
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_mcc = 0.8547
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_precision = 0.8884
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_recall = 0.973
2023-06-04 16:47:18.068 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:47:18.071 522:isIngraph              INFO     ********************
2023-06-04 16:47:18.071 523:isIngraph              INFO     Best f1:0.9288
2023-06-04 16:47:18.071 524:isIngraph              INFO     ********************
2023-06-04 16:47:18.075 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:47:18.075 544:isIngraph              INFO     ********************
2023-06-04 16:47:18.075 545:isIngraph              INFO     Best MCC:0.8547
2023-06-04 16:47:18.075 546:isIngraph              INFO     ********************
2023-06-04 16:47:18.077 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:47:25.625 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:47:25.626 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:47:25.626 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:47:51.569 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:47:51.569 629:isIngraph              INFO     eval_acc = 0.9316
2023-06-04 16:47:51.570 629:isIngraph              INFO     eval_f1 = 0.9337
2023-06-04 16:47:51.570 629:isIngraph              INFO     eval_mcc = 0.865
2023-06-04 16:47:51.570 629:isIngraph              INFO     eval_precision = 0.9055
2023-06-04 16:47:51.570 629:isIngraph              INFO     eval_recall = 0.9638
2023-06-04 16:47:51.570 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:47:51.574 522:isIngraph              INFO     ********************
2023-06-04 16:47:51.574 523:isIngraph              INFO     Best f1:0.9337
2023-06-04 16:47:51.574 524:isIngraph              INFO     ********************
2023-06-04 16:47:51.577 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:47:51.577 544:isIngraph              INFO     ********************
2023-06-04 16:47:51.577 545:isIngraph              INFO     Best MCC:0.865
2023-06-04 16:47:51.577 546:isIngraph              INFO     ********************
2023-06-04 16:47:51.579 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:47:59.128 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:47:59.128 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:47:59.128 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:48:25.015 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:48:25.016 629:isIngraph              INFO     eval_acc = 0.9285
2023-06-04 16:48:25.016 629:isIngraph              INFO     eval_f1 = 0.9317
2023-06-04 16:48:25.016 629:isIngraph              INFO     eval_mcc = 0.8609
2023-06-04 16:48:25.017 629:isIngraph              INFO     eval_precision = 0.8915
2023-06-04 16:48:25.017 629:isIngraph              INFO     eval_recall = 0.9759
2023-06-04 16:48:25.017 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:48:32.795 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:48:32.795 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:48:32.795 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:48:59.204 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:48:59.205 629:isIngraph              INFO     eval_acc = 0.9304
2023-06-04 16:48:59.205 629:isIngraph              INFO     eval_f1 = 0.9311
2023-06-04 16:48:59.205 629:isIngraph              INFO     eval_mcc = 0.8609
2023-06-04 16:48:59.206 629:isIngraph              INFO     eval_precision = 0.9219
2023-06-04 16:48:59.206 629:isIngraph              INFO     eval_recall = 0.9404
2023-06-04 16:48:59.206 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:49:06.969 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:49:06.970 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:49:06.970 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:49:34.080 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:49:34.080 629:isIngraph              INFO     eval_acc = 0.9358
2023-06-04 16:49:34.081 629:isIngraph              INFO     eval_f1 = 0.9374
2023-06-04 16:49:34.081 629:isIngraph              INFO     eval_mcc = 0.8728
2023-06-04 16:49:34.081 629:isIngraph              INFO     eval_precision = 0.9141
2023-06-04 16:49:34.081 629:isIngraph              INFO     eval_recall = 0.962
2023-06-04 16:49:34.081 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:49:34.084 522:isIngraph              INFO     ********************
2023-06-04 16:49:34.084 523:isIngraph              INFO     Best f1:0.9374
2023-06-04 16:49:34.084 524:isIngraph              INFO     ********************
2023-06-04 16:49:34.087 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-f1/model.bin
2023-06-04 16:49:34.087 544:isIngraph              INFO     ********************
2023-06-04 16:49:34.087 545:isIngraph              INFO     Best MCC:0.8728
2023-06-04 16:49:34.088 546:isIngraph              INFO     ********************
2023-06-04 16:49:34.089 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/cdg_12/checkpoint-best-mcc/model.bin
2023-06-04 16:49:41.892 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:49:41.892 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:49:41.893 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:50:08.324 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:50:08.325 629:isIngraph              INFO     eval_acc = 0.9359
2023-06-04 16:50:08.325 629:isIngraph              INFO     eval_f1 = 0.9372
2023-06-04 16:50:08.325 629:isIngraph              INFO     eval_mcc = 0.8725
2023-06-04 16:50:08.325 629:isIngraph              INFO     eval_precision = 0.919
2023-06-04 16:50:08.326 629:isIngraph              INFO     eval_recall = 0.9561
2023-06-04 16:50:08.326 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:50:08.505 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 16:50:08.505 651:isIngraph              INFO     Num examples = 30316
2023-06-04 16:50:08.506 652:isIngraph              INFO     Batch size = 32
2023-06-04 16:50:35.966 693:isIngraph              INFO   ***** Test results *****
2023-06-04 16:50:35.966 695:isIngraph              INFO     eval_acc = 0.9343
2023-06-04 16:50:35.966 695:isIngraph              INFO     eval_f1 = 0.935
2023-06-04 16:50:35.966 695:isIngraph              INFO     eval_mcc = 0.8688
2023-06-04 16:50:35.967 695:isIngraph              INFO     eval_precision = 0.9257
2023-06-04 16:50:35.967 695:isIngraph              INFO     eval_recall = 0.9444
2023-06-04 16:50:35.967 695:isIngraph              INFO     eval_threshold = 0.5
