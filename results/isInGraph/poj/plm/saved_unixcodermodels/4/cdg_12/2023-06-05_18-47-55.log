2023-06-05 18:47:55.168 917:isIngraph              DEBUG  main message
2023-06-05 18:47:55.169 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 18:47:55.978 938:isIngraph              INFO   Load Dataset
2023-06-05 18:48:29.818 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 18:48:31.100 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 18:48:34.697 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 18:48:34.700 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 18:48:35.871 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 18:48:37.358 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 18:48:37.359 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 18:48:38.272 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 18:48:40.117 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 18:48:40.118 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.118 307:isInGraph              INFO   idx: 42984
2023-06-05 18:48:40.118 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.118 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 18:48:40.118 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 18:48:40.119 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 18:48:40.119 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 18:48:40.119 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 18:48:40.119 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 18:48:40.119 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.119 307:isInGraph              INFO   idx: 40257
2023-06-05 18:48:40.120 308:isInGraph              INFO   label: 0
2023-06-05 18:48:40.120 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 18:48:40.120 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 18:48:40.120 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 18:48:40.120 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 18:48:40.120 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 18:48:40.120 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 18:48:40.121 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.121 307:isInGraph              INFO   idx: 43203
2023-06-05 18:48:40.121 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.121 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 18:48:40.121 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 18:48:40.122 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 18:48:40.122 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 18:48:40.122 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 18:48:40.122 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 18:48:40.122 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.122 307:isInGraph              INFO   idx: 48598
2023-06-05 18:48:40.123 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.123 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 18:48:40.123 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 18:48:40.123 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 18:48:40.123 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 18:48:40.123 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 18:48:40.124 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 18:48:40.124 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.124 307:isInGraph              INFO   idx: 49875
2023-06-05 18:48:40.124 308:isInGraph              INFO   label: 0
2023-06-05 18:48:40.124 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 18:48:40.124 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 18:48:40.124 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 18:48:40.125 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 18:48:40.125 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 18:48:40.125 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 18:48:40.125 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.125 307:isInGraph              INFO   idx: 48859
2023-06-05 18:48:40.125 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.125 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 18:48:40.125 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 18:48:40.126 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 18:48:40.126 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 18:48:40.126 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 18:48:40.126 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 18:48:40.126 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.126 307:isInGraph              INFO   idx: 46604
2023-06-05 18:48:40.126 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.127 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 18:48:40.127 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 18:48:40.127 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 18:48:40.127 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 18:48:40.127 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 18:48:40.127 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 18:48:40.127 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.128 307:isInGraph              INFO   idx: 47009
2023-06-05 18:48:40.128 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.128 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 18:48:40.128 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 18:48:40.128 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 18:48:40.128 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 18:48:40.128 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 18:48:40.129 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 18:48:40.129 306:isInGraph              INFO   *** Example ***
2023-06-05 18:48:40.129 307:isInGraph              INFO   idx: 50281
2023-06-05 18:48:40.129 308:isInGraph              INFO   label: 1
2023-06-05 18:48:40.129 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 18:48:40.129 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 18:48:40.129 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 18:48:40.130 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 18:48:40.130 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 18:48:40.130 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 18:48:40.130 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 18:48:40.152 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 18:48:40.152 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 18:48:41.825 451:isIngraph              INFO   ***** Running training *****
2023-06-05 18:48:41.825 452:isIngraph              INFO     Num examples = 87838
2023-06-05 18:48:41.825 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 18:48:41.825 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 18:48:41.825 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 18:48:41.825 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 18:48:41.825 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 18:48:53.296 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:48:53.297 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:48:53.297 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:49:30.128 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:49:30.129 629:isIngraph              INFO     eval_acc = 0.8857
2023-06-05 18:49:30.130 629:isIngraph              INFO     eval_f1 = 0.8901
2023-06-05 18:49:30.130 629:isIngraph              INFO     eval_mcc = 0.7739
2023-06-05 18:49:30.130 629:isIngraph              INFO     eval_precision = 0.8564
2023-06-05 18:49:30.130 629:isIngraph              INFO     eval_recall = 0.9266
2023-06-05 18:49:30.130 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:49:30.133 522:isIngraph              INFO     ********************
2023-06-05 18:49:30.133 523:isIngraph              INFO     Best f1:0.8901
2023-06-05 18:49:30.134 524:isIngraph              INFO     ********************
2023-06-05 18:49:30.139 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:49:30.140 544:isIngraph              INFO     ********************
2023-06-05 18:49:30.140 545:isIngraph              INFO     Best MCC:0.7739
2023-06-05 18:49:30.140 546:isIngraph              INFO     ********************
2023-06-05 18:49:30.142 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:49:44.508 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:49:44.508 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:49:44.508 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:50:19.367 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:50:19.367 629:isIngraph              INFO     eval_acc = 0.8972
2023-06-05 18:50:19.367 629:isIngraph              INFO     eval_f1 = 0.8979
2023-06-05 18:50:19.368 629:isIngraph              INFO     eval_mcc = 0.7946
2023-06-05 18:50:19.368 629:isIngraph              INFO     eval_precision = 0.892
2023-06-05 18:50:19.368 629:isIngraph              INFO     eval_recall = 0.9038
2023-06-05 18:50:19.368 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:50:19.371 522:isIngraph              INFO     ********************
2023-06-05 18:50:19.371 523:isIngraph              INFO     Best f1:0.8979
2023-06-05 18:50:19.371 524:isIngraph              INFO     ********************
2023-06-05 18:50:19.375 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:50:19.375 544:isIngraph              INFO     ********************
2023-06-05 18:50:19.375 545:isIngraph              INFO     Best MCC:0.7946
2023-06-05 18:50:19.375 546:isIngraph              INFO     ********************
2023-06-05 18:50:19.377 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:50:30.621 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:50:30.621 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:50:30.621 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:51:05.080 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:51:05.080 629:isIngraph              INFO     eval_acc = 0.9136
2023-06-05 18:51:05.081 629:isIngraph              INFO     eval_f1 = 0.9182
2023-06-05 18:51:05.081 629:isIngraph              INFO     eval_mcc = 0.8326
2023-06-05 18:51:05.081 629:isIngraph              INFO     eval_precision = 0.8715
2023-06-05 18:51:05.081 629:isIngraph              INFO     eval_recall = 0.9702
2023-06-05 18:51:05.082 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:51:05.086 522:isIngraph              INFO     ********************
2023-06-05 18:51:05.087 523:isIngraph              INFO     Best f1:0.9182
2023-06-05 18:51:05.087 524:isIngraph              INFO     ********************
2023-06-05 18:51:05.091 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:51:05.091 544:isIngraph              INFO     ********************
2023-06-05 18:51:05.091 545:isIngraph              INFO     Best MCC:0.8326
2023-06-05 18:51:05.091 546:isIngraph              INFO     ********************
2023-06-05 18:51:05.093 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:51:14.751 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:51:14.751 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:51:14.752 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:51:53.147 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_acc = 0.9211
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_f1 = 0.9226
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_mcc = 0.8428
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_precision = 0.9057
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_recall = 0.9401
2023-06-05 18:51:53.148 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:51:53.152 522:isIngraph              INFO     ********************
2023-06-05 18:51:53.152 523:isIngraph              INFO     Best f1:0.9226
2023-06-05 18:51:53.152 524:isIngraph              INFO     ********************
2023-06-05 18:51:53.155 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:51:53.155 544:isIngraph              INFO     ********************
2023-06-05 18:51:53.156 545:isIngraph              INFO     Best MCC:0.8428
2023-06-05 18:51:53.156 546:isIngraph              INFO     ********************
2023-06-05 18:51:53.158 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:52:05.139 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:52:05.140 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:52:05.140 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:52:43.149 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:52:43.150 629:isIngraph              INFO     eval_acc = 0.9305
2023-06-05 18:52:43.150 629:isIngraph              INFO     eval_f1 = 0.932
2023-06-05 18:52:43.150 629:isIngraph              INFO     eval_mcc = 0.8618
2023-06-05 18:52:43.151 629:isIngraph              INFO     eval_precision = 0.9125
2023-06-05 18:52:43.151 629:isIngraph              INFO     eval_recall = 0.9523
2023-06-05 18:52:43.151 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:52:43.156 522:isIngraph              INFO     ********************
2023-06-05 18:52:43.156 523:isIngraph              INFO     Best f1:0.932
2023-06-05 18:52:43.157 524:isIngraph              INFO     ********************
2023-06-05 18:52:43.161 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:52:43.161 544:isIngraph              INFO     ********************
2023-06-05 18:52:43.161 545:isIngraph              INFO     Best MCC:0.8618
2023-06-05 18:52:43.162 546:isIngraph              INFO     ********************
2023-06-05 18:52:43.164 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:52:50.703 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:52:50.704 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:52:50.704 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:53:17.885 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:53:17.885 629:isIngraph              INFO     eval_acc = 0.9322
2023-06-05 18:53:17.885 629:isIngraph              INFO     eval_f1 = 0.9337
2023-06-05 18:53:17.886 629:isIngraph              INFO     eval_mcc = 0.8653
2023-06-05 18:53:17.886 629:isIngraph              INFO     eval_precision = 0.9132
2023-06-05 18:53:17.886 629:isIngraph              INFO     eval_recall = 0.9552
2023-06-05 18:53:17.886 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:53:17.889 522:isIngraph              INFO     ********************
2023-06-05 18:53:17.889 523:isIngraph              INFO     Best f1:0.9337
2023-06-05 18:53:17.889 524:isIngraph              INFO     ********************
2023-06-05 18:53:17.892 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:53:17.892 544:isIngraph              INFO     ********************
2023-06-05 18:53:17.892 545:isIngraph              INFO     Best MCC:0.8653
2023-06-05 18:53:17.892 546:isIngraph              INFO     ********************
2023-06-05 18:53:17.895 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:53:26.242 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:53:26.242 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:53:26.242 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:53:55.770 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_acc = 0.9351
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_f1 = 0.937
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_mcc = 0.8718
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_precision = 0.9103
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_recall = 0.9652
2023-06-05 18:53:55.771 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:53:55.777 522:isIngraph              INFO     ********************
2023-06-05 18:53:55.777 523:isIngraph              INFO     Best f1:0.937
2023-06-05 18:53:55.777 524:isIngraph              INFO     ********************
2023-06-05 18:53:55.780 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:53:55.780 544:isIngraph              INFO     ********************
2023-06-05 18:53:55.781 545:isIngraph              INFO     Best MCC:0.8718
2023-06-05 18:53:55.781 546:isIngraph              INFO     ********************
2023-06-05 18:53:55.782 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:54:04.842 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:54:04.842 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:54:04.842 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:54:37.895 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:54:37.896 629:isIngraph              INFO     eval_acc = 0.9352
2023-06-05 18:54:37.896 629:isIngraph              INFO     eval_f1 = 0.9359
2023-06-05 18:54:37.896 629:isIngraph              INFO     eval_mcc = 0.8707
2023-06-05 18:54:37.896 629:isIngraph              INFO     eval_precision = 0.9256
2023-06-05 18:54:37.896 629:isIngraph              INFO     eval_recall = 0.9465
2023-06-05 18:54:37.897 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:54:47.422 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:54:47.422 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:54:47.422 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:55:20.793 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:55:20.794 629:isIngraph              INFO     eval_acc = 0.9379
2023-06-05 18:55:20.794 629:isIngraph              INFO     eval_f1 = 0.9395
2023-06-05 18:55:20.794 629:isIngraph              INFO     eval_mcc = 0.877
2023-06-05 18:55:20.795 629:isIngraph              INFO     eval_precision = 0.9153
2023-06-05 18:55:20.795 629:isIngraph              INFO     eval_recall = 0.965
2023-06-05 18:55:20.795 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:55:20.800 522:isIngraph              INFO     ********************
2023-06-05 18:55:20.801 523:isIngraph              INFO     Best f1:0.9395
2023-06-05 18:55:20.801 524:isIngraph              INFO     ********************
2023-06-05 18:55:20.805 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:55:20.805 544:isIngraph              INFO     ********************
2023-06-05 18:55:20.805 545:isIngraph              INFO     Best MCC:0.877
2023-06-05 18:55:20.805 546:isIngraph              INFO     ********************
2023-06-05 18:55:20.807 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:55:30.865 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 18:55:30.866 581:isIngraph              INFO     Num examples = 29244
2023-06-05 18:55:30.866 582:isIngraph              INFO     Batch size = 32
2023-06-05 18:56:03.336 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 18:56:03.337 629:isIngraph              INFO     eval_acc = 0.9383
2023-06-05 18:56:03.337 629:isIngraph              INFO     eval_f1 = 0.9397
2023-06-05 18:56:03.337 629:isIngraph              INFO     eval_mcc = 0.8776
2023-06-05 18:56:03.338 629:isIngraph              INFO     eval_precision = 0.9196
2023-06-05 18:56:03.338 629:isIngraph              INFO     eval_recall = 0.9606
2023-06-05 18:56:03.338 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 18:56:03.341 522:isIngraph              INFO     ********************
2023-06-05 18:56:03.342 523:isIngraph              INFO     Best f1:0.9397
2023-06-05 18:56:03.342 524:isIngraph              INFO     ********************
2023-06-05 18:56:03.354 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 18:56:03.355 544:isIngraph              INFO     ********************
2023-06-05 18:56:03.355 545:isIngraph              INFO     Best MCC:0.8776
2023-06-05 18:56:03.355 546:isIngraph              INFO     ********************
2023-06-05 18:56:03.367 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 18:56:03.591 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 18:56:03.591 651:isIngraph              INFO     Num examples = 30316
2023-06-05 18:56:03.591 652:isIngraph              INFO     Batch size = 32
2023-06-05 18:56:37.972 693:isIngraph              INFO   ***** Test results *****
2023-06-05 18:56:37.973 695:isIngraph              INFO     eval_acc = 0.9335
2023-06-05 18:56:37.973 695:isIngraph              INFO     eval_f1 = 0.9341
2023-06-05 18:56:37.973 695:isIngraph              INFO     eval_mcc = 0.8672
2023-06-05 18:56:37.973 695:isIngraph              INFO     eval_precision = 0.9264
2023-06-05 18:56:37.974 695:isIngraph              INFO     eval_recall = 0.9419
2023-06-05 18:56:37.974 695:isIngraph              INFO     eval_threshold = 0.5
