2023-06-04 17:22:44.895 917:isIngraph              DEBUG  main message
2023-06-04 17:22:44.895 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 17:22:45.600 938:isIngraph              INFO   Load Dataset
2023-06-04 17:23:10.461 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:23:11.418 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 17:23:14.627 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 17:23:14.631 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:23:15.490 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 17:23:16.879 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 17:23:16.884 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 17:23:17.769 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 17:23:19.515 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 17:23:19.515 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.515 307:isInGraph              INFO   idx: 42984
2023-06-04 17:23:19.516 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.516 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 17:23:19.516 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 17:23:19.516 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 17:23:19.516 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 17:23:19.517 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 17:23:19.517 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 17:23:19.517 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.517 307:isInGraph              INFO   idx: 40257
2023-06-04 17:23:19.517 308:isInGraph              INFO   label: 0
2023-06-04 17:23:19.517 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 17:23:19.517 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 17:23:19.517 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 17:23:19.518 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 17:23:19.518 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 17:23:19.518 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 17:23:19.518 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.518 307:isInGraph              INFO   idx: 43203
2023-06-04 17:23:19.518 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.518 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 17:23:19.518 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 17:23:19.518 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 17:23:19.519 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 17:23:19.519 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 17:23:19.519 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 17:23:19.519 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.519 307:isInGraph              INFO   idx: 48598
2023-06-04 17:23:19.519 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.519 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 17:23:19.520 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 17:23:19.520 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 17:23:19.520 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 17:23:19.520 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 17:23:19.520 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 17:23:19.520 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.520 307:isInGraph              INFO   idx: 49875
2023-06-04 17:23:19.520 308:isInGraph              INFO   label: 0
2023-06-04 17:23:19.521 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 17:23:19.521 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 17:23:19.521 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 17:23:19.521 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 17:23:19.521 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 17:23:19.521 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 17:23:19.521 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.521 307:isInGraph              INFO   idx: 48859
2023-06-04 17:23:19.522 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.522 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 17:23:19.522 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 17:23:19.522 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 17:23:19.522 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 17:23:19.522 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 17:23:19.522 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 17:23:19.523 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.523 307:isInGraph              INFO   idx: 46604
2023-06-04 17:23:19.523 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.523 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 17:23:19.523 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 17:23:19.523 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 17:23:19.523 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 17:23:19.524 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 17:23:19.524 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 17:23:19.524 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.524 307:isInGraph              INFO   idx: 47009
2023-06-04 17:23:19.524 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.524 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 17:23:19.524 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 17:23:19.524 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 17:23:19.525 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 17:23:19.525 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 17:23:19.525 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 17:23:19.525 306:isInGraph              INFO   *** Example ***
2023-06-04 17:23:19.525 307:isInGraph              INFO   idx: 50281
2023-06-04 17:23:19.525 308:isInGraph              INFO   label: 1
2023-06-04 17:23:19.525 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 17:23:19.525 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 17:23:19.526 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 17:23:19.526 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 17:23:19.526 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 17:23:19.526 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 17:23:19.526 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 17:23:19.548 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 17:23:19.549 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 17:23:21.121 451:isIngraph              INFO   ***** Running training *****
2023-06-04 17:23:21.121 452:isIngraph              INFO     Num examples = 87838
2023-06-04 17:23:21.122 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 17:23:21.122 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 17:23:21.122 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 17:23:21.122 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 17:23:21.122 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 17:23:28.411 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:23:28.412 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:23:28.412 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:23:49.321 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:23:49.322 629:isIngraph              INFO     eval_acc = 0.7586
2023-06-04 17:23:49.322 629:isIngraph              INFO     eval_f1 = 0.755
2023-06-04 17:23:49.322 629:isIngraph              INFO     eval_mcc = 0.5174
2023-06-04 17:23:49.322 629:isIngraph              INFO     eval_precision = 0.7662
2023-06-04 17:23:49.322 629:isIngraph              INFO     eval_recall = 0.7442
2023-06-04 17:23:49.323 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:23:49.326 522:isIngraph              INFO     ********************
2023-06-04 17:23:49.326 523:isIngraph              INFO     Best f1:0.755
2023-06-04 17:23:49.327 524:isIngraph              INFO     ********************
2023-06-04 17:23:49.334 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:23:49.334 544:isIngraph              INFO     ********************
2023-06-04 17:23:49.334 545:isIngraph              INFO     Best MCC:0.5174
2023-06-04 17:23:49.334 546:isIngraph              INFO     ********************
2023-06-04 17:23:49.337 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:23:56.534 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:23:56.534 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:23:56.535 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:24:17.323 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_acc = 0.8413
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_f1 = 0.8444
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_mcc = 0.6831
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_precision = 0.8279
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_recall = 0.8615
2023-06-04 17:24:17.323 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:24:17.326 522:isIngraph              INFO     ********************
2023-06-04 17:24:17.326 523:isIngraph              INFO     Best f1:0.8444
2023-06-04 17:24:17.327 524:isIngraph              INFO     ********************
2023-06-04 17:24:17.329 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:24:17.330 544:isIngraph              INFO     ********************
2023-06-04 17:24:17.330 545:isIngraph              INFO     Best MCC:0.6831
2023-06-04 17:24:17.330 546:isIngraph              INFO     ********************
2023-06-04 17:24:17.331 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:24:24.110 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:24:24.111 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:24:24.111 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:24:44.647 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_acc = 0.8586
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_f1 = 0.864
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_mcc = 0.7195
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_precision = 0.8319
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_recall = 0.8987
2023-06-04 17:24:44.648 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:24:44.652 522:isIngraph              INFO     ********************
2023-06-04 17:24:44.652 523:isIngraph              INFO     Best f1:0.864
2023-06-04 17:24:44.652 524:isIngraph              INFO     ********************
2023-06-04 17:24:44.655 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:24:44.655 544:isIngraph              INFO     ********************
2023-06-04 17:24:44.655 545:isIngraph              INFO     Best MCC:0.7195
2023-06-04 17:24:44.655 546:isIngraph              INFO     ********************
2023-06-04 17:24:44.657 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:24:50.999 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:24:50.999 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:24:50.999 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:25:14.184 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:25:14.184 629:isIngraph              INFO     eval_acc = 0.8377
2023-06-04 17:25:14.184 629:isIngraph              INFO     eval_f1 = 0.8196
2023-06-04 17:25:14.184 629:isIngraph              INFO     eval_mcc = 0.6894
2023-06-04 17:25:14.185 629:isIngraph              INFO     eval_precision = 0.9223
2023-06-04 17:25:14.185 629:isIngraph              INFO     eval_recall = 0.7374
2023-06-04 17:25:14.185 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:25:20.268 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:25:20.268 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:25:20.268 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:25:42.588 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_acc = 0.881
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_f1 = 0.8894
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_mcc = 0.7711
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_precision = 0.8302
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_recall = 0.9577
2023-06-04 17:25:42.589 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:25:42.593 522:isIngraph              INFO     ********************
2023-06-04 17:25:42.593 523:isIngraph              INFO     Best f1:0.8894
2023-06-04 17:25:42.593 524:isIngraph              INFO     ********************
2023-06-04 17:25:42.620 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:25:42.620 544:isIngraph              INFO     ********************
2023-06-04 17:25:42.621 545:isIngraph              INFO     Best MCC:0.7711
2023-06-04 17:25:42.621 546:isIngraph              INFO     ********************
2023-06-04 17:25:42.632 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:25:49.110 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:25:49.110 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:25:49.110 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:26:11.503 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:26:11.503 629:isIngraph              INFO     eval_acc = 0.9024
2023-06-04 17:26:11.503 629:isIngraph              INFO     eval_f1 = 0.9034
2023-06-04 17:26:11.504 629:isIngraph              INFO     eval_mcc = 0.805
2023-06-04 17:26:11.504 629:isIngraph              INFO     eval_precision = 0.8939
2023-06-04 17:26:11.504 629:isIngraph              INFO     eval_recall = 0.9132
2023-06-04 17:26:11.504 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:26:11.507 522:isIngraph              INFO     ********************
2023-06-04 17:26:11.507 523:isIngraph              INFO     Best f1:0.9034
2023-06-04 17:26:11.507 524:isIngraph              INFO     ********************
2023-06-04 17:26:11.512 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:26:11.512 544:isIngraph              INFO     ********************
2023-06-04 17:26:11.512 545:isIngraph              INFO     Best MCC:0.805
2023-06-04 17:26:11.512 546:isIngraph              INFO     ********************
2023-06-04 17:26:11.514 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:26:18.288 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:26:18.288 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:26:18.288 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:26:44.217 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:26:44.218 629:isIngraph              INFO     eval_acc = 0.8903
2023-06-04 17:26:44.218 629:isIngraph              INFO     eval_f1 = 0.8983
2023-06-04 17:26:44.218 629:isIngraph              INFO     eval_mcc = 0.7905
2023-06-04 17:26:44.218 629:isIngraph              INFO     eval_precision = 0.8373
2023-06-04 17:26:44.218 629:isIngraph              INFO     eval_recall = 0.9688
2023-06-04 17:26:44.219 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:26:50.789 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:26:50.789 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:26:50.789 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:27:12.797 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_acc = 0.9106
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_f1 = 0.9111
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_mcc = 0.8212
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_precision = 0.906
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_recall = 0.9161
2023-06-04 17:27:12.798 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:27:12.801 522:isIngraph              INFO     ********************
2023-06-04 17:27:12.801 523:isIngraph              INFO     Best f1:0.9111
2023-06-04 17:27:12.801 524:isIngraph              INFO     ********************
2023-06-04 17:27:12.805 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:27:12.805 544:isIngraph              INFO     ********************
2023-06-04 17:27:12.805 545:isIngraph              INFO     Best MCC:0.8212
2023-06-04 17:27:12.805 546:isIngraph              INFO     ********************
2023-06-04 17:27:12.807 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:27:18.760 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:27:18.761 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:27:18.761 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:27:41.323 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_acc = 0.9121
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_f1 = 0.9122
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_mcc = 0.8242
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_precision = 0.9111
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_recall = 0.9132
2023-06-04 17:27:41.324 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:27:41.327 522:isIngraph              INFO     ********************
2023-06-04 17:27:41.327 523:isIngraph              INFO     Best f1:0.9122
2023-06-04 17:27:41.327 524:isIngraph              INFO     ********************
2023-06-04 17:27:41.330 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:27:41.330 544:isIngraph              INFO     ********************
2023-06-04 17:27:41.330 545:isIngraph              INFO     Best MCC:0.8242
2023-06-04 17:27:41.330 546:isIngraph              INFO     ********************
2023-06-04 17:27:41.331 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:27:48.269 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:27:48.269 581:isIngraph              INFO     Num examples = 29244
2023-06-04 17:27:48.269 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:28:11.015 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:28:11.016 629:isIngraph              INFO     eval_acc = 0.9153
2023-06-04 17:28:11.016 629:isIngraph              INFO     eval_f1 = 0.9164
2023-06-04 17:28:11.016 629:isIngraph              INFO     eval_mcc = 0.8309
2023-06-04 17:28:11.016 629:isIngraph              INFO     eval_precision = 0.9036
2023-06-04 17:28:11.016 629:isIngraph              INFO     eval_recall = 0.9297
2023-06-04 17:28:11.017 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:28:11.020 522:isIngraph              INFO     ********************
2023-06-04 17:28:11.020 523:isIngraph              INFO     Best f1:0.9164
2023-06-04 17:28:11.020 524:isIngraph              INFO     ********************
2023-06-04 17:28:11.023 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-04 17:28:11.023 544:isIngraph              INFO     ********************
2023-06-04 17:28:11.023 545:isIngraph              INFO     Best MCC:0.8309
2023-06-04 17:28:11.023 546:isIngraph              INFO     ********************
2023-06-04 17:28:11.025 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-04 17:28:11.166 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 17:28:11.166 651:isIngraph              INFO     Num examples = 30316
2023-06-04 17:28:11.166 652:isIngraph              INFO     Batch size = 32
2023-06-04 17:28:34.976 693:isIngraph              INFO   ***** Test results *****
2023-06-04 17:28:34.976 695:isIngraph              INFO     eval_acc = 0.9071
2023-06-04 17:28:34.977 695:isIngraph              INFO     eval_f1 = 0.9081
2023-06-04 17:28:34.977 695:isIngraph              INFO     eval_mcc = 0.8145
2023-06-04 17:28:34.977 695:isIngraph              INFO     eval_precision = 0.8986
2023-06-04 17:28:34.977 695:isIngraph              INFO     eval_recall = 0.9178
2023-06-04 17:28:34.977 695:isIngraph              INFO     eval_threshold = 0.5
