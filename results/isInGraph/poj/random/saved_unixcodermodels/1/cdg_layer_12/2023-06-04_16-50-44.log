2023-06-04 16:50:44.769 917:isIngraph              DEBUG  main message
2023-06-04 16:50:44.769 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 16:50:45.513 938:isIngraph              INFO   Load Dataset
2023-06-04 16:51:39.282 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:51:40.132 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 16:51:43.037 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 16:51:43.040 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:51:43.895 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 16:51:45.514 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 16:51:45.516 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:51:46.506 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 16:51:48.288 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 16:51:48.289 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.289 307:isInGraph              INFO   idx: 42984
2023-06-04 16:51:48.289 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.289 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 16:51:48.290 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 16:51:48.290 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 16:51:48.290 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 16:51:48.290 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 16:51:48.290 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 16:51:48.290 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.290 307:isInGraph              INFO   idx: 40257
2023-06-04 16:51:48.291 308:isInGraph              INFO   label: 0
2023-06-04 16:51:48.291 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 16:51:48.291 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 16:51:48.291 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 16:51:48.291 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 16:51:48.291 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 16:51:48.291 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 16:51:48.291 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.292 307:isInGraph              INFO   idx: 43203
2023-06-04 16:51:48.292 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.292 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 16:51:48.292 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 16:51:48.292 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 16:51:48.292 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 16:51:48.292 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 16:51:48.293 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 16:51:48.293 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.293 307:isInGraph              INFO   idx: 48598
2023-06-04 16:51:48.293 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.293 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 16:51:48.293 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 16:51:48.293 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 16:51:48.294 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 16:51:48.294 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 16:51:48.294 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 16:51:48.294 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.294 307:isInGraph              INFO   idx: 49875
2023-06-04 16:51:48.294 308:isInGraph              INFO   label: 0
2023-06-04 16:51:48.294 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 16:51:48.294 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 16:51:48.295 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 16:51:48.295 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 16:51:48.295 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 16:51:48.295 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 16:51:48.295 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.295 307:isInGraph              INFO   idx: 48859
2023-06-04 16:51:48.295 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.296 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 16:51:48.296 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 16:51:48.296 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 16:51:48.296 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 16:51:48.296 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 16:51:48.296 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 16:51:48.296 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.296 307:isInGraph              INFO   idx: 46604
2023-06-04 16:51:48.297 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.297 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 16:51:48.297 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 16:51:48.297 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 16:51:48.297 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 16:51:48.297 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 16:51:48.297 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 16:51:48.297 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.298 307:isInGraph              INFO   idx: 47009
2023-06-04 16:51:48.298 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.298 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 16:51:48.298 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 16:51:48.298 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 16:51:48.298 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 16:51:48.298 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 16:51:48.299 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 16:51:48.299 306:isInGraph              INFO   *** Example ***
2023-06-04 16:51:48.299 307:isInGraph              INFO   idx: 50281
2023-06-04 16:51:48.299 308:isInGraph              INFO   label: 1
2023-06-04 16:51:48.299 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 16:51:48.299 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 16:51:48.299 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 16:51:48.300 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 16:51:48.300 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 16:51:48.300 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 16:51:48.300 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 16:51:48.325 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 16:51:48.325 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 16:51:49.822 451:isIngraph              INFO   ***** Running training *****
2023-06-04 16:51:49.822 452:isIngraph              INFO     Num examples = 87838
2023-06-04 16:51:49.822 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 16:51:49.822 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 16:51:49.822 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 16:51:49.822 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 16:51:49.823 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 16:51:57.704 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:51:57.705 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:51:57.705 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:52:22.613 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:52:22.614 629:isIngraph              INFO     eval_acc = 0.7569
2023-06-04 16:52:22.615 629:isIngraph              INFO     eval_f1 = 0.7555
2023-06-04 16:52:22.615 629:isIngraph              INFO     eval_mcc = 0.5139
2023-06-04 16:52:22.615 629:isIngraph              INFO     eval_precision = 0.7598
2023-06-04 16:52:22.616 629:isIngraph              INFO     eval_recall = 0.7512
2023-06-04 16:52:22.616 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:52:22.622 522:isIngraph              INFO     ********************
2023-06-04 16:52:22.622 523:isIngraph              INFO     Best f1:0.7555
2023-06-04 16:52:22.623 524:isIngraph              INFO     ********************
2023-06-04 16:52:22.632 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:52:22.632 544:isIngraph              INFO     ********************
2023-06-04 16:52:22.632 545:isIngraph              INFO     Best MCC:0.5139
2023-06-04 16:52:22.632 546:isIngraph              INFO     ********************
2023-06-04 16:52:22.635 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:52:29.751 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:52:29.751 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:52:29.751 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:52:55.332 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_acc = 0.8389
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_f1 = 0.8459
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_mcc = 0.6807
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_precision = 0.8102
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_recall = 0.885
2023-06-04 16:52:55.333 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:52:55.337 522:isIngraph              INFO     ********************
2023-06-04 16:52:55.337 523:isIngraph              INFO     Best f1:0.8459
2023-06-04 16:52:55.337 524:isIngraph              INFO     ********************
2023-06-04 16:52:55.340 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:52:55.341 544:isIngraph              INFO     ********************
2023-06-04 16:52:55.341 545:isIngraph              INFO     Best MCC:0.6807
2023-06-04 16:52:55.341 546:isIngraph              INFO     ********************
2023-06-04 16:52:55.343 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:53:03.556 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:53:03.557 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:53:03.557 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:53:30.509 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_acc = 0.8609
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_f1 = 0.8641
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_mcc = 0.7227
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_precision = 0.8444
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_recall = 0.8849
2023-06-04 16:53:30.510 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:53:30.513 522:isIngraph              INFO     ********************
2023-06-04 16:53:30.513 523:isIngraph              INFO     Best f1:0.8641
2023-06-04 16:53:30.513 524:isIngraph              INFO     ********************
2023-06-04 16:53:30.516 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:53:30.516 544:isIngraph              INFO     ********************
2023-06-04 16:53:30.516 545:isIngraph              INFO     Best MCC:0.7227
2023-06-04 16:53:30.516 546:isIngraph              INFO     ********************
2023-06-04 16:53:30.518 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:53:38.150 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:53:38.150 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:53:38.150 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:54:04.736 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_acc = 0.8706
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_f1 = 0.8654
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_mcc = 0.7435
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_precision = 0.9016
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_recall = 0.8321
2023-06-04 16:54:04.737 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:54:04.740 522:isIngraph              INFO     ********************
2023-06-04 16:54:04.740 523:isIngraph              INFO     Best f1:0.8654
2023-06-04 16:54:04.740 524:isIngraph              INFO     ********************
2023-06-04 16:54:04.743 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:54:04.743 544:isIngraph              INFO     ********************
2023-06-04 16:54:04.744 545:isIngraph              INFO     Best MCC:0.7435
2023-06-04 16:54:04.744 546:isIngraph              INFO     ********************
2023-06-04 16:54:04.745 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:54:12.909 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:54:12.910 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:54:12.910 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:54:40.303 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_acc = 0.8845
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_f1 = 0.8919
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_mcc = 0.7763
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_precision = 0.8381
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_recall = 0.9529
2023-06-04 16:54:40.304 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:54:40.308 522:isIngraph              INFO     ********************
2023-06-04 16:54:40.309 523:isIngraph              INFO     Best f1:0.8919
2023-06-04 16:54:40.309 524:isIngraph              INFO     ********************
2023-06-04 16:54:40.312 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:54:40.312 544:isIngraph              INFO     ********************
2023-06-04 16:54:40.313 545:isIngraph              INFO     Best MCC:0.7763
2023-06-04 16:54:40.313 546:isIngraph              INFO     ********************
2023-06-04 16:54:40.315 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:54:48.573 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:54:48.574 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:54:48.574 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:55:14.144 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_acc = 0.8979
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_f1 = 0.8994
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_mcc = 0.7962
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_precision = 0.886
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_recall = 0.9133
2023-06-04 16:55:14.145 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:55:14.148 522:isIngraph              INFO     ********************
2023-06-04 16:55:14.148 523:isIngraph              INFO     Best f1:0.8994
2023-06-04 16:55:14.148 524:isIngraph              INFO     ********************
2023-06-04 16:55:14.151 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:55:14.152 544:isIngraph              INFO     ********************
2023-06-04 16:55:14.152 545:isIngraph              INFO     Best MCC:0.7962
2023-06-04 16:55:14.152 546:isIngraph              INFO     ********************
2023-06-04 16:55:14.153 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:55:21.959 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:55:21.959 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:55:21.959 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:55:49.103 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:55:49.103 629:isIngraph              INFO     eval_acc = 0.8973
2023-06-04 16:55:49.103 629:isIngraph              INFO     eval_f1 = 0.9028
2023-06-04 16:55:49.104 629:isIngraph              INFO     eval_mcc = 0.7998
2023-06-04 16:55:49.104 629:isIngraph              INFO     eval_precision = 0.8566
2023-06-04 16:55:49.104 629:isIngraph              INFO     eval_recall = 0.9543
2023-06-04 16:55:49.104 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:55:49.107 522:isIngraph              INFO     ********************
2023-06-04 16:55:49.108 523:isIngraph              INFO     Best f1:0.9028
2023-06-04 16:55:49.108 524:isIngraph              INFO     ********************
2023-06-04 16:55:49.111 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:55:49.111 544:isIngraph              INFO     ********************
2023-06-04 16:55:49.111 545:isIngraph              INFO     Best MCC:0.7998
2023-06-04 16:55:49.111 546:isIngraph              INFO     ********************
2023-06-04 16:55:49.113 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:55:56.709 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:55:56.709 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:55:56.709 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:56:26.910 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:56:26.911 629:isIngraph              INFO     eval_acc = 0.9025
2023-06-04 16:56:26.911 629:isIngraph              INFO     eval_f1 = 0.902
2023-06-04 16:56:26.912 629:isIngraph              INFO     eval_mcc = 0.8051
2023-06-04 16:56:26.912 629:isIngraph              INFO     eval_precision = 0.9068
2023-06-04 16:56:26.912 629:isIngraph              INFO     eval_recall = 0.8972
2023-06-04 16:56:26.912 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:56:26.915 544:isIngraph              INFO     ********************
2023-06-04 16:56:26.915 545:isIngraph              INFO     Best MCC:0.8051
2023-06-04 16:56:26.916 546:isIngraph              INFO     ********************
2023-06-04 16:56:26.920 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:56:35.029 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:56:35.029 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:56:35.029 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:57:03.121 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:57:03.122 629:isIngraph              INFO     eval_acc = 0.9064
2023-06-04 16:57:03.122 629:isIngraph              INFO     eval_f1 = 0.9064
2023-06-04 16:57:03.122 629:isIngraph              INFO     eval_mcc = 0.8128
2023-06-04 16:57:03.122 629:isIngraph              INFO     eval_precision = 0.9066
2023-06-04 16:57:03.122 629:isIngraph              INFO     eval_recall = 0.9061
2023-06-04 16:57:03.123 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:57:03.126 522:isIngraph              INFO     ********************
2023-06-04 16:57:03.126 523:isIngraph              INFO     Best f1:0.9064
2023-06-04 16:57:03.126 524:isIngraph              INFO     ********************
2023-06-04 16:57:03.131 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:57:03.131 544:isIngraph              INFO     ********************
2023-06-04 16:57:03.131 545:isIngraph              INFO     Best MCC:0.8128
2023-06-04 16:57:03.131 546:isIngraph              INFO     ********************
2023-06-04 16:57:03.134 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:57:10.914 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:57:10.915 581:isIngraph              INFO     Num examples = 29244
2023-06-04 16:57:10.915 582:isIngraph              INFO     Batch size = 32
2023-06-04 16:57:35.591 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 16:57:35.592 629:isIngraph              INFO     eval_acc = 0.9098
2023-06-04 16:57:35.592 629:isIngraph              INFO     eval_f1 = 0.9111
2023-06-04 16:57:35.593 629:isIngraph              INFO     eval_mcc = 0.82
2023-06-04 16:57:35.593 629:isIngraph              INFO     eval_precision = 0.8981
2023-06-04 16:57:35.593 629:isIngraph              INFO     eval_recall = 0.9245
2023-06-04 16:57:35.593 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 16:57:35.596 522:isIngraph              INFO     ********************
2023-06-04 16:57:35.597 523:isIngraph              INFO     Best f1:0.9111
2023-06-04 16:57:35.597 524:isIngraph              INFO     ********************
2023-06-04 16:57:35.601 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-04 16:57:35.602 544:isIngraph              INFO     ********************
2023-06-04 16:57:35.602 545:isIngraph              INFO     Best MCC:0.82
2023-06-04 16:57:35.602 546:isIngraph              INFO     ********************
2023-06-04 16:57:35.604 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-04 16:57:35.897 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 16:57:35.897 651:isIngraph              INFO     Num examples = 30316
2023-06-04 16:57:35.898 652:isIngraph              INFO     Batch size = 32
2023-06-04 16:58:02.945 693:isIngraph              INFO   ***** Test results *****
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_acc = 0.9036
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_f1 = 0.9047
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_mcc = 0.8075
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_precision = 0.8944
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_recall = 0.9153
2023-06-04 16:58:02.946 695:isIngraph              INFO     eval_threshold = 0.5
