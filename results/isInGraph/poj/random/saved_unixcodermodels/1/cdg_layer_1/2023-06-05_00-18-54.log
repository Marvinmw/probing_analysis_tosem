2023-06-05 00:18:54.433 917:isIngraph              DEBUG  main message
2023-06-05 00:18:54.433 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 00:18:55.622 938:isIngraph              INFO   Load Dataset
2023-06-05 00:19:59.226 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 00:20:00.370 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 00:20:03.903 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 00:20:03.906 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 00:20:04.897 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 00:20:06.392 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 00:20:06.392 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 00:20:07.412 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 00:20:09.317 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 00:20:09.318 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.318 307:isInGraph              INFO   idx: 42984
2023-06-05 00:20:09.318 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.319 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 00:20:09.319 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 00:20:09.319 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 00:20:09.319 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 00:20:09.319 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 00:20:09.320 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 00:20:09.320 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.320 307:isInGraph              INFO   idx: 40257
2023-06-05 00:20:09.320 308:isInGraph              INFO   label: 0
2023-06-05 00:20:09.320 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 00:20:09.320 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 00:20:09.321 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 00:20:09.321 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 00:20:09.321 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 00:20:09.321 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 00:20:09.321 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.322 307:isInGraph              INFO   idx: 43203
2023-06-05 00:20:09.322 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.322 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 00:20:09.322 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 00:20:09.322 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 00:20:09.323 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 00:20:09.323 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 00:20:09.323 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 00:20:09.323 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.323 307:isInGraph              INFO   idx: 48598
2023-06-05 00:20:09.323 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.324 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 00:20:09.324 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 00:20:09.324 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 00:20:09.324 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 00:20:09.325 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 00:20:09.325 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 00:20:09.325 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.325 307:isInGraph              INFO   idx: 49875
2023-06-05 00:20:09.325 308:isInGraph              INFO   label: 0
2023-06-05 00:20:09.325 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 00:20:09.326 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 00:20:09.326 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 00:20:09.326 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 00:20:09.326 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 00:20:09.326 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 00:20:09.326 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.326 307:isInGraph              INFO   idx: 48859
2023-06-05 00:20:09.327 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.327 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 00:20:09.327 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 00:20:09.327 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 00:20:09.327 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 00:20:09.327 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 00:20:09.328 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 00:20:09.328 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.328 307:isInGraph              INFO   idx: 46604
2023-06-05 00:20:09.328 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.328 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 00:20:09.328 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 00:20:09.329 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 00:20:09.329 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 00:20:09.329 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 00:20:09.329 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 00:20:09.329 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.329 307:isInGraph              INFO   idx: 47009
2023-06-05 00:20:09.329 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.330 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 00:20:09.330 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 00:20:09.330 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 00:20:09.330 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 00:20:09.330 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 00:20:09.330 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 00:20:09.331 306:isInGraph              INFO   *** Example ***
2023-06-05 00:20:09.331 307:isInGraph              INFO   idx: 50281
2023-06-05 00:20:09.331 308:isInGraph              INFO   label: 1
2023-06-05 00:20:09.331 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 00:20:09.331 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 00:20:09.331 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 00:20:09.332 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 00:20:09.332 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 00:20:09.332 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 00:20:09.332 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 00:20:09.356 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 00:20:09.356 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 00:20:11.205 451:isIngraph              INFO   ***** Running training *****
2023-06-05 00:20:11.206 452:isIngraph              INFO     Num examples = 87838
2023-06-05 00:20:11.206 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 00:20:11.206 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 00:20:11.206 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 00:20:11.206 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 00:20:11.206 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 00:20:24.969 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:20:24.970 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:20:24.970 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:21:00.031 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:21:00.032 629:isIngraph              INFO     eval_acc = 0.8093
2023-06-05 00:21:00.032 629:isIngraph              INFO     eval_f1 = 0.8011
2023-06-05 00:21:00.032 629:isIngraph              INFO     eval_mcc = 0.6206
2023-06-05 00:21:00.033 629:isIngraph              INFO     eval_precision = 0.8367
2023-06-05 00:21:00.033 629:isIngraph              INFO     eval_recall = 0.7685
2023-06-05 00:21:00.033 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:21:00.037 522:isIngraph              INFO     ********************
2023-06-05 00:21:00.037 523:isIngraph              INFO     Best f1:0.8011
2023-06-05 00:21:00.037 524:isIngraph              INFO     ********************
2023-06-05 00:21:00.044 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:21:00.044 544:isIngraph              INFO     ********************
2023-06-05 00:21:00.044 545:isIngraph              INFO     Best MCC:0.6206
2023-06-05 00:21:00.044 546:isIngraph              INFO     ********************
2023-06-05 00:21:00.047 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:21:09.934 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:21:09.934 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:21:09.934 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:21:44.746 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:21:44.746 629:isIngraph              INFO     eval_acc = 0.9039
2023-06-05 00:21:44.747 629:isIngraph              INFO     eval_f1 = 0.9056
2023-06-05 00:21:44.747 629:isIngraph              INFO     eval_mcc = 0.8084
2023-06-05 00:21:44.747 629:isIngraph              INFO     eval_precision = 0.8901
2023-06-05 00:21:44.747 629:isIngraph              INFO     eval_recall = 0.9217
2023-06-05 00:21:44.747 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:21:44.751 522:isIngraph              INFO     ********************
2023-06-05 00:21:44.751 523:isIngraph              INFO     Best f1:0.9056
2023-06-05 00:21:44.751 524:isIngraph              INFO     ********************
2023-06-05 00:21:44.755 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:21:44.756 544:isIngraph              INFO     ********************
2023-06-05 00:21:44.756 545:isIngraph              INFO     Best MCC:0.8084
2023-06-05 00:21:44.756 546:isIngraph              INFO     ********************
2023-06-05 00:21:44.759 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:21:55.109 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:21:55.109 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:21:55.109 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:22:30.216 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:22:30.216 629:isIngraph              INFO     eval_acc = 0.9135
2023-06-05 00:22:30.217 629:isIngraph              INFO     eval_f1 = 0.9137
2023-06-05 00:22:30.217 629:isIngraph              INFO     eval_mcc = 0.8271
2023-06-05 00:22:30.217 629:isIngraph              INFO     eval_precision = 0.9113
2023-06-05 00:22:30.217 629:isIngraph              INFO     eval_recall = 0.9162
2023-06-05 00:22:30.217 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:22:30.223 522:isIngraph              INFO     ********************
2023-06-05 00:22:30.223 523:isIngraph              INFO     Best f1:0.9137
2023-06-05 00:22:30.223 524:isIngraph              INFO     ********************
2023-06-05 00:22:30.227 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:22:30.227 544:isIngraph              INFO     ********************
2023-06-05 00:22:30.227 545:isIngraph              INFO     Best MCC:0.8271
2023-06-05 00:22:30.228 546:isIngraph              INFO     ********************
2023-06-05 00:22:30.230 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:22:40.744 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:22:40.745 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:22:40.745 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:23:15.804 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:23:15.805 629:isIngraph              INFO     eval_acc = 0.9277
2023-06-05 00:23:15.805 629:isIngraph              INFO     eval_f1 = 0.9289
2023-06-05 00:23:15.805 629:isIngraph              INFO     eval_mcc = 0.8559
2023-06-05 00:23:15.805 629:isIngraph              INFO     eval_precision = 0.9134
2023-06-05 00:23:15.806 629:isIngraph              INFO     eval_recall = 0.9449
2023-06-05 00:23:15.806 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:23:15.810 522:isIngraph              INFO     ********************
2023-06-05 00:23:15.810 523:isIngraph              INFO     Best f1:0.9289
2023-06-05 00:23:15.811 524:isIngraph              INFO     ********************
2023-06-05 00:23:15.814 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:23:15.814 544:isIngraph              INFO     ********************
2023-06-05 00:23:15.815 545:isIngraph              INFO     Best MCC:0.8559
2023-06-05 00:23:15.815 546:isIngraph              INFO     ********************
2023-06-05 00:23:15.817 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:23:26.185 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:23:26.185 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:23:26.186 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:24:00.551 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:24:00.551 629:isIngraph              INFO     eval_acc = 0.9303
2023-06-05 00:24:00.552 629:isIngraph              INFO     eval_f1 = 0.9327
2023-06-05 00:24:00.552 629:isIngraph              INFO     eval_mcc = 0.8628
2023-06-05 00:24:00.552 629:isIngraph              INFO     eval_precision = 0.9016
2023-06-05 00:24:00.552 629:isIngraph              INFO     eval_recall = 0.966
2023-06-05 00:24:00.552 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:24:00.558 522:isIngraph              INFO     ********************
2023-06-05 00:24:00.558 523:isIngraph              INFO     Best f1:0.9327
2023-06-05 00:24:00.558 524:isIngraph              INFO     ********************
2023-06-05 00:24:00.562 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:24:00.562 544:isIngraph              INFO     ********************
2023-06-05 00:24:00.563 545:isIngraph              INFO     Best MCC:0.8628
2023-06-05 00:24:00.563 546:isIngraph              INFO     ********************
2023-06-05 00:24:00.565 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:24:11.274 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:24:11.275 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:24:11.275 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:24:42.361 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:24:42.361 629:isIngraph              INFO     eval_acc = 0.9339
2023-06-05 00:24:42.361 629:isIngraph              INFO     eval_f1 = 0.9352
2023-06-05 00:24:42.362 629:isIngraph              INFO     eval_mcc = 0.8686
2023-06-05 00:24:42.362 629:isIngraph              INFO     eval_precision = 0.9166
2023-06-05 00:24:42.362 629:isIngraph              INFO     eval_recall = 0.9546
2023-06-05 00:24:42.362 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:24:42.365 522:isIngraph              INFO     ********************
2023-06-05 00:24:42.366 523:isIngraph              INFO     Best f1:0.9352
2023-06-05 00:24:42.366 524:isIngraph              INFO     ********************
2023-06-05 00:24:42.369 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:24:42.369 544:isIngraph              INFO     ********************
2023-06-05 00:24:42.370 545:isIngraph              INFO     Best MCC:0.8686
2023-06-05 00:24:42.370 546:isIngraph              INFO     ********************
2023-06-05 00:24:42.372 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:24:50.297 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:24:50.297 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:24:50.297 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:25:17.083 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:25:17.084 629:isIngraph              INFO     eval_acc = 0.933
2023-06-05 00:25:17.084 629:isIngraph              INFO     eval_f1 = 0.9349
2023-06-05 00:25:17.084 629:isIngraph              INFO     eval_mcc = 0.8675
2023-06-05 00:25:17.084 629:isIngraph              INFO     eval_precision = 0.9084
2023-06-05 00:25:17.084 629:isIngraph              INFO     eval_recall = 0.9631
2023-06-05 00:25:17.085 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:25:24.690 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:25:24.690 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:25:24.690 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:25:51.916 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_acc = 0.9342
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_f1 = 0.9344
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_mcc = 0.8684
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_precision = 0.9304
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_recall = 0.9385
2023-06-05 00:25:51.917 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:25:59.926 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:25:59.926 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:25:59.926 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:26:34.024 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:26:34.024 629:isIngraph              INFO     eval_acc = 0.936
2023-06-05 00:26:34.025 629:isIngraph              INFO     eval_f1 = 0.9369
2023-06-05 00:26:34.025 629:isIngraph              INFO     eval_mcc = 0.8724
2023-06-05 00:26:34.025 629:isIngraph              INFO     eval_precision = 0.9236
2023-06-05 00:26:34.025 629:isIngraph              INFO     eval_recall = 0.9506
2023-06-05 00:26:34.025 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:26:34.029 522:isIngraph              INFO     ********************
2023-06-05 00:26:34.029 523:isIngraph              INFO     Best f1:0.9369
2023-06-05 00:26:34.029 524:isIngraph              INFO     ********************
2023-06-05 00:26:34.033 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:26:34.034 544:isIngraph              INFO     ********************
2023-06-05 00:26:34.034 545:isIngraph              INFO     Best MCC:0.8724
2023-06-05 00:26:34.034 546:isIngraph              INFO     ********************
2023-06-05 00:26:34.037 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:26:44.241 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 00:26:44.241 581:isIngraph              INFO     Num examples = 29244
2023-06-05 00:26:44.241 582:isIngraph              INFO     Batch size = 32
2023-06-05 00:27:20.355 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 00:27:20.356 629:isIngraph              INFO     eval_acc = 0.9379
2023-06-05 00:27:20.356 629:isIngraph              INFO     eval_f1 = 0.9389
2023-06-05 00:27:20.356 629:isIngraph              INFO     eval_mcc = 0.8763
2023-06-05 00:27:20.356 629:isIngraph              INFO     eval_precision = 0.924
2023-06-05 00:27:20.356 629:isIngraph              INFO     eval_recall = 0.9543
2023-06-05 00:27:20.357 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 00:27:20.361 522:isIngraph              INFO     ********************
2023-06-05 00:27:20.361 523:isIngraph              INFO     Best f1:0.9389
2023-06-05 00:27:20.361 524:isIngraph              INFO     ********************
2023-06-05 00:27:20.364 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 00:27:20.364 544:isIngraph              INFO     ********************
2023-06-05 00:27:20.365 545:isIngraph              INFO     Best MCC:0.8763
2023-06-05 00:27:20.365 546:isIngraph              INFO     ********************
2023-06-05 00:27:20.366 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 00:27:20.570 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 00:27:20.570 651:isIngraph              INFO     Num examples = 30316
2023-06-05 00:27:20.570 652:isIngraph              INFO     Batch size = 32
2023-06-05 00:27:58.223 693:isIngraph              INFO   ***** Test results *****
2023-06-05 00:27:58.223 695:isIngraph              INFO     eval_acc = 0.9268
2023-06-05 00:27:58.224 695:isIngraph              INFO     eval_f1 = 0.9276
2023-06-05 00:27:58.224 695:isIngraph              INFO     eval_mcc = 0.8539
2023-06-05 00:27:58.224 695:isIngraph              INFO     eval_precision = 0.9182
2023-06-05 00:27:58.224 695:isIngraph              INFO     eval_recall = 0.9371
2023-06-05 00:27:58.224 695:isIngraph              INFO     eval_threshold = 0.5
