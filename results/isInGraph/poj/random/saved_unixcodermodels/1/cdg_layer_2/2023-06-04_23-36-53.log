2023-06-04 23:36:53.288 917:isIngraph              DEBUG  main message
2023-06-04 23:36:53.288 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 23:36:53.958 938:isIngraph              INFO   Load Dataset
2023-06-04 23:37:46.791 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 23:37:47.818 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 23:37:51.065 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 23:37:51.068 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 23:37:52.045 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 23:37:53.594 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 23:37:53.595 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 23:37:54.526 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 23:37:56.708 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 23:37:56.708 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.708 307:isInGraph              INFO   idx: 42984
2023-06-04 23:37:56.708 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.709 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 23:37:56.709 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 23:37:56.709 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 23:37:56.709 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 23:37:56.709 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 23:37:56.710 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 23:37:56.710 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.710 307:isInGraph              INFO   idx: 40257
2023-06-04 23:37:56.710 308:isInGraph              INFO   label: 0
2023-06-04 23:37:56.710 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 23:37:56.710 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 23:37:56.710 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 23:37:56.710 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 23:37:56.711 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 23:37:56.711 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 23:37:56.711 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.711 307:isInGraph              INFO   idx: 43203
2023-06-04 23:37:56.711 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.711 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 23:37:56.711 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 23:37:56.711 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 23:37:56.712 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 23:37:56.712 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 23:37:56.712 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 23:37:56.712 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.712 307:isInGraph              INFO   idx: 48598
2023-06-04 23:37:56.712 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.712 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 23:37:56.713 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 23:37:56.713 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 23:37:56.713 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 23:37:56.713 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 23:37:56.713 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 23:37:56.713 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.713 307:isInGraph              INFO   idx: 49875
2023-06-04 23:37:56.714 308:isInGraph              INFO   label: 0
2023-06-04 23:37:56.714 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 23:37:56.714 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 23:37:56.714 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 23:37:56.714 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 23:37:56.714 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 23:37:56.714 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 23:37:56.715 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.715 307:isInGraph              INFO   idx: 48859
2023-06-04 23:37:56.715 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.715 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 23:37:56.715 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 23:37:56.715 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 23:37:56.715 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 23:37:56.716 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 23:37:56.716 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 23:37:56.716 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.716 307:isInGraph              INFO   idx: 46604
2023-06-04 23:37:56.716 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.716 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 23:37:56.716 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 23:37:56.716 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 23:37:56.717 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 23:37:56.717 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 23:37:56.717 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 23:37:56.717 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.717 307:isInGraph              INFO   idx: 47009
2023-06-04 23:37:56.717 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.717 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 23:37:56.718 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 23:37:56.718 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 23:37:56.718 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 23:37:56.718 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 23:37:56.718 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 23:37:56.718 306:isInGraph              INFO   *** Example ***
2023-06-04 23:37:56.718 307:isInGraph              INFO   idx: 50281
2023-06-04 23:37:56.718 308:isInGraph              INFO   label: 1
2023-06-04 23:37:56.719 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 23:37:56.719 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 23:37:56.719 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 23:37:56.719 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 23:37:56.719 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 23:37:56.720 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 23:37:56.720 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 23:37:56.740 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 23:37:56.740 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 23:37:58.411 451:isIngraph              INFO   ***** Running training *****
2023-06-04 23:37:58.411 452:isIngraph              INFO     Num examples = 87838
2023-06-04 23:37:58.411 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 23:37:58.411 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 23:37:58.412 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 23:37:58.412 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 23:37:58.412 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 23:38:08.480 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:38:08.481 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:38:08.481 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:38:44.830 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:38:44.830 629:isIngraph              INFO     eval_acc = 0.8024
2023-06-04 23:38:44.831 629:isIngraph              INFO     eval_f1 = 0.793
2023-06-04 23:38:44.831 629:isIngraph              INFO     eval_mcc = 0.6072
2023-06-04 23:38:44.831 629:isIngraph              INFO     eval_precision = 0.8323
2023-06-04 23:38:44.831 629:isIngraph              INFO     eval_recall = 0.7572
2023-06-04 23:38:44.831 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:38:44.834 522:isIngraph              INFO     ********************
2023-06-04 23:38:44.834 523:isIngraph              INFO     Best f1:0.793
2023-06-04 23:38:44.835 524:isIngraph              INFO     ********************
2023-06-04 23:38:44.840 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:38:44.841 544:isIngraph              INFO     ********************
2023-06-04 23:38:44.841 545:isIngraph              INFO     Best MCC:0.6072
2023-06-04 23:38:44.841 546:isIngraph              INFO     ********************
2023-06-04 23:38:44.843 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:38:55.335 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:38:55.336 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:38:55.336 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:39:41.260 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:39:41.260 629:isIngraph              INFO     eval_acc = 0.8937
2023-06-04 23:39:41.261 629:isIngraph              INFO     eval_f1 = 0.8949
2023-06-04 23:39:41.261 629:isIngraph              INFO     eval_mcc = 0.7877
2023-06-04 23:39:41.261 629:isIngraph              INFO     eval_precision = 0.8847
2023-06-04 23:39:41.261 629:isIngraph              INFO     eval_recall = 0.9053
2023-06-04 23:39:41.261 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:39:41.264 522:isIngraph              INFO     ********************
2023-06-04 23:39:41.265 523:isIngraph              INFO     Best f1:0.8949
2023-06-04 23:39:41.265 524:isIngraph              INFO     ********************
2023-06-04 23:39:41.268 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:39:41.268 544:isIngraph              INFO     ********************
2023-06-04 23:39:41.268 545:isIngraph              INFO     Best MCC:0.7877
2023-06-04 23:39:41.268 546:isIngraph              INFO     ********************
2023-06-04 23:39:41.270 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:39:51.920 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:39:51.921 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:39:51.921 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:40:35.740 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:40:35.741 629:isIngraph              INFO     eval_acc = 0.9092
2023-06-04 23:40:35.741 629:isIngraph              INFO     eval_f1 = 0.9091
2023-06-04 23:40:35.741 629:isIngraph              INFO     eval_mcc = 0.8184
2023-06-04 23:40:35.741 629:isIngraph              INFO     eval_precision = 0.9101
2023-06-04 23:40:35.742 629:isIngraph              INFO     eval_recall = 0.9081
2023-06-04 23:40:35.742 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:40:35.746 522:isIngraph              INFO     ********************
2023-06-04 23:40:35.746 523:isIngraph              INFO     Best f1:0.9091
2023-06-04 23:40:35.746 524:isIngraph              INFO     ********************
2023-06-04 23:40:35.749 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:40:35.749 544:isIngraph              INFO     ********************
2023-06-04 23:40:35.749 545:isIngraph              INFO     Best MCC:0.8184
2023-06-04 23:40:35.750 546:isIngraph              INFO     ********************
2023-06-04 23:40:35.751 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:40:46.328 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:40:46.328 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:40:46.328 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:41:25.928 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_acc = 0.924
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_f1 = 0.9254
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_mcc = 0.8486
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_precision = 0.9083
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_recall = 0.9431
2023-06-04 23:41:25.936 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:41:25.941 522:isIngraph              INFO     ********************
2023-06-04 23:41:25.941 523:isIngraph              INFO     Best f1:0.9254
2023-06-04 23:41:25.941 524:isIngraph              INFO     ********************
2023-06-04 23:41:25.987 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:41:25.987 544:isIngraph              INFO     ********************
2023-06-04 23:41:25.987 545:isIngraph              INFO     Best MCC:0.8486
2023-06-04 23:41:25.987 546:isIngraph              INFO     ********************
2023-06-04 23:41:26.009 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:41:35.587 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:41:35.588 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:41:35.588 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:42:16.548 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_acc = 0.9258
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_f1 = 0.9286
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_mcc = 0.8544
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_precision = 0.8944
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_recall = 0.9656
2023-06-04 23:42:16.549 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:42:16.552 522:isIngraph              INFO     ********************
2023-06-04 23:42:16.553 523:isIngraph              INFO     Best f1:0.9286
2023-06-04 23:42:16.553 524:isIngraph              INFO     ********************
2023-06-04 23:42:16.556 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:42:16.557 544:isIngraph              INFO     ********************
2023-06-04 23:42:16.557 545:isIngraph              INFO     Best MCC:0.8544
2023-06-04 23:42:16.557 546:isIngraph              INFO     ********************
2023-06-04 23:42:16.559 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:42:24.591 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:42:24.591 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:42:24.591 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:43:05.738 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:43:05.738 629:isIngraph              INFO     eval_acc = 0.9312
2023-06-04 23:43:05.739 629:isIngraph              INFO     eval_f1 = 0.9326
2023-06-04 23:43:05.739 629:isIngraph              INFO     eval_mcc = 0.8632
2023-06-04 23:43:05.739 629:isIngraph              INFO     eval_precision = 0.9129
2023-06-04 23:43:05.739 629:isIngraph              INFO     eval_recall = 0.9533
2023-06-04 23:43:05.739 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:43:05.742 522:isIngraph              INFO     ********************
2023-06-04 23:43:05.743 523:isIngraph              INFO     Best f1:0.9326
2023-06-04 23:43:05.743 524:isIngraph              INFO     ********************
2023-06-04 23:43:05.787 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:43:05.788 544:isIngraph              INFO     ********************
2023-06-04 23:43:05.788 545:isIngraph              INFO     Best MCC:0.8632
2023-06-04 23:43:05.788 546:isIngraph              INFO     ********************
2023-06-04 23:43:05.810 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:43:15.444 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:43:15.444 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:43:15.445 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:43:50.337 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:43:50.337 629:isIngraph              INFO     eval_acc = 0.9312
2023-06-04 23:43:50.337 629:isIngraph              INFO     eval_f1 = 0.9333
2023-06-04 23:43:50.337 629:isIngraph              INFO     eval_mcc = 0.8642
2023-06-04 23:43:50.338 629:isIngraph              INFO     eval_precision = 0.9054
2023-06-04 23:43:50.338 629:isIngraph              INFO     eval_recall = 0.963
2023-06-04 23:43:50.338 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:43:50.341 522:isIngraph              INFO     ********************
2023-06-04 23:43:50.342 523:isIngraph              INFO     Best f1:0.9333
2023-06-04 23:43:50.342 524:isIngraph              INFO     ********************
2023-06-04 23:43:50.394 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:43:50.395 544:isIngraph              INFO     ********************
2023-06-04 23:43:50.395 545:isIngraph              INFO     Best MCC:0.8642
2023-06-04 23:43:50.395 546:isIngraph              INFO     ********************
2023-06-04 23:43:50.419 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:43:59.660 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:43:59.660 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:43:59.661 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:44:39.696 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_acc = 0.932
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_f1 = 0.9323
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_mcc = 0.864
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_precision = 0.9267
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_recall = 0.9381
2023-06-04 23:44:39.697 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:44:48.807 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:44:48.808 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:44:48.808 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:45:31.964 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:45:31.964 629:isIngraph              INFO     eval_acc = 0.9338
2023-06-04 23:45:31.964 629:isIngraph              INFO     eval_f1 = 0.9346
2023-06-04 23:45:31.964 629:isIngraph              INFO     eval_mcc = 0.8678
2023-06-04 23:45:31.964 629:isIngraph              INFO     eval_precision = 0.9233
2023-06-04 23:45:31.965 629:isIngraph              INFO     eval_recall = 0.9461
2023-06-04 23:45:31.965 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:45:31.967 522:isIngraph              INFO     ********************
2023-06-04 23:45:31.968 523:isIngraph              INFO     Best f1:0.9346
2023-06-04 23:45:31.968 524:isIngraph              INFO     ********************
2023-06-04 23:45:31.972 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:45:31.972 544:isIngraph              INFO     ********************
2023-06-04 23:45:31.973 545:isIngraph              INFO     Best MCC:0.8678
2023-06-04 23:45:31.973 546:isIngraph              INFO     ********************
2023-06-04 23:45:31.975 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:45:41.992 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 23:45:41.993 581:isIngraph              INFO     Num examples = 29244
2023-06-04 23:45:41.993 582:isIngraph              INFO     Batch size = 32
2023-06-04 23:46:18.493 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 23:46:18.493 629:isIngraph              INFO     eval_acc = 0.9346
2023-06-04 23:46:18.494 629:isIngraph              INFO     eval_f1 = 0.9357
2023-06-04 23:46:18.494 629:isIngraph              INFO     eval_mcc = 0.8697
2023-06-04 23:46:18.494 629:isIngraph              INFO     eval_precision = 0.9203
2023-06-04 23:46:18.494 629:isIngraph              INFO     eval_recall = 0.9515
2023-06-04 23:46:18.494 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 23:46:18.497 522:isIngraph              INFO     ********************
2023-06-04 23:46:18.497 523:isIngraph              INFO     Best f1:0.9357
2023-06-04 23:46:18.498 524:isIngraph              INFO     ********************
2023-06-04 23:46:18.502 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-04 23:46:18.502 544:isIngraph              INFO     ********************
2023-06-04 23:46:18.502 545:isIngraph              INFO     Best MCC:0.8697
2023-06-04 23:46:18.502 546:isIngraph              INFO     ********************
2023-06-04 23:46:18.504 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-04 23:46:18.658 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 23:46:18.658 651:isIngraph              INFO     Num examples = 30316
2023-06-04 23:46:18.658 652:isIngraph              INFO     Batch size = 32
2023-06-04 23:46:57.573 693:isIngraph              INFO   ***** Test results *****
2023-06-04 23:46:57.573 695:isIngraph              INFO     eval_acc = 0.9266
2023-06-04 23:46:57.573 695:isIngraph              INFO     eval_f1 = 0.9273
2023-06-04 23:46:57.573 695:isIngraph              INFO     eval_mcc = 0.8533
2023-06-04 23:46:57.574 695:isIngraph              INFO     eval_precision = 0.9183
2023-06-04 23:46:57.574 695:isIngraph              INFO     eval_recall = 0.9364
2023-06-04 23:46:57.574 695:isIngraph              INFO     eval_threshold = 0.5
