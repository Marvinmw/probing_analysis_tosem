2023-06-05 12:22:12.182 917:isIngraph              DEBUG  main message
2023-06-05 12:22:12.182 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 12:22:12.878 938:isIngraph              INFO   Load Dataset
2023-06-05 12:22:45.331 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 12:22:46.329 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 12:22:49.911 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 12:22:49.914 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 12:22:50.997 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 12:22:53.219 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 12:22:53.221 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 12:22:54.345 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 12:22:56.320 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 12:22:56.321 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.321 307:isInGraph              INFO   idx: 42984
2023-06-05 12:22:56.321 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.321 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 12:22:56.321 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 12:22:56.322 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 12:22:56.322 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 12:22:56.322 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 12:22:56.322 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 12:22:56.322 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.322 307:isInGraph              INFO   idx: 40257
2023-06-05 12:22:56.322 308:isInGraph              INFO   label: 0
2023-06-05 12:22:56.323 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 12:22:56.323 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 12:22:56.323 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 12:22:56.323 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 12:22:56.323 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 12:22:56.323 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 12:22:56.323 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.323 307:isInGraph              INFO   idx: 43203
2023-06-05 12:22:56.324 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.324 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 12:22:56.324 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 12:22:56.324 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 12:22:56.324 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 12:22:56.324 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 12:22:56.324 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 12:22:56.325 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.325 307:isInGraph              INFO   idx: 48598
2023-06-05 12:22:56.325 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.325 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 12:22:56.325 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 12:22:56.325 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 12:22:56.326 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 12:22:56.326 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 12:22:56.326 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 12:22:56.326 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.326 307:isInGraph              INFO   idx: 49875
2023-06-05 12:22:56.326 308:isInGraph              INFO   label: 0
2023-06-05 12:22:56.326 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 12:22:56.326 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 12:22:56.327 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 12:22:56.327 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 12:22:56.327 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 12:22:56.327 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 12:22:56.327 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.327 307:isInGraph              INFO   idx: 48859
2023-06-05 12:22:56.327 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.327 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 12:22:56.328 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 12:22:56.328 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 12:22:56.328 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 12:22:56.328 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 12:22:56.328 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 12:22:56.328 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.328 307:isInGraph              INFO   idx: 46604
2023-06-05 12:22:56.328 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.329 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 12:22:56.329 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 12:22:56.329 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 12:22:56.329 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 12:22:56.329 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 12:22:56.329 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 12:22:56.329 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.330 307:isInGraph              INFO   idx: 47009
2023-06-05 12:22:56.330 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.330 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 12:22:56.330 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 12:22:56.330 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 12:22:56.330 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 12:22:56.330 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 12:22:56.330 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 12:22:56.331 306:isInGraph              INFO   *** Example ***
2023-06-05 12:22:56.331 307:isInGraph              INFO   idx: 50281
2023-06-05 12:22:56.331 308:isInGraph              INFO   label: 1
2023-06-05 12:22:56.331 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 12:22:56.331 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 12:22:56.331 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 12:22:56.332 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 12:22:56.332 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 12:22:56.332 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 12:22:56.332 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 12:22:56.357 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 12:22:56.357 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 12:22:58.125 451:isIngraph              INFO   ***** Running training *****
2023-06-05 12:22:58.125 452:isIngraph              INFO     Num examples = 87838
2023-06-05 12:22:58.125 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 12:22:58.126 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 12:22:58.126 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 12:22:58.126 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 12:22:58.126 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 12:23:09.523 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:23:09.524 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:23:09.524 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:23:44.468 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:23:44.469 629:isIngraph              INFO     eval_acc = 0.7584
2023-06-05 12:23:44.469 629:isIngraph              INFO     eval_f1 = 0.7431
2023-06-05 12:23:44.469 629:isIngraph              INFO     eval_mcc = 0.5205
2023-06-05 12:23:44.470 629:isIngraph              INFO     eval_precision = 0.7931
2023-06-05 12:23:44.470 629:isIngraph              INFO     eval_recall = 0.6991
2023-06-05 12:23:44.470 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:23:44.477 522:isIngraph              INFO     ********************
2023-06-05 12:23:44.477 523:isIngraph              INFO     Best f1:0.7431
2023-06-05 12:23:44.477 524:isIngraph              INFO     ********************
2023-06-05 12:23:44.483 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:23:44.484 544:isIngraph              INFO     ********************
2023-06-05 12:23:44.484 545:isIngraph              INFO     Best MCC:0.5205
2023-06-05 12:23:44.484 546:isIngraph              INFO     ********************
2023-06-05 12:23:44.487 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:23:55.379 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:23:55.380 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:23:55.380 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:24:29.884 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:24:29.884 629:isIngraph              INFO     eval_acc = 0.8549
2023-06-05 12:24:29.884 629:isIngraph              INFO     eval_f1 = 0.8569
2023-06-05 12:24:29.885 629:isIngraph              INFO     eval_mcc = 0.7101
2023-06-05 12:24:29.885 629:isIngraph              INFO     eval_precision = 0.8451
2023-06-05 12:24:29.885 629:isIngraph              INFO     eval_recall = 0.869
2023-06-05 12:24:29.885 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:24:29.889 522:isIngraph              INFO     ********************
2023-06-05 12:24:29.889 523:isIngraph              INFO     Best f1:0.8569
2023-06-05 12:24:29.889 524:isIngraph              INFO     ********************
2023-06-05 12:24:29.893 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:24:29.893 544:isIngraph              INFO     ********************
2023-06-05 12:24:29.893 545:isIngraph              INFO     Best MCC:0.7101
2023-06-05 12:24:29.893 546:isIngraph              INFO     ********************
2023-06-05 12:24:29.895 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:24:39.829 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:24:39.829 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:24:39.829 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:25:16.025 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_acc = 0.8838
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_f1 = 0.8826
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_mcc = 0.7678
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_precision = 0.8915
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_recall = 0.8739
2023-06-05 12:25:16.026 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:25:16.030 522:isIngraph              INFO     ********************
2023-06-05 12:25:16.030 523:isIngraph              INFO     Best f1:0.8826
2023-06-05 12:25:16.030 524:isIngraph              INFO     ********************
2023-06-05 12:25:16.033 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:25:16.033 544:isIngraph              INFO     ********************
2023-06-05 12:25:16.034 545:isIngraph              INFO     Best MCC:0.7678
2023-06-05 12:25:16.034 546:isIngraph              INFO     ********************
2023-06-05 12:25:16.035 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:25:25.699 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:25:25.700 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:25:25.700 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:25:59.438 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:25:59.439 629:isIngraph              INFO     eval_acc = 0.8741
2023-06-05 12:25:59.439 629:isIngraph              INFO     eval_f1 = 0.8651
2023-06-05 12:25:59.439 629:isIngraph              INFO     eval_mcc = 0.7548
2023-06-05 12:25:59.439 629:isIngraph              INFO     eval_precision = 0.9312
2023-06-05 12:25:59.440 629:isIngraph              INFO     eval_recall = 0.8077
2023-06-05 12:25:59.440 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:26:10.328 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:26:10.328 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:26:10.328 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:26:47.306 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:26:47.306 629:isIngraph              INFO     eval_acc = 0.9044
2023-06-05 12:26:47.307 629:isIngraph              INFO     eval_f1 = 0.9095
2023-06-05 12:26:47.307 629:isIngraph              INFO     eval_mcc = 0.8141
2023-06-05 12:26:47.307 629:isIngraph              INFO     eval_precision = 0.8631
2023-06-05 12:26:47.307 629:isIngraph              INFO     eval_recall = 0.9612
2023-06-05 12:26:47.307 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:26:47.311 522:isIngraph              INFO     ********************
2023-06-05 12:26:47.311 523:isIngraph              INFO     Best f1:0.9095
2023-06-05 12:26:47.311 524:isIngraph              INFO     ********************
2023-06-05 12:26:47.348 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:26:47.349 544:isIngraph              INFO     ********************
2023-06-05 12:26:47.349 545:isIngraph              INFO     Best MCC:0.8141
2023-06-05 12:26:47.349 546:isIngraph              INFO     ********************
2023-06-05 12:26:47.373 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:26:58.533 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:26:58.534 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:26:58.534 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:27:33.582 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:27:33.582 629:isIngraph              INFO     eval_acc = 0.9144
2023-06-05 12:27:33.583 629:isIngraph              INFO     eval_f1 = 0.9155
2023-06-05 12:27:33.583 629:isIngraph              INFO     eval_mcc = 0.8291
2023-06-05 12:27:33.583 629:isIngraph              INFO     eval_precision = 0.9045
2023-06-05 12:27:33.583 629:isIngraph              INFO     eval_recall = 0.9267
2023-06-05 12:27:33.583 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:27:33.587 522:isIngraph              INFO     ********************
2023-06-05 12:27:33.587 523:isIngraph              INFO     Best f1:0.9155
2023-06-05 12:27:33.587 524:isIngraph              INFO     ********************
2023-06-05 12:27:33.590 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:27:33.591 544:isIngraph              INFO     ********************
2023-06-05 12:27:33.591 545:isIngraph              INFO     Best MCC:0.8291
2023-06-05 12:27:33.591 546:isIngraph              INFO     ********************
2023-06-05 12:27:33.593 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:27:43.837 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:27:43.838 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:27:43.838 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:28:17.000 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:28:17.001 629:isIngraph              INFO     eval_acc = 0.9087
2023-06-05 12:28:17.001 629:isIngraph              INFO     eval_f1 = 0.9139
2023-06-05 12:28:17.007 629:isIngraph              INFO     eval_mcc = 0.8235
2023-06-05 12:28:17.007 629:isIngraph              INFO     eval_precision = 0.8647
2023-06-05 12:28:17.007 629:isIngraph              INFO     eval_recall = 0.969
2023-06-05 12:28:17.007 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:28:27.108 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:28:27.108 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:28:27.108 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:29:01.477 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_acc = 0.9185
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_f1 = 0.9196
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_mcc = 0.8374
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_precision = 0.9074
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_recall = 0.9322
2023-06-05 12:29:01.478 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:29:01.481 522:isIngraph              INFO     ********************
2023-06-05 12:29:01.482 523:isIngraph              INFO     Best f1:0.9196
2023-06-05 12:29:01.482 524:isIngraph              INFO     ********************
2023-06-05 12:29:01.486 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:29:01.486 544:isIngraph              INFO     ********************
2023-06-05 12:29:01.486 545:isIngraph              INFO     Best MCC:0.8374
2023-06-05 12:29:01.486 546:isIngraph              INFO     ********************
2023-06-05 12:29:01.488 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:29:11.709 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:29:11.709 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:29:11.709 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:29:45.614 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:29:45.615 629:isIngraph              INFO     eval_acc = 0.9208
2023-06-05 12:29:45.615 629:isIngraph              INFO     eval_f1 = 0.9224
2023-06-05 12:29:45.616 629:isIngraph              INFO     eval_mcc = 0.8424
2023-06-05 12:29:45.616 629:isIngraph              INFO     eval_precision = 0.9044
2023-06-05 12:29:45.616 629:isIngraph              INFO     eval_recall = 0.9412
2023-06-05 12:29:45.616 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:29:45.620 522:isIngraph              INFO     ********************
2023-06-05 12:29:45.620 523:isIngraph              INFO     Best f1:0.9224
2023-06-05 12:29:45.620 524:isIngraph              INFO     ********************
2023-06-05 12:29:45.623 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:29:45.624 544:isIngraph              INFO     ********************
2023-06-05 12:29:45.624 545:isIngraph              INFO     Best MCC:0.8424
2023-06-05 12:29:45.624 546:isIngraph              INFO     ********************
2023-06-05 12:29:45.626 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:29:55.501 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 12:29:55.501 581:isIngraph              INFO     Num examples = 29244
2023-06-05 12:29:55.502 582:isIngraph              INFO     Batch size = 32
2023-06-05 12:30:31.136 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_acc = 0.9214
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_f1 = 0.9231
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_mcc = 0.8436
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_precision = 0.9033
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_recall = 0.9438
2023-06-05 12:30:31.137 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 12:30:31.141 522:isIngraph              INFO     ********************
2023-06-05 12:30:31.141 523:isIngraph              INFO     Best f1:0.9231
2023-06-05 12:30:31.141 524:isIngraph              INFO     ********************
2023-06-05 12:30:31.174 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 12:30:31.175 544:isIngraph              INFO     ********************
2023-06-05 12:30:31.175 545:isIngraph              INFO     Best MCC:0.8436
2023-06-05 12:30:31.175 546:isIngraph              INFO     ********************
2023-06-05 12:30:31.190 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 12:30:31.457 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 12:30:31.458 651:isIngraph              INFO     Num examples = 30316
2023-06-05 12:30:31.458 652:isIngraph              INFO     Batch size = 32
2023-06-05 12:31:06.173 693:isIngraph              INFO   ***** Test results *****
2023-06-05 12:31:06.173 695:isIngraph              INFO     eval_acc = 0.9107
2023-06-05 12:31:06.173 695:isIngraph              INFO     eval_f1 = 0.9122
2023-06-05 12:31:06.173 695:isIngraph              INFO     eval_mcc = 0.8218
2023-06-05 12:31:06.173 695:isIngraph              INFO     eval_precision = 0.8969
2023-06-05 12:31:06.173 695:isIngraph              INFO     eval_recall = 0.928
2023-06-05 12:31:06.174 695:isIngraph              INFO     eval_threshold = 0.5
