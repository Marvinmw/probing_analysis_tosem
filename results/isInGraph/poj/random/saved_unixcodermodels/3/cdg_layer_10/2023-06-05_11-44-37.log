2023-06-05 11:44:37.352 917:isIngraph              DEBUG  main message
2023-06-05 11:44:37.352 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 11:44:38.126 938:isIngraph              INFO   Load Dataset
2023-06-05 11:45:09.212 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 11:45:10.341 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 11:45:14.061 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 11:45:14.065 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 11:45:15.004 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 11:45:16.958 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 11:45:16.959 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 11:45:18.156 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 11:45:20.574 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 11:45:20.575 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.575 307:isInGraph              INFO   idx: 42984
2023-06-05 11:45:20.575 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.576 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 11:45:20.576 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 11:45:20.576 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 11:45:20.576 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 11:45:20.576 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 11:45:20.576 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 11:45:20.577 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.577 307:isInGraph              INFO   idx: 40257
2023-06-05 11:45:20.577 308:isInGraph              INFO   label: 0
2023-06-05 11:45:20.577 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 11:45:20.577 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 11:45:20.577 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 11:45:20.577 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 11:45:20.578 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 11:45:20.578 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 11:45:20.578 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.578 307:isInGraph              INFO   idx: 43203
2023-06-05 11:45:20.578 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.578 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 11:45:20.578 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 11:45:20.579 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 11:45:20.579 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 11:45:20.579 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 11:45:20.579 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 11:45:20.579 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.579 307:isInGraph              INFO   idx: 48598
2023-06-05 11:45:20.579 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.580 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 11:45:20.580 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 11:45:20.580 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 11:45:20.580 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 11:45:20.580 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 11:45:20.581 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 11:45:20.581 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.581 307:isInGraph              INFO   idx: 49875
2023-06-05 11:45:20.581 308:isInGraph              INFO   label: 0
2023-06-05 11:45:20.581 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 11:45:20.581 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 11:45:20.581 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 11:45:20.582 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 11:45:20.582 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 11:45:20.582 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 11:45:20.582 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.582 307:isInGraph              INFO   idx: 48859
2023-06-05 11:45:20.582 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.582 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 11:45:20.582 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 11:45:20.583 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 11:45:20.583 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 11:45:20.583 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 11:45:20.583 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 11:45:20.583 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.583 307:isInGraph              INFO   idx: 46604
2023-06-05 11:45:20.583 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.584 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 11:45:20.584 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 11:45:20.584 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 11:45:20.584 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 11:45:20.585 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 11:45:20.585 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 11:45:20.585 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.585 307:isInGraph              INFO   idx: 47009
2023-06-05 11:45:20.585 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.586 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 11:45:20.586 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 11:45:20.586 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 11:45:20.586 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 11:45:20.586 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 11:45:20.587 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 11:45:20.587 306:isInGraph              INFO   *** Example ***
2023-06-05 11:45:20.587 307:isInGraph              INFO   idx: 50281
2023-06-05 11:45:20.587 308:isInGraph              INFO   label: 1
2023-06-05 11:45:20.588 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 11:45:20.588 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 11:45:20.588 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 11:45:20.589 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 11:45:20.589 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 11:45:20.589 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 11:45:20.589 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 11:45:20.611 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 11:45:20.612 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 11:45:22.588 451:isIngraph              INFO   ***** Running training *****
2023-06-05 11:45:22.588 452:isIngraph              INFO     Num examples = 87838
2023-06-05 11:45:22.588 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 11:45:22.588 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 11:45:22.588 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 11:45:22.589 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 11:45:22.589 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 11:45:33.649 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:45:33.649 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:45:33.650 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:46:06.609 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_acc = 0.7621
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_f1 = 0.7472
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_mcc = 0.5279
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_precision = 0.797
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_recall = 0.7032
2023-06-05 11:46:06.611 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:46:06.615 522:isIngraph              INFO     ********************
2023-06-05 11:46:06.615 523:isIngraph              INFO     Best f1:0.7472
2023-06-05 11:46:06.615 524:isIngraph              INFO     ********************
2023-06-05 11:46:06.624 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:46:06.625 544:isIngraph              INFO     ********************
2023-06-05 11:46:06.625 545:isIngraph              INFO     Best MCC:0.5279
2023-06-05 11:46:06.625 546:isIngraph              INFO     ********************
2023-06-05 11:46:06.628 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:46:17.439 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:46:17.439 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:46:17.439 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:46:51.454 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:46:51.455 629:isIngraph              INFO     eval_acc = 0.8523
2023-06-05 11:46:51.455 629:isIngraph              INFO     eval_f1 = 0.8549
2023-06-05 11:46:51.455 629:isIngraph              INFO     eval_mcc = 0.7051
2023-06-05 11:46:51.455 629:isIngraph              INFO     eval_precision = 0.8402
2023-06-05 11:46:51.455 629:isIngraph              INFO     eval_recall = 0.8701
2023-06-05 11:46:51.456 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:46:51.459 522:isIngraph              INFO     ********************
2023-06-05 11:46:51.459 523:isIngraph              INFO     Best f1:0.8549
2023-06-05 11:46:51.460 524:isIngraph              INFO     ********************
2023-06-05 11:46:51.463 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:46:51.464 544:isIngraph              INFO     ********************
2023-06-05 11:46:51.464 545:isIngraph              INFO     Best MCC:0.7051
2023-06-05 11:46:51.464 546:isIngraph              INFO     ********************
2023-06-05 11:46:51.466 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:47:00.393 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:47:00.394 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:47:00.394 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:47:32.753 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_acc = 0.8849
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_f1 = 0.8834
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_mcc = 0.7701
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_precision = 0.8948
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_recall = 0.8724
2023-06-05 11:47:32.754 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:47:32.758 522:isIngraph              INFO     ********************
2023-06-05 11:47:32.758 523:isIngraph              INFO     Best f1:0.8834
2023-06-05 11:47:32.758 524:isIngraph              INFO     ********************
2023-06-05 11:47:32.761 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:47:32.761 544:isIngraph              INFO     ********************
2023-06-05 11:47:32.761 545:isIngraph              INFO     Best MCC:0.7701
2023-06-05 11:47:32.762 546:isIngraph              INFO     ********************
2023-06-05 11:47:32.763 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:47:42.070 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:47:42.070 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:47:42.070 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:48:13.571 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:48:13.571 629:isIngraph              INFO     eval_acc = 0.8595
2023-06-05 11:48:13.571 629:isIngraph              INFO     eval_f1 = 0.8459
2023-06-05 11:48:13.571 629:isIngraph              INFO     eval_mcc = 0.7304
2023-06-05 11:48:13.572 629:isIngraph              INFO     eval_precision = 0.9362
2023-06-05 11:48:13.572 629:isIngraph              INFO     eval_recall = 0.7715
2023-06-05 11:48:13.572 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:48:23.624 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:48:23.624 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:48:23.625 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:48:55.096 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_acc = 0.9042
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_f1 = 0.909
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_mcc = 0.8131
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_precision = 0.8648
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_recall = 0.9581
2023-06-05 11:48:55.097 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:48:55.100 522:isIngraph              INFO     ********************
2023-06-05 11:48:55.101 523:isIngraph              INFO     Best f1:0.909
2023-06-05 11:48:55.101 524:isIngraph              INFO     ********************
2023-06-05 11:48:55.105 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:48:55.106 544:isIngraph              INFO     ********************
2023-06-05 11:48:55.106 545:isIngraph              INFO     Best MCC:0.8131
2023-06-05 11:48:55.106 546:isIngraph              INFO     ********************
2023-06-05 11:48:55.109 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:49:05.179 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:49:05.179 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:49:05.180 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:49:32.073 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:49:32.073 629:isIngraph              INFO     eval_acc = 0.9126
2023-06-05 11:49:32.073 629:isIngraph              INFO     eval_f1 = 0.9125
2023-06-05 11:49:32.073 629:isIngraph              INFO     eval_mcc = 0.8253
2023-06-05 11:49:32.074 629:isIngraph              INFO     eval_precision = 0.9132
2023-06-05 11:49:32.074 629:isIngraph              INFO     eval_recall = 0.9119
2023-06-05 11:49:32.074 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:49:32.077 522:isIngraph              INFO     ********************
2023-06-05 11:49:32.077 523:isIngraph              INFO     Best f1:0.9125
2023-06-05 11:49:32.077 524:isIngraph              INFO     ********************
2023-06-05 11:49:32.080 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:49:32.080 544:isIngraph              INFO     ********************
2023-06-05 11:49:32.080 545:isIngraph              INFO     Best MCC:0.8253
2023-06-05 11:49:32.081 546:isIngraph              INFO     ********************
2023-06-05 11:49:32.082 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:49:42.077 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:49:42.077 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:49:42.077 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:50:08.869 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:50:08.869 629:isIngraph              INFO     eval_acc = 0.911
2023-06-05 11:50:08.870 629:isIngraph              INFO     eval_f1 = 0.9153
2023-06-05 11:50:08.870 629:isIngraph              INFO     eval_mcc = 0.8263
2023-06-05 11:50:08.870 629:isIngraph              INFO     eval_precision = 0.873
2023-06-05 11:50:08.870 629:isIngraph              INFO     eval_recall = 0.9619
2023-06-05 11:50:08.870 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:50:08.873 522:isIngraph              INFO     ********************
2023-06-05 11:50:08.874 523:isIngraph              INFO     Best f1:0.9153
2023-06-05 11:50:08.874 524:isIngraph              INFO     ********************
2023-06-05 11:50:08.877 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:50:08.877 544:isIngraph              INFO     ********************
2023-06-05 11:50:08.878 545:isIngraph              INFO     Best MCC:0.8263
2023-06-05 11:50:08.878 546:isIngraph              INFO     ********************
2023-06-05 11:50:08.879 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:50:18.609 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:50:18.610 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:50:18.610 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:50:53.781 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:50:53.782 629:isIngraph              INFO     eval_acc = 0.9196
2023-06-05 11:50:53.782 629:isIngraph              INFO     eval_f1 = 0.9203
2023-06-05 11:50:53.782 629:isIngraph              INFO     eval_mcc = 0.8393
2023-06-05 11:50:53.782 629:isIngraph              INFO     eval_precision = 0.9123
2023-06-05 11:50:53.782 629:isIngraph              INFO     eval_recall = 0.9284
2023-06-05 11:50:53.783 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:50:53.786 522:isIngraph              INFO     ********************
2023-06-05 11:50:53.786 523:isIngraph              INFO     Best f1:0.9203
2023-06-05 11:50:53.786 524:isIngraph              INFO     ********************
2023-06-05 11:50:53.788 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:50:53.789 544:isIngraph              INFO     ********************
2023-06-05 11:50:53.789 545:isIngraph              INFO     Best MCC:0.8393
2023-06-05 11:50:53.789 546:isIngraph              INFO     ********************
2023-06-05 11:50:53.790 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:51:03.250 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:51:03.250 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:51:03.250 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:51:38.295 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:51:38.295 629:isIngraph              INFO     eval_acc = 0.9217
2023-06-05 11:51:38.295 629:isIngraph              INFO     eval_f1 = 0.923
2023-06-05 11:51:38.295 629:isIngraph              INFO     eval_mcc = 0.8439
2023-06-05 11:51:38.296 629:isIngraph              INFO     eval_precision = 0.9081
2023-06-05 11:51:38.296 629:isIngraph              INFO     eval_recall = 0.9384
2023-06-05 11:51:38.296 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:51:38.299 522:isIngraph              INFO     ********************
2023-06-05 11:51:38.300 523:isIngraph              INFO     Best f1:0.923
2023-06-05 11:51:38.300 524:isIngraph              INFO     ********************
2023-06-05 11:51:38.303 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:51:38.303 544:isIngraph              INFO     ********************
2023-06-05 11:51:38.303 545:isIngraph              INFO     Best MCC:0.8439
2023-06-05 11:51:38.304 546:isIngraph              INFO     ********************
2023-06-05 11:51:38.306 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:51:47.845 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 11:51:47.845 581:isIngraph              INFO     Num examples = 29244
2023-06-05 11:51:47.845 582:isIngraph              INFO     Batch size = 32
2023-06-05 11:52:23.227 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_acc = 0.9228
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_f1 = 0.9244
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_mcc = 0.8464
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_precision = 0.9058
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_recall = 0.9438
2023-06-05 11:52:23.228 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 11:52:23.233 522:isIngraph              INFO     ********************
2023-06-05 11:52:23.233 523:isIngraph              INFO     Best f1:0.9244
2023-06-05 11:52:23.234 524:isIngraph              INFO     ********************
2023-06-05 11:52:23.236 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 11:52:23.237 544:isIngraph              INFO     ********************
2023-06-05 11:52:23.237 545:isIngraph              INFO     Best MCC:0.8464
2023-06-05 11:52:23.237 546:isIngraph              INFO     ********************
2023-06-05 11:52:23.239 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 11:52:23.483 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 11:52:23.483 651:isIngraph              INFO     Num examples = 30316
2023-06-05 11:52:23.484 652:isIngraph              INFO     Batch size = 32
2023-06-05 11:53:00.342 693:isIngraph              INFO   ***** Test results *****
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_acc = 0.9109
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_f1 = 0.9125
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_mcc = 0.8223
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_precision = 0.8967
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_recall = 0.9287
2023-06-05 11:53:00.343 695:isIngraph              INFO     eval_threshold = 0.5
