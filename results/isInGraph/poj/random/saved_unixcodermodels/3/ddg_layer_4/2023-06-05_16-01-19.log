2023-06-05 16:01:19.141 917:isIngraph              DEBUG  main message
2023-06-05 16:01:19.141 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 16:01:19.882 938:isIngraph              INFO   Load Dataset
2023-06-05 16:01:47.919 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:01:48.921 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-05 16:01:52.713 301:isInGraph              INFO   Labels Counter({1: 54318, 0: 54318})
2023-06-05 16:01:52.716 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:01:53.616 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-05 16:01:55.248 301:isInGraph              INFO   Labels Counter({0: 18321, 1: 18321})
2023-06-05 16:01:55.249 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:01:56.115 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-05 16:01:58.633 301:isInGraph              INFO   Labels Counter({1: 18187, 0: 18187})
2023-06-05 16:01:58.634 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.634 307:isInGraph              INFO   idx: 44400
2023-06-05 16:01:58.634 308:isInGraph              INFO   label: 1
2023-06-05 16:01:58.635 309:isInGraph              INFO   input_tokens_1: ['int', '_main', '()']
2023-06-05 16:01:58.635 317:isInGraph              INFO   input_ids_1: 1 4
2023-06-05 16:01:58.635 324:isInGraph              INFO   input_tokens_reverse_1: <encoder-only> </s> int
2023-06-05 16:01:58.635 334:isInGraph              INFO   input_tokens_2: ['flag', '_=', '_0']
2023-06-05 16:01:58.635 342:isInGraph              INFO   input_ids_2: 29 32
2023-06-05 16:01:58.635 349:isInGraph              INFO   input_tokens_reverse_2: Ġi , Ġj
2023-06-05 16:01:58.635 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.636 307:isInGraph              INFO   idx: 48866
2023-06-05 16:01:58.636 308:isInGraph              INFO   label: 0
2023-06-05 16:01:58.636 309:isInGraph              INFO   input_tokens_1: ['word', 'len']
2023-06-05 16:01:58.636 317:isInGraph              INFO   input_ids_1: 18 20
2023-06-05 16:01:58.636 324:isInGraph              INFO   input_tokens_reverse_1: \ 0
2023-06-05 16:01:58.636 334:isInGraph              INFO   input_tokens_2: ['sum']
2023-06-05 16:01:58.636 342:isInGraph              INFO   input_ids_2: 136 137
2023-06-05 16:01:58.636 349:isInGraph              INFO   input_tokens_reverse_2: ĠĠĠ
2023-06-05 16:01:58.637 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.637 307:isInGraph              INFO   idx: 47202
2023-06-05 16:01:58.637 308:isInGraph              INFO   label: 0
2023-06-05 16:01:58.637 309:isInGraph              INFO   input_tokens_1: ['b']
2023-06-05 16:01:58.637 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 16:01:58.637 324:isInGraph              INFO   input_tokens_reverse_1: Ġ((
2023-06-05 16:01:58.637 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 16:01:58.637 342:isInGraph              INFO   input_ids_2: 138 139
2023-06-05 16:01:58.638 349:isInGraph              INFO   input_tokens_reverse_2: Ġ(
2023-06-05 16:01:58.638 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.638 307:isInGraph              INFO   idx: 41834
2023-06-05 16:01:58.638 308:isInGraph              INFO   label: 0
2023-06-05 16:01:58.638 309:isInGraph              INFO   input_tokens_1: ['if', '_(', 'i', '_==', '_0', ')']
2023-06-05 16:01:58.638 317:isInGraph              INFO   input_ids_1: 62 68
2023-06-05 16:01:58.638 324:isInGraph              INFO   input_tokens_reverse_1: Ġ} Ċ Ġ Ġfor Ġ( i
2023-06-05 16:01:58.639 334:isInGraph              INFO   input_tokens_2: ['c', '_=', '_0']
2023-06-05 16:01:58.639 342:isInGraph              INFO   input_ids_2: 98 101
2023-06-05 16:01:58.639 349:isInGraph              INFO   input_tokens_reverse_2: Ġ= Ġ0 ;
2023-06-05 16:01:58.639 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.639 307:isInGraph              INFO   idx: 42975
2023-06-05 16:01:58.639 308:isInGraph              INFO   label: 1
2023-06-05 16:01:58.639 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 'd', '\\', 'n', '",', '_sum', ')']
2023-06-05 16:01:58.639 317:isInGraph              INFO   input_ids_1: 107 115
2023-06-05 16:01:58.640 324:isInGraph              INFO   input_tokens_reverse_1: ; Ċ ĠĠĠĠĠ Ġ} Ġelse Ġif Ġ( a
2023-06-05 16:01:58.640 334:isInGraph              INFO   input_tokens_2: ['i', '++']
2023-06-05 16:01:58.640 342:isInGraph              INFO   input_ids_2: 30 32
2023-06-05 16:01:58.640 349:isInGraph              INFO   input_tokens_reverse_2: Ġfor Ġ(
2023-06-05 16:01:58.640 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.640 307:isInGraph              INFO   idx: 49044
2023-06-05 16:01:58.640 308:isInGraph              INFO   label: 1
2023-06-05 16:01:58.641 309:isInGraph              INFO   input_tokens_1: ['cout', '_<<', '_"', '36', '-', '60', ':', '_"']
2023-06-05 16:01:58.641 317:isInGraph              INFO   input_ids_1: 209 217
2023-06-05 16:01:58.641 324:isInGraph              INFO   input_tokens_reverse_1: Ġcout Ġ<< Ġ" 1 - 18 : Ġ"
2023-06-05 16:01:58.641 334:isInGraph              INFO   input_tokens_2: ['set', 'precision', '(', '2', ')']
2023-06-05 16:01:58.641 342:isInGraph              INFO   input_ids_2: 174 179
2023-06-05 16:01:58.641 349:isInGraph              INFO   input_tokens_reverse_2: Ġ/ Ġn ; Ċ Ġ
2023-06-05 16:01:58.641 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.642 307:isInGraph              INFO   idx: 40591
2023-06-05 16:01:58.642 308:isInGraph              INFO   label: 1
2023-06-05 16:01:58.642 309:isInGraph              INFO   input_tokens_1: ['sc', '[', 'i', ']', '_=', '_e']
2023-06-05 16:01:58.642 317:isInGraph              INFO   input_ids_1: 186 192
2023-06-05 16:01:58.642 324:isInGraph              INFO   input_tokens_reverse_1: Ġ( sc [ i ] Ġ<
2023-06-05 16:01:58.642 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-05 16:01:58.642 342:isInGraph              INFO   input_ids_2: 45 48
2023-06-05 16:01:58.642 349:isInGraph              INFO   input_tokens_reverse_2: ", Ġ& n
2023-06-05 16:01:58.643 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.643 307:isInGraph              INFO   idx: 49875
2023-06-05 16:01:58.643 308:isInGraph              INFO   label: 0
2023-06-05 16:01:58.643 309:isInGraph              INFO   input_tokens_1: ['gets', '(', 'p', ')']
2023-06-05 16:01:58.643 317:isInGraph              INFO   input_ids_1: 35 39
2023-06-05 16:01:58.643 324:isInGraph              INFO   input_tokens_reverse_1: , Ġcount , Ġ*
2023-06-05 16:01:58.643 334:isInGraph              INFO   input_tokens_2: ['26']
2023-06-05 16:01:58.644 342:isInGraph              INFO   input_ids_2: 106 107
2023-06-05 16:01:58.644 349:isInGraph              INFO   input_tokens_reverse_2: Ġif
2023-06-05 16:01:58.644 306:isInGraph              INFO   *** Example ***
2023-06-05 16:01:58.644 307:isInGraph              INFO   idx: 40351
2023-06-05 16:01:58.644 308:isInGraph              INFO   label: 1
2023-06-05 16:01:58.644 309:isInGraph              INFO   input_tokens_1: ['j', '++']
2023-06-05 16:01:58.644 317:isInGraph              INFO   input_ids_1: 195 197
2023-06-05 16:01:58.644 324:isInGraph              INFO   input_tokens_reverse_1: ][ i
2023-06-05 16:01:58.645 334:isInGraph              INFO   input_tokens_2: ['i', '_<', '_5']
2023-06-05 16:01:58.645 342:isInGraph              INFO   input_ids_2: 117 120
2023-06-05 16:01:58.645 349:isInGraph              INFO   input_tokens_reverse_2: Ġm Ġ>= Ġ0
2023-06-05 16:01:58.645 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 16:01:58.669 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 16:01:58.669 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 16:02:00.384 451:isIngraph              INFO   ***** Running training *****
2023-06-05 16:02:00.384 452:isIngraph              INFO     Num examples = 108636
2023-06-05 16:02:00.384 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 16:02:00.385 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 16:02:00.385 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 16:02:00.385 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 16:02:00.385 465:isIngraph              INFO     Total optimization steps = 1698
2023-06-05 16:02:11.500 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:02:11.501 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:02:11.501 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:02:51.410 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:02:51.411 629:isIngraph              INFO     eval_acc = 0.8141
2023-06-05 16:02:51.411 629:isIngraph              INFO     eval_f1 = 0.8224
2023-06-05 16:02:51.411 629:isIngraph              INFO     eval_mcc = 0.6309
2023-06-05 16:02:51.411 629:isIngraph              INFO     eval_precision = 0.7872
2023-06-05 16:02:51.412 629:isIngraph              INFO     eval_recall = 0.8609
2023-06-05 16:02:51.412 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:02:51.412 522:isIngraph              INFO     ********************
2023-06-05 16:02:51.412 523:isIngraph              INFO     Best f1:0.8224
2023-06-05 16:02:51.412 524:isIngraph              INFO     ********************
2023-06-05 16:02:51.417 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:02:51.418 544:isIngraph              INFO     ********************
2023-06-05 16:02:51.418 545:isIngraph              INFO     Best MCC:0.6309
2023-06-05 16:02:51.418 546:isIngraph              INFO     ********************
2023-06-05 16:02:51.421 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:03:03.020 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:03:03.021 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:03:03.022 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:03:43.909 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_acc = 0.9031
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_f1 = 0.9029
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_mcc = 0.8062
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_precision = 0.9049
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_recall = 0.9009
2023-06-05 16:03:43.910 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:03:43.911 522:isIngraph              INFO     ********************
2023-06-05 16:03:43.911 523:isIngraph              INFO     Best f1:0.9029
2023-06-05 16:03:43.911 524:isIngraph              INFO     ********************
2023-06-05 16:03:43.915 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:03:43.915 544:isIngraph              INFO     ********************
2023-06-05 16:03:43.915 545:isIngraph              INFO     Best MCC:0.8062
2023-06-05 16:03:43.915 546:isIngraph              INFO     ********************
2023-06-05 16:03:43.917 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:03:55.970 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:03:55.970 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:03:55.971 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:04:23.637 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_acc = 0.9324
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_f1 = 0.9332
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_mcc = 0.8651
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_precision = 0.923
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_recall = 0.9436
2023-06-05 16:04:23.638 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:04:23.639 522:isIngraph              INFO     ********************
2023-06-05 16:04:23.639 523:isIngraph              INFO     Best f1:0.9332
2023-06-05 16:04:23.639 524:isIngraph              INFO     ********************
2023-06-05 16:04:23.643 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:04:23.643 544:isIngraph              INFO     ********************
2023-06-05 16:04:23.643 545:isIngraph              INFO     Best MCC:0.8651
2023-06-05 16:04:23.643 546:isIngraph              INFO     ********************
2023-06-05 16:04:23.645 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:04:33.945 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:04:33.945 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:04:33.946 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:05:04.467 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:05:04.467 629:isIngraph              INFO     eval_acc = 0.9394
2023-06-05 16:05:04.467 629:isIngraph              INFO     eval_f1 = 0.939
2023-06-05 16:05:04.467 629:isIngraph              INFO     eval_mcc = 0.8788
2023-06-05 16:05:04.467 629:isIngraph              INFO     eval_precision = 0.945
2023-06-05 16:05:04.468 629:isIngraph              INFO     eval_recall = 0.933
2023-06-05 16:05:04.468 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:05:04.468 522:isIngraph              INFO     ********************
2023-06-05 16:05:04.468 523:isIngraph              INFO     Best f1:0.939
2023-06-05 16:05:04.468 524:isIngraph              INFO     ********************
2023-06-05 16:05:04.471 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:05:04.471 544:isIngraph              INFO     ********************
2023-06-05 16:05:04.471 545:isIngraph              INFO     Best MCC:0.8788
2023-06-05 16:05:04.472 546:isIngraph              INFO     ********************
2023-06-05 16:05:04.473 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:05:15.768 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:05:15.769 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:05:15.769 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:05:58.031 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:05:58.031 629:isIngraph              INFO     eval_acc = 0.9442
2023-06-05 16:05:58.032 629:isIngraph              INFO     eval_f1 = 0.9448
2023-06-05 16:05:58.032 629:isIngraph              INFO     eval_mcc = 0.8886
2023-06-05 16:05:58.032 629:isIngraph              INFO     eval_precision = 0.9351
2023-06-05 16:05:58.032 629:isIngraph              INFO     eval_recall = 0.9546
2023-06-05 16:05:58.032 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:05:58.032 522:isIngraph              INFO     ********************
2023-06-05 16:05:58.032 523:isIngraph              INFO     Best f1:0.9448
2023-06-05 16:05:58.032 524:isIngraph              INFO     ********************
2023-06-05 16:05:58.035 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:05:58.036 544:isIngraph              INFO     ********************
2023-06-05 16:05:58.036 545:isIngraph              INFO     Best MCC:0.8886
2023-06-05 16:05:58.036 546:isIngraph              INFO     ********************
2023-06-05 16:05:58.037 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:06:09.428 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:06:09.428 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:06:09.428 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:06:52.979 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:06:52.979 629:isIngraph              INFO     eval_acc = 0.9492
2023-06-05 16:06:52.980 629:isIngraph              INFO     eval_f1 = 0.9498
2023-06-05 16:06:52.980 629:isIngraph              INFO     eval_mcc = 0.8987
2023-06-05 16:06:52.980 629:isIngraph              INFO     eval_precision = 0.9395
2023-06-05 16:06:52.980 629:isIngraph              INFO     eval_recall = 0.9604
2023-06-05 16:06:52.980 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:06:52.980 522:isIngraph              INFO     ********************
2023-06-05 16:06:52.980 523:isIngraph              INFO     Best f1:0.9498
2023-06-05 16:06:52.980 524:isIngraph              INFO     ********************
2023-06-05 16:06:53.003 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:06:53.003 544:isIngraph              INFO     ********************
2023-06-05 16:06:53.003 545:isIngraph              INFO     Best MCC:0.8987
2023-06-05 16:06:53.003 546:isIngraph              INFO     ********************
2023-06-05 16:06:53.017 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:07:04.611 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:07:04.611 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:07:04.611 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:07:45.843 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:07:45.843 629:isIngraph              INFO     eval_acc = 0.9492
2023-06-05 16:07:45.844 629:isIngraph              INFO     eval_f1 = 0.9503
2023-06-05 16:07:45.844 629:isIngraph              INFO     eval_mcc = 0.8992
2023-06-05 16:07:45.844 629:isIngraph              INFO     eval_precision = 0.9317
2023-06-05 16:07:45.844 629:isIngraph              INFO     eval_recall = 0.9696
2023-06-05 16:07:45.844 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:07:45.844 522:isIngraph              INFO     ********************
2023-06-05 16:07:45.845 523:isIngraph              INFO     Best f1:0.9503
2023-06-05 16:07:45.845 524:isIngraph              INFO     ********************
2023-06-05 16:07:45.848 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:07:45.849 544:isIngraph              INFO     ********************
2023-06-05 16:07:45.849 545:isIngraph              INFO     Best MCC:0.8992
2023-06-05 16:07:45.849 546:isIngraph              INFO     ********************
2023-06-05 16:07:45.851 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:07:58.828 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:07:58.829 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:07:58.829 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:08:42.532 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:08:42.532 629:isIngraph              INFO     eval_acc = 0.953
2023-06-05 16:08:42.532 629:isIngraph              INFO     eval_f1 = 0.9538
2023-06-05 16:08:42.532 629:isIngraph              INFO     eval_mcc = 0.9065
2023-06-05 16:08:42.532 629:isIngraph              INFO     eval_precision = 0.9392
2023-06-05 16:08:42.533 629:isIngraph              INFO     eval_recall = 0.9687
2023-06-05 16:08:42.533 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:08:42.533 522:isIngraph              INFO     ********************
2023-06-05 16:08:42.533 523:isIngraph              INFO     Best f1:0.9538
2023-06-05 16:08:42.533 524:isIngraph              INFO     ********************
2023-06-05 16:08:42.537 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:08:42.537 544:isIngraph              INFO     ********************
2023-06-05 16:08:42.537 545:isIngraph              INFO     Best MCC:0.9065
2023-06-05 16:08:42.537 546:isIngraph              INFO     ********************
2023-06-05 16:08:42.539 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:08:54.381 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:08:54.382 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:08:54.382 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:09:35.598 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:09:35.599 629:isIngraph              INFO     eval_acc = 0.9534
2023-06-05 16:09:35.599 629:isIngraph              INFO     eval_f1 = 0.9541
2023-06-05 16:09:35.599 629:isIngraph              INFO     eval_mcc = 0.9073
2023-06-05 16:09:35.599 629:isIngraph              INFO     eval_precision = 0.9389
2023-06-05 16:09:35.600 629:isIngraph              INFO     eval_recall = 0.9699
2023-06-05 16:09:35.600 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:09:35.600 522:isIngraph              INFO     ********************
2023-06-05 16:09:35.600 523:isIngraph              INFO     Best f1:0.9541
2023-06-05 16:09:35.600 524:isIngraph              INFO     ********************
2023-06-05 16:09:35.604 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:09:35.604 544:isIngraph              INFO     ********************
2023-06-05 16:09:35.604 545:isIngraph              INFO     Best MCC:0.9073
2023-06-05 16:09:35.604 546:isIngraph              INFO     ********************
2023-06-05 16:09:35.606 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:09:47.690 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:09:47.691 581:isIngraph              INFO     Num examples = 36642
2023-06-05 16:09:47.691 582:isIngraph              INFO     Batch size = 32
2023-06-05 16:10:30.264 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_acc = 0.9543
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_f1 = 0.9549
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_mcc = 0.9089
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_precision = 0.9438
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_recall = 0.9662
2023-06-05 16:10:30.265 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 16:10:30.265 522:isIngraph              INFO     ********************
2023-06-05 16:10:30.265 523:isIngraph              INFO     Best f1:0.9549
2023-06-05 16:10:30.266 524:isIngraph              INFO     ********************
2023-06-05 16:10:30.269 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 16:10:30.269 544:isIngraph              INFO     ********************
2023-06-05 16:10:30.269 545:isIngraph              INFO     Best MCC:0.9089
2023-06-05 16:10:30.269 546:isIngraph              INFO     ********************
2023-06-05 16:10:30.271 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/ddg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 16:10:30.815 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 16:10:30.815 651:isIngraph              INFO     Num examples = 36374
2023-06-05 16:10:30.815 652:isIngraph              INFO     Batch size = 32
2023-06-05 16:11:10.187 693:isIngraph              INFO   ***** Test results *****
2023-06-05 16:11:10.187 695:isIngraph              INFO     eval_acc = 0.9547
2023-06-05 16:11:10.188 695:isIngraph              INFO     eval_f1 = 0.9553
2023-06-05 16:11:10.188 695:isIngraph              INFO     eval_mcc = 0.9098
2023-06-05 16:11:10.188 695:isIngraph              INFO     eval_precision = 0.9427
2023-06-05 16:11:10.188 695:isIngraph              INFO     eval_recall = 0.9683
2023-06-05 16:11:10.188 695:isIngraph              INFO     eval_threshold = 0.5
