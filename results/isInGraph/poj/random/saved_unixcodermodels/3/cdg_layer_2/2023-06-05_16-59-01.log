2023-06-05 16:59:01.832 917:isIngraph              DEBUG  main message
2023-06-05 16:59:01.832 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 16:59:02.593 938:isIngraph              INFO   Load Dataset
2023-06-05 16:59:34.304 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:59:35.405 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 16:59:39.366 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 16:59:39.370 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:59:40.455 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 16:59:42.139 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 16:59:42.141 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 16:59:43.270 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 16:59:45.243 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 16:59:45.244 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.244 307:isInGraph              INFO   idx: 42984
2023-06-05 16:59:45.244 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.245 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 16:59:45.245 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 16:59:45.245 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 16:59:45.246 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 16:59:45.246 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 16:59:45.246 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 16:59:45.246 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.246 307:isInGraph              INFO   idx: 40257
2023-06-05 16:59:45.246 308:isInGraph              INFO   label: 0
2023-06-05 16:59:45.247 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 16:59:45.247 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 16:59:45.247 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 16:59:45.247 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 16:59:45.248 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 16:59:45.248 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 16:59:45.248 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.248 307:isInGraph              INFO   idx: 43203
2023-06-05 16:59:45.248 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.249 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 16:59:45.249 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 16:59:45.249 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 16:59:45.250 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 16:59:45.250 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 16:59:45.250 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 16:59:45.251 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.251 307:isInGraph              INFO   idx: 48598
2023-06-05 16:59:45.251 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.251 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 16:59:45.252 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 16:59:45.252 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 16:59:45.252 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 16:59:45.253 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 16:59:45.253 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 16:59:45.253 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.253 307:isInGraph              INFO   idx: 49875
2023-06-05 16:59:45.254 308:isInGraph              INFO   label: 0
2023-06-05 16:59:45.254 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 16:59:45.254 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 16:59:45.254 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 16:59:45.255 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 16:59:45.255 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 16:59:45.255 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 16:59:45.255 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.255 307:isInGraph              INFO   idx: 48859
2023-06-05 16:59:45.255 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.256 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 16:59:45.256 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 16:59:45.256 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 16:59:45.256 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 16:59:45.256 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 16:59:45.257 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 16:59:45.257 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.257 307:isInGraph              INFO   idx: 46604
2023-06-05 16:59:45.257 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.257 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 16:59:45.257 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 16:59:45.258 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 16:59:45.258 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 16:59:45.258 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 16:59:45.258 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 16:59:45.258 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.258 307:isInGraph              INFO   idx: 47009
2023-06-05 16:59:45.259 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.259 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 16:59:45.259 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 16:59:45.259 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 16:59:45.259 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 16:59:45.260 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 16:59:45.260 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 16:59:45.260 306:isInGraph              INFO   *** Example ***
2023-06-05 16:59:45.260 307:isInGraph              INFO   idx: 50281
2023-06-05 16:59:45.260 308:isInGraph              INFO   label: 1
2023-06-05 16:59:45.260 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 16:59:45.261 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 16:59:45.261 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 16:59:45.261 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 16:59:45.261 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 16:59:45.262 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 16:59:45.262 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 16:59:45.283 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 16:59:45.283 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 16:59:46.934 451:isIngraph              INFO   ***** Running training *****
2023-06-05 16:59:46.934 452:isIngraph              INFO     Num examples = 87838
2023-06-05 16:59:46.934 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 16:59:46.934 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 16:59:46.934 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 16:59:46.934 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 16:59:46.935 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 16:59:58.855 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 16:59:58.857 581:isIngraph              INFO     Num examples = 29244
2023-06-05 16:59:58.857 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:00:31.959 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:00:31.963 629:isIngraph              INFO     eval_acc = 0.7856
2023-06-05 17:00:31.963 629:isIngraph              INFO     eval_f1 = 0.7749
2023-06-05 17:00:31.964 629:isIngraph              INFO     eval_mcc = 0.5737
2023-06-05 17:00:31.964 629:isIngraph              INFO     eval_precision = 0.8151
2023-06-05 17:00:31.964 629:isIngraph              INFO     eval_recall = 0.7385
2023-06-05 17:00:31.964 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:00:31.968 522:isIngraph              INFO     ********************
2023-06-05 17:00:31.968 523:isIngraph              INFO     Best f1:0.7749
2023-06-05 17:00:31.968 524:isIngraph              INFO     ********************
2023-06-05 17:00:32.006 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:00:32.006 544:isIngraph              INFO     ********************
2023-06-05 17:00:32.006 545:isIngraph              INFO     Best MCC:0.5737
2023-06-05 17:00:32.007 546:isIngraph              INFO     ********************
2023-06-05 17:00:32.030 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:00:42.170 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:00:42.171 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:00:42.171 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:01:16.333 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:01:16.333 629:isIngraph              INFO     eval_acc = 0.8896
2023-06-05 17:01:16.334 629:isIngraph              INFO     eval_f1 = 0.8897
2023-06-05 17:01:16.334 629:isIngraph              INFO     eval_mcc = 0.7792
2023-06-05 17:01:16.334 629:isIngraph              INFO     eval_precision = 0.8882
2023-06-05 17:01:16.334 629:isIngraph              INFO     eval_recall = 0.8913
2023-06-05 17:01:16.334 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:01:16.339 522:isIngraph              INFO     ********************
2023-06-05 17:01:16.339 523:isIngraph              INFO     Best f1:0.8897
2023-06-05 17:01:16.340 524:isIngraph              INFO     ********************
2023-06-05 17:01:16.358 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:01:16.358 544:isIngraph              INFO     ********************
2023-06-05 17:01:16.358 545:isIngraph              INFO     Best MCC:0.7792
2023-06-05 17:01:16.359 546:isIngraph              INFO     ********************
2023-06-05 17:01:16.361 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:01:26.456 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:01:26.456 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:01:26.456 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:02:01.508 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:02:01.509 629:isIngraph              INFO     eval_acc = 0.9061
2023-06-05 17:02:01.509 629:isIngraph              INFO     eval_f1 = 0.9102
2023-06-05 17:02:01.509 629:isIngraph              INFO     eval_mcc = 0.8156
2023-06-05 17:02:01.509 629:isIngraph              INFO     eval_precision = 0.8719
2023-06-05 17:02:01.509 629:isIngraph              INFO     eval_recall = 0.952
2023-06-05 17:02:01.510 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:02:01.515 522:isIngraph              INFO     ********************
2023-06-05 17:02:01.516 523:isIngraph              INFO     Best f1:0.9102
2023-06-05 17:02:01.516 524:isIngraph              INFO     ********************
2023-06-05 17:02:01.541 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:02:01.541 544:isIngraph              INFO     ********************
2023-06-05 17:02:01.541 545:isIngraph              INFO     Best MCC:0.8156
2023-06-05 17:02:01.542 546:isIngraph              INFO     ********************
2023-06-05 17:02:01.543 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:02:11.721 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:02:11.722 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:02:11.722 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:02:45.683 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:02:45.683 629:isIngraph              INFO     eval_acc = 0.9086
2023-06-05 17:02:45.683 629:isIngraph              INFO     eval_f1 = 0.9061
2023-06-05 17:02:45.684 629:isIngraph              INFO     eval_mcc = 0.8184
2023-06-05 17:02:45.684 629:isIngraph              INFO     eval_precision = 0.9319
2023-06-05 17:02:45.684 629:isIngraph              INFO     eval_recall = 0.8817
2023-06-05 17:02:45.684 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:02:45.688 544:isIngraph              INFO     ********************
2023-06-05 17:02:45.688 545:isIngraph              INFO     Best MCC:0.8184
2023-06-05 17:02:45.688 546:isIngraph              INFO     ********************
2023-06-05 17:02:45.692 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:02:56.119 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:02:56.119 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:02:56.119 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:03:30.719 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:03:30.719 629:isIngraph              INFO     eval_acc = 0.9274
2023-06-05 17:03:30.719 629:isIngraph              INFO     eval_f1 = 0.9294
2023-06-05 17:03:30.719 629:isIngraph              INFO     eval_mcc = 0.8562
2023-06-05 17:03:30.720 629:isIngraph              INFO     eval_precision = 0.9034
2023-06-05 17:03:30.720 629:isIngraph              INFO     eval_recall = 0.957
2023-06-05 17:03:30.720 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:03:30.724 522:isIngraph              INFO     ********************
2023-06-05 17:03:30.724 523:isIngraph              INFO     Best f1:0.9294
2023-06-05 17:03:30.724 524:isIngraph              INFO     ********************
2023-06-05 17:03:30.728 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:03:30.728 544:isIngraph              INFO     ********************
2023-06-05 17:03:30.728 545:isIngraph              INFO     Best MCC:0.8562
2023-06-05 17:03:30.728 546:isIngraph              INFO     ********************
2023-06-05 17:03:30.730 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:03:40.706 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:03:40.707 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:03:40.707 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:04:10.707 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:04:10.707 629:isIngraph              INFO     eval_acc = 0.9311
2023-06-05 17:04:10.707 629:isIngraph              INFO     eval_f1 = 0.9325
2023-06-05 17:04:10.707 629:isIngraph              INFO     eval_mcc = 0.863
2023-06-05 17:04:10.708 629:isIngraph              INFO     eval_precision = 0.9138
2023-06-05 17:04:10.708 629:isIngraph              INFO     eval_recall = 0.952
2023-06-05 17:04:10.708 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:04:10.712 522:isIngraph              INFO     ********************
2023-06-05 17:04:10.712 523:isIngraph              INFO     Best f1:0.9325
2023-06-05 17:04:10.712 524:isIngraph              INFO     ********************
2023-06-05 17:04:10.715 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:04:10.715 544:isIngraph              INFO     ********************
2023-06-05 17:04:10.716 545:isIngraph              INFO     Best MCC:0.863
2023-06-05 17:04:10.716 546:isIngraph              INFO     ********************
2023-06-05 17:04:10.718 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:04:18.238 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:04:18.238 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:04:18.238 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:04:43.708 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_acc = 0.9314
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_f1 = 0.9337
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_mcc = 0.8649
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_precision = 0.9033
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_recall = 0.9662
2023-06-05 17:04:43.709 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:04:43.713 522:isIngraph              INFO     ********************
2023-06-05 17:04:43.713 523:isIngraph              INFO     Best f1:0.9337
2023-06-05 17:04:43.713 524:isIngraph              INFO     ********************
2023-06-05 17:04:43.739 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:04:43.739 544:isIngraph              INFO     ********************
2023-06-05 17:04:43.739 545:isIngraph              INFO     Best MCC:0.8649
2023-06-05 17:04:43.739 546:isIngraph              INFO     ********************
2023-06-05 17:04:43.751 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:04:51.340 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:04:51.341 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:04:51.341 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:05:17.888 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:05:17.889 629:isIngraph              INFO     eval_acc = 0.9345
2023-06-05 17:05:17.889 629:isIngraph              INFO     eval_f1 = 0.9348
2023-06-05 17:05:17.889 629:isIngraph              INFO     eval_mcc = 0.869
2023-06-05 17:05:17.890 629:isIngraph              INFO     eval_precision = 0.93
2023-06-05 17:05:17.890 629:isIngraph              INFO     eval_recall = 0.9397
2023-06-05 17:05:17.890 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:05:17.894 522:isIngraph              INFO     ********************
2023-06-05 17:05:17.894 523:isIngraph              INFO     Best f1:0.9348
2023-06-05 17:05:17.895 524:isIngraph              INFO     ********************
2023-06-05 17:05:17.898 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:05:17.898 544:isIngraph              INFO     ********************
2023-06-05 17:05:17.898 545:isIngraph              INFO     Best MCC:0.869
2023-06-05 17:05:17.898 546:isIngraph              INFO     ********************
2023-06-05 17:05:17.900 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:05:27.266 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:05:27.267 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:05:27.267 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:06:00.442 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_acc = 0.9368
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_f1 = 0.9383
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_mcc = 0.8747
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_precision = 0.9156
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_recall = 0.9622
2023-06-05 17:06:00.443 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:06:00.449 522:isIngraph              INFO     ********************
2023-06-05 17:06:00.449 523:isIngraph              INFO     Best f1:0.9383
2023-06-05 17:06:00.449 524:isIngraph              INFO     ********************
2023-06-05 17:06:00.452 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:06:00.452 544:isIngraph              INFO     ********************
2023-06-05 17:06:00.453 545:isIngraph              INFO     Best MCC:0.8747
2023-06-05 17:06:00.453 546:isIngraph              INFO     ********************
2023-06-05 17:06:00.455 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:06:10.192 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 17:06:10.193 581:isIngraph              INFO     Num examples = 29244
2023-06-05 17:06:10.193 582:isIngraph              INFO     Batch size = 32
2023-06-05 17:06:46.141 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 17:06:46.142 629:isIngraph              INFO     eval_acc = 0.937
2023-06-05 17:06:46.142 629:isIngraph              INFO     eval_f1 = 0.9384
2023-06-05 17:06:46.142 629:isIngraph              INFO     eval_mcc = 0.8749
2023-06-05 17:06:46.142 629:isIngraph              INFO     eval_precision = 0.919
2023-06-05 17:06:46.142 629:isIngraph              INFO     eval_recall = 0.9585
2023-06-05 17:06:46.143 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 17:06:46.147 522:isIngraph              INFO     ********************
2023-06-05 17:06:46.148 523:isIngraph              INFO     Best f1:0.9384
2023-06-05 17:06:46.148 524:isIngraph              INFO     ********************
2023-06-05 17:06:46.151 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 17:06:46.152 544:isIngraph              INFO     ********************
2023-06-05 17:06:46.152 545:isIngraph              INFO     Best MCC:0.8749
2023-06-05 17:06:46.152 546:isIngraph              INFO     ********************
2023-06-05 17:06:46.154 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 17:06:46.372 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 17:06:46.372 651:isIngraph              INFO     Num examples = 30316
2023-06-05 17:06:46.372 652:isIngraph              INFO     Batch size = 32
2023-06-05 17:07:22.044 693:isIngraph              INFO   ***** Test results *****
2023-06-05 17:07:22.044 695:isIngraph              INFO     eval_acc = 0.9289
2023-06-05 17:07:22.045 695:isIngraph              INFO     eval_f1 = 0.93
2023-06-05 17:07:22.045 695:isIngraph              INFO     eval_mcc = 0.8583
2023-06-05 17:07:22.045 695:isIngraph              INFO     eval_precision = 0.9166
2023-06-05 17:07:22.045 695:isIngraph              INFO     eval_recall = 0.9438
2023-06-05 17:07:22.045 695:isIngraph              INFO     eval_threshold = 0.5
