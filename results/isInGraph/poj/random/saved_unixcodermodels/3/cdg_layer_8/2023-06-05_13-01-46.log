2023-06-05 13:01:46.323 917:isIngraph              DEBUG  main message
2023-06-05 13:01:46.323 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 13:01:47.079 938:isIngraph              INFO   Load Dataset
2023-06-05 13:02:17.682 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:02:18.983 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 13:02:22.502 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 13:02:22.504 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:02:23.665 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 13:02:25.188 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 13:02:25.189 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:02:26.099 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 13:02:28.182 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 13:02:28.183 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.183 307:isInGraph              INFO   idx: 42984
2023-06-05 13:02:28.184 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.184 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 13:02:28.184 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 13:02:28.184 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 13:02:28.185 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 13:02:28.185 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 13:02:28.185 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 13:02:28.185 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.185 307:isInGraph              INFO   idx: 40257
2023-06-05 13:02:28.185 308:isInGraph              INFO   label: 0
2023-06-05 13:02:28.186 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 13:02:28.186 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 13:02:28.186 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 13:02:28.186 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 13:02:28.186 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 13:02:28.186 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 13:02:28.187 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.187 307:isInGraph              INFO   idx: 43203
2023-06-05 13:02:28.187 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.187 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 13:02:28.187 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 13:02:28.187 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 13:02:28.188 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 13:02:28.188 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 13:02:28.188 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 13:02:28.188 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.188 307:isInGraph              INFO   idx: 48598
2023-06-05 13:02:28.188 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.189 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 13:02:28.189 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 13:02:28.189 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 13:02:28.189 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 13:02:28.189 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 13:02:28.190 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 13:02:28.190 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.190 307:isInGraph              INFO   idx: 49875
2023-06-05 13:02:28.190 308:isInGraph              INFO   label: 0
2023-06-05 13:02:28.190 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 13:02:28.190 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 13:02:28.191 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 13:02:28.191 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 13:02:28.191 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 13:02:28.191 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 13:02:28.191 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.191 307:isInGraph              INFO   idx: 48859
2023-06-05 13:02:28.191 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.192 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 13:02:28.192 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 13:02:28.192 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 13:02:28.192 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 13:02:28.192 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 13:02:28.193 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 13:02:28.193 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.193 307:isInGraph              INFO   idx: 46604
2023-06-05 13:02:28.193 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.193 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 13:02:28.193 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 13:02:28.194 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 13:02:28.194 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 13:02:28.194 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 13:02:28.194 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 13:02:28.194 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.194 307:isInGraph              INFO   idx: 47009
2023-06-05 13:02:28.195 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.195 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 13:02:28.195 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 13:02:28.195 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 13:02:28.195 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 13:02:28.196 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 13:02:28.196 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 13:02:28.196 306:isInGraph              INFO   *** Example ***
2023-06-05 13:02:28.196 307:isInGraph              INFO   idx: 50281
2023-06-05 13:02:28.196 308:isInGraph              INFO   label: 1
2023-06-05 13:02:28.196 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 13:02:28.197 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 13:02:28.197 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 13:02:28.197 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 13:02:28.197 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 13:02:28.198 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 13:02:28.198 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 13:02:28.221 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 13:02:28.221 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 13:02:29.898 451:isIngraph              INFO   ***** Running training *****
2023-06-05 13:02:29.898 452:isIngraph              INFO     Num examples = 87838
2023-06-05 13:02:29.898 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 13:02:29.899 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 13:02:29.899 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 13:02:29.899 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 13:02:29.899 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 13:02:42.382 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:02:42.383 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:02:42.383 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:03:17.381 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:03:17.388 629:isIngraph              INFO     eval_acc = 0.774
2023-06-05 13:03:17.389 629:isIngraph              INFO     eval_f1 = 0.7627
2023-06-05 13:03:17.389 629:isIngraph              INFO     eval_mcc = 0.5506
2023-06-05 13:03:17.389 629:isIngraph              INFO     eval_precision = 0.8029
2023-06-05 13:03:17.389 629:isIngraph              INFO     eval_recall = 0.7263
2023-06-05 13:03:17.389 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:03:17.394 522:isIngraph              INFO     ********************
2023-06-05 13:03:17.394 523:isIngraph              INFO     Best f1:0.7627
2023-06-05 13:03:17.395 524:isIngraph              INFO     ********************
2023-06-05 13:03:17.402 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:03:17.402 544:isIngraph              INFO     ********************
2023-06-05 13:03:17.402 545:isIngraph              INFO     Best MCC:0.5506
2023-06-05 13:03:17.403 546:isIngraph              INFO     ********************
2023-06-05 13:03:17.405 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:03:28.816 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:03:28.818 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:03:28.818 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:03:59.878 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_acc = 0.8642
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_f1 = 0.8646
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_mcc = 0.7284
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_precision = 0.8618
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_recall = 0.8674
2023-06-05 13:03:59.879 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:03:59.884 522:isIngraph              INFO     ********************
2023-06-05 13:03:59.884 523:isIngraph              INFO     Best f1:0.8646
2023-06-05 13:03:59.885 524:isIngraph              INFO     ********************
2023-06-05 13:03:59.888 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:03:59.888 544:isIngraph              INFO     ********************
2023-06-05 13:03:59.888 545:isIngraph              INFO     Best MCC:0.7284
2023-06-05 13:03:59.889 546:isIngraph              INFO     ********************
2023-06-05 13:03:59.891 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:04:08.200 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:04:08.201 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:04:08.201 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:04:39.905 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:04:39.905 629:isIngraph              INFO     eval_acc = 0.8944
2023-06-05 13:04:39.905 629:isIngraph              INFO     eval_f1 = 0.8944
2023-06-05 13:04:39.905 629:isIngraph              INFO     eval_mcc = 0.7887
2023-06-05 13:04:39.906 629:isIngraph              INFO     eval_precision = 0.8938
2023-06-05 13:04:39.906 629:isIngraph              INFO     eval_recall = 0.895
2023-06-05 13:04:39.906 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:04:39.909 522:isIngraph              INFO     ********************
2023-06-05 13:04:39.909 523:isIngraph              INFO     Best f1:0.8944
2023-06-05 13:04:39.909 524:isIngraph              INFO     ********************
2023-06-05 13:04:39.913 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:04:39.913 544:isIngraph              INFO     ********************
2023-06-05 13:04:39.913 545:isIngraph              INFO     Best MCC:0.7887
2023-06-05 13:04:39.913 546:isIngraph              INFO     ********************
2023-06-05 13:04:39.915 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:04:49.986 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:04:49.986 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:04:49.986 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:05:22.934 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_acc = 0.8715
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_f1 = 0.8608
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_mcc = 0.7519
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_precision = 0.9387
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_recall = 0.7948
2023-06-05 13:05:22.935 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:05:30.664 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:05:30.665 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:05:30.665 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:06:01.070 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_acc = 0.9133
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_f1 = 0.9174
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_mcc = 0.8308
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_precision = 0.8761
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_recall = 0.9628
2023-06-05 13:06:01.071 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:06:01.075 522:isIngraph              INFO     ********************
2023-06-05 13:06:01.075 523:isIngraph              INFO     Best f1:0.9174
2023-06-05 13:06:01.075 524:isIngraph              INFO     ********************
2023-06-05 13:06:01.079 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:06:01.079 544:isIngraph              INFO     ********************
2023-06-05 13:06:01.079 545:isIngraph              INFO     Best MCC:0.8308
2023-06-05 13:06:01.079 546:isIngraph              INFO     ********************
2023-06-05 13:06:01.081 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:06:09.020 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:06:09.020 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:06:09.020 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:06:30.754 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:06:30.754 629:isIngraph              INFO     eval_acc = 0.9218
2023-06-05 13:06:30.754 629:isIngraph              INFO     eval_f1 = 0.923
2023-06-05 13:06:30.755 629:isIngraph              INFO     eval_mcc = 0.844
2023-06-05 13:06:30.755 629:isIngraph              INFO     eval_precision = 0.9083
2023-06-05 13:06:30.755 629:isIngraph              INFO     eval_recall = 0.9382
2023-06-05 13:06:30.755 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:06:30.758 522:isIngraph              INFO     ********************
2023-06-05 13:06:30.758 523:isIngraph              INFO     Best f1:0.923
2023-06-05 13:06:30.758 524:isIngraph              INFO     ********************
2023-06-05 13:06:30.761 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:06:30.761 544:isIngraph              INFO     ********************
2023-06-05 13:06:30.761 545:isIngraph              INFO     Best MCC:0.844
2023-06-05 13:06:30.761 546:isIngraph              INFO     ********************
2023-06-05 13:06:30.763 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:06:37.145 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:06:37.145 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:06:37.145 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:06:56.352 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:06:56.353 629:isIngraph              INFO     eval_acc = 0.9158
2023-06-05 13:06:56.353 629:isIngraph              INFO     eval_f1 = 0.9199
2023-06-05 13:06:56.353 629:isIngraph              INFO     eval_mcc = 0.8361
2023-06-05 13:06:56.353 629:isIngraph              INFO     eval_precision = 0.8765
2023-06-05 13:06:56.353 629:isIngraph              INFO     eval_recall = 0.9679
2023-06-05 13:06:56.354 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:07:02.110 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:07:02.110 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:07:02.110 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:07:27.662 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:07:27.662 629:isIngraph              INFO     eval_acc = 0.9269
2023-06-05 13:07:27.662 629:isIngraph              INFO     eval_f1 = 0.9284
2023-06-05 13:07:27.662 629:isIngraph              INFO     eval_mcc = 0.8545
2023-06-05 13:07:27.662 629:isIngraph              INFO     eval_precision = 0.9097
2023-06-05 13:07:27.663 629:isIngraph              INFO     eval_recall = 0.9479
2023-06-05 13:07:27.663 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:07:27.666 522:isIngraph              INFO     ********************
2023-06-05 13:07:27.666 523:isIngraph              INFO     Best f1:0.9284
2023-06-05 13:07:27.666 524:isIngraph              INFO     ********************
2023-06-05 13:07:27.669 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:07:27.670 544:isIngraph              INFO     ********************
2023-06-05 13:07:27.670 545:isIngraph              INFO     Best MCC:0.8545
2023-06-05 13:07:27.670 546:isIngraph              INFO     ********************
2023-06-05 13:07:27.672 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:07:37.419 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:07:37.420 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:07:37.420 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:08:06.741 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:08:06.741 629:isIngraph              INFO     eval_acc = 0.9288
2023-06-05 13:08:06.742 629:isIngraph              INFO     eval_f1 = 0.9305
2023-06-05 13:08:06.742 629:isIngraph              INFO     eval_mcc = 0.8586
2023-06-05 13:08:06.742 629:isIngraph              INFO     eval_precision = 0.9084
2023-06-05 13:08:06.742 629:isIngraph              INFO     eval_recall = 0.9536
2023-06-05 13:08:06.742 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:08:06.745 522:isIngraph              INFO     ********************
2023-06-05 13:08:06.746 523:isIngraph              INFO     Best f1:0.9305
2023-06-05 13:08:06.746 524:isIngraph              INFO     ********************
2023-06-05 13:08:06.748 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:08:06.748 544:isIngraph              INFO     ********************
2023-06-05 13:08:06.749 545:isIngraph              INFO     Best MCC:0.8586
2023-06-05 13:08:06.749 546:isIngraph              INFO     ********************
2023-06-05 13:08:06.750 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:08:14.944 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:08:14.945 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:08:14.945 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:08:43.620 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_acc = 0.929
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_f1 = 0.9306
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_mcc = 0.8589
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_precision = 0.9102
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_recall = 0.9519
2023-06-05 13:08:43.621 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:08:43.624 522:isIngraph              INFO     ********************
2023-06-05 13:08:43.624 523:isIngraph              INFO     Best f1:0.9306
2023-06-05 13:08:43.624 524:isIngraph              INFO     ********************
2023-06-05 13:08:43.628 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-05 13:08:43.628 544:isIngraph              INFO     ********************
2023-06-05 13:08:43.628 545:isIngraph              INFO     Best MCC:0.8589
2023-06-05 13:08:43.628 546:isIngraph              INFO     ********************
2023-06-05 13:08:43.630 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-05 13:08:43.860 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 13:08:43.860 651:isIngraph              INFO     Num examples = 30316
2023-06-05 13:08:43.860 652:isIngraph              INFO     Batch size = 32
2023-06-05 13:09:15.289 693:isIngraph              INFO   ***** Test results *****
2023-06-05 13:09:15.289 695:isIngraph              INFO     eval_acc = 0.9175
2023-06-05 13:09:15.289 695:isIngraph              INFO     eval_f1 = 0.9189
2023-06-05 13:09:15.289 695:isIngraph              INFO     eval_mcc = 0.8356
2023-06-05 13:09:15.289 695:isIngraph              INFO     eval_precision = 0.9037
2023-06-05 13:09:15.289 695:isIngraph              INFO     eval_recall = 0.9346
2023-06-05 13:09:15.290 695:isIngraph              INFO     eval_threshold = 0.5
