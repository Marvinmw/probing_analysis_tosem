2023-06-05 20:11:51.469 917:isIngraph              DEBUG  main message
2023-06-05 20:11:51.469 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 20:11:52.197 938:isIngraph              INFO   Load Dataset
2023-06-05 20:12:24.735 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:12:25.802 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 20:12:29.475 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 20:12:29.479 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:12:30.417 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 20:12:32.287 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 20:12:32.288 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:12:33.184 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 20:12:35.499 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 20:12:35.500 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.500 307:isInGraph              INFO   idx: 42984
2023-06-05 20:12:35.500 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.500 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 20:12:35.500 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:12:35.500 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 20:12:35.501 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 20:12:35.501 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 20:12:35.501 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 20:12:35.501 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.501 307:isInGraph              INFO   idx: 40257
2023-06-05 20:12:35.501 308:isInGraph              INFO   label: 0
2023-06-05 20:12:35.501 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 20:12:35.502 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 20:12:35.502 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 20:12:35.502 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 20:12:35.502 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 20:12:35.502 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 20:12:35.502 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.502 307:isInGraph              INFO   idx: 43203
2023-06-05 20:12:35.502 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.503 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 20:12:35.503 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 20:12:35.503 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 20:12:35.503 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 20:12:35.503 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 20:12:35.503 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 20:12:35.503 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.504 307:isInGraph              INFO   idx: 48598
2023-06-05 20:12:35.504 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.504 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 20:12:35.504 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 20:12:35.504 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 20:12:35.504 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 20:12:35.505 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 20:12:35.505 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 20:12:35.505 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.505 307:isInGraph              INFO   idx: 49875
2023-06-05 20:12:35.505 308:isInGraph              INFO   label: 0
2023-06-05 20:12:35.505 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 20:12:35.505 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 20:12:35.505 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 20:12:35.506 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 20:12:35.506 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 20:12:35.506 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 20:12:35.506 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.506 307:isInGraph              INFO   idx: 48859
2023-06-05 20:12:35.506 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.506 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 20:12:35.507 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 20:12:35.507 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 20:12:35.507 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 20:12:35.507 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 20:12:35.507 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 20:12:35.507 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.507 307:isInGraph              INFO   idx: 46604
2023-06-05 20:12:35.508 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.508 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 20:12:35.508 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:12:35.508 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 20:12:35.508 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 20:12:35.508 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 20:12:35.508 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 20:12:35.509 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.509 307:isInGraph              INFO   idx: 47009
2023-06-05 20:12:35.509 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.509 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 20:12:35.509 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 20:12:35.509 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 20:12:35.509 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 20:12:35.510 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 20:12:35.510 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 20:12:35.510 306:isInGraph              INFO   *** Example ***
2023-06-05 20:12:35.510 307:isInGraph              INFO   idx: 50281
2023-06-05 20:12:35.510 308:isInGraph              INFO   label: 1
2023-06-05 20:12:35.510 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 20:12:35.510 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 20:12:35.511 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 20:12:35.511 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 20:12:35.511 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 20:12:35.511 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 20:12:35.511 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 20:12:35.531 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 20:12:35.532 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 20:12:37.514 451:isIngraph              INFO   ***** Running training *****
2023-06-05 20:12:37.514 452:isIngraph              INFO     Num examples = 87838
2023-06-05 20:12:37.515 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 20:12:37.515 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 20:12:37.515 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 20:12:37.515 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 20:12:37.515 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 20:12:47.257 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:12:47.258 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:12:47.259 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:13:17.480 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_acc = 0.7685
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_f1 = 0.7695
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_mcc = 0.537
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_precision = 0.7659
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_recall = 0.7732
2023-06-05 20:13:17.481 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:13:17.486 522:isIngraph              INFO     ********************
2023-06-05 20:13:17.486 523:isIngraph              INFO     Best f1:0.7695
2023-06-05 20:13:17.486 524:isIngraph              INFO     ********************
2023-06-05 20:13:17.493 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:13:17.493 544:isIngraph              INFO     ********************
2023-06-05 20:13:17.494 545:isIngraph              INFO     Best MCC:0.537
2023-06-05 20:13:17.494 546:isIngraph              INFO     ********************
2023-06-05 20:13:17.497 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:13:25.912 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:13:25.912 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:13:25.913 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:13:56.070 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:13:56.071 629:isIngraph              INFO     eval_acc = 0.8338
2023-06-05 20:13:56.071 629:isIngraph              INFO     eval_f1 = 0.8381
2023-06-05 20:13:56.071 629:isIngraph              INFO     eval_mcc = 0.6687
2023-06-05 20:13:56.071 629:isIngraph              INFO     eval_precision = 0.8168
2023-06-05 20:13:56.071 629:isIngraph              INFO     eval_recall = 0.8607
2023-06-05 20:13:56.072 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:13:56.076 522:isIngraph              INFO     ********************
2023-06-05 20:13:56.077 523:isIngraph              INFO     Best f1:0.8381
2023-06-05 20:13:56.077 524:isIngraph              INFO     ********************
2023-06-05 20:13:56.081 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:13:56.082 544:isIngraph              INFO     ********************
2023-06-05 20:13:56.082 545:isIngraph              INFO     Best MCC:0.6687
2023-06-05 20:13:56.082 546:isIngraph              INFO     ********************
2023-06-05 20:13:56.084 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:14:04.494 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:14:04.494 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:14:04.495 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:14:35.312 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:14:35.312 629:isIngraph              INFO     eval_acc = 0.8706
2023-06-05 20:14:35.312 629:isIngraph              INFO     eval_f1 = 0.8686
2023-06-05 20:14:35.313 629:isIngraph              INFO     eval_mcc = 0.7416
2023-06-05 20:14:35.313 629:isIngraph              INFO     eval_precision = 0.8823
2023-06-05 20:14:35.313 629:isIngraph              INFO     eval_recall = 0.8552
2023-06-05 20:14:35.313 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:14:35.317 522:isIngraph              INFO     ********************
2023-06-05 20:14:35.317 523:isIngraph              INFO     Best f1:0.8686
2023-06-05 20:14:35.317 524:isIngraph              INFO     ********************
2023-06-05 20:14:35.320 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:14:35.321 544:isIngraph              INFO     ********************
2023-06-05 20:14:35.321 545:isIngraph              INFO     Best MCC:0.7416
2023-06-05 20:14:35.321 546:isIngraph              INFO     ********************
2023-06-05 20:14:35.322 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:14:43.877 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:14:43.878 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:14:43.878 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:15:14.209 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:15:14.209 629:isIngraph              INFO     eval_acc = 0.884
2023-06-05 20:15:14.209 629:isIngraph              INFO     eval_f1 = 0.882
2023-06-05 20:15:14.210 629:isIngraph              INFO     eval_mcc = 0.7684
2023-06-05 20:15:14.210 629:isIngraph              INFO     eval_precision = 0.8968
2023-06-05 20:15:14.210 629:isIngraph              INFO     eval_recall = 0.8678
2023-06-05 20:15:14.210 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:15:14.214 522:isIngraph              INFO     ********************
2023-06-05 20:15:14.214 523:isIngraph              INFO     Best f1:0.882
2023-06-05 20:15:14.215 524:isIngraph              INFO     ********************
2023-06-05 20:15:14.224 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:15:14.225 544:isIngraph              INFO     ********************
2023-06-05 20:15:14.225 545:isIngraph              INFO     Best MCC:0.7684
2023-06-05 20:15:14.225 546:isIngraph              INFO     ********************
2023-06-05 20:15:14.227 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:15:22.652 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:15:22.653 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:15:22.653 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:15:54.006 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:15:54.006 629:isIngraph              INFO     eval_acc = 0.8937
2023-06-05 20:15:54.006 629:isIngraph              INFO     eval_f1 = 0.8966
2023-06-05 20:15:54.007 629:isIngraph              INFO     eval_mcc = 0.7887
2023-06-05 20:15:54.007 629:isIngraph              INFO     eval_precision = 0.8725
2023-06-05 20:15:54.007 629:isIngraph              INFO     eval_recall = 0.9222
2023-06-05 20:15:54.007 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:15:54.011 522:isIngraph              INFO     ********************
2023-06-05 20:15:54.011 523:isIngraph              INFO     Best f1:0.8966
2023-06-05 20:15:54.011 524:isIngraph              INFO     ********************
2023-06-05 20:15:54.034 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:15:54.034 544:isIngraph              INFO     ********************
2023-06-05 20:15:54.034 545:isIngraph              INFO     Best MCC:0.7887
2023-06-05 20:15:54.035 546:isIngraph              INFO     ********************
2023-06-05 20:15:54.046 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:16:02.802 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:16:02.802 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:16:02.802 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:16:32.584 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:16:32.585 629:isIngraph              INFO     eval_acc = 0.9027
2023-06-05 20:16:32.585 629:isIngraph              INFO     eval_f1 = 0.907
2023-06-05 20:16:32.586 629:isIngraph              INFO     eval_mcc = 0.8089
2023-06-05 20:16:32.586 629:isIngraph              INFO     eval_precision = 0.8686
2023-06-05 20:16:32.586 629:isIngraph              INFO     eval_recall = 0.9489
2023-06-05 20:16:32.586 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:16:32.591 522:isIngraph              INFO     ********************
2023-06-05 20:16:32.592 523:isIngraph              INFO     Best f1:0.907
2023-06-05 20:16:32.592 524:isIngraph              INFO     ********************
2023-06-05 20:16:32.596 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:16:32.596 544:isIngraph              INFO     ********************
2023-06-05 20:16:32.597 545:isIngraph              INFO     Best MCC:0.8089
2023-06-05 20:16:32.597 546:isIngraph              INFO     ********************
2023-06-05 20:16:32.599 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:16:41.468 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:16:41.468 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:16:41.468 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:17:11.461 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:17:11.462 629:isIngraph              INFO     eval_acc = 0.9104
2023-06-05 20:17:11.462 629:isIngraph              INFO     eval_f1 = 0.9125
2023-06-05 20:17:11.462 629:isIngraph              INFO     eval_mcc = 0.8218
2023-06-05 20:17:11.462 629:isIngraph              INFO     eval_precision = 0.8916
2023-06-05 20:17:11.463 629:isIngraph              INFO     eval_recall = 0.9344
2023-06-05 20:17:11.463 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:17:11.468 522:isIngraph              INFO     ********************
2023-06-05 20:17:11.469 523:isIngraph              INFO     Best f1:0.9125
2023-06-05 20:17:11.469 524:isIngraph              INFO     ********************
2023-06-05 20:17:11.472 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:17:11.472 544:isIngraph              INFO     ********************
2023-06-05 20:17:11.473 545:isIngraph              INFO     Best MCC:0.8218
2023-06-05 20:17:11.473 546:isIngraph              INFO     ********************
2023-06-05 20:17:11.474 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:17:21.015 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:17:21.015 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:17:21.015 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:17:51.318 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:17:51.318 629:isIngraph              INFO     eval_acc = 0.9131
2023-06-05 20:17:51.319 629:isIngraph              INFO     eval_f1 = 0.9145
2023-06-05 20:17:51.319 629:isIngraph              INFO     eval_mcc = 0.8267
2023-06-05 20:17:51.319 629:isIngraph              INFO     eval_precision = 0.9004
2023-06-05 20:17:51.319 629:isIngraph              INFO     eval_recall = 0.929
2023-06-05 20:17:51.319 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:17:51.323 522:isIngraph              INFO     ********************
2023-06-05 20:17:51.323 523:isIngraph              INFO     Best f1:0.9145
2023-06-05 20:17:51.323 524:isIngraph              INFO     ********************
2023-06-05 20:17:51.326 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:17:51.327 544:isIngraph              INFO     ********************
2023-06-05 20:17:51.327 545:isIngraph              INFO     Best MCC:0.8267
2023-06-05 20:17:51.327 546:isIngraph              INFO     ********************
2023-06-05 20:17:51.329 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:17:59.903 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:17:59.903 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:17:59.903 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:18:29.484 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_acc = 0.9161
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_f1 = 0.9184
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_mcc = 0.8336
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_precision = 0.8935
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_recall = 0.9449
2023-06-05 20:18:29.485 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:18:29.489 522:isIngraph              INFO     ********************
2023-06-05 20:18:29.489 523:isIngraph              INFO     Best f1:0.9184
2023-06-05 20:18:29.489 524:isIngraph              INFO     ********************
2023-06-05 20:18:29.493 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-f1/model.bin
2023-06-05 20:18:29.493 544:isIngraph              INFO     ********************
2023-06-05 20:18:29.493 545:isIngraph              INFO     Best MCC:0.8336
2023-06-05 20:18:29.493 546:isIngraph              INFO     ********************
2023-06-05 20:18:29.495 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_10/checkpoint-best-mcc/model.bin
2023-06-05 20:18:38.280 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:18:38.282 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:18:38.282 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:19:08.494 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_acc = 0.9158
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_f1 = 0.9174
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_mcc = 0.8323
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_precision = 0.9006
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_recall = 0.9348
2023-06-05 20:19:08.495 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:19:08.689 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 20:19:08.690 651:isIngraph              INFO     Num examples = 30316
2023-06-05 20:19:08.690 652:isIngraph              INFO     Batch size = 32
2023-06-05 20:19:39.906 693:isIngraph              INFO   ***** Test results *****
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_acc = 0.9062
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_f1 = 0.9084
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_mcc = 0.8133
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_precision = 0.8877
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_recall = 0.93
2023-06-05 20:19:39.907 695:isIngraph              INFO     eval_threshold = 0.5
