2023-06-06 01:25:23.099 917:isIngraph              DEBUG  main message
2023-06-06 01:25:23.099 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 01:25:23.777 938:isIngraph              INFO   Load Dataset
2023-06-06 01:25:50.121 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:25:50.909 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-06 01:25:53.606 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-06 01:25:53.609 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:25:54.435 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-06 01:25:55.730 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-06 01:25:55.731 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:25:56.552 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-06 01:25:58.227 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-06 01:25:58.227 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.228 307:isInGraph              INFO   idx: 42984
2023-06-06 01:25:58.228 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.228 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-06 01:25:58.228 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-06 01:25:58.228 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-06 01:25:58.228 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-06 01:25:58.229 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-06 01:25:58.229 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-06 01:25:58.229 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.229 307:isInGraph              INFO   idx: 40257
2023-06-06 01:25:58.229 308:isInGraph              INFO   label: 0
2023-06-06 01:25:58.229 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 01:25:58.229 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-06 01:25:58.229 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-06 01:25:58.230 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-06 01:25:58.230 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-06 01:25:58.230 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-06 01:25:58.230 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.230 307:isInGraph              INFO   idx: 43203
2023-06-06 01:25:58.230 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.230 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-06 01:25:58.230 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-06 01:25:58.231 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-06 01:25:58.231 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-06 01:25:58.231 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-06 01:25:58.231 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-06 01:25:58.231 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.231 307:isInGraph              INFO   idx: 48598
2023-06-06 01:25:58.231 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.232 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-06 01:25:58.232 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-06 01:25:58.232 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-06 01:25:58.232 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-06 01:25:58.232 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-06 01:25:58.232 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-06 01:25:58.232 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.232 307:isInGraph              INFO   idx: 49875
2023-06-06 01:25:58.233 308:isInGraph              INFO   label: 0
2023-06-06 01:25:58.233 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-06 01:25:58.233 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-06 01:25:58.233 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-06 01:25:58.233 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-06 01:25:58.233 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-06 01:25:58.233 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-06 01:25:58.233 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.234 307:isInGraph              INFO   idx: 48859
2023-06-06 01:25:58.234 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.234 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-06 01:25:58.234 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-06 01:25:58.234 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-06 01:25:58.234 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-06 01:25:58.234 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-06 01:25:58.235 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-06 01:25:58.235 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.235 307:isInGraph              INFO   idx: 46604
2023-06-06 01:25:58.235 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.235 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-06 01:25:58.235 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-06 01:25:58.235 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-06 01:25:58.236 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-06 01:25:58.236 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-06 01:25:58.236 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-06 01:25:58.236 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.236 307:isInGraph              INFO   idx: 47009
2023-06-06 01:25:58.236 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.236 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-06 01:25:58.236 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-06 01:25:58.237 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-06 01:25:58.237 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-06 01:25:58.237 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-06 01:25:58.237 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-06 01:25:58.237 306:isInGraph              INFO   *** Example ***
2023-06-06 01:25:58.237 307:isInGraph              INFO   idx: 50281
2023-06-06 01:25:58.237 308:isInGraph              INFO   label: 1
2023-06-06 01:25:58.238 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-06 01:25:58.238 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-06 01:25:58.238 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-06 01:25:58.238 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-06 01:25:58.238 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-06 01:25:58.239 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-06 01:25:58.239 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 01:25:58.261 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 01:25:58.261 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 01:25:59.702 451:isIngraph              INFO   ***** Running training *****
2023-06-06 01:25:59.702 452:isIngraph              INFO     Num examples = 87838
2023-06-06 01:25:59.702 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 01:25:59.702 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 01:25:59.702 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 01:25:59.702 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 01:25:59.703 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-06 01:26:09.006 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:26:09.007 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:26:09.007 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:26:37.005 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_acc = 0.7958
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_f1 = 0.7997
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_mcc = 0.592
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_precision = 0.7845
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_recall = 0.8155
2023-06-06 01:26:37.006 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:26:37.011 522:isIngraph              INFO     ********************
2023-06-06 01:26:37.011 523:isIngraph              INFO     Best f1:0.7997
2023-06-06 01:26:37.011 524:isIngraph              INFO     ********************
2023-06-06 01:26:37.017 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:26:37.018 544:isIngraph              INFO     ********************
2023-06-06 01:26:37.018 545:isIngraph              INFO     Best MCC:0.592
2023-06-06 01:26:37.018 546:isIngraph              INFO     ********************
2023-06-06 01:26:37.020 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:26:45.242 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:26:45.242 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:26:45.242 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:27:12.913 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:27:12.913 629:isIngraph              INFO     eval_acc = 0.8804
2023-06-06 01:27:12.914 629:isIngraph              INFO     eval_f1 = 0.8806
2023-06-06 01:27:12.914 629:isIngraph              INFO     eval_mcc = 0.7608
2023-06-06 01:27:12.914 629:isIngraph              INFO     eval_precision = 0.8792
2023-06-06 01:27:12.914 629:isIngraph              INFO     eval_recall = 0.8819
2023-06-06 01:27:12.914 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:27:12.919 522:isIngraph              INFO     ********************
2023-06-06 01:27:12.919 523:isIngraph              INFO     Best f1:0.8806
2023-06-06 01:27:12.919 524:isIngraph              INFO     ********************
2023-06-06 01:27:12.923 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:27:12.923 544:isIngraph              INFO     ********************
2023-06-06 01:27:12.924 545:isIngraph              INFO     Best MCC:0.7608
2023-06-06 01:27:12.924 546:isIngraph              INFO     ********************
2023-06-06 01:27:12.926 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:27:21.463 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:27:21.463 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:27:21.464 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:27:49.078 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_acc = 0.9104
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_f1 = 0.9113
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_mcc = 0.8211
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_precision = 0.902
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_recall = 0.9209
2023-06-06 01:27:49.079 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:27:49.083 522:isIngraph              INFO     ********************
2023-06-06 01:27:49.083 523:isIngraph              INFO     Best f1:0.9113
2023-06-06 01:27:49.084 524:isIngraph              INFO     ********************
2023-06-06 01:27:49.087 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:27:49.087 544:isIngraph              INFO     ********************
2023-06-06 01:27:49.087 545:isIngraph              INFO     Best MCC:0.8211
2023-06-06 01:27:49.087 546:isIngraph              INFO     ********************
2023-06-06 01:27:49.089 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:27:57.302 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:27:57.303 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:27:57.303 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:28:25.753 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:28:25.753 629:isIngraph              INFO     eval_acc = 0.9223
2023-06-06 01:28:25.754 629:isIngraph              INFO     eval_f1 = 0.9233
2023-06-06 01:28:25.754 629:isIngraph              INFO     eval_mcc = 0.845
2023-06-06 01:28:25.754 629:isIngraph              INFO     eval_precision = 0.9115
2023-06-06 01:28:25.754 629:isIngraph              INFO     eval_recall = 0.9355
2023-06-06 01:28:25.754 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:28:25.759 522:isIngraph              INFO     ********************
2023-06-06 01:28:25.759 523:isIngraph              INFO     Best f1:0.9233
2023-06-06 01:28:25.759 524:isIngraph              INFO     ********************
2023-06-06 01:28:25.762 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:28:25.763 544:isIngraph              INFO     ********************
2023-06-06 01:28:25.763 545:isIngraph              INFO     Best MCC:0.845
2023-06-06 01:28:25.763 546:isIngraph              INFO     ********************
2023-06-06 01:28:25.765 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:28:34.004 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:28:34.004 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:28:34.004 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:29:01.439 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_acc = 0.9278
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_f1 = 0.9291
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_mcc = 0.8562
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_precision = 0.9118
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_recall = 0.9472
2023-06-06 01:29:01.440 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:29:01.444 522:isIngraph              INFO     ********************
2023-06-06 01:29:01.444 523:isIngraph              INFO     Best f1:0.9291
2023-06-06 01:29:01.445 524:isIngraph              INFO     ********************
2023-06-06 01:29:01.448 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:29:01.449 544:isIngraph              INFO     ********************
2023-06-06 01:29:01.449 545:isIngraph              INFO     Best MCC:0.8562
2023-06-06 01:29:01.449 546:isIngraph              INFO     ********************
2023-06-06 01:29:01.451 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:29:09.929 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:29:09.929 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:29:09.929 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:29:37.595 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:29:37.595 629:isIngraph              INFO     eval_acc = 0.9311
2023-06-06 01:29:37.595 629:isIngraph              INFO     eval_f1 = 0.9321
2023-06-06 01:29:37.596 629:isIngraph              INFO     eval_mcc = 0.8626
2023-06-06 01:29:37.596 629:isIngraph              INFO     eval_precision = 0.918
2023-06-06 01:29:37.596 629:isIngraph              INFO     eval_recall = 0.9468
2023-06-06 01:29:37.596 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:29:37.599 522:isIngraph              INFO     ********************
2023-06-06 01:29:37.599 523:isIngraph              INFO     Best f1:0.9321
2023-06-06 01:29:37.599 524:isIngraph              INFO     ********************
2023-06-06 01:29:37.602 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:29:37.603 544:isIngraph              INFO     ********************
2023-06-06 01:29:37.603 545:isIngraph              INFO     Best MCC:0.8626
2023-06-06 01:29:37.603 546:isIngraph              INFO     ********************
2023-06-06 01:29:37.605 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:29:45.729 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:29:45.729 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:29:45.730 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:30:13.680 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:30:13.680 629:isIngraph              INFO     eval_acc = 0.9323
2023-06-06 01:30:13.680 629:isIngraph              INFO     eval_f1 = 0.934
2023-06-06 01:30:13.681 629:isIngraph              INFO     eval_mcc = 0.8658
2023-06-06 01:30:13.681 629:isIngraph              INFO     eval_precision = 0.9104
2023-06-06 01:30:13.681 629:isIngraph              INFO     eval_recall = 0.959
2023-06-06 01:30:13.681 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:30:13.686 522:isIngraph              INFO     ********************
2023-06-06 01:30:13.686 523:isIngraph              INFO     Best f1:0.934
2023-06-06 01:30:13.687 524:isIngraph              INFO     ********************
2023-06-06 01:30:13.690 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:30:13.691 544:isIngraph              INFO     ********************
2023-06-06 01:30:13.691 545:isIngraph              INFO     Best MCC:0.8658
2023-06-06 01:30:13.691 546:isIngraph              INFO     ********************
2023-06-06 01:30:13.693 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:30:21.934 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:30:21.934 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:30:21.934 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:30:49.321 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_acc = 0.9346
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_f1 = 0.9358
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_mcc = 0.8698
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_precision = 0.9185
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_recall = 0.9538
2023-06-06 01:30:49.322 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:30:49.326 522:isIngraph              INFO     ********************
2023-06-06 01:30:49.326 523:isIngraph              INFO     Best f1:0.9358
2023-06-06 01:30:49.326 524:isIngraph              INFO     ********************
2023-06-06 01:30:49.329 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:30:49.329 544:isIngraph              INFO     ********************
2023-06-06 01:30:49.329 545:isIngraph              INFO     Best MCC:0.8698
2023-06-06 01:30:49.329 546:isIngraph              INFO     ********************
2023-06-06 01:30:49.331 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:30:57.569 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:30:57.569 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:30:57.569 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:31:24.843 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:31:24.844 629:isIngraph              INFO     eval_acc = 0.9363
2023-06-06 01:31:24.844 629:isIngraph              INFO     eval_f1 = 0.938
2023-06-06 01:31:24.844 629:isIngraph              INFO     eval_mcc = 0.8739
2023-06-06 01:31:24.844 629:isIngraph              INFO     eval_precision = 0.9138
2023-06-06 01:31:24.844 629:isIngraph              INFO     eval_recall = 0.9634
2023-06-06 01:31:24.845 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:31:24.849 522:isIngraph              INFO     ********************
2023-06-06 01:31:24.849 523:isIngraph              INFO     Best f1:0.938
2023-06-06 01:31:24.849 524:isIngraph              INFO     ********************
2023-06-06 01:31:24.853 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-f1/model.bin
2023-06-06 01:31:24.853 544:isIngraph              INFO     ********************
2023-06-06 01:31:24.853 545:isIngraph              INFO     Best MCC:0.8739
2023-06-06 01:31:24.853 546:isIngraph              INFO     ********************
2023-06-06 01:31:24.855 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_0/checkpoint-best-mcc/model.bin
2023-06-06 01:31:33.095 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:31:33.095 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:31:33.096 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:32:00.486 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:32:00.486 629:isIngraph              INFO     eval_acc = 0.9367
2023-06-06 01:32:00.487 629:isIngraph              INFO     eval_f1 = 0.9377
2023-06-06 01:32:00.487 629:isIngraph              INFO     eval_mcc = 0.8739
2023-06-06 01:32:00.487 629:isIngraph              INFO     eval_precision = 0.9222
2023-06-06 01:32:00.487 629:isIngraph              INFO     eval_recall = 0.9538
2023-06-06 01:32:00.487 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:32:00.678 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 01:32:00.678 651:isIngraph              INFO     Num examples = 30316
2023-06-06 01:32:00.678 652:isIngraph              INFO     Batch size = 32
2023-06-06 01:32:29.225 693:isIngraph              INFO   ***** Test results *****
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_acc = 0.9266
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_f1 = 0.9282
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_mcc = 0.8541
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_precision = 0.9079
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_recall = 0.9495
2023-06-06 01:32:29.226 695:isIngraph              INFO     eval_threshold = 0.5
