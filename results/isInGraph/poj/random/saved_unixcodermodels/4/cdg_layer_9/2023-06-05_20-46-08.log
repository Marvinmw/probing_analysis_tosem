2023-06-05 20:46:08.934 917:isIngraph              DEBUG  main message
2023-06-05 20:46:08.934 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 20:46:09.623 938:isIngraph              INFO   Load Dataset
2023-06-05 20:46:39.540 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:46:40.540 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 20:46:44.029 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 20:46:44.033 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:46:44.994 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 20:46:46.437 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 20:46:46.438 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:46:47.369 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 20:46:49.219 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 20:46:49.220 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.220 307:isInGraph              INFO   idx: 42984
2023-06-05 20:46:49.220 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.220 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 20:46:49.220 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:46:49.220 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 20:46:49.221 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 20:46:49.221 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 20:46:49.221 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 20:46:49.221 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.221 307:isInGraph              INFO   idx: 40257
2023-06-05 20:46:49.221 308:isInGraph              INFO   label: 0
2023-06-05 20:46:49.221 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 20:46:49.222 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 20:46:49.222 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 20:46:49.222 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 20:46:49.222 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 20:46:49.222 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 20:46:49.222 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.222 307:isInGraph              INFO   idx: 43203
2023-06-05 20:46:49.222 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.223 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 20:46:49.223 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 20:46:49.223 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 20:46:49.223 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 20:46:49.223 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 20:46:49.223 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 20:46:49.223 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.223 307:isInGraph              INFO   idx: 48598
2023-06-05 20:46:49.224 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.224 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 20:46:49.224 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 20:46:49.224 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 20:46:49.224 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 20:46:49.224 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 20:46:49.225 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 20:46:49.225 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.225 307:isInGraph              INFO   idx: 49875
2023-06-05 20:46:49.225 308:isInGraph              INFO   label: 0
2023-06-05 20:46:49.225 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 20:46:49.225 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 20:46:49.225 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 20:46:49.226 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 20:46:49.226 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 20:46:49.226 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 20:46:49.226 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.226 307:isInGraph              INFO   idx: 48859
2023-06-05 20:46:49.226 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.226 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 20:46:49.226 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 20:46:49.226 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 20:46:49.227 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 20:46:49.227 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 20:46:49.227 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 20:46:49.227 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.227 307:isInGraph              INFO   idx: 46604
2023-06-05 20:46:49.227 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.227 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 20:46:49.228 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:46:49.228 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 20:46:49.228 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 20:46:49.228 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 20:46:49.228 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 20:46:49.228 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.228 307:isInGraph              INFO   idx: 47009
2023-06-05 20:46:49.228 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.229 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 20:46:49.229 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 20:46:49.229 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 20:46:49.229 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 20:46:49.229 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 20:46:49.229 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 20:46:49.229 306:isInGraph              INFO   *** Example ***
2023-06-05 20:46:49.230 307:isInGraph              INFO   idx: 50281
2023-06-05 20:46:49.230 308:isInGraph              INFO   label: 1
2023-06-05 20:46:49.230 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 20:46:49.230 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 20:46:49.230 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 20:46:49.231 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 20:46:49.231 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 20:46:49.231 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 20:46:49.231 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 20:46:49.252 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 20:46:49.252 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 20:46:51.116 451:isIngraph              INFO   ***** Running training *****
2023-06-05 20:46:51.116 452:isIngraph              INFO     Num examples = 87838
2023-06-05 20:46:51.117 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 20:46:51.117 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 20:46:51.117 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 20:46:51.117 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 20:46:51.117 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 20:47:01.182 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:47:01.183 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:47:01.183 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:47:32.314 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:47:32.315 629:isIngraph              INFO     eval_acc = 0.7737
2023-06-05 20:47:32.315 629:isIngraph              INFO     eval_f1 = 0.7747
2023-06-05 20:47:32.315 629:isIngraph              INFO     eval_mcc = 0.5475
2023-06-05 20:47:32.315 629:isIngraph              INFO     eval_precision = 0.7712
2023-06-05 20:47:32.315 629:isIngraph              INFO     eval_recall = 0.7782
2023-06-05 20:47:32.316 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:47:32.321 522:isIngraph              INFO     ********************
2023-06-05 20:47:32.321 523:isIngraph              INFO     Best f1:0.7747
2023-06-05 20:47:32.321 524:isIngraph              INFO     ********************
2023-06-05 20:47:32.328 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:47:32.328 544:isIngraph              INFO     ********************
2023-06-05 20:47:32.328 545:isIngraph              INFO     Best MCC:0.5475
2023-06-05 20:47:32.328 546:isIngraph              INFO     ********************
2023-06-05 20:47:32.331 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:47:41.409 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:47:41.410 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:47:41.411 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:48:12.013 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:48:12.013 629:isIngraph              INFO     eval_acc = 0.8363
2023-06-05 20:48:12.014 629:isIngraph              INFO     eval_f1 = 0.8425
2023-06-05 20:48:12.014 629:isIngraph              INFO     eval_mcc = 0.6748
2023-06-05 20:48:12.014 629:isIngraph              INFO     eval_precision = 0.8116
2023-06-05 20:48:12.014 629:isIngraph              INFO     eval_recall = 0.876
2023-06-05 20:48:12.014 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:48:12.017 522:isIngraph              INFO     ********************
2023-06-05 20:48:12.018 523:isIngraph              INFO     Best f1:0.8425
2023-06-05 20:48:12.018 524:isIngraph              INFO     ********************
2023-06-05 20:48:12.046 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:48:12.047 544:isIngraph              INFO     ********************
2023-06-05 20:48:12.047 545:isIngraph              INFO     Best MCC:0.6748
2023-06-05 20:48:12.047 546:isIngraph              INFO     ********************
2023-06-05 20:48:12.066 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:48:20.827 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:48:20.827 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:48:20.827 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:48:52.242 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:48:52.242 629:isIngraph              INFO     eval_acc = 0.8646
2023-06-05 20:48:52.243 629:isIngraph              INFO     eval_f1 = 0.858
2023-06-05 20:48:52.243 629:isIngraph              INFO     eval_mcc = 0.7324
2023-06-05 20:48:52.243 629:isIngraph              INFO     eval_precision = 0.9018
2023-06-05 20:48:52.243 629:isIngraph              INFO     eval_recall = 0.8183
2023-06-05 20:48:52.243 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:48:52.247 522:isIngraph              INFO     ********************
2023-06-05 20:48:52.247 523:isIngraph              INFO     Best f1:0.858
2023-06-05 20:48:52.248 524:isIngraph              INFO     ********************
2023-06-05 20:48:52.251 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:48:52.251 544:isIngraph              INFO     ********************
2023-06-05 20:48:52.252 545:isIngraph              INFO     Best MCC:0.7324
2023-06-05 20:48:52.252 546:isIngraph              INFO     ********************
2023-06-05 20:48:52.259 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:49:01.006 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:49:01.006 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:49:01.006 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:49:32.866 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_acc = 0.886
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_f1 = 0.8832
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_mcc = 0.7728
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_precision = 0.9048
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_recall = 0.8626
2023-06-05 20:49:32.867 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:49:32.870 522:isIngraph              INFO     ********************
2023-06-05 20:49:32.871 523:isIngraph              INFO     Best f1:0.8832
2023-06-05 20:49:32.871 524:isIngraph              INFO     ********************
2023-06-05 20:49:32.874 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:49:32.874 544:isIngraph              INFO     ********************
2023-06-05 20:49:32.874 545:isIngraph              INFO     Best MCC:0.7728
2023-06-05 20:49:32.874 546:isIngraph              INFO     ********************
2023-06-05 20:49:32.876 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:49:42.242 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:49:42.243 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:49:42.243 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:50:12.597 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:50:12.597 629:isIngraph              INFO     eval_acc = 0.9032
2023-06-05 20:50:12.597 629:isIngraph              INFO     eval_f1 = 0.9059
2023-06-05 20:50:12.597 629:isIngraph              INFO     eval_mcc = 0.8077
2023-06-05 20:50:12.598 629:isIngraph              INFO     eval_precision = 0.8808
2023-06-05 20:50:12.598 629:isIngraph              INFO     eval_recall = 0.9325
2023-06-05 20:50:12.598 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:50:12.602 522:isIngraph              INFO     ********************
2023-06-05 20:50:12.602 523:isIngraph              INFO     Best f1:0.9059
2023-06-05 20:50:12.602 524:isIngraph              INFO     ********************
2023-06-05 20:50:12.606 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:50:12.606 544:isIngraph              INFO     ********************
2023-06-05 20:50:12.606 545:isIngraph              INFO     Best MCC:0.8077
2023-06-05 20:50:12.606 546:isIngraph              INFO     ********************
2023-06-05 20:50:12.608 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:50:21.692 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:50:21.693 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:50:21.693 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:50:52.484 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:50:52.485 629:isIngraph              INFO     eval_acc = 0.9078
2023-06-05 20:50:52.485 629:isIngraph              INFO     eval_f1 = 0.9112
2023-06-05 20:50:52.485 629:isIngraph              INFO     eval_mcc = 0.8181
2023-06-05 20:50:52.485 629:isIngraph              INFO     eval_precision = 0.878
2023-06-05 20:50:52.486 629:isIngraph              INFO     eval_recall = 0.9471
2023-06-05 20:50:52.486 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:50:52.490 522:isIngraph              INFO     ********************
2023-06-05 20:50:52.490 523:isIngraph              INFO     Best f1:0.9112
2023-06-05 20:50:52.490 524:isIngraph              INFO     ********************
2023-06-05 20:50:52.494 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:50:52.494 544:isIngraph              INFO     ********************
2023-06-05 20:50:52.494 545:isIngraph              INFO     Best MCC:0.8181
2023-06-05 20:50:52.494 546:isIngraph              INFO     ********************
2023-06-05 20:50:52.496 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:51:01.455 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:51:01.455 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:51:01.455 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:51:32.542 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:51:32.543 629:isIngraph              INFO     eval_acc = 0.9142
2023-06-05 20:51:32.543 629:isIngraph              INFO     eval_f1 = 0.9166
2023-06-05 20:51:32.543 629:isIngraph              INFO     eval_mcc = 0.8298
2023-06-05 20:51:32.543 629:isIngraph              INFO     eval_precision = 0.8913
2023-06-05 20:51:32.543 629:isIngraph              INFO     eval_recall = 0.9434
2023-06-05 20:51:32.544 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:51:32.550 522:isIngraph              INFO     ********************
2023-06-05 20:51:32.551 523:isIngraph              INFO     Best f1:0.9166
2023-06-05 20:51:32.551 524:isIngraph              INFO     ********************
2023-06-05 20:51:32.554 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:51:32.555 544:isIngraph              INFO     ********************
2023-06-05 20:51:32.555 545:isIngraph              INFO     Best MCC:0.8298
2023-06-05 20:51:32.555 546:isIngraph              INFO     ********************
2023-06-05 20:51:32.557 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:51:41.941 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:51:41.942 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:51:41.942 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:52:12.618 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_acc = 0.9159
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_f1 = 0.9177
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_mcc = 0.8326
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_precision = 0.898
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_recall = 0.9383
2023-06-05 20:52:12.619 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:52:12.624 522:isIngraph              INFO     ********************
2023-06-05 20:52:12.624 523:isIngraph              INFO     Best f1:0.9177
2023-06-05 20:52:12.624 524:isIngraph              INFO     ********************
2023-06-05 20:52:12.628 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:52:12.629 544:isIngraph              INFO     ********************
2023-06-05 20:52:12.629 545:isIngraph              INFO     Best MCC:0.8326
2023-06-05 20:52:12.629 546:isIngraph              INFO     ********************
2023-06-05 20:52:12.631 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:52:21.960 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:52:21.961 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:52:21.961 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:52:53.314 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:52:53.314 629:isIngraph              INFO     eval_acc = 0.9175
2023-06-05 20:52:53.314 629:isIngraph              INFO     eval_f1 = 0.9197
2023-06-05 20:52:53.315 629:isIngraph              INFO     eval_mcc = 0.8363
2023-06-05 20:52:53.315 629:isIngraph              INFO     eval_precision = 0.8957
2023-06-05 20:52:53.315 629:isIngraph              INFO     eval_recall = 0.9451
2023-06-05 20:52:53.315 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:52:53.320 522:isIngraph              INFO     ********************
2023-06-05 20:52:53.321 523:isIngraph              INFO     Best f1:0.9197
2023-06-05 20:52:53.321 524:isIngraph              INFO     ********************
2023-06-05 20:52:53.325 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-f1/model.bin
2023-06-05 20:52:53.325 544:isIngraph              INFO     ********************
2023-06-05 20:52:53.325 545:isIngraph              INFO     Best MCC:0.8363
2023-06-05 20:52:53.325 546:isIngraph              INFO     ********************
2023-06-05 20:52:53.327 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_9/checkpoint-best-mcc/model.bin
2023-06-05 20:53:02.485 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:53:02.485 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:53:02.485 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:53:33.270 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_acc = 0.9176
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_f1 = 0.9191
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_mcc = 0.8358
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_precision = 0.9018
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_recall = 0.9371
2023-06-05 20:53:33.271 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:53:33.463 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 20:53:33.463 651:isIngraph              INFO     Num examples = 30316
2023-06-05 20:53:33.463 652:isIngraph              INFO     Batch size = 32
2023-06-05 20:54:05.299 693:isIngraph              INFO   ***** Test results *****
2023-06-05 20:54:05.300 695:isIngraph              INFO     eval_acc = 0.9081
2023-06-05 20:54:05.300 695:isIngraph              INFO     eval_f1 = 0.9099
2023-06-05 20:54:05.301 695:isIngraph              INFO     eval_mcc = 0.8169
2023-06-05 20:54:05.301 695:isIngraph              INFO     eval_precision = 0.8922
2023-06-05 20:54:05.301 695:isIngraph              INFO     eval_recall = 0.9284
2023-06-05 20:54:05.301 695:isIngraph              INFO     eval_threshold = 0.5
