2023-06-05 09:08:13.386 917:isIngraph              DEBUG  main message
2023-06-05 09:08:13.386 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 09:08:14.104 938:isIngraph              INFO   Load Dataset
2023-06-05 09:08:47.245 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 09:08:48.277 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 09:08:52.518 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 09:08:52.521 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 09:08:53.450 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 09:08:54.946 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 09:08:54.946 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 09:08:56.049 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 09:08:58.303 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 09:08:58.304 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.304 307:isInGraph              INFO   idx: 42984
2023-06-05 09:08:58.304 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.305 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 09:08:58.305 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 09:08:58.305 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 09:08:58.305 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 09:08:58.305 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 09:08:58.306 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 09:08:58.306 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.306 307:isInGraph              INFO   idx: 40257
2023-06-05 09:08:58.306 308:isInGraph              INFO   label: 0
2023-06-05 09:08:58.306 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 09:08:58.306 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 09:08:58.306 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 09:08:58.307 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 09:08:58.307 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 09:08:58.307 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 09:08:58.307 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.307 307:isInGraph              INFO   idx: 43203
2023-06-05 09:08:58.307 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.308 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 09:08:58.308 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 09:08:58.308 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 09:08:58.308 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 09:08:58.308 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 09:08:58.308 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 09:08:58.309 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.309 307:isInGraph              INFO   idx: 48598
2023-06-05 09:08:58.309 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.309 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 09:08:58.309 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 09:08:58.310 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 09:08:58.310 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 09:08:58.310 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 09:08:58.310 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 09:08:58.310 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.310 307:isInGraph              INFO   idx: 49875
2023-06-05 09:08:58.311 308:isInGraph              INFO   label: 0
2023-06-05 09:08:58.311 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 09:08:58.311 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 09:08:58.311 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 09:08:58.311 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 09:08:58.311 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 09:08:58.312 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 09:08:58.312 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.312 307:isInGraph              INFO   idx: 48859
2023-06-05 09:08:58.312 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.312 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 09:08:58.312 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 09:08:58.313 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 09:08:58.313 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 09:08:58.313 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 09:08:58.313 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 09:08:58.313 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.313 307:isInGraph              INFO   idx: 46604
2023-06-05 09:08:58.314 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.314 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 09:08:58.314 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 09:08:58.314 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 09:08:58.314 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 09:08:58.314 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 09:08:58.315 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 09:08:58.315 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.315 307:isInGraph              INFO   idx: 47009
2023-06-05 09:08:58.315 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.315 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 09:08:58.315 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 09:08:58.316 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 09:08:58.316 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 09:08:58.316 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 09:08:58.316 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 09:08:58.316 306:isInGraph              INFO   *** Example ***
2023-06-05 09:08:58.316 307:isInGraph              INFO   idx: 50281
2023-06-05 09:08:58.316 308:isInGraph              INFO   label: 1
2023-06-05 09:08:58.317 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 09:08:58.317 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 09:08:58.317 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 09:08:58.318 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 09:08:58.318 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 09:08:58.318 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 09:08:58.318 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 09:08:58.340 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 09:08:58.340 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1', posratio=0.5, seed=644, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 09:09:00.226 451:isIngraph              INFO   ***** Running training *****
2023-06-05 09:09:00.226 452:isIngraph              INFO     Num examples = 87838
2023-06-05 09:09:00.227 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 09:09:00.227 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 09:09:00.227 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 09:09:00.227 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 09:09:00.227 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 09:09:12.917 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:09:12.918 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:09:12.918 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:09:47.042 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:09:47.043 629:isIngraph              INFO     eval_acc = 0.7808
2023-06-05 09:09:47.044 629:isIngraph              INFO     eval_f1 = 0.7587
2023-06-05 09:09:47.044 629:isIngraph              INFO     eval_mcc = 0.5712
2023-06-05 09:09:47.044 629:isIngraph              INFO     eval_precision = 0.8436
2023-06-05 09:09:47.044 629:isIngraph              INFO     eval_recall = 0.6893
2023-06-05 09:09:47.044 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:09:47.048 522:isIngraph              INFO     ********************
2023-06-05 09:09:47.048 523:isIngraph              INFO     Best f1:0.7587
2023-06-05 09:09:47.049 524:isIngraph              INFO     ********************
2023-06-05 09:09:47.055 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:09:47.055 544:isIngraph              INFO     ********************
2023-06-05 09:09:47.055 545:isIngraph              INFO     Best MCC:0.5712
2023-06-05 09:09:47.055 546:isIngraph              INFO     ********************
2023-06-05 09:09:47.058 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:09:57.295 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:09:57.296 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:09:57.296 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:10:29.695 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_acc = 0.8919
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_f1 = 0.8925
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_mcc = 0.7839
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_precision = 0.8872
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_recall = 0.8979
2023-06-05 09:10:29.696 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:10:29.701 522:isIngraph              INFO     ********************
2023-06-05 09:10:29.702 523:isIngraph              INFO     Best f1:0.8925
2023-06-05 09:10:29.702 524:isIngraph              INFO     ********************
2023-06-05 09:10:29.736 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:10:29.736 544:isIngraph              INFO     ********************
2023-06-05 09:10:29.737 545:isIngraph              INFO     Best MCC:0.7839
2023-06-05 09:10:29.737 546:isIngraph              INFO     ********************
2023-06-05 09:10:29.757 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:10:40.385 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:10:40.386 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:10:40.386 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:11:12.610 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:11:12.611 629:isIngraph              INFO     eval_acc = 0.9202
2023-06-05 09:11:12.611 629:isIngraph              INFO     eval_f1 = 0.9213
2023-06-05 09:11:12.611 629:isIngraph              INFO     eval_mcc = 0.8407
2023-06-05 09:11:12.611 629:isIngraph              INFO     eval_precision = 0.9083
2023-06-05 09:11:12.611 629:isIngraph              INFO     eval_recall = 0.9347
2023-06-05 09:11:12.612 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:11:12.616 522:isIngraph              INFO     ********************
2023-06-05 09:11:12.616 523:isIngraph              INFO     Best f1:0.9213
2023-06-05 09:11:12.616 524:isIngraph              INFO     ********************
2023-06-05 09:11:12.620 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:11:12.621 544:isIngraph              INFO     ********************
2023-06-05 09:11:12.621 545:isIngraph              INFO     Best MCC:0.8407
2023-06-05 09:11:12.621 546:isIngraph              INFO     ********************
2023-06-05 09:11:12.623 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:11:22.627 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:11:22.627 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:11:22.627 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:11:56.249 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:11:56.249 629:isIngraph              INFO     eval_acc = 0.9265
2023-06-05 09:11:56.250 629:isIngraph              INFO     eval_f1 = 0.9284
2023-06-05 09:11:56.250 629:isIngraph              INFO     eval_mcc = 0.8542
2023-06-05 09:11:56.250 629:isIngraph              INFO     eval_precision = 0.905
2023-06-05 09:11:56.250 629:isIngraph              INFO     eval_recall = 0.953
2023-06-05 09:11:56.250 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:11:56.255 522:isIngraph              INFO     ********************
2023-06-05 09:11:56.255 523:isIngraph              INFO     Best f1:0.9284
2023-06-05 09:11:56.255 524:isIngraph              INFO     ********************
2023-06-05 09:11:56.259 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:11:56.259 544:isIngraph              INFO     ********************
2023-06-05 09:11:56.260 545:isIngraph              INFO     Best MCC:0.8542
2023-06-05 09:11:56.260 546:isIngraph              INFO     ********************
2023-06-05 09:11:56.262 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:12:05.667 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:12:05.667 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:12:05.667 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:12:37.849 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:12:37.850 629:isIngraph              INFO     eval_acc = 0.9314
2023-06-05 09:12:37.850 629:isIngraph              INFO     eval_f1 = 0.9323
2023-06-05 09:12:37.850 629:isIngraph              INFO     eval_mcc = 0.8631
2023-06-05 09:12:37.850 629:isIngraph              INFO     eval_precision = 0.9211
2023-06-05 09:12:37.851 629:isIngraph              INFO     eval_recall = 0.9437
2023-06-05 09:12:37.851 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:12:37.856 522:isIngraph              INFO     ********************
2023-06-05 09:12:37.856 523:isIngraph              INFO     Best f1:0.9323
2023-06-05 09:12:37.856 524:isIngraph              INFO     ********************
2023-06-05 09:12:37.860 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:12:37.860 544:isIngraph              INFO     ********************
2023-06-05 09:12:37.860 545:isIngraph              INFO     Best MCC:0.8631
2023-06-05 09:12:37.860 546:isIngraph              INFO     ********************
2023-06-05 09:12:37.862 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:12:48.926 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:12:48.927 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:12:48.927 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:13:21.611 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_acc = 0.9329
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_f1 = 0.9352
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_mcc = 0.868
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_precision = 0.904
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_recall = 0.9686
2023-06-05 09:13:21.612 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:13:21.617 522:isIngraph              INFO     ********************
2023-06-05 09:13:21.617 523:isIngraph              INFO     Best f1:0.9352
2023-06-05 09:13:21.617 524:isIngraph              INFO     ********************
2023-06-05 09:13:21.621 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:13:21.621 544:isIngraph              INFO     ********************
2023-06-05 09:13:21.621 545:isIngraph              INFO     Best MCC:0.868
2023-06-05 09:13:21.621 546:isIngraph              INFO     ********************
2023-06-05 09:13:21.624 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:13:31.987 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:13:31.988 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:13:31.988 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:14:05.343 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_acc = 0.938
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_f1 = 0.9395
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_mcc = 0.8771
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_precision = 0.9169
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_recall = 0.9633
2023-06-05 09:14:05.344 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:14:05.354 522:isIngraph              INFO     ********************
2023-06-05 09:14:05.355 523:isIngraph              INFO     Best f1:0.9395
2023-06-05 09:14:05.355 524:isIngraph              INFO     ********************
2023-06-05 09:14:05.359 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-f1/model.bin
2023-06-05 09:14:05.359 544:isIngraph              INFO     ********************
2023-06-05 09:14:05.359 545:isIngraph              INFO     Best MCC:0.8771
2023-06-05 09:14:05.359 546:isIngraph              INFO     ********************
2023-06-05 09:14:05.361 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_1/checkpoint-best-mcc/model.bin
2023-06-05 09:14:15.116 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:14:15.117 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:14:15.117 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:14:48.183 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:14:48.184 629:isIngraph              INFO     eval_acc = 0.9377
2023-06-05 09:14:48.184 629:isIngraph              INFO     eval_f1 = 0.9392
2023-06-05 09:14:48.184 629:isIngraph              INFO     eval_mcc = 0.8765
2023-06-05 09:14:48.185 629:isIngraph              INFO     eval_precision = 0.9177
2023-06-05 09:14:48.185 629:isIngraph              INFO     eval_recall = 0.9617
2023-06-05 09:14:48.185 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:14:58.269 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:14:58.270 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:14:58.270 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:15:30.592 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:15:30.593 629:isIngraph              INFO     eval_acc = 0.9367
2023-06-05 09:15:30.593 629:isIngraph              INFO     eval_f1 = 0.9375
2023-06-05 09:15:30.593 629:isIngraph              INFO     eval_mcc = 0.8737
2023-06-05 09:15:30.593 629:isIngraph              INFO     eval_precision = 0.9254
2023-06-05 09:15:30.594 629:isIngraph              INFO     eval_recall = 0.9499
2023-06-05 09:15:30.594 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:15:40.570 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 09:15:40.571 581:isIngraph              INFO     Num examples = 29244
2023-06-05 09:15:40.571 582:isIngraph              INFO     Batch size = 32
2023-06-05 09:16:06.972 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_acc = 0.9381
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_f1 = 0.9393
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_mcc = 0.8769
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_precision = 0.9218
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_recall = 0.9574
2023-06-05 09:16:06.973 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 09:16:07.287 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 09:16:07.287 651:isIngraph              INFO     Num examples = 30316
2023-06-05 09:16:07.287 652:isIngraph              INFO     Batch size = 32
2023-06-05 09:16:32.368 693:isIngraph              INFO   ***** Test results *****
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_acc = 0.9271
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_f1 = 0.9286
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_mcc = 0.8549
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_precision = 0.9101
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_recall = 0.9478
2023-06-05 09:16:32.369 695:isIngraph              INFO     eval_threshold = 0.5
