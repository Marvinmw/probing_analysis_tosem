2023-06-06 01:49:12.613 917:isIngraph              DEBUG  main message
2023-06-06 01:49:12.613 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 01:49:13.275 938:isIngraph              INFO   Load Dataset
2023-06-06 01:49:52.144 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 01:49:52.789 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 01:49:52.790 251:isInGraph              INFO   Preprocessing Span file and Graph data
2023-06-06 01:49:53.016 258:isInGraph              INFO   ../datasets/java250/isINGraphs/train_ddg_cleaned.pt
2023-06-06 01:50:01.838 271:isInGraph              INFO   save preprocessed data
2023-06-06 01:50:10.695 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 01:50:11.055 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 01:50:11.660 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 01:50:12.983 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 01:50:12.984 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 01:50:13.593 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 01:50:15.332 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 01:50:15.333 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.333 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 01:50:15.333 308:isInGraph              INFO   label: 1
2023-06-06 01:50:15.333 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 01:50:15.333 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 01:50:15.333 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 01:50:15.334 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 01:50:15.334 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 01:50:15.334 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 01:50:15.334 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.334 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 01:50:15.334 308:isInGraph              INFO   label: 0
2023-06-06 01:50:15.334 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 01:50:15.334 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 01:50:15.335 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 01:50:15.335 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 01:50:15.335 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 01:50:15.335 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 01:50:15.335 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.335 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 01:50:15.335 308:isInGraph              INFO   label: 0
2023-06-06 01:50:15.335 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 01:50:15.336 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 01:50:15.336 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 01:50:15.336 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 01:50:15.336 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 01:50:15.336 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 01:50:15.336 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.336 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 01:50:15.336 308:isInGraph              INFO   label: 0
2023-06-06 01:50:15.337 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 01:50:15.337 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 01:50:15.337 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 01:50:15.337 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 01:50:15.337 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 01:50:15.337 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 01:50:15.337 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.337 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 01:50:15.337 308:isInGraph              INFO   label: 0
2023-06-06 01:50:15.338 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 01:50:15.338 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 01:50:15.338 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 01:50:15.338 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 01:50:15.338 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 01:50:15.338 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 01:50:15.338 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.339 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 01:50:15.339 308:isInGraph              INFO   label: 1
2023-06-06 01:50:15.339 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 01:50:15.339 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 01:50:15.339 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 01:50:15.339 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 01:50:15.339 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 01:50:15.340 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 01:50:15.340 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.340 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 01:50:15.340 308:isInGraph              INFO   label: 1
2023-06-06 01:50:15.340 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 01:50:15.340 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 01:50:15.340 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 01:50:15.341 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 01:50:15.341 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 01:50:15.341 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 01:50:15.341 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.341 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 01:50:15.341 308:isInGraph              INFO   label: 1
2023-06-06 01:50:15.341 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 01:50:15.341 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 01:50:15.342 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 01:50:15.342 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 01:50:15.342 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 01:50:15.342 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 01:50:15.342 306:isInGraph              INFO   *** Example ***
2023-06-06 01:50:15.342 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 01:50:15.342 308:isInGraph              INFO   label: 1
2023-06-06 01:50:15.343 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 01:50:15.343 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 01:50:15.343 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 01:50:15.343 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 01:50:15.343 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 01:50:15.343 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 01:50:15.343 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 01:50:15.365 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 01:50:15.365 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12', posratio=0.5, seed=555, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 01:50:16.822 451:isIngraph              INFO   ***** Running training *****
2023-06-06 01:50:16.822 452:isIngraph              INFO     Num examples = 99417
2023-06-06 01:50:16.823 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 01:50:16.823 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 01:50:16.823 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 01:50:16.823 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 01:50:16.823 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 01:50:27.076 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:50:27.076 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:50:27.076 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:50:57.093 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:50:57.093 629:isIngraph              INFO     eval_acc = 0.879
2023-06-06 01:50:57.094 629:isIngraph              INFO     eval_f1 = 0.8846
2023-06-06 01:50:57.094 629:isIngraph              INFO     eval_mcc = 0.7616
2023-06-06 01:50:57.094 629:isIngraph              INFO     eval_precision = 0.8452
2023-06-06 01:50:57.094 629:isIngraph              INFO     eval_recall = 0.9279
2023-06-06 01:50:57.094 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:50:57.095 522:isIngraph              INFO     ********************
2023-06-06 01:50:57.095 523:isIngraph              INFO     Best f1:0.8846
2023-06-06 01:50:57.095 524:isIngraph              INFO     ********************
2023-06-06 01:50:57.099 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:50:57.099 544:isIngraph              INFO     ********************
2023-06-06 01:50:57.100 545:isIngraph              INFO     Best MCC:0.7616
2023-06-06 01:50:57.100 546:isIngraph              INFO     ********************
2023-06-06 01:50:57.102 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:51:05.376 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:51:05.376 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:51:05.376 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:51:33.578 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:51:33.578 629:isIngraph              INFO     eval_acc = 0.908
2023-06-06 01:51:33.579 629:isIngraph              INFO     eval_f1 = 0.9125
2023-06-06 01:51:33.579 629:isIngraph              INFO     eval_mcc = 0.8204
2023-06-06 01:51:33.579 629:isIngraph              INFO     eval_precision = 0.8696
2023-06-06 01:51:33.579 629:isIngraph              INFO     eval_recall = 0.9598
2023-06-06 01:51:33.579 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:51:33.579 522:isIngraph              INFO     ********************
2023-06-06 01:51:33.579 523:isIngraph              INFO     Best f1:0.9125
2023-06-06 01:51:33.579 524:isIngraph              INFO     ********************
2023-06-06 01:51:33.583 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:51:33.583 544:isIngraph              INFO     ********************
2023-06-06 01:51:33.583 545:isIngraph              INFO     Best MCC:0.8204
2023-06-06 01:51:33.583 546:isIngraph              INFO     ********************
2023-06-06 01:51:33.585 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:51:41.848 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:51:41.848 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:51:41.848 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:52:09.080 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:52:09.080 629:isIngraph              INFO     eval_acc = 0.9025
2023-06-06 01:52:09.081 629:isIngraph              INFO     eval_f1 = 0.9101
2023-06-06 01:52:09.081 629:isIngraph              INFO     eval_mcc = 0.8166
2023-06-06 01:52:09.081 629:isIngraph              INFO     eval_precision = 0.8447
2023-06-06 01:52:09.081 629:isIngraph              INFO     eval_recall = 0.9864
2023-06-06 01:52:09.081 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:52:17.471 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:52:17.471 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:52:17.471 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:52:45.695 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:52:45.695 629:isIngraph              INFO     eval_acc = 0.9158
2023-06-06 01:52:45.696 629:isIngraph              INFO     eval_f1 = 0.9178
2023-06-06 01:52:45.696 629:isIngraph              INFO     eval_mcc = 0.8326
2023-06-06 01:52:45.696 629:isIngraph              INFO     eval_precision = 0.8967
2023-06-06 01:52:45.696 629:isIngraph              INFO     eval_recall = 0.9399
2023-06-06 01:52:45.696 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:52:45.696 522:isIngraph              INFO     ********************
2023-06-06 01:52:45.696 523:isIngraph              INFO     Best f1:0.9178
2023-06-06 01:52:45.696 524:isIngraph              INFO     ********************
2023-06-06 01:52:45.700 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:52:45.700 544:isIngraph              INFO     ********************
2023-06-06 01:52:45.700 545:isIngraph              INFO     Best MCC:0.8326
2023-06-06 01:52:45.701 546:isIngraph              INFO     ********************
2023-06-06 01:52:45.702 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:52:53.867 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:52:53.868 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:52:53.868 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:53:21.305 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:53:21.305 629:isIngraph              INFO     eval_acc = 0.9232
2023-06-06 01:53:21.305 629:isIngraph              INFO     eval_f1 = 0.9267
2023-06-06 01:53:21.305 629:isIngraph              INFO     eval_mcc = 0.8503
2023-06-06 01:53:21.305 629:isIngraph              INFO     eval_precision = 0.886
2023-06-06 01:53:21.305 629:isIngraph              INFO     eval_recall = 0.9713
2023-06-06 01:53:21.306 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:53:21.306 522:isIngraph              INFO     ********************
2023-06-06 01:53:21.306 523:isIngraph              INFO     Best f1:0.9267
2023-06-06 01:53:21.306 524:isIngraph              INFO     ********************
2023-06-06 01:53:21.309 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:53:21.309 544:isIngraph              INFO     ********************
2023-06-06 01:53:21.309 545:isIngraph              INFO     Best MCC:0.8503
2023-06-06 01:53:21.309 546:isIngraph              INFO     ********************
2023-06-06 01:53:21.310 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:53:29.776 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:53:29.776 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:53:29.777 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:53:56.764 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_acc = 0.9236
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_f1 = 0.9257
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_mcc = 0.8485
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_precision = 0.9017
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_recall = 0.951
2023-06-06 01:53:56.765 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:54:04.768 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:54:04.769 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:54:04.769 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:54:30.445 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:54:30.445 629:isIngraph              INFO     eval_acc = 0.9216
2023-06-06 01:54:30.445 629:isIngraph              INFO     eval_f1 = 0.9236
2023-06-06 01:54:30.446 629:isIngraph              INFO     eval_mcc = 0.8444
2023-06-06 01:54:30.446 629:isIngraph              INFO     eval_precision = 0.9003
2023-06-06 01:54:30.446 629:isIngraph              INFO     eval_recall = 0.9481
2023-06-06 01:54:30.446 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:54:38.391 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:54:38.392 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:54:38.392 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:55:07.490 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_acc = 0.9267
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_f1 = 0.9284
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_mcc = 0.8544
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_precision = 0.9074
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_recall = 0.9504
2023-06-06 01:55:07.491 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:55:07.492 522:isIngraph              INFO     ********************
2023-06-06 01:55:07.492 523:isIngraph              INFO     Best f1:0.9284
2023-06-06 01:55:07.492 524:isIngraph              INFO     ********************
2023-06-06 01:55:07.496 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:55:07.496 544:isIngraph              INFO     ********************
2023-06-06 01:55:07.496 545:isIngraph              INFO     Best MCC:0.8544
2023-06-06 01:55:07.496 546:isIngraph              INFO     ********************
2023-06-06 01:55:07.498 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:55:16.013 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:55:16.013 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:55:16.014 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:55:44.313 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_acc = 0.9279
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_f1 = 0.9298
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_mcc = 0.857
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_precision = 0.9061
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_recall = 0.9547
2023-06-06 01:55:44.314 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:55:44.314 522:isIngraph              INFO     ********************
2023-06-06 01:55:44.314 523:isIngraph              INFO     Best f1:0.9298
2023-06-06 01:55:44.315 524:isIngraph              INFO     ********************
2023-06-06 01:55:44.317 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:55:44.317 544:isIngraph              INFO     ********************
2023-06-06 01:55:44.317 545:isIngraph              INFO     Best MCC:0.857
2023-06-06 01:55:44.317 546:isIngraph              INFO     ********************
2023-06-06 01:55:44.319 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:55:52.585 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:55:52.586 581:isIngraph              INFO     Num examples = 33196
2023-06-06 01:55:52.586 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:56:21.489 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:56:21.489 629:isIngraph              INFO     eval_acc = 0.9308
2023-06-06 01:56:21.490 629:isIngraph              INFO     eval_f1 = 0.9332
2023-06-06 01:56:21.490 629:isIngraph              INFO     eval_mcc = 0.8638
2023-06-06 01:56:21.490 629:isIngraph              INFO     eval_precision = 0.9026
2023-06-06 01:56:21.490 629:isIngraph              INFO     eval_recall = 0.9659
2023-06-06 01:56:21.490 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:56:21.490 522:isIngraph              INFO     ********************
2023-06-06 01:56:21.490 523:isIngraph              INFO     Best f1:0.9332
2023-06-06 01:56:21.490 524:isIngraph              INFO     ********************
2023-06-06 01:56:21.494 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 01:56:21.494 544:isIngraph              INFO     ********************
2023-06-06 01:56:21.494 545:isIngraph              INFO     Best MCC:0.8638
2023-06-06 01:56:21.494 546:isIngraph              INFO     ********************
2023-06-06 01:56:21.496 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 01:56:21.717 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 01:56:21.717 651:isIngraph              INFO     Num examples = 32385
2023-06-06 01:56:21.717 652:isIngraph              INFO     Batch size = 32
2023-06-06 01:56:50.068 693:isIngraph              INFO   ***** Test results *****
2023-06-06 01:56:50.068 695:isIngraph              INFO     eval_acc = 0.9213
2023-06-06 01:56:50.068 695:isIngraph              INFO     eval_f1 = 0.9233
2023-06-06 01:56:50.068 695:isIngraph              INFO     eval_mcc = 0.8438
2023-06-06 01:56:50.069 695:isIngraph              INFO     eval_precision = 0.9001
2023-06-06 01:56:50.069 695:isIngraph              INFO     eval_recall = 0.9478
2023-06-06 01:56:50.069 695:isIngraph              INFO     eval_threshold = 0.5
