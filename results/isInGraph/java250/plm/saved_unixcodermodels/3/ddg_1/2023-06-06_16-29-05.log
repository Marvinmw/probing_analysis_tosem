2023-06-06 16:29:05.983 917:isIngraph              DEBUG  main message
2023-06-06 16:29:05.983 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 16:29:06.666 938:isIngraph              INFO   Load Dataset
2023-06-06 16:29:45.071 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 16:29:45.696 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 16:29:48.587 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 16:29:48.589 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 16:29:49.165 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 16:29:51.488 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 16:29:51.489 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 16:29:52.062 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 16:29:53.916 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 16:29:53.917 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.917 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 16:29:53.917 308:isInGraph              INFO   label: 1
2023-06-06 16:29:53.917 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 16:29:53.918 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 16:29:53.918 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 16:29:53.918 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 16:29:53.918 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 16:29:53.918 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 16:29:53.918 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.918 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 16:29:53.918 308:isInGraph              INFO   label: 0
2023-06-06 16:29:53.919 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 16:29:53.919 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 16:29:53.919 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 16:29:53.919 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 16:29:53.919 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 16:29:53.919 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 16:29:53.919 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.919 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 16:29:53.920 308:isInGraph              INFO   label: 0
2023-06-06 16:29:53.920 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 16:29:53.920 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 16:29:53.920 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 16:29:53.920 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 16:29:53.920 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 16:29:53.920 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 16:29:53.920 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.920 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 16:29:53.921 308:isInGraph              INFO   label: 0
2023-06-06 16:29:53.921 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 16:29:53.921 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 16:29:53.921 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 16:29:53.921 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 16:29:53.921 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 16:29:53.921 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 16:29:53.922 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.922 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 16:29:53.922 308:isInGraph              INFO   label: 0
2023-06-06 16:29:53.922 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 16:29:53.922 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 16:29:53.922 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 16:29:53.922 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 16:29:53.922 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 16:29:53.923 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 16:29:53.923 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.923 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 16:29:53.923 308:isInGraph              INFO   label: 1
2023-06-06 16:29:53.923 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 16:29:53.923 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 16:29:53.923 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 16:29:53.923 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 16:29:53.924 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 16:29:53.924 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 16:29:53.924 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.924 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 16:29:53.924 308:isInGraph              INFO   label: 1
2023-06-06 16:29:53.924 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 16:29:53.924 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 16:29:53.924 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 16:29:53.925 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 16:29:53.925 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 16:29:53.925 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 16:29:53.925 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.925 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 16:29:53.925 308:isInGraph              INFO   label: 1
2023-06-06 16:29:53.925 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 16:29:53.925 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 16:29:53.926 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 16:29:53.926 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 16:29:53.926 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 16:29:53.926 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 16:29:53.926 306:isInGraph              INFO   *** Example ***
2023-06-06 16:29:53.926 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 16:29:53.926 308:isInGraph              INFO   label: 1
2023-06-06 16:29:53.926 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 16:29:53.927 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 16:29:53.927 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 16:29:53.927 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 16:29:53.927 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 16:29:53.927 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 16:29:53.927 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 16:29:53.954 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 16:29:53.954 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1', posratio=0.5, seed=325, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 16:29:55.279 451:isIngraph              INFO   ***** Running training *****
2023-06-06 16:29:55.279 452:isIngraph              INFO     Num examples = 99417
2023-06-06 16:29:55.280 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 16:29:55.280 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 16:29:55.280 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 16:29:55.280 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 16:29:55.280 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 16:30:03.623 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:30:03.624 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:30:03.624 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:30:31.749 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_acc = 0.9325
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_f1 = 0.9359
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_mcc = 0.8698
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_precision = 0.8912
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_recall = 0.9853
2023-06-06 16:30:31.750 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:30:31.751 522:isIngraph              INFO     ********************
2023-06-06 16:30:31.751 523:isIngraph              INFO     Best f1:0.9359
2023-06-06 16:30:31.751 524:isIngraph              INFO     ********************
2023-06-06 16:30:31.755 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:30:31.756 544:isIngraph              INFO     ********************
2023-06-06 16:30:31.756 545:isIngraph              INFO     Best MCC:0.8698
2023-06-06 16:30:31.756 546:isIngraph              INFO     ********************
2023-06-06 16:30:31.760 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:30:41.370 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:30:41.370 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:30:41.370 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:31:11.474 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_acc = 0.9571
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_f1 = 0.9582
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_mcc = 0.9156
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_precision = 0.9327
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_recall = 0.9852
2023-06-06 16:31:11.475 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:31:11.475 522:isIngraph              INFO     ********************
2023-06-06 16:31:11.476 523:isIngraph              INFO     Best f1:0.9582
2023-06-06 16:31:11.476 524:isIngraph              INFO     ********************
2023-06-06 16:31:11.480 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:31:11.480 544:isIngraph              INFO     ********************
2023-06-06 16:31:11.480 545:isIngraph              INFO     Best MCC:0.9156
2023-06-06 16:31:11.480 546:isIngraph              INFO     ********************
2023-06-06 16:31:11.483 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:31:20.940 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:31:20.940 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:31:20.940 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:31:51.081 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_acc = 0.9646
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_f1 = 0.9657
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_mcc = 0.9309
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_precision = 0.9384
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_recall = 0.9945
2023-06-06 16:31:51.082 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:31:51.083 522:isIngraph              INFO     ********************
2023-06-06 16:31:51.083 523:isIngraph              INFO     Best f1:0.9657
2023-06-06 16:31:51.083 524:isIngraph              INFO     ********************
2023-06-06 16:31:51.087 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:31:51.088 544:isIngraph              INFO     ********************
2023-06-06 16:31:51.088 545:isIngraph              INFO     Best MCC:0.9309
2023-06-06 16:31:51.088 546:isIngraph              INFO     ********************
2023-06-06 16:31:51.090 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:32:00.399 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:32:00.399 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:32:00.399 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:32:30.588 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:32:30.588 629:isIngraph              INFO     eval_acc = 0.9682
2023-06-06 16:32:30.588 629:isIngraph              INFO     eval_f1 = 0.9689
2023-06-06 16:32:30.589 629:isIngraph              INFO     eval_mcc = 0.9373
2023-06-06 16:32:30.589 629:isIngraph              INFO     eval_precision = 0.9495
2023-06-06 16:32:30.589 629:isIngraph              INFO     eval_recall = 0.9891
2023-06-06 16:32:30.589 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:32:30.589 522:isIngraph              INFO     ********************
2023-06-06 16:32:30.589 523:isIngraph              INFO     Best f1:0.9689
2023-06-06 16:32:30.589 524:isIngraph              INFO     ********************
2023-06-06 16:32:30.593 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:32:30.593 544:isIngraph              INFO     ********************
2023-06-06 16:32:30.593 545:isIngraph              INFO     Best MCC:0.9373
2023-06-06 16:32:30.593 546:isIngraph              INFO     ********************
2023-06-06 16:32:30.596 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:32:39.706 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:32:39.706 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:32:39.707 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:33:09.530 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:33:09.530 629:isIngraph              INFO     eval_acc = 0.9705
2023-06-06 16:33:09.530 629:isIngraph              INFO     eval_f1 = 0.9711
2023-06-06 16:33:09.530 629:isIngraph              INFO     eval_mcc = 0.9418
2023-06-06 16:33:09.531 629:isIngraph              INFO     eval_precision = 0.9516
2023-06-06 16:33:09.531 629:isIngraph              INFO     eval_recall = 0.9913
2023-06-06 16:33:09.531 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:33:09.531 522:isIngraph              INFO     ********************
2023-06-06 16:33:09.531 523:isIngraph              INFO     Best f1:0.9711
2023-06-06 16:33:09.531 524:isIngraph              INFO     ********************
2023-06-06 16:33:09.534 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:33:09.535 544:isIngraph              INFO     ********************
2023-06-06 16:33:09.535 545:isIngraph              INFO     Best MCC:0.9418
2023-06-06 16:33:09.535 546:isIngraph              INFO     ********************
2023-06-06 16:33:09.536 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:33:18.741 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:33:18.741 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:33:18.741 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:33:47.189 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:33:47.189 629:isIngraph              INFO     eval_acc = 0.9697
2023-06-06 16:33:47.190 629:isIngraph              INFO     eval_f1 = 0.9704
2023-06-06 16:33:47.190 629:isIngraph              INFO     eval_mcc = 0.9403
2023-06-06 16:33:47.190 629:isIngraph              INFO     eval_precision = 0.9503
2023-06-06 16:33:47.190 629:isIngraph              INFO     eval_recall = 0.9913
2023-06-06 16:33:47.190 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:33:55.838 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:33:55.838 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:33:55.838 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:34:23.666 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:34:23.666 629:isIngraph              INFO     eval_acc = 0.9702
2023-06-06 16:34:23.666 629:isIngraph              INFO     eval_f1 = 0.9708
2023-06-06 16:34:23.666 629:isIngraph              INFO     eval_mcc = 0.9411
2023-06-06 16:34:23.666 629:isIngraph              INFO     eval_precision = 0.9531
2023-06-06 16:34:23.667 629:isIngraph              INFO     eval_recall = 0.9892
2023-06-06 16:34:23.667 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:34:31.995 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:34:31.995 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:34:31.995 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:35:00.107 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:35:00.107 629:isIngraph              INFO     eval_acc = 0.971
2023-06-06 16:35:00.107 629:isIngraph              INFO     eval_f1 = 0.9715
2023-06-06 16:35:00.107 629:isIngraph              INFO     eval_mcc = 0.9427
2023-06-06 16:35:00.108 629:isIngraph              INFO     eval_precision = 0.9527
2023-06-06 16:35:00.108 629:isIngraph              INFO     eval_recall = 0.9911
2023-06-06 16:35:00.108 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:35:00.108 522:isIngraph              INFO     ********************
2023-06-06 16:35:00.108 523:isIngraph              INFO     Best f1:0.9715
2023-06-06 16:35:00.108 524:isIngraph              INFO     ********************
2023-06-06 16:35:00.112 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:35:00.112 544:isIngraph              INFO     ********************
2023-06-06 16:35:00.112 545:isIngraph              INFO     Best MCC:0.9427
2023-06-06 16:35:00.112 546:isIngraph              INFO     ********************
2023-06-06 16:35:00.114 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:35:08.701 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:35:08.701 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:35:08.701 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:35:36.692 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_acc = 0.9718
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_f1 = 0.9723
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_mcc = 0.9444
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_precision = 0.9531
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_recall = 0.9924
2023-06-06 16:35:36.693 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:35:36.693 522:isIngraph              INFO     ********************
2023-06-06 16:35:36.693 523:isIngraph              INFO     Best f1:0.9723
2023-06-06 16:35:36.693 524:isIngraph              INFO     ********************
2023-06-06 16:35:36.697 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:35:36.697 544:isIngraph              INFO     ********************
2023-06-06 16:35:36.697 545:isIngraph              INFO     Best MCC:0.9444
2023-06-06 16:35:36.697 546:isIngraph              INFO     ********************
2023-06-06 16:35:36.699 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:35:44.586 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 16:35:44.587 581:isIngraph              INFO     Num examples = 33196
2023-06-06 16:35:44.587 582:isIngraph              INFO     Batch size = 32
2023-06-06 16:36:11.269 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_acc = 0.9721
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_f1 = 0.9727
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_mcc = 0.945
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_precision = 0.9542
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_recall = 0.9919
2023-06-06 16:36:11.270 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 16:36:11.270 522:isIngraph              INFO     ********************
2023-06-06 16:36:11.271 523:isIngraph              INFO     Best f1:0.9727
2023-06-06 16:36:11.271 524:isIngraph              INFO     ********************
2023-06-06 16:36:11.276 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 16:36:11.276 544:isIngraph              INFO     ********************
2023-06-06 16:36:11.276 545:isIngraph              INFO     Best MCC:0.945
2023-06-06 16:36:11.276 546:isIngraph              INFO     ********************
2023-06-06 16:36:11.278 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 16:36:11.545 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 16:36:11.545 651:isIngraph              INFO     Num examples = 32385
2023-06-06 16:36:11.545 652:isIngraph              INFO     Batch size = 32
2023-06-06 16:36:37.994 693:isIngraph              INFO   ***** Test results *****
2023-06-06 16:36:37.994 695:isIngraph              INFO     eval_acc = 0.9695
2023-06-06 16:36:37.995 695:isIngraph              INFO     eval_f1 = 0.97
2023-06-06 16:36:37.995 695:isIngraph              INFO     eval_mcc = 0.9395
2023-06-06 16:36:37.995 695:isIngraph              INFO     eval_precision = 0.9539
2023-06-06 16:36:37.995 695:isIngraph              INFO     eval_recall = 0.9867
2023-06-06 16:36:37.995 695:isIngraph              INFO     eval_threshold = 0.5
