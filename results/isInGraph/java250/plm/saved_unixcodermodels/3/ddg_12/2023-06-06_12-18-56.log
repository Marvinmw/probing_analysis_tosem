2023-06-06 12:18:56.321 917:isIngraph              DEBUG  main message
2023-06-06 12:18:56.321 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 12:18:57.064 938:isIngraph              INFO   Load Dataset
2023-06-06 12:19:37.165 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 12:19:37.804 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 12:19:41.414 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 12:19:41.418 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 12:19:42.060 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 12:19:45.840 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 12:19:45.841 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 12:19:46.480 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 12:19:49.499 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 12:19:49.499 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.499 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 12:19:49.499 308:isInGraph              INFO   label: 1
2023-06-06 12:19:49.500 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 12:19:49.500 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 12:19:49.500 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 12:19:49.500 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 12:19:49.500 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 12:19:49.501 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 12:19:49.501 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.501 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 12:19:49.501 308:isInGraph              INFO   label: 0
2023-06-06 12:19:49.501 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 12:19:49.501 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 12:19:49.501 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 12:19:49.501 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 12:19:49.502 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 12:19:49.502 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 12:19:49.502 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.502 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 12:19:49.502 308:isInGraph              INFO   label: 0
2023-06-06 12:19:49.502 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 12:19:49.502 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 12:19:49.502 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 12:19:49.503 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 12:19:49.503 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 12:19:49.503 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 12:19:49.503 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.503 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 12:19:49.503 308:isInGraph              INFO   label: 0
2023-06-06 12:19:49.503 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 12:19:49.503 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 12:19:49.504 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 12:19:49.504 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 12:19:49.504 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 12:19:49.504 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 12:19:49.504 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.504 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 12:19:49.504 308:isInGraph              INFO   label: 0
2023-06-06 12:19:49.504 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 12:19:49.505 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 12:19:49.505 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 12:19:49.505 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 12:19:49.505 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 12:19:49.505 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 12:19:49.505 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.505 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 12:19:49.505 308:isInGraph              INFO   label: 1
2023-06-06 12:19:49.506 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 12:19:49.506 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 12:19:49.506 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 12:19:49.506 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 12:19:49.506 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 12:19:49.506 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 12:19:49.506 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.507 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 12:19:49.507 308:isInGraph              INFO   label: 1
2023-06-06 12:19:49.507 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 12:19:49.507 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 12:19:49.507 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 12:19:49.507 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 12:19:49.507 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 12:19:49.508 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 12:19:49.508 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.508 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 12:19:49.508 308:isInGraph              INFO   label: 1
2023-06-06 12:19:49.508 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 12:19:49.508 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 12:19:49.508 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 12:19:49.508 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 12:19:49.509 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 12:19:49.509 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 12:19:49.509 306:isInGraph              INFO   *** Example ***
2023-06-06 12:19:49.509 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 12:19:49.509 308:isInGraph              INFO   label: 1
2023-06-06 12:19:49.509 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 12:19:49.509 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 12:19:49.509 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 12:19:49.510 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 12:19:49.510 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 12:19:49.510 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 12:19:49.510 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 12:19:49.533 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 12:19:49.533 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12', posratio=0.5, seed=325, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 12:19:51.198 451:isIngraph              INFO   ***** Running training *****
2023-06-06 12:19:51.198 452:isIngraph              INFO     Num examples = 99417
2023-06-06 12:19:51.198 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 12:19:51.198 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 12:19:51.198 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 12:19:51.199 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 12:19:51.199 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 12:20:01.556 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:20:01.557 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:20:01.557 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:20:32.294 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_acc = 0.8822
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_f1 = 0.8877
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_mcc = 0.7681
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_precision = 0.8476
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_recall = 0.9319
2023-06-06 12:20:32.295 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:20:32.295 522:isIngraph              INFO     ********************
2023-06-06 12:20:32.295 523:isIngraph              INFO     Best f1:0.8877
2023-06-06 12:20:32.296 524:isIngraph              INFO     ********************
2023-06-06 12:20:32.300 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 12:20:32.300 544:isIngraph              INFO     ********************
2023-06-06 12:20:32.300 545:isIngraph              INFO     Best MCC:0.7681
2023-06-06 12:20:32.300 546:isIngraph              INFO     ********************
2023-06-06 12:20:32.302 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 12:20:41.862 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:20:41.862 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:20:41.863 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:21:11.755 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:21:11.755 629:isIngraph              INFO     eval_acc = 0.9099
2023-06-06 12:21:11.756 629:isIngraph              INFO     eval_f1 = 0.9147
2023-06-06 12:21:11.756 629:isIngraph              INFO     eval_mcc = 0.825
2023-06-06 12:21:11.756 629:isIngraph              INFO     eval_precision = 0.8686
2023-06-06 12:21:11.756 629:isIngraph              INFO     eval_recall = 0.966
2023-06-06 12:21:11.756 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:21:11.756 522:isIngraph              INFO     ********************
2023-06-06 12:21:11.757 523:isIngraph              INFO     Best f1:0.9147
2023-06-06 12:21:11.757 524:isIngraph              INFO     ********************
2023-06-06 12:21:11.761 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 12:21:11.761 544:isIngraph              INFO     ********************
2023-06-06 12:21:11.761 545:isIngraph              INFO     Best MCC:0.825
2023-06-06 12:21:11.762 546:isIngraph              INFO     ********************
2023-06-06 12:21:11.764 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 12:21:20.779 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:21:20.779 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:21:20.779 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:21:51.448 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:21:51.448 629:isIngraph              INFO     eval_acc = 0.9044
2023-06-06 12:21:51.448 629:isIngraph              INFO     eval_f1 = 0.9057
2023-06-06 12:21:51.449 629:isIngraph              INFO     eval_mcc = 0.8092
2023-06-06 12:21:51.449 629:isIngraph              INFO     eval_precision = 0.8944
2023-06-06 12:21:51.449 629:isIngraph              INFO     eval_recall = 0.9172
2023-06-06 12:21:51.449 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:22:01.128 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:22:01.128 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:22:01.128 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:22:31.106 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:22:31.107 629:isIngraph              INFO     eval_acc = 0.9237
2023-06-06 12:22:31.107 629:isIngraph              INFO     eval_f1 = 0.9273
2023-06-06 12:22:31.107 629:isIngraph              INFO     eval_mcc = 0.8516
2023-06-06 12:22:31.107 629:isIngraph              INFO     eval_precision = 0.8854
2023-06-06 12:22:31.107 629:isIngraph              INFO     eval_recall = 0.9733
2023-06-06 12:22:31.108 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:22:31.108 522:isIngraph              INFO     ********************
2023-06-06 12:22:31.108 523:isIngraph              INFO     Best f1:0.9273
2023-06-06 12:22:31.108 524:isIngraph              INFO     ********************
2023-06-06 12:22:31.112 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 12:22:31.112 544:isIngraph              INFO     ********************
2023-06-06 12:22:31.112 545:isIngraph              INFO     Best MCC:0.8516
2023-06-06 12:22:31.112 546:isIngraph              INFO     ********************
2023-06-06 12:22:31.114 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 12:22:39.942 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:22:39.942 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:22:39.942 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:23:10.427 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:23:10.427 629:isIngraph              INFO     eval_acc = 0.9167
2023-06-06 12:23:10.427 629:isIngraph              INFO     eval_f1 = 0.9186
2023-06-06 12:23:10.427 629:isIngraph              INFO     eval_mcc = 0.8343
2023-06-06 12:23:10.427 629:isIngraph              INFO     eval_precision = 0.898
2023-06-06 12:23:10.427 629:isIngraph              INFO     eval_recall = 0.9402
2023-06-06 12:23:10.428 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:23:19.656 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:23:19.657 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:23:19.657 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:23:50.395 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:23:50.395 629:isIngraph              INFO     eval_acc = 0.9287
2023-06-06 12:23:50.395 629:isIngraph              INFO     eval_f1 = 0.932
2023-06-06 12:23:50.395 629:isIngraph              INFO     eval_mcc = 0.8615
2023-06-06 12:23:50.396 629:isIngraph              INFO     eval_precision = 0.8909
2023-06-06 12:23:50.396 629:isIngraph              INFO     eval_recall = 0.977
2023-06-06 12:23:50.396 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:23:50.396 522:isIngraph              INFO     ********************
2023-06-06 12:23:50.396 523:isIngraph              INFO     Best f1:0.932
2023-06-06 12:23:50.396 524:isIngraph              INFO     ********************
2023-06-06 12:23:50.400 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 12:23:50.400 544:isIngraph              INFO     ********************
2023-06-06 12:23:50.400 545:isIngraph              INFO     Best MCC:0.8615
2023-06-06 12:23:50.400 546:isIngraph              INFO     ********************
2023-06-06 12:23:50.402 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 12:23:59.868 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:23:59.868 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:23:59.869 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:24:28.161 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:24:28.161 629:isIngraph              INFO     eval_acc = 0.9285
2023-06-06 12:24:28.161 629:isIngraph              INFO     eval_f1 = 0.9312
2023-06-06 12:24:28.161 629:isIngraph              INFO     eval_mcc = 0.8596
2023-06-06 12:24:28.161 629:isIngraph              INFO     eval_precision = 0.8973
2023-06-06 12:24:28.162 629:isIngraph              INFO     eval_recall = 0.9677
2023-06-06 12:24:28.162 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:24:37.396 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:24:37.396 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:24:37.396 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:25:07.053 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:25:07.053 629:isIngraph              INFO     eval_acc = 0.9283
2023-06-06 12:25:07.053 629:isIngraph              INFO     eval_f1 = 0.9308
2023-06-06 12:25:07.054 629:isIngraph              INFO     eval_mcc = 0.8588
2023-06-06 12:25:07.054 629:isIngraph              INFO     eval_precision = 0.8997
2023-06-06 12:25:07.054 629:isIngraph              INFO     eval_recall = 0.9642
2023-06-06 12:25:07.054 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:25:15.965 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:25:15.966 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:25:15.966 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:25:44.829 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:25:44.830 629:isIngraph              INFO     eval_acc = 0.924
2023-06-06 12:25:44.830 629:isIngraph              INFO     eval_f1 = 0.9247
2023-06-06 12:25:44.830 629:isIngraph              INFO     eval_mcc = 0.8481
2023-06-06 12:25:44.830 629:isIngraph              INFO     eval_precision = 0.9159
2023-06-06 12:25:44.830 629:isIngraph              INFO     eval_recall = 0.9336
2023-06-06 12:25:44.831 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:25:53.687 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 12:25:53.688 581:isIngraph              INFO     Num examples = 33196
2023-06-06 12:25:53.688 582:isIngraph              INFO     Batch size = 32
2023-06-06 12:26:22.882 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_acc = 0.9294
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_f1 = 0.9311
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_mcc = 0.8599
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_precision = 0.9083
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_recall = 0.9552
2023-06-06 12:26:22.883 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 12:26:23.143 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 12:26:23.144 651:isIngraph              INFO     Num examples = 32385
2023-06-06 12:26:23.144 652:isIngraph              INFO     Batch size = 32
2023-06-06 12:26:53.008 693:isIngraph              INFO   ***** Test results *****
2023-06-06 12:26:53.008 695:isIngraph              INFO     eval_acc = 0.92
2023-06-06 12:26:53.008 695:isIngraph              INFO     eval_f1 = 0.9234
2023-06-06 12:26:53.009 695:isIngraph              INFO     eval_mcc = 0.8433
2023-06-06 12:26:53.009 695:isIngraph              INFO     eval_precision = 0.886
2023-06-06 12:26:53.009 695:isIngraph              INFO     eval_recall = 0.964
2023-06-06 12:26:53.009 695:isIngraph              INFO     eval_threshold = 0.5
