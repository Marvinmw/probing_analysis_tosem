2023-06-06 13:46:24.713 917:isIngraph              DEBUG  main message
2023-06-06 13:46:24.714 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 13:46:25.455 938:isIngraph              INFO   Load Dataset
2023-06-06 13:47:11.705 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 13:47:12.423 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-06 13:47:14.299 301:isInGraph              INFO   Labels Counter({0: 22806, 1: 22749})
2023-06-06 13:47:14.299 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 13:47:14.979 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-06 13:47:15.901 301:isInGraph              INFO   Labels Counter({0: 7301, 1: 7288})
2023-06-06 13:47:15.901 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 13:47:16.552 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-06 13:47:17.744 301:isInGraph              INFO   Labels Counter({0: 7168, 1: 7159})
2023-06-06 13:47:17.745 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.745 307:isInGraph              INFO   idx: s398466888_main
2023-06-06 13:47:17.745 308:isInGraph              INFO   label: 1
2023-06-06 13:47:17.745 309:isInGraph              INFO   input_tokens_1: ['out']
2023-06-06 13:47:17.746 317:isInGraph              INFO   input_ids_1: 80 81
2023-06-06 13:47:17.746 324:isInGraph              INFO   input_tokens_reverse_1: ĠSystem
2023-06-06 13:47:17.746 334:isInGraph              INFO   input_tokens_2: ['System', '.', 'out', '.', 'println', '("', 'No', '")']
2023-06-06 13:47:17.746 342:isInGraph              INFO   input_ids_2: 89 97
2023-06-06 13:47:17.746 349:isInGraph              INFO   input_tokens_reverse_2: Ġelse Ġ{ ĠSystem . out . println ("
2023-06-06 13:47:17.746 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.746 307:isInGraph              INFO   idx: s037525918_main
2023-06-06 13:47:17.747 308:isInGraph              INFO   label: 1
2023-06-06 13:47:17.747 309:isInGraph              INFO   input_tokens_1: ['System', '.', 'out', '.', 'println', '(', 'a', ')']
2023-06-06 13:47:17.747 317:isInGraph              INFO   input_ids_1: 67 75
2023-06-06 13:47:17.747 324:isInGraph              INFO   input_tokens_reverse_1: ) Ġ{ ĠSystem . out . println (
2023-06-06 13:47:17.747 334:isInGraph              INFO   input_tokens_2: ['out']
2023-06-06 13:47:17.747 342:isInGraph              INFO   input_ids_2: 69 70
2023-06-06 13:47:17.747 349:isInGraph              INFO   input_tokens_reverse_2: ĠSystem
2023-06-06 13:47:17.747 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.748 307:isInGraph              INFO   idx: s279088077_solve
2023-06-06 13:47:17.748 308:isInGraph              INFO   label: 1
2023-06-06 13:47:17.748 309:isInGraph              INFO   input_tokens_1: ['b', '_-', '_a']
2023-06-06 13:47:17.748 317:isInGraph              INFO   input_ids_1: 103 106
2023-06-06 13:47:17.748 324:isInGraph              INFO   input_tokens_reverse_1: First ( b
2023-06-06 13:47:17.748 334:isInGraph              INFO   input_tokens_2: ['stk', '.', 'poll', 'First', '()']
2023-06-06 13:47:17.748 342:isInGraph              INFO   input_ids_2: 47 52
2023-06-06 13:47:17.748 349:isInGraph              INFO   input_tokens_reverse_2: Ġa Ġ= Ġstk . poll
2023-06-06 13:47:17.749 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.749 307:isInGraph              INFO   idx: s217311553_main
2023-06-06 13:47:17.749 308:isInGraph              INFO   label: 1
2023-06-06 13:47:17.749 309:isInGraph              INFO   input_tokens_1: ['Character', '.', 'toLowerCase', '(', 'ans', '[', 'i', '])']
2023-06-06 13:47:17.749 317:isInGraph              INFO   input_ids_1: 104 112
2023-06-06 13:47:17.749 324:isInGraph              INFO   input_tokens_reverse_1: ] Ġ= ĠCharacter . toLowerCase ( ans [
2023-06-06 13:47:17.749 334:isInGraph              INFO   input_tokens_2: ['ans', '[', 'i', ']']
2023-06-06 13:47:17.750 342:isInGraph              INFO   input_ids_2: 94 98
2023-06-06 13:47:17.750 349:isInGraph              INFO   input_tokens_reverse_2: UpperCase ( ans [
2023-06-06 13:47:17.750 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.750 307:isInGraph              INFO   idx: s792462829_main
2023-06-06 13:47:17.750 308:isInGraph              INFO   label: 0
2023-06-06 13:47:17.750 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 13:47:17.750 317:isInGraph              INFO   input_ids_1: 143 144
2023-06-06 13:47:17.750 324:isInGraph              INFO   input_tokens_reverse_1: Ġk
2023-06-06 13:47:17.751 334:isInGraph              INFO   input_tokens_2: ['min']
2023-06-06 13:47:17.751 342:isInGraph              INFO   input_ids_2: 48 49
2023-06-06 13:47:17.751 349:isInGraph              INFO   input_tokens_reverse_2: ;
2023-06-06 13:47:17.751 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.751 307:isInGraph              INFO   idx: s642799173_main
2023-06-06 13:47:17.751 308:isInGraph              INFO   label: 0
2023-06-06 13:47:17.751 309:isInGraph              INFO   input_tokens_1: ['no', 'One']
2023-06-06 13:47:17.752 317:isInGraph              INFO   input_ids_1: 149 151
2023-06-06 13:47:17.752 324:isInGraph              INFO   input_tokens_reverse_1: Ġif Ġ(
2023-06-06 13:47:17.752 334:isInGraph              INFO   input_tokens_2: ['new', '_BufferedReader', '(', 'new', '_InputStreamReader', '(', 'System', '.', 'in', '))']
2023-06-06 13:47:17.752 342:isInGraph              INFO   input_ids_2: 16 26
2023-06-06 13:47:17.752 349:isInGraph              INFO   input_tokens_reverse_2: Ġbr Ġ= Ġnew ĠBufferedReader ( new ĠInputStreamReader ( System .
2023-06-06 13:47:17.752 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.752 307:isInGraph              INFO   idx: s718489778_main
2023-06-06 13:47:17.752 308:isInGraph              INFO   label: 0
2023-06-06 13:47:17.753 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 13:47:17.753 317:isInGraph              INFO   input_ids_1: 355 356
2023-06-06 13:47:17.753 324:isInGraph              INFO   input_tokens_reverse_1: Ġ0
2023-06-06 13:47:17.753 334:isInGraph              INFO   input_tokens_2: ['1']
2023-06-06 13:47:17.753 342:isInGraph              INFO   input_ids_2: 310 311
2023-06-06 13:47:17.753 349:isInGraph              INFO   input_tokens_reverse_2: i
2023-06-06 13:47:17.753 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.754 307:isInGraph              INFO   idx: s087028355_solve
2023-06-06 13:47:17.754 308:isInGraph              INFO   label: 0
2023-06-06 13:47:17.754 309:isInGraph              INFO   input_tokens_1: ['"', 'OK', '"']
2023-06-06 13:47:17.754 317:isInGraph              INFO   input_ids_1: 56 59
2023-06-06 13:47:17.754 324:isInGraph              INFO   input_tokens_reverse_1: . println ("
2023-06-06 13:47:17.754 334:isInGraph              INFO   input_tokens_2: ['"', 'NG', '"']
2023-06-06 13:47:17.754 342:isInGraph              INFO   input_ids_2: 73 76
2023-06-06 13:47:17.755 349:isInGraph              INFO   input_tokens_reverse_2: . println ("
2023-06-06 13:47:17.755 306:isInGraph              INFO   *** Example ***
2023-06-06 13:47:17.755 307:isInGraph              INFO   idx: s038523957_main
2023-06-06 13:47:17.755 308:isInGraph              INFO   label: 1
2023-06-06 13:47:17.755 309:isInGraph              INFO   input_tokens_1: ['D', '[', 'i', '_-', '_1', ']']
2023-06-06 13:47:17.755 317:isInGraph              INFO   input_ids_1: 251 257
2023-06-06 13:47:17.755 324:isInGraph              INFO   input_tokens_reverse_1: ] Ġ- ĠD [ i Ġ-
2023-06-06 13:47:17.756 334:isInGraph              INFO   input_tokens_2: ['max', '_=', '_sum']
2023-06-06 13:47:17.756 342:isInGraph              INFO   input_ids_2: 230 233
2023-06-06 13:47:17.756 349:isInGraph              INFO   input_tokens_reverse_2: Ġ1 ]; Ġmax
2023-06-06 13:47:17.756 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 13:47:17.777 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 13:47:17.777 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9', posratio=0.5, seed=325, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 13:47:19.474 451:isIngraph              INFO   ***** Running training *****
2023-06-06 13:47:19.474 452:isIngraph              INFO     Num examples = 45555
2023-06-06 13:47:19.474 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 13:47:19.474 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 13:47:19.474 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 13:47:19.474 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 13:47:19.475 465:isIngraph              INFO     Total optimization steps = 712
2023-06-06 13:47:24.342 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:47:24.343 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:47:24.344 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:47:36.763 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_acc = 0.851
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_f1 = 0.862
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_mcc = 0.7114
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_precision = 0.8019
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_recall = 0.9319
2023-06-06 13:47:36.764 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:47:36.769 522:isIngraph              INFO     ********************
2023-06-06 13:47:36.769 523:isIngraph              INFO     Best f1:0.862
2023-06-06 13:47:36.769 524:isIngraph              INFO     ********************
2023-06-06 13:47:36.774 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:47:36.774 544:isIngraph              INFO     ********************
2023-06-06 13:47:36.774 545:isIngraph              INFO     Best MCC:0.7114
2023-06-06 13:47:36.774 546:isIngraph              INFO     ********************
2023-06-06 13:47:36.777 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:47:40.640 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:47:40.640 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:47:40.640 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:47:52.739 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:47:52.739 629:isIngraph              INFO     eval_acc = 0.8813
2023-06-06 13:47:52.739 629:isIngraph              INFO     eval_f1 = 0.8879
2023-06-06 13:47:52.740 629:isIngraph              INFO     eval_mcc = 0.7682
2023-06-06 13:47:52.740 629:isIngraph              INFO     eval_precision = 0.8406
2023-06-06 13:47:52.740 629:isIngraph              INFO     eval_recall = 0.9409
2023-06-06 13:47:52.740 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:47:52.744 522:isIngraph              INFO     ********************
2023-06-06 13:47:52.745 523:isIngraph              INFO     Best f1:0.8879
2023-06-06 13:47:52.745 524:isIngraph              INFO     ********************
2023-06-06 13:47:52.747 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:47:52.747 544:isIngraph              INFO     ********************
2023-06-06 13:47:52.748 545:isIngraph              INFO     Best MCC:0.7682
2023-06-06 13:47:52.748 546:isIngraph              INFO     ********************
2023-06-06 13:47:52.750 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:47:56.762 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:47:56.762 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:47:56.762 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:48:09.389 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_acc = 0.9092
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_f1 = 0.9125
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_mcc = 0.821
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_precision = 0.8798
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_recall = 0.9479
2023-06-06 13:48:09.390 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:48:09.394 522:isIngraph              INFO     ********************
2023-06-06 13:48:09.394 523:isIngraph              INFO     Best f1:0.9125
2023-06-06 13:48:09.394 524:isIngraph              INFO     ********************
2023-06-06 13:48:09.398 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:48:09.398 544:isIngraph              INFO     ********************
2023-06-06 13:48:09.399 545:isIngraph              INFO     Best MCC:0.821
2023-06-06 13:48:09.399 546:isIngraph              INFO     ********************
2023-06-06 13:48:09.401 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:48:13.562 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:48:13.562 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:48:13.562 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:48:26.255 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:48:26.255 629:isIngraph              INFO     eval_acc = 0.9195
2023-06-06 13:48:26.255 629:isIngraph              INFO     eval_f1 = 0.9194
2023-06-06 13:48:26.255 629:isIngraph              INFO     eval_mcc = 0.8391
2023-06-06 13:48:26.255 629:isIngraph              INFO     eval_precision = 0.9197
2023-06-06 13:48:26.256 629:isIngraph              INFO     eval_recall = 0.9192
2023-06-06 13:48:26.256 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:48:26.260 522:isIngraph              INFO     ********************
2023-06-06 13:48:26.260 523:isIngraph              INFO     Best f1:0.9194
2023-06-06 13:48:26.260 524:isIngraph              INFO     ********************
2023-06-06 13:48:26.263 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:48:26.263 544:isIngraph              INFO     ********************
2023-06-06 13:48:26.263 545:isIngraph              INFO     Best MCC:0.8391
2023-06-06 13:48:26.263 546:isIngraph              INFO     ********************
2023-06-06 13:48:26.265 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:48:30.274 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:48:30.274 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:48:30.274 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:48:43.036 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:48:43.036 629:isIngraph              INFO     eval_acc = 0.9284
2023-06-06 13:48:43.036 629:isIngraph              INFO     eval_f1 = 0.9277
2023-06-06 13:48:43.036 629:isIngraph              INFO     eval_mcc = 0.8569
2023-06-06 13:48:43.036 629:isIngraph              INFO     eval_precision = 0.9354
2023-06-06 13:48:43.037 629:isIngraph              INFO     eval_recall = 0.9201
2023-06-06 13:48:43.037 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:48:43.041 522:isIngraph              INFO     ********************
2023-06-06 13:48:43.041 523:isIngraph              INFO     Best f1:0.9277
2023-06-06 13:48:43.041 524:isIngraph              INFO     ********************
2023-06-06 13:48:43.045 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:48:43.045 544:isIngraph              INFO     ********************
2023-06-06 13:48:43.045 545:isIngraph              INFO     Best MCC:0.8569
2023-06-06 13:48:43.045 546:isIngraph              INFO     ********************
2023-06-06 13:48:43.047 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:48:47.132 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:48:47.133 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:48:47.133 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:48:59.782 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:48:59.782 629:isIngraph              INFO     eval_acc = 0.9241
2023-06-06 13:48:59.782 629:isIngraph              INFO     eval_f1 = 0.9219
2023-06-06 13:48:59.783 629:isIngraph              INFO     eval_mcc = 0.8495
2023-06-06 13:48:59.783 629:isIngraph              INFO     eval_precision = 0.9486
2023-06-06 13:48:59.783 629:isIngraph              INFO     eval_recall = 0.8967
2023-06-06 13:48:59.783 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:49:03.786 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:49:03.786 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:49:03.786 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:49:16.428 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_acc = 0.933
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_f1 = 0.9324
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_mcc = 0.866
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_precision = 0.9393
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_recall = 0.9256
2023-06-06 13:49:16.429 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:49:16.434 522:isIngraph              INFO     ********************
2023-06-06 13:49:16.435 523:isIngraph              INFO     Best f1:0.9324
2023-06-06 13:49:16.435 524:isIngraph              INFO     ********************
2023-06-06 13:49:16.438 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:49:16.438 544:isIngraph              INFO     ********************
2023-06-06 13:49:16.438 545:isIngraph              INFO     Best MCC:0.866
2023-06-06 13:49:16.438 546:isIngraph              INFO     ********************
2023-06-06 13:49:16.440 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:49:20.416 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:49:20.416 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:49:20.416 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:49:33.013 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_acc = 0.9352
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_f1 = 0.9353
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_mcc = 0.8705
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_precision = 0.9327
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_recall = 0.938
2023-06-06 13:49:33.014 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:49:33.019 522:isIngraph              INFO     ********************
2023-06-06 13:49:33.019 523:isIngraph              INFO     Best f1:0.9353
2023-06-06 13:49:33.019 524:isIngraph              INFO     ********************
2023-06-06 13:49:33.022 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-f1/model.bin
2023-06-06 13:49:33.022 544:isIngraph              INFO     ********************
2023-06-06 13:49:33.022 545:isIngraph              INFO     Best MCC:0.8705
2023-06-06 13:49:33.022 546:isIngraph              INFO     ********************
2023-06-06 13:49:33.024 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/3/cdg_9/checkpoint-best-mcc/model.bin
2023-06-06 13:49:36.910 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:49:36.910 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:49:36.910 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:49:49.551 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_acc = 0.935
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_f1 = 0.9343
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_mcc = 0.8702
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_precision = 0.9439
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_recall = 0.9249
2023-06-06 13:49:49.552 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:49:53.404 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 13:49:53.405 581:isIngraph              INFO     Num examples = 14589
2023-06-06 13:49:53.405 582:isIngraph              INFO     Batch size = 32
2023-06-06 13:50:06.048 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 13:50:06.048 629:isIngraph              INFO     eval_acc = 0.935
2023-06-06 13:50:06.048 629:isIngraph              INFO     eval_f1 = 0.9353
2023-06-06 13:50:06.048 629:isIngraph              INFO     eval_mcc = 0.8701
2023-06-06 13:50:06.048 629:isIngraph              INFO     eval_precision = 0.9309
2023-06-06 13:50:06.049 629:isIngraph              INFO     eval_recall = 0.9396
2023-06-06 13:50:06.049 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 13:50:06.172 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 13:50:06.172 651:isIngraph              INFO     Num examples = 14327
2023-06-06 13:50:06.172 652:isIngraph              INFO     Batch size = 32
2023-06-06 13:50:18.775 693:isIngraph              INFO   ***** Test results *****
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_acc = 0.9401
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_f1 = 0.9408
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_mcc = 0.8805
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_precision = 0.9293
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_recall = 0.9526
2023-06-06 13:50:18.776 695:isIngraph              INFO     eval_threshold = 0.5
