2023-06-06 17:14:54.628 917:isIngraph              DEBUG  main message
2023-06-06 17:14:54.628 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 17:14:55.729 938:isIngraph              INFO   Load Dataset
2023-06-06 17:15:34.338 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 17:15:34.920 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 17:15:37.894 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 17:15:37.897 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 17:15:38.480 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 17:15:40.845 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 17:15:40.845 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 17:15:41.428 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 17:15:43.321 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 17:15:43.322 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.322 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 17:15:43.322 308:isInGraph              INFO   label: 1
2023-06-06 17:15:43.323 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 17:15:43.323 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 17:15:43.323 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 17:15:43.323 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 17:15:43.323 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 17:15:43.323 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 17:15:43.323 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.323 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 17:15:43.324 308:isInGraph              INFO   label: 0
2023-06-06 17:15:43.324 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 17:15:43.324 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 17:15:43.324 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 17:15:43.324 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 17:15:43.324 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 17:15:43.324 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 17:15:43.324 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.325 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 17:15:43.325 308:isInGraph              INFO   label: 0
2023-06-06 17:15:43.325 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 17:15:43.325 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 17:15:43.325 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 17:15:43.325 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 17:15:43.325 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 17:15:43.326 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 17:15:43.326 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.326 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 17:15:43.326 308:isInGraph              INFO   label: 0
2023-06-06 17:15:43.326 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 17:15:43.326 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 17:15:43.326 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 17:15:43.326 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 17:15:43.327 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 17:15:43.327 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 17:15:43.327 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.327 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 17:15:43.327 308:isInGraph              INFO   label: 0
2023-06-06 17:15:43.327 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 17:15:43.327 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 17:15:43.327 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 17:15:43.328 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 17:15:43.328 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 17:15:43.328 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 17:15:43.328 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.328 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 17:15:43.328 308:isInGraph              INFO   label: 1
2023-06-06 17:15:43.328 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 17:15:43.328 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 17:15:43.328 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 17:15:43.329 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 17:15:43.329 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 17:15:43.329 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 17:15:43.329 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.329 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 17:15:43.329 308:isInGraph              INFO   label: 1
2023-06-06 17:15:43.329 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 17:15:43.330 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 17:15:43.330 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 17:15:43.330 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 17:15:43.330 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 17:15:43.330 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 17:15:43.330 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.330 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 17:15:43.330 308:isInGraph              INFO   label: 1
2023-06-06 17:15:43.331 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 17:15:43.331 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 17:15:43.331 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 17:15:43.331 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 17:15:43.331 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 17:15:43.331 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 17:15:43.331 306:isInGraph              INFO   *** Example ***
2023-06-06 17:15:43.331 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 17:15:43.331 308:isInGraph              INFO   label: 1
2023-06-06 17:15:43.332 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 17:15:43.332 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 17:15:43.332 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 17:15:43.332 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 17:15:43.332 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 17:15:43.332 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 17:15:43.332 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 17:15:43.358 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 17:15:43.358 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12', posratio=0.5, seed=139, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 17:15:44.683 451:isIngraph              INFO   ***** Running training *****
2023-06-06 17:15:44.683 452:isIngraph              INFO     Num examples = 99417
2023-06-06 17:15:44.683 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 17:15:44.683 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 17:15:44.684 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 17:15:44.684 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 17:15:44.684 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 17:15:53.471 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:15:53.471 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:15:53.472 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:16:20.698 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:16:20.698 629:isIngraph              INFO     eval_acc = 0.8778
2023-06-06 17:16:20.698 629:isIngraph              INFO     eval_f1 = 0.8846
2023-06-06 17:16:20.699 629:isIngraph              INFO     eval_mcc = 0.7609
2023-06-06 17:16:20.699 629:isIngraph              INFO     eval_precision = 0.8378
2023-06-06 17:16:20.699 629:isIngraph              INFO     eval_recall = 0.9369
2023-06-06 17:16:20.699 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:16:20.699 522:isIngraph              INFO     ********************
2023-06-06 17:16:20.699 523:isIngraph              INFO     Best f1:0.8846
2023-06-06 17:16:20.699 524:isIngraph              INFO     ********************
2023-06-06 17:16:20.704 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:16:20.704 544:isIngraph              INFO     ********************
2023-06-06 17:16:20.704 545:isIngraph              INFO     Best MCC:0.7609
2023-06-06 17:16:20.704 546:isIngraph              INFO     ********************
2023-06-06 17:16:20.707 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:16:29.004 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:16:29.005 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:16:29.005 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:16:53.580 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:16:53.580 629:isIngraph              INFO     eval_acc = 0.9063
2023-06-06 17:16:53.580 629:isIngraph              INFO     eval_f1 = 0.9125
2023-06-06 17:16:53.580 629:isIngraph              INFO     eval_mcc = 0.8209
2023-06-06 17:16:53.580 629:isIngraph              INFO     eval_precision = 0.8555
2023-06-06 17:16:53.581 629:isIngraph              INFO     eval_recall = 0.9777
2023-06-06 17:16:53.581 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:16:53.581 522:isIngraph              INFO     ********************
2023-06-06 17:16:53.581 523:isIngraph              INFO     Best f1:0.9125
2023-06-06 17:16:53.581 524:isIngraph              INFO     ********************
2023-06-06 17:16:53.585 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:16:53.586 544:isIngraph              INFO     ********************
2023-06-06 17:16:53.586 545:isIngraph              INFO     Best MCC:0.8209
2023-06-06 17:16:53.586 546:isIngraph              INFO     ********************
2023-06-06 17:16:53.589 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:17:01.619 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:17:01.619 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:17:01.619 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:17:25.697 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_acc = 0.9156
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_f1 = 0.9199
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_mcc = 0.836
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_precision = 0.8753
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_recall = 0.9692
2023-06-06 17:17:25.698 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:17:25.698 522:isIngraph              INFO     ********************
2023-06-06 17:17:25.698 523:isIngraph              INFO     Best f1:0.9199
2023-06-06 17:17:25.698 524:isIngraph              INFO     ********************
2023-06-06 17:17:25.702 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:17:25.702 544:isIngraph              INFO     ********************
2023-06-06 17:17:25.702 545:isIngraph              INFO     Best MCC:0.836
2023-06-06 17:17:25.703 546:isIngraph              INFO     ********************
2023-06-06 17:17:25.704 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:17:33.592 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:17:33.593 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:17:33.593 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:17:57.686 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_acc = 0.9197
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_f1 = 0.922
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_mcc = 0.8409
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_precision = 0.8972
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_recall = 0.9481
2023-06-06 17:17:57.687 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:17:57.688 522:isIngraph              INFO     ********************
2023-06-06 17:17:57.688 523:isIngraph              INFO     Best f1:0.922
2023-06-06 17:17:57.688 524:isIngraph              INFO     ********************
2023-06-06 17:17:57.691 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:17:57.691 544:isIngraph              INFO     ********************
2023-06-06 17:17:57.692 545:isIngraph              INFO     Best MCC:0.8409
2023-06-06 17:17:57.692 546:isIngraph              INFO     ********************
2023-06-06 17:17:57.693 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:18:05.940 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:18:05.941 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:18:05.941 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:18:30.539 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_acc = 0.9128
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_f1 = 0.9133
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_mcc = 0.8257
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_precision = 0.9081
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_recall = 0.9185
2023-06-06 17:18:30.540 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:18:38.518 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:18:38.518 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:18:38.518 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:19:02.700 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:19:02.700 629:isIngraph              INFO     eval_acc = 0.9202
2023-06-06 17:19:02.700 629:isIngraph              INFO     eval_f1 = 0.9214
2023-06-06 17:19:02.701 629:isIngraph              INFO     eval_mcc = 0.8408
2023-06-06 17:19:02.701 629:isIngraph              INFO     eval_precision = 0.9078
2023-06-06 17:19:02.701 629:isIngraph              INFO     eval_recall = 0.9354
2023-06-06 17:19:02.701 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:19:10.576 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:19:10.577 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:19:10.577 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:19:34.540 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_acc = 0.9233
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_f1 = 0.9252
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_mcc = 0.8477
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_precision = 0.9037
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_recall = 0.9477
2023-06-06 17:19:34.540 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:19:34.541 522:isIngraph              INFO     ********************
2023-06-06 17:19:34.541 523:isIngraph              INFO     Best f1:0.9252
2023-06-06 17:19:34.541 524:isIngraph              INFO     ********************
2023-06-06 17:19:34.544 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:19:34.544 544:isIngraph              INFO     ********************
2023-06-06 17:19:34.545 545:isIngraph              INFO     Best MCC:0.8477
2023-06-06 17:19:34.545 546:isIngraph              INFO     ********************
2023-06-06 17:19:34.546 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:19:42.365 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:19:42.365 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:19:42.365 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:20:10.655 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:20:10.655 629:isIngraph              INFO     eval_acc = 0.9289
2023-06-06 17:20:10.656 629:isIngraph              INFO     eval_f1 = 0.9315
2023-06-06 17:20:10.656 629:isIngraph              INFO     eval_mcc = 0.8602
2023-06-06 17:20:10.656 629:isIngraph              INFO     eval_precision = 0.8995
2023-06-06 17:20:10.656 629:isIngraph              INFO     eval_recall = 0.9657
2023-06-06 17:20:10.656 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:20:10.656 522:isIngraph              INFO     ********************
2023-06-06 17:20:10.656 523:isIngraph              INFO     Best f1:0.9315
2023-06-06 17:20:10.656 524:isIngraph              INFO     ********************
2023-06-06 17:20:10.659 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:20:10.659 544:isIngraph              INFO     ********************
2023-06-06 17:20:10.659 545:isIngraph              INFO     Best MCC:0.8602
2023-06-06 17:20:10.660 546:isIngraph              INFO     ********************
2023-06-06 17:20:10.661 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:20:19.609 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:20:19.609 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:20:19.609 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:20:48.789 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_acc = 0.9263
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_f1 = 0.9278
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_mcc = 0.8533
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_precision = 0.91
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_recall = 0.9463
2023-06-06 17:20:48.790 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:20:57.633 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 17:20:57.633 581:isIngraph              INFO     Num examples = 33196
2023-06-06 17:20:57.633 582:isIngraph              INFO     Batch size = 32
2023-06-06 17:21:26.117 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 17:21:26.117 629:isIngraph              INFO     eval_acc = 0.9303
2023-06-06 17:21:26.117 629:isIngraph              INFO     eval_f1 = 0.9325
2023-06-06 17:21:26.117 629:isIngraph              INFO     eval_mcc = 0.8625
2023-06-06 17:21:26.117 629:isIngraph              INFO     eval_precision = 0.9038
2023-06-06 17:21:26.118 629:isIngraph              INFO     eval_recall = 0.9631
2023-06-06 17:21:26.118 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 17:21:26.118 522:isIngraph              INFO     ********************
2023-06-06 17:21:26.118 523:isIngraph              INFO     Best f1:0.9325
2023-06-06 17:21:26.118 524:isIngraph              INFO     ********************
2023-06-06 17:21:26.124 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-f1/model.bin
2023-06-06 17:21:26.125 544:isIngraph              INFO     ********************
2023-06-06 17:21:26.125 545:isIngraph              INFO     Best MCC:0.8625
2023-06-06 17:21:26.125 546:isIngraph              INFO     ********************
2023-06-06 17:21:26.129 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/ddg_12/checkpoint-best-mcc/model.bin
2023-06-06 17:21:26.395 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 17:21:26.395 651:isIngraph              INFO     Num examples = 32385
2023-06-06 17:21:26.396 652:isIngraph              INFO     Batch size = 32
2023-06-06 17:21:50.523 693:isIngraph              INFO   ***** Test results *****
2023-06-06 17:21:50.523 695:isIngraph              INFO     eval_acc = 0.9197
2023-06-06 17:21:50.523 695:isIngraph              INFO     eval_f1 = 0.9217
2023-06-06 17:21:50.524 695:isIngraph              INFO     eval_mcc = 0.8405
2023-06-06 17:21:50.524 695:isIngraph              INFO     eval_precision = 0.8988
2023-06-06 17:21:50.524 695:isIngraph              INFO     eval_recall = 0.9459
2023-06-06 17:21:50.524 695:isIngraph              INFO     eval_threshold = 0.5
