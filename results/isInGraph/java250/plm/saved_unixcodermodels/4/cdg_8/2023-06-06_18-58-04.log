2023-06-06 18:58:04.732 917:isIngraph              DEBUG  main message
2023-06-06 18:58:04.732 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 18:58:05.849 938:isIngraph              INFO   Load Dataset
2023-06-06 18:58:44.449 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:58:45.064 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-06 18:58:46.475 301:isInGraph              INFO   Labels Counter({0: 22806, 1: 22749})
2023-06-06 18:58:46.475 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:58:47.044 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-06 18:58:47.662 301:isInGraph              INFO   Labels Counter({0: 7301, 1: 7288})
2023-06-06 18:58:47.662 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:58:48.231 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-06 18:58:49.016 301:isInGraph              INFO   Labels Counter({0: 7168, 1: 7159})
2023-06-06 18:58:49.016 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.016 307:isInGraph              INFO   idx: s398466888_main
2023-06-06 18:58:49.016 308:isInGraph              INFO   label: 1
2023-06-06 18:58:49.017 309:isInGraph              INFO   input_tokens_1: ['out']
2023-06-06 18:58:49.017 317:isInGraph              INFO   input_ids_1: 80 81
2023-06-06 18:58:49.017 324:isInGraph              INFO   input_tokens_reverse_1: ĠSystem
2023-06-06 18:58:49.017 334:isInGraph              INFO   input_tokens_2: ['System', '.', 'out', '.', 'println', '("', 'No', '")']
2023-06-06 18:58:49.017 342:isInGraph              INFO   input_ids_2: 89 97
2023-06-06 18:58:49.017 349:isInGraph              INFO   input_tokens_reverse_2: Ġelse Ġ{ ĠSystem . out . println ("
2023-06-06 18:58:49.018 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.018 307:isInGraph              INFO   idx: s037525918_main
2023-06-06 18:58:49.018 308:isInGraph              INFO   label: 1
2023-06-06 18:58:49.018 309:isInGraph              INFO   input_tokens_1: ['System', '.', 'out', '.', 'println', '(', 'a', ')']
2023-06-06 18:58:49.018 317:isInGraph              INFO   input_ids_1: 67 75
2023-06-06 18:58:49.018 324:isInGraph              INFO   input_tokens_reverse_1: ) Ġ{ ĠSystem . out . println (
2023-06-06 18:58:49.018 334:isInGraph              INFO   input_tokens_2: ['out']
2023-06-06 18:58:49.019 342:isInGraph              INFO   input_ids_2: 69 70
2023-06-06 18:58:49.019 349:isInGraph              INFO   input_tokens_reverse_2: ĠSystem
2023-06-06 18:58:49.019 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.019 307:isInGraph              INFO   idx: s279088077_solve
2023-06-06 18:58:49.019 308:isInGraph              INFO   label: 1
2023-06-06 18:58:49.019 309:isInGraph              INFO   input_tokens_1: ['b', '_-', '_a']
2023-06-06 18:58:49.019 317:isInGraph              INFO   input_ids_1: 103 106
2023-06-06 18:58:49.019 324:isInGraph              INFO   input_tokens_reverse_1: First ( b
2023-06-06 18:58:49.020 334:isInGraph              INFO   input_tokens_2: ['stk', '.', 'poll', 'First', '()']
2023-06-06 18:58:49.020 342:isInGraph              INFO   input_ids_2: 47 52
2023-06-06 18:58:49.020 349:isInGraph              INFO   input_tokens_reverse_2: Ġa Ġ= Ġstk . poll
2023-06-06 18:58:49.020 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.020 307:isInGraph              INFO   idx: s217311553_main
2023-06-06 18:58:49.020 308:isInGraph              INFO   label: 1
2023-06-06 18:58:49.020 309:isInGraph              INFO   input_tokens_1: ['Character', '.', 'toLowerCase', '(', 'ans', '[', 'i', '])']
2023-06-06 18:58:49.020 317:isInGraph              INFO   input_ids_1: 104 112
2023-06-06 18:58:49.021 324:isInGraph              INFO   input_tokens_reverse_1: ] Ġ= ĠCharacter . toLowerCase ( ans [
2023-06-06 18:58:49.021 334:isInGraph              INFO   input_tokens_2: ['ans', '[', 'i', ']']
2023-06-06 18:58:49.021 342:isInGraph              INFO   input_ids_2: 94 98
2023-06-06 18:58:49.021 349:isInGraph              INFO   input_tokens_reverse_2: UpperCase ( ans [
2023-06-06 18:58:49.021 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.021 307:isInGraph              INFO   idx: s792462829_main
2023-06-06 18:58:49.021 308:isInGraph              INFO   label: 0
2023-06-06 18:58:49.021 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 18:58:49.022 317:isInGraph              INFO   input_ids_1: 143 144
2023-06-06 18:58:49.022 324:isInGraph              INFO   input_tokens_reverse_1: Ġk
2023-06-06 18:58:49.022 334:isInGraph              INFO   input_tokens_2: ['min']
2023-06-06 18:58:49.022 342:isInGraph              INFO   input_ids_2: 48 49
2023-06-06 18:58:49.022 349:isInGraph              INFO   input_tokens_reverse_2: ;
2023-06-06 18:58:49.022 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.022 307:isInGraph              INFO   idx: s642799173_main
2023-06-06 18:58:49.022 308:isInGraph              INFO   label: 0
2023-06-06 18:58:49.022 309:isInGraph              INFO   input_tokens_1: ['no', 'One']
2023-06-06 18:58:49.023 317:isInGraph              INFO   input_ids_1: 149 151
2023-06-06 18:58:49.023 324:isInGraph              INFO   input_tokens_reverse_1: Ġif Ġ(
2023-06-06 18:58:49.023 334:isInGraph              INFO   input_tokens_2: ['new', '_BufferedReader', '(', 'new', '_InputStreamReader', '(', 'System', '.', 'in', '))']
2023-06-06 18:58:49.023 342:isInGraph              INFO   input_ids_2: 16 26
2023-06-06 18:58:49.023 349:isInGraph              INFO   input_tokens_reverse_2: Ġbr Ġ= Ġnew ĠBufferedReader ( new ĠInputStreamReader ( System .
2023-06-06 18:58:49.023 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.023 307:isInGraph              INFO   idx: s718489778_main
2023-06-06 18:58:49.023 308:isInGraph              INFO   label: 0
2023-06-06 18:58:49.024 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 18:58:49.024 317:isInGraph              INFO   input_ids_1: 355 356
2023-06-06 18:58:49.024 324:isInGraph              INFO   input_tokens_reverse_1: Ġ0
2023-06-06 18:58:49.024 334:isInGraph              INFO   input_tokens_2: ['1']
2023-06-06 18:58:49.024 342:isInGraph              INFO   input_ids_2: 310 311
2023-06-06 18:58:49.024 349:isInGraph              INFO   input_tokens_reverse_2: i
2023-06-06 18:58:49.024 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.024 307:isInGraph              INFO   idx: s087028355_solve
2023-06-06 18:58:49.024 308:isInGraph              INFO   label: 0
2023-06-06 18:58:49.025 309:isInGraph              INFO   input_tokens_1: ['"', 'OK', '"']
2023-06-06 18:58:49.025 317:isInGraph              INFO   input_ids_1: 56 59
2023-06-06 18:58:49.025 324:isInGraph              INFO   input_tokens_reverse_1: . println ("
2023-06-06 18:58:49.025 334:isInGraph              INFO   input_tokens_2: ['"', 'NG', '"']
2023-06-06 18:58:49.025 342:isInGraph              INFO   input_ids_2: 73 76
2023-06-06 18:58:49.025 349:isInGraph              INFO   input_tokens_reverse_2: . println ("
2023-06-06 18:58:49.025 306:isInGraph              INFO   *** Example ***
2023-06-06 18:58:49.025 307:isInGraph              INFO   idx: s038523957_main
2023-06-06 18:58:49.026 308:isInGraph              INFO   label: 1
2023-06-06 18:58:49.026 309:isInGraph              INFO   input_tokens_1: ['D', '[', 'i', '_-', '_1', ']']
2023-06-06 18:58:49.026 317:isInGraph              INFO   input_ids_1: 251 257
2023-06-06 18:58:49.026 324:isInGraph              INFO   input_tokens_reverse_1: ] Ġ- ĠD [ i Ġ-
2023-06-06 18:58:49.026 334:isInGraph              INFO   input_tokens_2: ['max', '_=', '_sum']
2023-06-06 18:58:49.026 342:isInGraph              INFO   input_ids_2: 230 233
2023-06-06 18:58:49.026 349:isInGraph              INFO   input_tokens_reverse_2: Ġ1 ]; Ġmax
2023-06-06 18:58:49.026 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 18:58:49.050 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 18:58:49.050 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8', posratio=0.5, seed=139, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 18:58:50.361 451:isIngraph              INFO   ***** Running training *****
2023-06-06 18:58:50.361 452:isIngraph              INFO     Num examples = 45555
2023-06-06 18:58:50.361 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 18:58:50.361 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 18:58:50.361 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 18:58:50.361 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 18:58:50.361 465:isIngraph              INFO     Total optimization steps = 712
2023-06-06 18:58:54.522 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:58:54.522 581:isIngraph              INFO     Num examples = 14589
2023-06-06 18:58:54.522 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:59:05.710 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:59:05.710 629:isIngraph              INFO     eval_acc = 0.8528
2023-06-06 18:59:05.710 629:isIngraph              INFO     eval_f1 = 0.857
2023-06-06 18:59:05.710 629:isIngraph              INFO     eval_mcc = 0.707
2023-06-06 18:59:05.710 629:isIngraph              INFO     eval_precision = 0.8325
2023-06-06 18:59:05.711 629:isIngraph              INFO     eval_recall = 0.8831
2023-06-06 18:59:05.711 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:59:05.715 522:isIngraph              INFO     ********************
2023-06-06 18:59:05.715 523:isIngraph              INFO     Best f1:0.857
2023-06-06 18:59:05.715 524:isIngraph              INFO     ********************
2023-06-06 18:59:05.720 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 18:59:05.720 544:isIngraph              INFO     ********************
2023-06-06 18:59:05.720 545:isIngraph              INFO     Best MCC:0.707
2023-06-06 18:59:05.720 546:isIngraph              INFO     ********************
2023-06-06 18:59:05.723 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 18:59:09.309 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:59:09.309 581:isIngraph              INFO     Num examples = 14589
2023-06-06 18:59:09.309 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:59:19.900 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:59:19.900 629:isIngraph              INFO     eval_acc = 0.9011
2023-06-06 18:59:19.900 629:isIngraph              INFO     eval_f1 = 0.9047
2023-06-06 18:59:19.900 629:isIngraph              INFO     eval_mcc = 0.8047
2023-06-06 18:59:19.901 629:isIngraph              INFO     eval_precision = 0.8718
2023-06-06 18:59:19.901 629:isIngraph              INFO     eval_recall = 0.9403
2023-06-06 18:59:19.901 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:59:19.904 522:isIngraph              INFO     ********************
2023-06-06 18:59:19.905 523:isIngraph              INFO     Best f1:0.9047
2023-06-06 18:59:19.905 524:isIngraph              INFO     ********************
2023-06-06 18:59:19.907 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 18:59:19.907 544:isIngraph              INFO     ********************
2023-06-06 18:59:19.907 545:isIngraph              INFO     Best MCC:0.8047
2023-06-06 18:59:19.908 546:isIngraph              INFO     ********************
2023-06-06 18:59:19.910 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 18:59:23.504 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:59:23.504 581:isIngraph              INFO     Num examples = 14589
2023-06-06 18:59:23.504 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:59:34.259 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:59:34.259 629:isIngraph              INFO     eval_acc = 0.9249
2023-06-06 18:59:34.260 629:isIngraph              INFO     eval_f1 = 0.9246
2023-06-06 18:59:34.260 629:isIngraph              INFO     eval_mcc = 0.8499
2023-06-06 18:59:34.260 629:isIngraph              INFO     eval_precision = 0.9279
2023-06-06 18:59:34.260 629:isIngraph              INFO     eval_recall = 0.9214
2023-06-06 18:59:34.260 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:59:34.264 522:isIngraph              INFO     ********************
2023-06-06 18:59:34.264 523:isIngraph              INFO     Best f1:0.9246
2023-06-06 18:59:34.264 524:isIngraph              INFO     ********************
2023-06-06 18:59:34.267 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 18:59:34.267 544:isIngraph              INFO     ********************
2023-06-06 18:59:34.267 545:isIngraph              INFO     Best MCC:0.8499
2023-06-06 18:59:34.267 546:isIngraph              INFO     ********************
2023-06-06 18:59:34.270 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 18:59:37.876 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:59:37.876 581:isIngraph              INFO     Num examples = 14589
2023-06-06 18:59:37.877 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:59:48.589 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:59:48.589 629:isIngraph              INFO     eval_acc = 0.9319
2023-06-06 18:59:48.589 629:isIngraph              INFO     eval_f1 = 0.9314
2023-06-06 18:59:48.590 629:isIngraph              INFO     eval_mcc = 0.8638
2023-06-06 18:59:48.590 629:isIngraph              INFO     eval_precision = 0.9372
2023-06-06 18:59:48.590 629:isIngraph              INFO     eval_recall = 0.9256
2023-06-06 18:59:48.590 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:59:48.594 522:isIngraph              INFO     ********************
2023-06-06 18:59:48.594 523:isIngraph              INFO     Best f1:0.9314
2023-06-06 18:59:48.594 524:isIngraph              INFO     ********************
2023-06-06 18:59:48.598 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 18:59:48.598 544:isIngraph              INFO     ********************
2023-06-06 18:59:48.598 545:isIngraph              INFO     Best MCC:0.8638
2023-06-06 18:59:48.598 546:isIngraph              INFO     ********************
2023-06-06 18:59:48.601 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 18:59:52.230 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:59:52.231 581:isIngraph              INFO     Num examples = 14589
2023-06-06 18:59:52.231 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:00:02.946 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:00:02.946 629:isIngraph              INFO     eval_acc = 0.9331
2023-06-06 19:00:02.947 629:isIngraph              INFO     eval_f1 = 0.934
2023-06-06 19:00:02.947 629:isIngraph              INFO     eval_mcc = 0.8665
2023-06-06 19:00:02.947 629:isIngraph              INFO     eval_precision = 0.9212
2023-06-06 19:00:02.947 629:isIngraph              INFO     eval_recall = 0.947
2023-06-06 19:00:02.947 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:00:02.951 522:isIngraph              INFO     ********************
2023-06-06 19:00:02.951 523:isIngraph              INFO     Best f1:0.934
2023-06-06 19:00:02.951 524:isIngraph              INFO     ********************
2023-06-06 19:00:02.954 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 19:00:02.954 544:isIngraph              INFO     ********************
2023-06-06 19:00:02.954 545:isIngraph              INFO     Best MCC:0.8665
2023-06-06 19:00:02.954 546:isIngraph              INFO     ********************
2023-06-06 19:00:02.956 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 19:00:06.570 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 19:00:06.570 581:isIngraph              INFO     Num examples = 14589
2023-06-06 19:00:06.570 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:00:17.270 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:00:17.270 629:isIngraph              INFO     eval_acc = 0.9345
2023-06-06 19:00:17.271 629:isIngraph              INFO     eval_f1 = 0.9335
2023-06-06 19:00:17.271 629:isIngraph              INFO     eval_mcc = 0.8693
2023-06-06 19:00:17.271 629:isIngraph              INFO     eval_precision = 0.9464
2023-06-06 19:00:17.271 629:isIngraph              INFO     eval_recall = 0.921
2023-06-06 19:00:17.271 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:00:17.275 544:isIngraph              INFO     ********************
2023-06-06 19:00:17.275 545:isIngraph              INFO     Best MCC:0.8693
2023-06-06 19:00:17.275 546:isIngraph              INFO     ********************
2023-06-06 19:00:17.278 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 19:00:20.821 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 19:00:20.821 581:isIngraph              INFO     Num examples = 14589
2023-06-06 19:00:20.822 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:00:31.642 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:00:31.642 629:isIngraph              INFO     eval_acc = 0.9395
2023-06-06 19:00:31.642 629:isIngraph              INFO     eval_f1 = 0.9399
2023-06-06 19:00:31.643 629:isIngraph              INFO     eval_mcc = 0.8792
2023-06-06 19:00:31.643 629:isIngraph              INFO     eval_precision = 0.9334
2023-06-06 19:00:31.643 629:isIngraph              INFO     eval_recall = 0.9465
2023-06-06 19:00:31.643 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:00:31.647 522:isIngraph              INFO     ********************
2023-06-06 19:00:31.647 523:isIngraph              INFO     Best f1:0.9399
2023-06-06 19:00:31.647 524:isIngraph              INFO     ********************
2023-06-06 19:00:31.649 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 19:00:31.649 544:isIngraph              INFO     ********************
2023-06-06 19:00:31.650 545:isIngraph              INFO     Best MCC:0.8792
2023-06-06 19:00:31.650 546:isIngraph              INFO     ********************
2023-06-06 19:00:31.652 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 19:00:35.221 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 19:00:35.221 581:isIngraph              INFO     Num examples = 14589
2023-06-06 19:00:35.221 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:00:45.971 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:00:45.971 629:isIngraph              INFO     eval_acc = 0.9398
2023-06-06 19:00:45.971 629:isIngraph              INFO     eval_f1 = 0.9395
2023-06-06 19:00:45.972 629:isIngraph              INFO     eval_mcc = 0.8797
2023-06-06 19:00:45.972 629:isIngraph              INFO     eval_precision = 0.9429
2023-06-06 19:00:45.972 629:isIngraph              INFO     eval_recall = 0.9362
2023-06-06 19:00:45.972 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:00:45.976 544:isIngraph              INFO     ********************
2023-06-06 19:00:45.976 545:isIngraph              INFO     Best MCC:0.8797
2023-06-06 19:00:45.976 546:isIngraph              INFO     ********************
2023-06-06 19:00:45.979 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 19:00:49.526 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 19:00:49.526 581:isIngraph              INFO     Num examples = 14589
2023-06-06 19:00:49.527 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:01:00.257 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_acc = 0.9424
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_f1 = 0.9427
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_mcc = 0.8848
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_precision = 0.9357
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_recall = 0.9499
2023-06-06 19:01:00.258 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:01:00.262 522:isIngraph              INFO     ********************
2023-06-06 19:01:00.262 523:isIngraph              INFO     Best f1:0.9427
2023-06-06 19:01:00.262 524:isIngraph              INFO     ********************
2023-06-06 19:01:00.266 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-f1/model.bin
2023-06-06 19:01:00.266 544:isIngraph              INFO     ********************
2023-06-06 19:01:00.266 545:isIngraph              INFO     Best MCC:0.8848
2023-06-06 19:01:00.266 546:isIngraph              INFO     ********************
2023-06-06 19:01:00.268 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/plm/saved_unixcodermodels/4/cdg_8/checkpoint-best-mcc/model.bin
2023-06-06 19:01:03.795 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 19:01:03.795 581:isIngraph              INFO     Num examples = 14589
2023-06-06 19:01:03.795 582:isIngraph              INFO     Batch size = 32
2023-06-06 19:01:16.034 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 19:01:16.034 629:isIngraph              INFO     eval_acc = 0.942
2023-06-06 19:01:16.034 629:isIngraph              INFO     eval_f1 = 0.9421
2023-06-06 19:01:16.035 629:isIngraph              INFO     eval_mcc = 0.884
2023-06-06 19:01:16.035 629:isIngraph              INFO     eval_precision = 0.9404
2023-06-06 19:01:16.035 629:isIngraph              INFO     eval_recall = 0.9437
2023-06-06 19:01:16.035 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 19:01:16.160 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 19:01:16.160 651:isIngraph              INFO     Num examples = 14327
2023-06-06 19:01:16.160 652:isIngraph              INFO     Batch size = 32
2023-06-06 19:01:26.702 693:isIngraph              INFO   ***** Test results *****
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_acc = 0.943
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_f1 = 0.9437
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_mcc = 0.8864
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_precision = 0.932
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_recall = 0.9557
2023-06-06 19:01:26.703 695:isIngraph              INFO     eval_threshold = 0.5
