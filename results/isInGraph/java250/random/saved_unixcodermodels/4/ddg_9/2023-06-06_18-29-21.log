2023-06-06 18:29:21.597 917:isIngraph              DEBUG  main message
2023-06-06 18:29:21.597 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 18:29:22.270 938:isIngraph              INFO   Load Dataset
2023-06-06 18:30:00.252 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:30:00.871 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 18:30:03.768 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 18:30:03.770 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:30:04.348 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 18:30:06.666 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 18:30:06.666 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 18:30:07.241 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 18:30:09.096 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 18:30:09.097 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.097 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 18:30:09.097 308:isInGraph              INFO   label: 1
2023-06-06 18:30:09.097 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 18:30:09.097 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 18:30:09.097 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 18:30:09.098 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 18:30:09.098 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 18:30:09.098 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 18:30:09.098 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.098 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 18:30:09.098 308:isInGraph              INFO   label: 0
2023-06-06 18:30:09.098 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 18:30:09.098 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 18:30:09.099 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 18:30:09.099 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 18:30:09.099 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 18:30:09.099 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 18:30:09.099 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.099 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 18:30:09.099 308:isInGraph              INFO   label: 0
2023-06-06 18:30:09.099 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 18:30:09.100 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 18:30:09.100 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 18:30:09.100 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 18:30:09.100 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 18:30:09.100 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 18:30:09.100 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.100 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 18:30:09.100 308:isInGraph              INFO   label: 0
2023-06-06 18:30:09.101 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 18:30:09.101 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 18:30:09.101 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 18:30:09.101 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 18:30:09.101 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 18:30:09.101 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 18:30:09.101 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.101 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 18:30:09.101 308:isInGraph              INFO   label: 0
2023-06-06 18:30:09.102 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 18:30:09.102 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 18:30:09.102 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 18:30:09.102 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 18:30:09.102 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 18:30:09.102 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 18:30:09.102 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.102 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 18:30:09.103 308:isInGraph              INFO   label: 1
2023-06-06 18:30:09.103 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 18:30:09.103 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 18:30:09.103 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 18:30:09.103 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 18:30:09.103 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 18:30:09.103 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 18:30:09.103 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.104 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 18:30:09.104 308:isInGraph              INFO   label: 1
2023-06-06 18:30:09.104 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 18:30:09.104 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 18:30:09.104 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 18:30:09.104 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 18:30:09.104 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 18:30:09.105 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 18:30:09.105 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.105 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 18:30:09.105 308:isInGraph              INFO   label: 1
2023-06-06 18:30:09.105 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 18:30:09.105 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 18:30:09.105 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 18:30:09.105 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 18:30:09.106 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 18:30:09.106 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 18:30:09.106 306:isInGraph              INFO   *** Example ***
2023-06-06 18:30:09.106 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 18:30:09.106 308:isInGraph              INFO   label: 1
2023-06-06 18:30:09.106 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 18:30:09.106 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 18:30:09.106 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 18:30:09.107 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 18:30:09.107 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 18:30:09.107 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 18:30:09.107 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 18:30:09.130 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 18:30:09.130 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9', posratio=0.5, seed=139, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 18:30:10.450 451:isIngraph              INFO   ***** Running training *****
2023-06-06 18:30:10.450 452:isIngraph              INFO     Num examples = 99417
2023-06-06 18:30:10.450 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 18:30:10.450 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 18:30:10.451 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 18:30:10.451 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 18:30:10.451 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 18:30:18.887 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:30:18.888 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:30:18.888 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:30:44.247 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:30:44.247 629:isIngraph              INFO     eval_acc = 0.8101
2023-06-06 18:30:44.248 629:isIngraph              INFO     eval_f1 = 0.8066
2023-06-06 18:30:44.248 629:isIngraph              INFO     eval_mcc = 0.6205
2023-06-06 18:30:44.248 629:isIngraph              INFO     eval_precision = 0.8216
2023-06-06 18:30:44.248 629:isIngraph              INFO     eval_recall = 0.7921
2023-06-06 18:30:44.248 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:30:44.248 522:isIngraph              INFO     ********************
2023-06-06 18:30:44.248 523:isIngraph              INFO     Best f1:0.8066
2023-06-06 18:30:44.249 524:isIngraph              INFO     ********************
2023-06-06 18:30:44.253 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:30:44.253 544:isIngraph              INFO     ********************
2023-06-06 18:30:44.253 545:isIngraph              INFO     Best MCC:0.6205
2023-06-06 18:30:44.253 546:isIngraph              INFO     ********************
2023-06-06 18:30:44.256 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:30:52.328 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:30:52.329 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:30:52.329 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:31:16.977 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:31:16.977 629:isIngraph              INFO     eval_acc = 0.8753
2023-06-06 18:31:16.977 629:isIngraph              INFO     eval_f1 = 0.8824
2023-06-06 18:31:16.978 629:isIngraph              INFO     eval_mcc = 0.7561
2023-06-06 18:31:16.978 629:isIngraph              INFO     eval_precision = 0.835
2023-06-06 18:31:16.978 629:isIngraph              INFO     eval_recall = 0.9354
2023-06-06 18:31:16.978 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:31:16.978 522:isIngraph              INFO     ********************
2023-06-06 18:31:16.978 523:isIngraph              INFO     Best f1:0.8824
2023-06-06 18:31:16.978 524:isIngraph              INFO     ********************
2023-06-06 18:31:16.983 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:31:16.983 544:isIngraph              INFO     ********************
2023-06-06 18:31:16.983 545:isIngraph              INFO     Best MCC:0.7561
2023-06-06 18:31:16.983 546:isIngraph              INFO     ********************
2023-06-06 18:31:16.986 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:31:25.125 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:31:25.126 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:31:25.126 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:31:49.439 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_acc = 0.8958
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_f1 = 0.8938
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_mcc = 0.7921
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_precision = 0.9107
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_recall = 0.8776
2023-06-06 18:31:49.440 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:31:49.440 522:isIngraph              INFO     ********************
2023-06-06 18:31:49.441 523:isIngraph              INFO     Best f1:0.8938
2023-06-06 18:31:49.441 524:isIngraph              INFO     ********************
2023-06-06 18:31:49.444 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:31:49.444 544:isIngraph              INFO     ********************
2023-06-06 18:31:49.444 545:isIngraph              INFO     Best MCC:0.7921
2023-06-06 18:31:49.445 546:isIngraph              INFO     ********************
2023-06-06 18:31:49.446 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:31:57.173 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:31:57.173 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:31:57.173 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:32:24.265 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_acc = 0.9013
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_f1 = 0.8985
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_mcc = 0.804
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_precision = 0.9252
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_recall = 0.8732
2023-06-06 18:32:24.266 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:32:24.266 522:isIngraph              INFO     ********************
2023-06-06 18:32:24.266 523:isIngraph              INFO     Best f1:0.8985
2023-06-06 18:32:24.267 524:isIngraph              INFO     ********************
2023-06-06 18:32:24.271 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:32:24.272 544:isIngraph              INFO     ********************
2023-06-06 18:32:24.272 545:isIngraph              INFO     Best MCC:0.804
2023-06-06 18:32:24.272 546:isIngraph              INFO     ********************
2023-06-06 18:32:24.274 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:32:33.319 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:32:33.319 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:32:33.319 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:33:02.443 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_acc = 0.912
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_f1 = 0.9136
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_mcc = 0.8245
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_precision = 0.8974
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_recall = 0.9303
2023-06-06 18:33:02.444 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:33:02.445 522:isIngraph              INFO     ********************
2023-06-06 18:33:02.445 523:isIngraph              INFO     Best f1:0.9136
2023-06-06 18:33:02.445 524:isIngraph              INFO     ********************
2023-06-06 18:33:02.449 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:33:02.449 544:isIngraph              INFO     ********************
2023-06-06 18:33:02.449 545:isIngraph              INFO     Best MCC:0.8245
2023-06-06 18:33:02.449 546:isIngraph              INFO     ********************
2023-06-06 18:33:02.451 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:33:11.220 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:33:11.220 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:33:11.220 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:33:36.766 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_acc = 0.9125
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_f1 = 0.9155
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_mcc = 0.8271
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_precision = 0.885
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_recall = 0.9481
2023-06-06 18:33:36.768 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:33:36.768 522:isIngraph              INFO     ********************
2023-06-06 18:33:36.768 523:isIngraph              INFO     Best f1:0.9155
2023-06-06 18:33:36.769 524:isIngraph              INFO     ********************
2023-06-06 18:33:36.773 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:33:36.773 544:isIngraph              INFO     ********************
2023-06-06 18:33:36.773 545:isIngraph              INFO     Best MCC:0.8271
2023-06-06 18:33:36.773 546:isIngraph              INFO     ********************
2023-06-06 18:33:36.775 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:33:44.939 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:33:44.940 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:33:44.940 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:34:10.158 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:34:10.158 629:isIngraph              INFO     eval_acc = 0.9179
2023-06-06 18:34:10.158 629:isIngraph              INFO     eval_f1 = 0.9189
2023-06-06 18:34:10.159 629:isIngraph              INFO     eval_mcc = 0.836
2023-06-06 18:34:10.159 629:isIngraph              INFO     eval_precision = 0.9074
2023-06-06 18:34:10.159 629:isIngraph              INFO     eval_recall = 0.9308
2023-06-06 18:34:10.159 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:34:10.159 522:isIngraph              INFO     ********************
2023-06-06 18:34:10.159 523:isIngraph              INFO     Best f1:0.9189
2023-06-06 18:34:10.159 524:isIngraph              INFO     ********************
2023-06-06 18:34:10.163 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:34:10.163 544:isIngraph              INFO     ********************
2023-06-06 18:34:10.163 545:isIngraph              INFO     Best MCC:0.836
2023-06-06 18:34:10.163 546:isIngraph              INFO     ********************
2023-06-06 18:34:10.165 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:34:19.028 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:34:19.028 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:34:19.028 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:34:47.721 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_acc = 0.9165
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_f1 = 0.9191
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_mcc = 0.8347
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_precision = 0.8914
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_recall = 0.9485
2023-06-06 18:34:47.722 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:34:47.723 522:isIngraph              INFO     ********************
2023-06-06 18:34:47.723 523:isIngraph              INFO     Best f1:0.9191
2023-06-06 18:34:47.723 524:isIngraph              INFO     ********************
2023-06-06 18:34:47.726 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:34:56.241 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:34:56.241 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:34:56.241 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:35:22.984 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_acc = 0.9194
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_f1 = 0.9192
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_mcc = 0.8388
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_precision = 0.9214
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_recall = 0.9171
2023-06-06 18:35:22.985 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:35:22.985 522:isIngraph              INFO     ********************
2023-06-06 18:35:22.985 523:isIngraph              INFO     Best f1:0.9192
2023-06-06 18:35:22.985 524:isIngraph              INFO     ********************
2023-06-06 18:35:22.989 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:35:22.990 544:isIngraph              INFO     ********************
2023-06-06 18:35:22.990 545:isIngraph              INFO     Best MCC:0.8388
2023-06-06 18:35:22.990 546:isIngraph              INFO     ********************
2023-06-06 18:35:22.992 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:35:30.750 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 18:35:30.750 581:isIngraph              INFO     Num examples = 33196
2023-06-06 18:35:30.750 582:isIngraph              INFO     Batch size = 32
2023-06-06 18:35:55.229 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 18:35:55.229 629:isIngraph              INFO     eval_acc = 0.9207
2023-06-06 18:35:55.230 629:isIngraph              INFO     eval_f1 = 0.9219
2023-06-06 18:35:55.230 629:isIngraph              INFO     eval_mcc = 0.8419
2023-06-06 18:35:55.230 629:isIngraph              INFO     eval_precision = 0.9085
2023-06-06 18:35:55.230 629:isIngraph              INFO     eval_recall = 0.9357
2023-06-06 18:35:55.230 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 18:35:55.230 522:isIngraph              INFO     ********************
2023-06-06 18:35:55.230 523:isIngraph              INFO     Best f1:0.9219
2023-06-06 18:35:55.230 524:isIngraph              INFO     ********************
2023-06-06 18:35:55.234 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-f1/model.bin
2023-06-06 18:35:55.234 544:isIngraph              INFO     ********************
2023-06-06 18:35:55.234 545:isIngraph              INFO     Best MCC:0.8419
2023-06-06 18:35:55.234 546:isIngraph              INFO     ********************
2023-06-06 18:35:55.236 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/4/ddg_9/checkpoint-best-mcc/model.bin
2023-06-06 18:35:55.469 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 18:35:55.469 651:isIngraph              INFO     Num examples = 32385
2023-06-06 18:35:55.470 652:isIngraph              INFO     Batch size = 32
2023-06-06 18:36:22.980 693:isIngraph              INFO   ***** Test results *****
2023-06-06 18:36:22.980 695:isIngraph              INFO     eval_acc = 0.9172
2023-06-06 18:36:22.980 695:isIngraph              INFO     eval_f1 = 0.9184
2023-06-06 18:36:22.981 695:isIngraph              INFO     eval_mcc = 0.8348
2023-06-06 18:36:22.981 695:isIngraph              INFO     eval_precision = 0.9063
2023-06-06 18:36:22.981 695:isIngraph              INFO     eval_recall = 0.9308
2023-06-06 18:36:22.981 695:isIngraph              INFO     eval_threshold = 0.5
