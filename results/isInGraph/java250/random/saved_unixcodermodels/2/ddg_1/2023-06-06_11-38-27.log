2023-06-06 11:38:27.283 917:isIngraph              DEBUG  main message
2023-06-06 11:38:27.283 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 11:38:28.474 938:isIngraph              INFO   Load Dataset
2023-06-06 11:39:10.019 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 11:39:10.766 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-06 11:39:14.764 301:isInGraph              INFO   Labels Counter({1: 49712, 0: 49705})
2023-06-06 11:39:14.768 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 11:39:15.448 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-06 11:39:19.097 301:isInGraph              INFO   Labels Counter({0: 16598, 1: 16598})
2023-06-06 11:39:19.102 217:isInGraph              INFO   ../datasets/java250/java250-graphs/unixcoder_java250-source-code.json
2023-06-06 11:39:19.763 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/java250/isINGraphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-06 11:39:22.668 301:isInGraph              INFO   Labels Counter({1: 16196, 0: 16189})
2023-06-06 11:39:22.669 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.669 307:isInGraph              INFO   idx: s423282501_main
2023-06-06 11:39:22.669 308:isInGraph              INFO   label: 1
2023-06-06 11:39:22.670 309:isInGraph              INFO   input_tokens_1: ['obj', '.', 'nextInt', '()']
2023-06-06 11:39:22.670 317:isInGraph              INFO   input_ids_1: 29 33
2023-06-06 11:39:22.670 324:isInGraph              INFO   input_tokens_reverse_1: Ġk Ġ= Ġobj .
2023-06-06 11:39:22.670 334:isInGraph              INFO   input_tokens_2: ['obj', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 11:39:22.670 342:isInGraph              INFO   input_ids_2: 11 20
2023-06-06 11:39:22.671 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġobj Ġ= Ġnew ĠScanner ( System .
2023-06-06 11:39:22.671 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.671 307:isInGraph              INFO   idx: s905038336_main
2023-06-06 11:39:22.671 308:isInGraph              INFO   label: 0
2023-06-06 11:39:22.671 309:isInGraph              INFO   input_tokens_1: ['s']
2023-06-06 11:39:22.671 317:isInGraph              INFO   input_ids_1: 47 48
2023-06-06 11:39:22.671 324:isInGraph              INFO   input_tokens_reverse_1: Ġif
2023-06-06 11:39:22.672 334:isInGraph              INFO   input_tokens_2: ['sc']
2023-06-06 11:39:22.672 342:isInGraph              INFO   input_ids_2: 11 12
2023-06-06 11:39:22.672 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{
2023-06-06 11:39:22.672 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.672 307:isInGraph              INFO   idx: s500322318_nextCharsHW
2023-06-06 11:39:22.672 308:isInGraph              INFO   label: 0
2023-06-06 11:39:22.672 309:isInGraph              INFO   input_tokens_1: ['j']
2023-06-06 11:39:22.672 317:isInGraph              INFO   input_ids_1: 48 49
2023-06-06 11:39:22.673 324:isInGraph              INFO   input_tokens_reverse_1: Ġ(
2023-06-06 11:39:22.673 334:isInGraph              INFO   input_tokens_2: ['char', '[][]']
2023-06-06 11:39:22.673 342:isInGraph              INFO   input_ids_2: 2 4
2023-06-06 11:39:22.673 349:isInGraph              INFO   input_tokens_reverse_2: </s> public
2023-06-06 11:39:22.673 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.673 307:isInGraph              INFO   idx: s331733616_main
2023-06-06 11:39:22.673 308:isInGraph              INFO   label: 0
2023-06-06 11:39:22.674 309:isInGraph              INFO   input_tokens_1: ['Integer', '.', 'MAX', '_', 'VALUE', '_/', '_2']
2023-06-06 11:39:22.674 317:isInGraph              INFO   input_ids_1: 81 88
2023-06-06 11:39:22.674 324:isInGraph              INFO   input_tokens_reverse_1: dp , ĠInteger . MAX _ VALUE
2023-06-06 11:39:22.674 334:isInGraph              INFO   input_tokens_2: ['Math']
2023-06-06 11:39:22.674 342:isInGraph              INFO   input_ids_2: 137 138
2023-06-06 11:39:22.674 349:isInGraph              INFO   input_tokens_reverse_2: ]
2023-06-06 11:39:22.675 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.675 307:isInGraph              INFO   idx: s465469366_main
2023-06-06 11:39:22.675 308:isInGraph              INFO   label: 0
2023-06-06 11:39:22.675 309:isInGraph              INFO   input_tokens_1: ['y']
2023-06-06 11:39:22.675 317:isInGraph              INFO   input_ids_1: 36 37
2023-06-06 11:39:22.675 324:isInGraph              INFO   input_tokens_reverse_1: ();
2023-06-06 11:39:22.675 334:isInGraph              INFO   input_tokens_2: ['y']
2023-06-06 11:39:22.676 342:isInGraph              INFO   input_ids_2: 52 53
2023-06-06 11:39:22.676 349:isInGraph              INFO   input_tokens_reverse_2: x
2023-06-06 11:39:22.676 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.676 307:isInGraph              INFO   idx: s683138093_main
2023-06-06 11:39:22.676 308:isInGraph              INFO   label: 1
2023-06-06 11:39:22.676 309:isInGraph              INFO   input_tokens_1: ['res', '_?', '_"', 'No', '"', '_:', '_"', 'Yes', '"']
2023-06-06 11:39:22.676 317:isInGraph              INFO   input_ids_1: 126 135
2023-06-06 11:39:22.677 324:isInGraph              INFO   input_tokens_reverse_1: println ( res Ġ? Ġ" No " Ġ: Ġ"
2023-06-06 11:39:22.677 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-06 11:39:22.677 342:isInGraph              INFO   input_ids_2: 33 36
2023-06-06 11:39:22.677 349:isInGraph              INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-06 11:39:22.677 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.677 307:isInGraph              INFO   idx: s861920802_main
2023-06-06 11:39:22.677 308:isInGraph              INFO   label: 1
2023-06-06 11:39:22.678 309:isInGraph              INFO   input_tokens_1: ['count', '_+=', '_Integer', '.', 'parseInt', '(', 'c', ')']
2023-06-06 11:39:22.678 317:isInGraph              INFO   input_ids_1: 80 88
2023-06-06 11:39:22.678 324:isInGraph              INFO   input_tokens_reverse_1: ("")) Ġ{ Ġcount Ġ+= ĠInteger . parseInt (
2023-06-06 11:39:22.678 334:isInGraph              INFO   input_tokens_2: ['sc', '_=', '_new', '_Scanner', '(', 'System', '.', 'in', ')']
2023-06-06 11:39:22.678 342:isInGraph              INFO   input_ids_2: 12 21
2023-06-06 11:39:22.678 349:isInGraph              INFO   input_tokens_reverse_2: Ġ{ ĠScanner Ġsc Ġ= Ġnew ĠScanner ( System .
2023-06-06 11:39:22.679 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.679 307:isInGraph              INFO   idx: s002949449_sum
2023-06-06 11:39:22.679 308:isInGraph              INFO   label: 1
2023-06-06 11:39:22.679 309:isInGraph              INFO   input_tokens_1: ['int']
2023-06-06 11:39:22.679 317:isInGraph              INFO   input_ids_1: 2 3
2023-06-06 11:39:22.679 324:isInGraph              INFO   input_tokens_reverse_1: </s>
2023-06-06 11:39:22.679 334:isInGraph              INFO   input_tokens_2: ['sum', '_+=', '_number', '_%', '_10']
2023-06-06 11:39:22.680 342:isInGraph              INFO   input_ids_2: 21 26
2023-06-06 11:39:22.680 349:isInGraph              INFO   input_tokens_reverse_2: ) Ġ{ Ġsum Ġ+= Ġnumber
2023-06-06 11:39:22.680 306:isInGraph              INFO   *** Example ***
2023-06-06 11:39:22.680 307:isInGraph              INFO   idx: s669282370_main
2023-06-06 11:39:22.680 308:isInGraph              INFO   label: 1
2023-06-06 11:39:22.680 309:isInGraph              INFO   input_tokens_1: ['sum', '_+=', '_cu', 'rent', 'Int']
2023-06-06 11:39:22.680 317:isInGraph              INFO   input_ids_1: 104 109
2023-06-06 11:39:22.680 324:isInGraph              INFO   input_tokens_reverse_1: ; Ġ} Ġsum Ġ+= Ġcu
2023-06-06 11:39:22.681 334:isInGraph              INFO   input_tokens_2: ['sum', '_=', '_0']
2023-06-06 11:39:22.681 342:isInGraph              INFO   input_ids_2: 26 29
2023-06-06 11:39:22.681 349:isInGraph              INFO   input_tokens_reverse_2: (); Ġint Ġsum
2023-06-06 11:39:22.681 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 11:39:22.708 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 11:39:22.708 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/isINGraphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1', posratio=0.5, seed=218, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 11:39:24.376 451:isIngraph              INFO   ***** Running training *****
2023-06-06 11:39:24.376 452:isIngraph              INFO     Num examples = 99417
2023-06-06 11:39:24.377 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 11:39:24.377 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 11:39:24.377 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 11:39:24.377 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 11:39:24.377 465:isIngraph              INFO     Total optimization steps = 1554
2023-06-06 11:39:35.205 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:39:35.206 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:39:35.206 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:40:06.971 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:40:06.972 629:isIngraph              INFO     eval_acc = 0.824
2023-06-06 11:40:06.972 629:isIngraph              INFO     eval_f1 = 0.8165
2023-06-06 11:40:06.973 629:isIngraph              INFO     eval_mcc = 0.6503
2023-06-06 11:40:06.973 629:isIngraph              INFO     eval_precision = 0.8532
2023-06-06 11:40:06.973 629:isIngraph              INFO     eval_recall = 0.7828
2023-06-06 11:40:06.973 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:40:06.973 522:isIngraph              INFO     ********************
2023-06-06 11:40:06.973 523:isIngraph              INFO     Best f1:0.8165
2023-06-06 11:40:06.974 524:isIngraph              INFO     ********************
2023-06-06 11:40:06.978 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:40:06.979 544:isIngraph              INFO     ********************
2023-06-06 11:40:06.979 545:isIngraph              INFO     Best MCC:0.6503
2023-06-06 11:40:06.979 546:isIngraph              INFO     ********************
2023-06-06 11:40:06.982 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:40:15.671 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:40:15.672 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:40:15.672 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:40:44.239 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_acc = 0.8794
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_f1 = 0.8873
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_mcc = 0.7664
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_precision = 0.8328
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_recall = 0.9495
2023-06-06 11:40:44.240 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:40:44.241 522:isIngraph              INFO     ********************
2023-06-06 11:40:44.241 523:isIngraph              INFO     Best f1:0.8873
2023-06-06 11:40:44.241 524:isIngraph              INFO     ********************
2023-06-06 11:40:44.245 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:40:44.245 544:isIngraph              INFO     ********************
2023-06-06 11:40:44.245 545:isIngraph              INFO     Best MCC:0.7664
2023-06-06 11:40:44.245 546:isIngraph              INFO     ********************
2023-06-06 11:40:44.247 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:40:52.595 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:40:52.596 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:40:52.596 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:41:23.130 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:41:23.131 629:isIngraph              INFO     eval_acc = 0.9133
2023-06-06 11:41:23.131 629:isIngraph              INFO     eval_f1 = 0.9172
2023-06-06 11:41:23.131 629:isIngraph              INFO     eval_mcc = 0.8304
2023-06-06 11:41:23.131 629:isIngraph              INFO     eval_precision = 0.8773
2023-06-06 11:41:23.132 629:isIngraph              INFO     eval_recall = 0.961
2023-06-06 11:41:23.132 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:41:23.132 522:isIngraph              INFO     ********************
2023-06-06 11:41:23.132 523:isIngraph              INFO     Best f1:0.9172
2023-06-06 11:41:23.132 524:isIngraph              INFO     ********************
2023-06-06 11:41:23.136 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:41:23.136 544:isIngraph              INFO     ********************
2023-06-06 11:41:23.136 545:isIngraph              INFO     Best MCC:0.8304
2023-06-06 11:41:23.136 546:isIngraph              INFO     ********************
2023-06-06 11:41:23.138 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:41:32.393 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:41:32.394 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:41:32.394 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:42:01.749 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_acc = 0.9326
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_f1 = 0.9327
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_mcc = 0.8651
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_precision = 0.9312
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_recall = 0.9341
2023-06-06 11:42:01.750 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:42:01.750 522:isIngraph              INFO     ********************
2023-06-06 11:42:01.751 523:isIngraph              INFO     Best f1:0.9327
2023-06-06 11:42:01.751 524:isIngraph              INFO     ********************
2023-06-06 11:42:01.754 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:42:01.755 544:isIngraph              INFO     ********************
2023-06-06 11:42:01.755 545:isIngraph              INFO     Best MCC:0.8651
2023-06-06 11:42:01.755 546:isIngraph              INFO     ********************
2023-06-06 11:42:01.757 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:42:10.464 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:42:10.464 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:42:10.465 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:42:39.589 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:42:39.589 629:isIngraph              INFO     eval_acc = 0.9467
2023-06-06 11:42:39.589 629:isIngraph              INFO     eval_f1 = 0.9472
2023-06-06 11:42:39.589 629:isIngraph              INFO     eval_mcc = 0.8936
2023-06-06 11:42:39.589 629:isIngraph              INFO     eval_precision = 0.9388
2023-06-06 11:42:39.590 629:isIngraph              INFO     eval_recall = 0.9558
2023-06-06 11:42:39.590 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:42:39.590 522:isIngraph              INFO     ********************
2023-06-06 11:42:39.590 523:isIngraph              INFO     Best f1:0.9472
2023-06-06 11:42:39.590 524:isIngraph              INFO     ********************
2023-06-06 11:42:39.593 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:42:39.593 544:isIngraph              INFO     ********************
2023-06-06 11:42:39.593 545:isIngraph              INFO     Best MCC:0.8936
2023-06-06 11:42:39.593 546:isIngraph              INFO     ********************
2023-06-06 11:42:39.595 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:42:49.061 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:42:49.062 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:42:49.062 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:43:18.519 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:43:18.519 629:isIngraph              INFO     eval_acc = 0.9477
2023-06-06 11:43:18.519 629:isIngraph              INFO     eval_f1 = 0.948
2023-06-06 11:43:18.519 629:isIngraph              INFO     eval_mcc = 0.8955
2023-06-06 11:43:18.519 629:isIngraph              INFO     eval_precision = 0.9432
2023-06-06 11:43:18.520 629:isIngraph              INFO     eval_recall = 0.9528
2023-06-06 11:43:18.520 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:43:18.520 522:isIngraph              INFO     ********************
2023-06-06 11:43:18.520 523:isIngraph              INFO     Best f1:0.948
2023-06-06 11:43:18.520 524:isIngraph              INFO     ********************
2023-06-06 11:43:18.524 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:43:18.524 544:isIngraph              INFO     ********************
2023-06-06 11:43:18.524 545:isIngraph              INFO     Best MCC:0.8955
2023-06-06 11:43:18.524 546:isIngraph              INFO     ********************
2023-06-06 11:43:18.527 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:43:27.064 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:43:27.065 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:43:27.065 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:43:56.816 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:43:56.816 629:isIngraph              INFO     eval_acc = 0.9493
2023-06-06 11:43:56.816 629:isIngraph              INFO     eval_f1 = 0.9493
2023-06-06 11:43:56.816 629:isIngraph              INFO     eval_mcc = 0.8985
2023-06-06 11:43:56.816 629:isIngraph              INFO     eval_precision = 0.9484
2023-06-06 11:43:56.816 629:isIngraph              INFO     eval_recall = 0.9503
2023-06-06 11:43:56.817 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:43:56.817 522:isIngraph              INFO     ********************
2023-06-06 11:43:56.817 523:isIngraph              INFO     Best f1:0.9493
2023-06-06 11:43:56.817 524:isIngraph              INFO     ********************
2023-06-06 11:43:56.820 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:43:56.821 544:isIngraph              INFO     ********************
2023-06-06 11:43:56.821 545:isIngraph              INFO     Best MCC:0.8985
2023-06-06 11:43:56.821 546:isIngraph              INFO     ********************
2023-06-06 11:43:56.823 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:44:06.099 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:44:06.099 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:44:06.099 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:44:36.956 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_acc = 0.9514
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_f1 = 0.9517
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_mcc = 0.9028
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_precision = 0.9463
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_recall = 0.9571
2023-06-06 11:44:36.957 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:44:36.957 522:isIngraph              INFO     ********************
2023-06-06 11:44:36.958 523:isIngraph              INFO     Best f1:0.9517
2023-06-06 11:44:36.958 524:isIngraph              INFO     ********************
2023-06-06 11:44:36.961 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:44:36.961 544:isIngraph              INFO     ********************
2023-06-06 11:44:36.961 545:isIngraph              INFO     Best MCC:0.9028
2023-06-06 11:44:36.962 546:isIngraph              INFO     ********************
2023-06-06 11:44:36.963 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:44:45.692 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:44:45.692 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:44:45.692 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:45:14.328 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_acc = 0.9548
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_f1 = 0.9555
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_mcc = 0.9101
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_precision = 0.941
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_recall = 0.9704
2023-06-06 11:45:14.329 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:45:14.329 522:isIngraph              INFO     ********************
2023-06-06 11:45:14.330 523:isIngraph              INFO     Best f1:0.9555
2023-06-06 11:45:14.330 524:isIngraph              INFO     ********************
2023-06-06 11:45:14.333 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:45:14.333 544:isIngraph              INFO     ********************
2023-06-06 11:45:14.333 545:isIngraph              INFO     Best MCC:0.9101
2023-06-06 11:45:14.334 546:isIngraph              INFO     ********************
2023-06-06 11:45:14.335 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:45:22.900 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 11:45:22.900 581:isIngraph              INFO     Num examples = 33196
2023-06-06 11:45:22.901 582:isIngraph              INFO     Batch size = 32
2023-06-06 11:45:52.165 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 11:45:52.165 629:isIngraph              INFO     eval_acc = 0.9554
2023-06-06 11:45:52.165 629:isIngraph              INFO     eval_f1 = 0.9563
2023-06-06 11:45:52.165 629:isIngraph              INFO     eval_mcc = 0.9116
2023-06-06 11:45:52.166 629:isIngraph              INFO     eval_precision = 0.937
2023-06-06 11:45:52.166 629:isIngraph              INFO     eval_recall = 0.9764
2023-06-06 11:45:52.166 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 11:45:52.166 522:isIngraph              INFO     ********************
2023-06-06 11:45:52.166 523:isIngraph              INFO     Best f1:0.9563
2023-06-06 11:45:52.166 524:isIngraph              INFO     ********************
2023-06-06 11:45:52.170 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-f1/model.bin
2023-06-06 11:45:52.171 544:isIngraph              INFO     ********************
2023-06-06 11:45:52.171 545:isIngraph              INFO     Best MCC:0.9116
2023-06-06 11:45:52.171 546:isIngraph              INFO     ********************
2023-06-06 11:45:52.174 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/java250/random/saved_unixcodermodels/2/ddg_1/checkpoint-best-mcc/model.bin
2023-06-06 11:45:52.419 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 11:45:52.419 651:isIngraph              INFO     Num examples = 32385
2023-06-06 11:45:52.419 652:isIngraph              INFO     Batch size = 32
2023-06-06 11:46:20.930 693:isIngraph              INFO   ***** Test results *****
2023-06-06 11:46:20.930 695:isIngraph              INFO     eval_acc = 0.9522
2023-06-06 11:46:20.931 695:isIngraph              INFO     eval_f1 = 0.953
2023-06-06 11:46:20.931 695:isIngraph              INFO     eval_mcc = 0.9048
2023-06-06 11:46:20.931 695:isIngraph              INFO     eval_precision = 0.9384
2023-06-06 11:46:20.931 695:isIngraph              INFO     eval_recall = 0.968
2023-06-06 11:46:20.931 695:isIngraph              INFO     eval_threshold = 0.5
